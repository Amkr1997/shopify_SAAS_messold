{"version":3,"file":"index-DqziDGfJ.js","sources":["../../src/context/UserContext.tsx","../../src/lib/utils.ts","../../src/components/ui/input.tsx","../../src/components/ui/button.tsx","../../src/components/ui/label.tsx","../../src/hooks/use-toast.ts","../../src/Auth/AuthForm.tsx","../../src/components/ui/toast.tsx","../../src/components/ui/toaster.tsx","../../src/context/BrandContext.tsx","../../src/components/ui/tooltip.tsx","../../src/assets/messold-icon.png","../../src/components/ui/scroll-area.tsx","../../src/Dashboard/CollapsibleSidebar.tsx","../../src/components/ui/card.tsx","../../src/components/dashboard_component/ReferringChannelChart.tsx","../../src/components/dashboard_component/CityChart.tsx","../../src/components/dashboard_component/LandingPageChart.tsx","../../src/components/ui/calendar.tsx","../../src/components/ui/popover.tsx","../../src/components/dashboard_component/DatePickerWithRange.tsx","../../src/components/dashboard_component/EcommerceChart.tsx","../../src/Dashboard/dashboard.tsx","../../src/Dashboard/BusinessDashboard.tsx","../../src/components/ui/skeleton.tsx","../../src/AnalyticsDashboard/AdAccountsMetricsCard.tsx","../../src/components/ui/dropdown-menu.tsx","../../src/AnalyticsDashboard/dashboard.tsx","../../src/AnalyticsDashboard/AnalyticsDashboard.tsx","../../src/GeneralisedDashboard/dashboard.tsx","../../src/GeneralisedDashboard/GeneralDashboard.tsx","../../src/components/ui/checkbox.tsx","../../src/components/ui/table.tsx","../../src/components/dashboard_component/TableSkeleton.tsx","../../src/components/dashboard_component/ReportTable.tsx","../../src/EcommerceMetrics/EcommerceMetricsPage.tsx","../../src/MonthlyAdMetrics/ExcelMetrics.tsx","../../src/CitySessionPage/CitySessionPage.tsx","../../src/RefferingChannelPage/RefferingChannelPage.tsx","../../src/LandingPageSession/LandingPageSession.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\ninterface UserContextType {\r\n  user: User | null;\r\n  setUser: (user: User | null) => void;\r\n}\r\n\r\nconst UserContext = createContext<UserContextType | undefined>(undefined);\r\n\r\nexport const UserProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = () => {\r\n  const context = useContext(UserContext);\r\n  if (context === undefined) {\r\n    throw new Error('useUser must be used within a UserProvider');\r\n  }\r\n  return context;\r\n};\r\n","import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","import { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { useToast } from \"@/hooks/use-toast\"\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUser } from '../context/UserContext';\r\nimport { EyeIcon, EyeOffIcon } from 'lucide-react';\r\n\r\nexport default function AuthForm() {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { toast } = useToast()\r\n  const navigate = useNavigate();\r\n  const [errors, setErrors] = useState({ username: '', email: '', password: '' });\r\n  const { setUser } = useUser();\r\n\r\n  const toggleForm = () => setIsLogin(!isLogin);\r\n\r\n  const validateForm = () => {\r\n    const newErrors = { username: '', email: '', password: '' };\r\n    let isValid = true;\r\n\r\n    if (!isLogin && !username.trim()) {\r\n      newErrors.username = 'Username is required';\r\n      isValid = false;\r\n    }\r\n\r\n    if (!email.trim()) {\r\n      newErrors.email = 'Email is required';\r\n      isValid = false;\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      newErrors.email = 'Email is invalid';\r\n      isValid = false;\r\n    }\r\n\r\n    if (!password) {\r\n      newErrors.password = 'Password is required';\r\n      isValid = false;\r\n    } else if (password.length < 8) {\r\n      newErrors.password = 'Password must be at least 8 characters';\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let response;\r\n      // Determine the base URL based on the environment\r\n      const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n      if (isLogin) {\r\n        response = await axios.post(\r\n          `${baseURL}/api/auth/login`,\r\n          { email, password },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.data.success) {\r\n          // Set the user in the context\r\n          setUser(response.data.user);\r\n          console.log('User set in context:', response.data.user);\r\n\r\n          toast({\r\n            title: 'Login successful!',\r\n            description: 'Welcome! Redirecting to your dashboard.',\r\n            variant: 'default',\r\n          });\r\n          navigate('/dashboard');\r\n          console.log(baseURL);\r\n        }\r\n      } else {\r\n        response = await axios.post(\r\n          `${baseURL}/api/auth/signup`,\r\n          { username, email, password },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.data.success) {\r\n          toast({\r\n            title: 'Registration successful!',\r\n            description: 'Please log in with your new account.',\r\n            variant: 'default',\r\n          });\r\n          setIsLogin(true);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response) {\r\n        toast({\r\n          title: 'Error',\r\n          description: error.response.data.message || 'An error occurred',\r\n          variant: 'destructive',\r\n        });\r\n      } else {\r\n        toast({\r\n          title: 'Unexpected Error',\r\n          description: 'An unexpected error occurred',\r\n          variant: 'destructive',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-purple-400 to-indigo-600\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n        className=\"bg-white p-8 rounded-lg shadow-2xl w-96\"\r\n      >\r\n        <div className=\"flex mb-6\">\r\n          <button\r\n            className={`flex-1 py-2 ${isLogin ? 'text-indigo-600 border-b-2 border-indigo-600' : 'text-gray-500'}`}\r\n            onClick={() => setIsLogin(true)}\r\n          >\r\n            Login\r\n          </button>\r\n          <button\r\n            className={`flex-1 py-2 ${!isLogin ? 'text-indigo-600 border-b-2 border-indigo-600' : 'text-gray-500'}`}\r\n            onClick={() => setIsLogin(false)}\r\n          >\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {/* Username Field for Registration */}\r\n          {!isLogin && (\r\n            <motion.div\r\n              initial={{ opacity: 0, height: 0 }}\r\n              animate={{ opacity: !isLogin ? 1 : 0, height: !isLogin ? 'auto' : 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              className=\"overflow-hidden space-y-2\"\r\n            >\r\n              <Label htmlFor=\"username\">Username</Label>\r\n              <Input\r\n                id=\"username\"\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                placeholder=\"Enter your username\"\r\n                required={!isLogin}\r\n              />\r\n              {errors.username && <p className=\"text-red-500 text-sm mt-1\">{errors.username}</p>}\r\n            </motion.div>\r\n          )}\r\n\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"email\">Email</Label>\r\n            <Input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Enter your email\"\r\n              required\r\n            />\r\n            {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n          </div>\r\n\r\n\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"password\">Password</Label>\r\n            <div className='relative'>\r\n              <Input\r\n                id=\"password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Enter your password\"\r\n                required\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n                className=\"absolute right-2 top-2\"\r\n              >\r\n                {showPassword ? (\r\n                  <EyeOffIcon className=\"h-5 w-5 text-gray-500\" />\r\n                ) : (\r\n                  <EyeIcon className=\"h-5 w-5 text-gray-500\" />\r\n                )}\r\n              </button>\r\n            </div>\r\n            {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n          </div>\r\n\r\n          <Button type=\"submit\" className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white\">\r\n            {isLogin ? 'Login' : 'Sign Up'}\r\n          </Button>\r\n        </form>\r\n\r\n        <p className=\"mt-4 text-center text-sm text-gray-600\">\r\n          {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\r\n          <button onClick={toggleForm} className=\"text-indigo-600 hover:underline\">\r\n            {isLogin ? 'Sign Up' : 'Login'}\r\n          </button>\r\n        </p>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <Cross2Icon className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold [&+div]:text-xs\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","import React, { createContext, useContext, useState } from 'react';\r\n\r\ninterface Brand {\r\n  _id: string;\r\n  name: string;\r\n  brandId:string;\r\n  fbAdAccounts?: []; \r\n}\r\n\r\ninterface BrandContextType {\r\n  selectedBrandId: string | null;\r\n  setSelectedBrandId: (id: string | null) => void;\r\n  resetBrand: () => void;\r\n  brands: Brand[];\r\n  setBrands: (brands: Brand[]) => void; // New setter function for brands\r\n}\r\n\r\nconst BrandContext = createContext<BrandContextType | undefined>(undefined);\r\n\r\nexport const BrandProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [selectedBrandId, setSelectedBrandId] = useState<string | null>(null);\r\n  const [brands, setBrands] = useState<Brand[]>([]); // New state for brands\r\n\r\n  const resetBrand = () => {\r\n    setSelectedBrandId(null);\r\n  };\r\n\r\n  return (\r\n    <BrandContext.Provider value={{ selectedBrandId, setSelectedBrandId, resetBrand, brands, setBrands }}>\r\n      {children}\r\n    </BrandContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useBrand = () => {\r\n  const context = useContext(BrandContext);\r\n  if (context === undefined) {\r\n    throw new Error('useBrand must be used within a BrandProvider');\r\n  }\r\n  return context;\r\n};\r\n","import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Portal>\n    <TooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </TooltipPrimitive.Portal>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","export default \"__VITE_ASSET__B1Hq7QXN__\"","import * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { ChevronLeft, ChevronRight, Link2, ChevronDown, ChevronUp, LogOut, User2Icon, Store, BarChart, CalendarRange, ShoppingCart, MapPin, PanelsTopLeft, LineChart } from 'lucide-react';\r\nimport React from 'react';\r\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\r\nimport { useUser } from '../context/UserContext';\r\nimport { useBrand } from '@/context/BrandContext';\r\nimport axios from 'axios';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\nimport Logo from \"../assets/messold-icon.png\"; // Ensure this path is correct\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\n\r\nexport default function CollapsibleSidebar() {\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    const { selectedBrandId, setSelectedBrandId, brands, setBrands } = useBrand();\r\n    const { setUser } = useUser();\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const sidebarRef = useRef<HTMLDivElement>(null);\r\n    const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n    const toggleSidebar = () => {\r\n        setIsExpanded(prev => !prev);\r\n    };\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            const response = await axios.post(`${baseURL}/api/auth/logout`, {}, { withCredentials: true });\r\n            if (response.status === 200) {\r\n                setUser(null);\r\n                setSelectedBrandId(null);\r\n                navigate('/');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error logging out:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchBrands = async () => {\r\n            try {\r\n                const response = await axios.get(`${baseURL}/api/brands/all`, { withCredentials: true });\r\n                setBrands(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching brands:', error);\r\n            }\r\n        };\r\n        fetchBrands();\r\n    }, [setBrands]);\r\n\r\n    // Update selectedBrandId based on URL\r\n    useEffect(() => {\r\n        const pathParts = location.pathname.split('/');\r\n        if (pathParts[2]) {\r\n            setSelectedBrandId(pathParts[2]); // Assuming brand ID is in the second part of the path\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    // Define report paths and icons\r\n    const reports = [\r\n        { name: \"Monthly Ad Metrics Reports\", path: `/ad-metrics/${selectedBrandId}`, icon: <CalendarRange size={24} /> },\r\n        { name: \"Daily E-Commerce Metrics Reports\", path: `/ecommerce-metrics/${selectedBrandId}`, icon: <ShoppingCart size={24} /> },\r\n        { name: \"City based Reports\", path: `/city-metrics/${selectedBrandId}`, icon: <MapPin size={24} /> },\r\n        { name: \"Landing Page based Reports\", path: `/page-metrics/${selectedBrandId}`, icon: <PanelsTopLeft size={24} /> },\r\n        { name: \"Referring Channel based Reports\", path: `/channel-metrics/${selectedBrandId}`, icon: <Link2 size={24} /> },\r\n    ];\r\n\r\n    // Define dashboard paths\r\n    const dashboards = [\r\n        { name: \"Business Dashboard\", path: `/business-dashboard/${selectedBrandId}`, icon: <BarChart size={24} /> },\r\n        { name: \"Analytics Dashboard\", path: `/analytics-dashboard/${selectedBrandId}`, icon: <LineChart size={24} /> },\r\n    ];\r\n\r\n\r\n    return (\r\n        <TooltipProvider>\r\n            <div ref={sidebarRef} className={`bg-gray-800 text-white transition-all duration-300 ease-in-out flex flex-col ${isExpanded ? 'w-64' : 'w-16'}`} style={{ height: '100vh' }}>\r\n                <div className={`flex-1 overflow-y-auto ${isExpanded ? 'h-[calc(100vh-64px)]' : 'h-[calc(100vh-16px)]'}`}>\r\n                    <ScrollArea className=\"h-full\">\r\n                        <div className=\"flex justify-end p-4\">\r\n                            <button onClick={toggleSidebar} className=\"text-gray-300 hover:text-white focus:outline-none\" aria-label={isExpanded ? \"Collapse sidebar\" : \"Expand sidebar\"}>\r\n                                {isExpanded ? <ChevronLeft size={24} /> : <ChevronRight size={24} />}\r\n                            </button>\r\n                        </div>\r\n                        <nav className=\"mt-3\">\r\n                            <SidebarItem \r\n                                icon={\r\n                                    <div className=\"flex items-center justify-center h-8 w-auto flex-shrink-0\">\r\n                                        <img \r\n                                            src={Logo} \r\n                                            alt=\"Messold Logo\" \r\n                                            className=\"h-full w-auto max-w-none\" \r\n                                        />\r\n                                    </div>\r\n                                } \r\n                                text={\"Messold\"} \r\n                                isExpanded={isExpanded} \r\n                                isSelected={true} \r\n                                tooltipContent=\"Messold\" \r\n                                onClick={() => navigate('/dashboard')}\r\n                            />\r\n                        </nav>\r\n\r\n                        <nav className=\"mt-3\">\r\n                            <SidebarItem \r\n                                icon={<Store size={24} />} \r\n                                text={selectedBrandId ? brands.find(b => b._id === selectedBrandId)?.name.replace(/_/g, ' ') || \"Unknown Brand\" : \"Your Brands\"} \r\n                                isExpanded={isExpanded} \r\n                                openIcon={<ChevronUp />} \r\n                                closeIcon={<ChevronDown />} \r\n                                isSelected={!!selectedBrandId} \r\n                                tooltipContent=\"Your Brands\"\r\n                            >\r\n                                {brands.map(brand => (\r\n                                    <SidebarChild \r\n                                        key={brand._id} \r\n                                        path={`/business-dashboard/${brand._id}`} \r\n                                        text={brand.name.replace(/_/g, ' ')} \r\n                                        onClick={() => {\r\n                                            setSelectedBrandId(brand._id);\r\n                                            navigate(`/business-dashboard/${brand._id}`);\r\n                                        }} \r\n                                        isSelected={selectedBrandId === brand._id || (location.pathname.includes(`/ad-metrics/${brand._id}`) || location.pathname.includes(`/ecommerce-metrics/${brand._id}`) || location.pathname.includes(`/city-metrics/${brand._id}`) || location.pathname.includes(`/page-metrics/${brand._id}`) || location.pathname.includes(`/channel-metrics/${brand._id}`))}\r\n                                    />\r\n                                ))}\r\n                            </SidebarItem>\r\n\r\n                            {/* Add Business and Analytics Dashboards */}\r\n                            {dashboards.map((dashboard, index) => (\r\n                                <SidebarItem \r\n                                    key={index}\r\n                                    icon={dashboard.icon}\r\n                                    text={dashboard.name}\r\n                                    isExpanded={isExpanded}\r\n                                    isSelected={location.pathname === dashboard.path}\r\n                                    tooltipContent={dashboard.name}\r\n                                    onClick={() => navigate(dashboard.path)} \r\n                                />\r\n                            ))}\r\n\r\n                            {/* Move Reports directly as SidebarItems */}\r\n                            {reports.map((report, index) => (\r\n                                <SidebarItem \r\n                                    key={index}\r\n                                    icon={report.icon}\r\n                                    text={report.name}\r\n                                    isExpanded={isExpanded}\r\n                                    isSelected={location.pathname === report.path}\r\n                                    tooltipContent={report.name}\r\n                                    onClick={() => navigate(report.path)} \r\n                                />\r\n                            ))}\r\n                        </nav>\r\n                    </ScrollArea>\r\n                </div>\r\n                <div className=\"flex flex-col\">\r\n                    <UserProfile isExpanded={isExpanded} />\r\n                    <LogoutButton handleLogout={handleLogout} isExpanded={isExpanded} />\r\n                </div>\r\n            </div>\r\n        </TooltipProvider>\r\n    );\r\n}\r\n\r\n\r\n    function SidebarItem({ icon, text, isExpanded, openIcon, closeIcon, children, isSelected, tooltipContent, onClick }: {\r\n        icon?: React.ReactNode; text: string; isExpanded: boolean; openIcon?: React.ReactNode; closeIcon?: React.ReactNode; children?: React.ReactNode; isSelected: boolean; tooltipContent: string; onClick?: () => void }) {\r\n\r\n        const [isOpen, setIsOpen] = useState(false);\r\n\r\n        const handleToggle = () => {\r\n            setIsOpen(prev => !prev);\r\n        };\r\n\r\n        const content = (\r\n            <div onClick={onClick || handleToggle} className={`flex items-center px-4 py-2 mb-2 text-gray-300 hover:bg-gray-700 hover:text-white transition-colors duration-200 cursor-pointer ${isSelected ? 'text-white font-semibold relative' : 'text-gray-100'}`}>\r\n                <span className=\"mr-4\">{icon}</span> \r\n                {isExpanded && <span className=\"text-sm\">{text}</span>} \r\n                {isExpanded && <span className=\"ml-auto\">{isOpen ? openIcon : closeIcon}</span>}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                {!isExpanded ? (\r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>{content}</TooltipTrigger>\r\n                        <TooltipContent side=\"right\">\r\n                            <p className={React.Children.count(children) > 0 ? 'mb-4' : ''}>{tooltipContent}</p>\r\n                            {React.Children.map(children, (child) => (\r\n                                <div className=\"relative\">\r\n                                    <div className=\"absolute top-0 w-1 h-full bg-gray-500\" />\r\n                                    {child}\r\n                                </div>\r\n                            ))}\r\n                        </TooltipContent>\r\n                    </Tooltip>\r\n                ) : (\r\n                    content\r\n                )}\r\n                {isOpen && isExpanded && (\r\n                    <div className=\"relative pl-8\">\r\n                        <div className=\"absolute top-0 w-1 h-full bg-gray-500\" />\r\n                        {React.Children.map(children, (child) => (\r\n                            <div>{child}</div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function SidebarChild({ path, text, onClick, disabled = false, isSelected }: {\r\n        path: string; text: string; onClick?: () => void; disabled?: boolean; isSelected?: boolean; }): JSX.Element {\r\n\r\n        const baseClasses = `flex items-center text-sm w-full p-3 transition-colors duration-200 ${isSelected ? 'text-white font-semibold relative bg-gray-700' : 'text-gray-100'} ${disabled ? 'cursor-not-allowed text-gray-400' : 'hover:bg-gray-700'}`;\r\n\r\n        return disabled ? (\r\n            <div className={baseClasses}>\r\n                {text}\r\n                {isSelected && <div className=\"absolute left-0 w-1 h-full bg-white\" />}\r\n            </div>\r\n        ) : (\r\n            <NavLink to={path} className={baseClasses} onClick={(e) => {\r\n                if (onClick) {\r\n                    e.preventDefault();\r\n                    onClick();\r\n                }\r\n            }}>\r\n                {text}\r\n                {isSelected && <div className=\"absolute left-0 top-0 w-1 h-full bg-white\" />}\r\n            </NavLink>\r\n        );\r\n    }\r\n    function UserProfile({ isExpanded }: { isExpanded: boolean }) {\r\n        return (\r\n            <div className={`flex items-center p-4 cursor-pointer ${isExpanded ? 'text-white' : 'text-gray-300'}`}>\r\n                <User2Icon size={24} />\r\n                {isExpanded && <span className=\"ml-4\">User</span>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function LogoutButton({ handleLogout, isExpanded }: { handleLogout: () => void; isExpanded: boolean }) {\r\n        return (\r\n            <div onClick={handleLogout} className={`flex items-center p-4 cursor-pointer ${isExpanded ? 'text-white' : 'text-gray-300'}`}>\r\n                <LogOut size={24} />\r\n                {isExpanded && <span className=\"ml-4\">Logout</span>}\r\n            </div>\r\n        );\r\n    }\r\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import React from 'react';\r\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\ninterface ReferringChannelsChartProps {\r\n  rawData: { Channel: string; Visitors: string }[]; \r\n}\r\n\r\nconst COLORS = ['#071952', '#088395', '#37B7C3', '#4A628A', '#98DED9', '#FF33CC'];\r\n\r\nexport const ReferringChannelChart: React.FC<ReferringChannelsChartProps> = ({ rawData }) => {\r\n\r\n  if (rawData.length === 0) {\r\n    return (\r\n      <div style={{ textAlign: 'center', marginTop: '50px' }}>\r\n        <p>No data available. Please set up Google Analytics for this data.</p>\r\n      </div>\r\n    );\r\n  }\r\n  // Aggregate visitors by channel\r\n  const aggregatedData = rawData.reduce((acc, entry) => {\r\n    const Channel = entry.Channel;\r\n    const Visitors = parseInt(entry.Visitors, 10); \r\n\r\n    if (!acc[Channel]) {\r\n      acc[Channel] = { Channel, totalVisitors: 0 };\r\n    }\r\n    acc[Channel].totalVisitors += Visitors; \r\n\r\n    return acc;\r\n  }, {} as Record<string, { Channel: string; totalVisitors: number }>);\r\n\r\n  \r\n  const topChannels = Object.values(aggregatedData)\r\n    .sort((a, b) => b.totalVisitors - a.totalVisitors)\r\n    .slice(0, 5); \r\n\r\n  // Custom legend component\r\n  const renderLegend = () => (\r\n    <div className=\"grid grid-cols-3 gap-2 mt-2\">\r\n      {topChannels.map((entry, index) => (\r\n        <div key={`legend-${index}`} className=\"flex items-center\">\r\n          <div\r\n            className=\"w-4 h-4 mr-2\"\r\n            style={{ backgroundColor: COLORS[index % COLORS.length] }}\r\n          />\r\n          <span className=\"text-xs\">{entry.Channel}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n  \r\n\r\n  return (\r\n    <div> \r\n       {renderLegend()}\r\n   \r\n      <ResponsiveContainer width=\"100%\" height={280}> \r\n        <PieChart>\r\n          <Pie\r\n            data={topChannels}\r\n            dataKey=\"totalVisitors\"\r\n            nameKey=\"channel\"\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            outerRadius=\"60%\" \r\n            label\r\n          >\r\n            {topChannels.map((_, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n//  interface for city data\r\ninterface CityData {\r\n  City: string;\r\n  Visitors: string; \r\n}\r\n\r\n\r\nconst getTopCities = (data: CityData[]) => {\r\n  return data\r\n    .map(item => ({ city: item.City, visitors: parseInt(item.Visitors, 10) }))\r\n    .filter(item => !isNaN(item.visitors)) // Filtering out invalid entries\r\n    .sort((a, b) => b.visitors - a.visitors)\r\n    .slice(0, 5);\r\n};\r\n\r\ninterface TopCitiesBarChartProps {\r\n  cityData: CityData[];\r\n}\r\n\r\n\r\nconst getBarColor = (value: number, max: number) => {\r\n  const blueColors = ['#E0F7FA', '#B2EBF2', '#80DEEA', '#4DD0E1', '#00ACC1']; \r\n  const index = Math.floor((value / max) * (blueColors.length - 1)); \r\n  return blueColors[index]; \r\n};\r\n\r\n\r\nconst TopCitiesBarChart: React.FC<TopCitiesBarChartProps> = ({ cityData }) => {\r\n  const topCities = getTopCities(cityData);\r\n\r\n  const maxRate = Math.max(...topCities.map(entry => entry.visitors)); \r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      {topCities.length > 0 ? (\r\n        <BarChart\r\n          data={topCities}\r\n          layout=\"vertical\"\r\n          margin={{ right: 30, left: 35, bottom: 30 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis type=\"number\" label={{ value: 'Visitors', position: 'insideBottom', offset: -5 }} />\r\n          <YAxis dataKey=\"city\" type=\"category\" />\r\n          <Tooltip \r\n            formatter={(value) => [value, 'Visitors']}\r\n            contentStyle={{ backgroundColor: 'hsl(var(--background))', borderColor: 'hsl(var(--border))' }}\r\n          />\r\n          <Legend verticalAlign=\"top\" height={36} />\r\n          <Bar \r\n            dataKey=\"visitors\" \r\n            name=\"Visitors\" \r\n            barSize={20} \r\n            fill=\"#00ACC1\" \r\n            shape={(props:any) => {\r\n              const { visitors } = props.payload; \r\n              return <rect {...props} fill={getBarColor(visitors, maxRate)} />; \r\n            }}\r\n          />\r\n        </BarChart>\r\n      ) : (\r\n        <div className=\"flex items-center justify-center h-full\">\r\n          <p className=\"text-muted-foreground\">No data available. Please set up Google Analytics for this data.</p>\r\n        </div>\r\n      )}\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default TopCitiesBarChart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { PieChart, Pie, Tooltip, ResponsiveContainer, Cell, Legend } from 'recharts';\r\n\r\n//  interface for landingPage data\r\ninterface PageData {\r\n  \"Landing Page\": string;\r\n  \"Visitors\": string;\r\n}\r\n\r\n// Function to get top 5 Pages based on visitors from the data\r\nconst getTopLandingPages = (data: PageData[]) => {\r\n  return data\r\n    .map(item => ({\r\n      LandingPage: item['Landing Page'],\r\n      Visitors: parseInt(item.Visitors, 10),\r\n    }))\r\n    .sort((a, b) => b.Visitors - a.Visitors)\r\n    .slice(0, 5);\r\n};\r\n\r\ninterface TopPagesPieChartProps {\r\n  PageData: PageData[];\r\n}\r\n\r\n\r\nconst COLORS = ['#050C9C', '#3572EF', '#3ABEF9', '#577B8D', '#8dd1e1'];\r\n\r\nconst TopPagesPieChart: React.FC<TopPagesPieChartProps> = ({ PageData }) => {\r\n  console.log(PageData);\r\n  const topPages = getTopLandingPages(PageData);\r\n  console.log(topPages);\r\n  const [isMobileOrTablet, setIsMobileOrTablet] = useState(window.innerWidth < 768);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobileOrTablet(window.innerWidth < 768);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ResponsiveContainer width=\"100%\" height={ 280}>\r\n        {topPages.length>0 ?(\r\n        <PieChart className='px-6'>\r\n          <Tooltip formatter={(value, name) => [`${value}`, `${name}`]} />\r\n          {!isMobileOrTablet && ( // Conditionally render the Legend\r\n            <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"middle\" />\r\n          )}\r\n          <Pie\r\n            data={topPages}\r\n            dataKey=\"Visitors\"\r\n            nameKey=\"LandingPage\"\r\n            cx=\"35%\"\r\n            cy=\"50%\"\r\n            outerRadius={100}\r\n            innerRadius={40}\r\n            label\r\n          >\r\n            {topPages.map((_, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n        ):(\r\n          <div style={{ textAlign: 'center', marginTop: '50px' }}>\r\n          <p>No data available for top landing pages.Please set up Google Analytics for this data.</p>\r\n          </div>\r\n        )}\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopPagesPieChart;\r\n\r\n\r\n\r\n","import * as React from \"react\"\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@radix-ui/react-icons\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: cn(\n          \"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected].day-range-end)]:rounded-r-md\",\n          props.mode === \"range\"\n            ? \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"\n            : \"[&:has([aria-selected])]:rounded-md\"\n        ),\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-8 w-8 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_start: \"day-range-start\",\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50  aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: () => <ChevronLeftIcon className=\"h-4 w-4\" />,\n        IconRight: () => <ChevronRightIcon className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverAnchor = PopoverPrimitive.Anchor\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\n","import { useState } from \"react\"\r\nimport { CalendarIcon } from \"lucide-react\"\r\nimport { format, subDays, subMonths } from \"date-fns\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Calendar } from \"@/components/ui/calendar\"\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ntype DatePickerWithRangeProps = {\r\n  date: DateRange | undefined\r\n  setDate: (date: DateRange | undefined) => void\r\n  defaultDate?: DateRange\r\n  resetToFirstPage?: () => void\r\n}\r\n\r\nexport function DatePickerWithRange({\r\n  date,\r\n  setDate,\r\n  defaultDate,\r\n  resetToFirstPage,\r\n}: DatePickerWithRangeProps) {\r\n  const [tempDate, setTempDate] = useState<DateRange | undefined>(date || defaultDate)\r\n\r\n  const handleDateChange = (newDate: DateRange | undefined) => {\r\n    setTempDate(newDate)\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    setDate(tempDate)\r\n    if (resetToFirstPage) {\r\n      resetToFirstPage()\r\n    }\r\n  }\r\n\r\n  const setPresetRange = (from: Date, to: Date) => {\r\n    const newRange = { from, to }\r\n    setTempDate(newRange)\r\n  }\r\n\r\n\r\n  const formatDateRange = (range: DateRange | undefined) => {\r\n    if (!range) {\r\n      return defaultDate && defaultDate.from && defaultDate.to\r\n        ? `${format(defaultDate.from, \"LLL dd, y\")} - ${format(defaultDate.to, \"LLL dd, y\")}`\r\n        : \"Pick a date\"\r\n    }\r\n    if (range.from) {\r\n      if (range.to) {\r\n        return `${format(range.from, \"LLL dd, y\")} - ${format(range.to, \"LLL dd, y\")}`\r\n      }\r\n      return format(range.from, \"LLL dd, y\")\r\n    }\r\n    return \"Pick a date\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid gap-2\">\r\n      <Popover>\r\n        <PopoverTrigger asChild>\r\n          <Button\r\n            id=\"date\"\r\n            variant=\"outline\"\r\n            className={cn(\r\n              \"w-[260px] justify-start text-left font-normal\",\r\n              !tempDate && !defaultDate && \"text-muted-foreground\"\r\n            )}\r\n          >\r\n            <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n            {formatDateRange(tempDate)}\r\n          </Button>\r\n        </PopoverTrigger>\r\n        <PopoverContent className=\"w-auto p-4\" align=\"start\">\r\n          <div className=\"flex flex-col space-y-4\">\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                onClick={() => setPresetRange(new Date(), new Date())}\r\n              >\r\n                Today\r\n              </Button>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                onClick={() => setPresetRange(subDays(new Date(), 6), new Date())}\r\n              >\r\n                Last 7 days\r\n              </Button>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                onClick={() => setPresetRange(subDays(new Date(), 29), new Date())}\r\n              >\r\n                Last 30 days\r\n              </Button>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                onClick={() => setPresetRange(subMonths(new Date(), 3), new Date())}\r\n              >\r\n                Last 3 months\r\n              </Button>\r\n            </div>\r\n            <Calendar\r\n              initialFocus\r\n              mode=\"range\"\r\n              defaultMonth={tempDate?.from || defaultDate?.from || new Date()}\r\n              selected={tempDate}\r\n              onSelect={handleDateChange}\r\n              numberOfMonths={2}\r\n            />\r\n            <Button onClick={handleUpdate} >Update</Button>\r\n          </div>\r\n        </PopoverContent>\r\n      </Popover>\r\n    </div>\r\n  )\r\n}","import { DailyCartCheckoutData } from \"@/Dashboard/interfaces\";\r\nimport { AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\ninterface EcommerceMetricsProps {\r\n  rawData: DailyCartCheckoutData[];  \r\n}\r\n\r\nconst formatData = (data: any) => {\r\n  return Object.entries(data).map(([name, value]) => ({ name, value }));\r\n};\r\n\r\nconst CustomTooltip = ({ active, payload }: any) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"bg-background border border-border p-2 rounded-md shadow-md\">\r\n        <p className=\"font-bold\">{payload[0].payload.name}</p>\r\n        <p>{payload[0].value.toLocaleString()}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\n\r\nconst colorPalette = [\r\n  \"#4f83cc\", // Light Blue\r\n  \"#337ab7\", // Medium Blue\r\n  \"#1e6a8c\", // Darker Blue\r\n  \"#0d4d68\"  // Even Darker Blue\r\n];\r\n\r\nexport default function EcommerceMetrics({ rawData }: EcommerceMetricsProps) {\r\n  const aggregateData = () => {\r\n    return rawData.reduce((acc, curr) => {\r\n      acc[\"Add To Carts\"] += parseInt(curr[\"Add To Carts\"], 10);\r\n      acc.Checkouts += parseInt(curr.Checkouts, 10);\r\n      acc.Sessions += parseInt(curr.Sessions, 10);\r\n      acc.Purchases += parseInt(curr.Purchases, 10);\r\n      return acc;\r\n    }, { \"Add To Carts\": 0, Checkouts: 0, Sessions: 0, Purchases: 0 });\r\n  };\r\n\r\n  const aggregatedData = formatData(aggregateData());\r\n\r\n  if(rawData.length === 0) {\r\n    return (\r\n      <div style={{ textAlign: 'center', marginTop: '50px' }}>\r\n      <p>No data available. Please set up Google Analytics for this data.</p>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n      <ResponsiveContainer width=\"100%\" height={280}>\r\n        <AreaChart data={aggregatedData}>\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip content={<CustomTooltip />} />\r\n          <Area \r\n            type=\"monotone\" \r\n            dataKey=\"value\" \r\n            stroke=\"#0d4d68\" \r\n            fillOpacity={0.4} \r\n            fill=\"#0d4d68\" \r\n          />\r\n          <defs>\r\n            <linearGradient id=\"colorGradient\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\r\n              {colorPalette.map((color, index) => (\r\n                <stop\r\n                  key={index}\r\n                  offset={`${(index / (colorPalette.length - 1)) * 100}%`}\r\n                  stopColor={color}\r\n                />\r\n              ))}\r\n            </linearGradient>\r\n          </defs>\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n  );\r\n}\r\n\r\n","import { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { ShoppingCart, DollarSign, PercentIcon, TrendingUp, FileChartColumn, RefreshCw, BriefcaseBusiness} from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { format } from \"date-fns\"\r\nimport { ReferringChannelChart } from '../components/dashboard_component/ReferringChannelChart.tsx';\r\nimport TopCitiesLineChart from '../components/dashboard_component/CityChart.tsx';\r\nimport TopPagesPieChart from '../components/dashboard_component/LandingPageChart.tsx';\r\nimport { DashboardData, CombinedData, DailyCartCheckoutReport } from './interfaces';\r\nimport { DatePickerWithRange } from '@/components/dashboard_component/DatePickerWithRange.tsx';\r\nimport EcommerceMetrics from '@/components/dashboard_component/EcommerceChart.tsx';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n\r\n  const { brandId } = useParams();\r\n  const [data, setData] = useState<CombinedData | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n  const [date, setDate] = useState<DateRange | undefined>(undefined); // Initialize state\r\n\r\n  // const websocketUrl = import.meta.env.PROD ? 'wss://your-production-url' : 'ws://localhost:PORT';\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n\r\n\r\n  const now = new Date(); \r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n\r\n      const baseURL =\r\n        import.meta.env.PROD\r\n          ? import.meta.env.VITE_API_URL\r\n          : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n      let url = `${baseURL}/api/shopify/data/${brandId}`;\r\n      const params = new URLSearchParams();\r\n\r\n      if (startDate) {\r\n        params.append('startDate', startDate);\r\n      }\r\n      if (endDate) {\r\n        params.append('endDate', endDate);\r\n      }\r\n\r\n      if (params.toString()) {\r\n        url += `?${params.toString()}`;\r\n      }\r\n\r\n      const shopifyResponse = await axios.get<DashboardData>(url, {\r\n        withCredentials: true\r\n      });\r\n\r\n      const analyticsResponse = await axios.post(`${baseURL}/api/analytics/report/${brandId}`, {\r\n        startDate: startDate,\r\n        endDate: endDate\r\n      }, {\r\n        withCredentials: true\r\n      });\r\n\r\n      console.log(\"Analytics Data:\", analyticsResponse.data);\r\n\r\n      const DailyAnalyticsResponse = await axios.post<DailyCartCheckoutReport>(`${baseURL}/api/analytics/atcreport/${brandId}`, {\r\n        startDate: startDate,\r\n        endDate: endDate\r\n      }, { withCredentials: true });\r\n\r\n      console.log(\"Daily Analytics Data:\", DailyAnalyticsResponse.data);\r\n\r\n      const combinedData = {\r\n        ...shopifyResponse.data,\r\n        analyticsReports: analyticsResponse.data || null,\r\n        dailyCartCheckoutReports: DailyAnalyticsResponse.data ? [DailyAnalyticsResponse.data] : [] \r\n      };\r\n\r\n      setData(combinedData);\r\n      console.log(data)\r\n      setLastUpdated(new Date());\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [navigate, startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    const intervalId = setInterval(fetchData, 5 * 60 * 1000);\r\n\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n\r\n  //websocket connection\r\n\r\n  // useEffect(() => {\r\n  //   const ws = new WebSocket(websocketUrl);\r\n\r\n  //   ws.onopen = () => {\r\n  //     console.log('WebSocket connected');\r\n  //   };\r\n\r\n  //   ws.onmessage = (event) => {\r\n  //     const newData = JSON.parse(event.data);\r\n  //     console.log('New webhook data received:', newData);\r\n\r\n  //     // Fetch the latest data again after receiving the update\r\n  //     fetchData(); // Re-fetch data to ensure the dashboard reflects the latest state\r\n  //   };\r\n\r\n  //   ws.onclose = () => {\r\n  //     console.log('WebSocket disconnected');\r\n  //   };\r\n\r\n  //   return () => {\r\n  //     ws.close(); // Clean up WebSocket connection on component unmount\r\n  //   };\r\n  // }, [fetchData, websocketUrl]);\r\n\r\n\r\n\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Conversion Rate calculation\r\n  const session = data?.analyticsReports.find(report => report.reportType === 'Purchase Data');\r\n  let totalConversionRate = 0; \r\n  if (session && Array.isArray(session.data)) {\r\n    totalConversionRate = session.data.reduce((acc, item) => acc + Number(item.ConversionRate), 0);\r\n  }\r\n\r\n\r\n  const prepareMonthlyReturnRatesData = () => {\r\n    if (!data || !data.analyticsReports) return 0;\r\n\r\n    const returningCustomerRateReport = data.analyticsReports.find(report => report.reportType === 'Returning Customer Rate');\r\n\r\n    if (!returningCustomerRateReport || !returningCustomerRateReport.data) return 0;\r\n\r\n    const totalReturnRate = returningCustomerRateReport.data.reduce((acc, { returnRate }) => {\r\n      const rate = parseFloat(returnRate) || 0; \r\n      return acc + rate; \r\n    }, 0);\r\n\r\n    return totalReturnRate;\r\n  };\r\n\r\n  const monthlyReturnRate = parseFloat(prepareMonthlyReturnRatesData().toFixed(2));\r\n\r\n  const preparedReferringData = () => {\r\n    if (!data || !data.analyticsReports) return [];\r\n\r\n    const referringChannelData = data.analyticsReports.find(report => report.reportType === 'Sessions by Referring Channel')?.data || [];\r\n    if (!referringChannelData) return [];\r\n\r\n    return referringChannelData.map(entry => ({\r\n      Channel: entry.Channel,\r\n      Visitors: entry.Visitors,\r\n      Sessions: entry.Sessions\r\n    }));\r\n  };\r\n\r\n\r\n  const preparedCityData = () => {\r\n    if (!data || !data.analyticsReports) return [];\r\n\r\n    const cityData = data.analyticsReports.find(report => report.reportType === 'Sessions by Location')?.data || [];\r\n    if (!cityData) return [];\r\n\r\n    return cityData.map(entry => ({\r\n      City: entry.City,\r\n      Region: entry.Region,\r\n      Country: entry.Country,\r\n      Visitors: entry.Visitors,\r\n      Sessions: entry.Sessions\r\n    }));\r\n  };\r\n\r\n\r\n  const preparedPageData = () => {\r\n    if (!data || !data.analyticsReports) return [];\r\n\r\n    const pageData = data.analyticsReports.find(report => report.reportType === 'Landing Page Report')?.data || [];\r\n    if (!pageData) return [];\r\n\r\n    return pageData.map(entry => ({\r\n      \"Landing Page\": entry[\"Landing Page\"],\r\n      Visitors: entry.Visitors,\r\n\r\n    }));\r\n  };\r\n\r\n\r\n  if (!data) return <div className=\"flex items-center justify-center h-screen\">\r\n    <div className=\"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-blue-500\"></div>\r\n  </div>;\r\n\r\n  return (\r\n    <>\r\n      <header className=\"bg-white border-b border-gray-200 px-4 py-4 md:px-6 lg:px-6\">\r\n        <div className=\" flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n          {/* <div className=\"flex items-center space-x-2\">\r\n            <BriefcaseBusiness className=\"h-6 w-6 text-gray-500\" />\r\n            <h1 className=\"text-2xl font-bold\">Business Dashboard</h1>\r\n          </div> */}\r\n            <h1 className=\"text-2xl font-bold\">Business Dashboard</h1>\r\n          <div className=\"flex items-center space-x-4\">\r\n            {/* <ReportsDropdown brandId={brandId} /> */}\r\n            <DatePickerWithRange date={date} setDate={setDate}\r\n              defaultDate={{\r\n                from: new Date(now.getFullYear(), now.getMonth(), 1), // First day of the current month\r\n                to: now // Current date\r\n              }} />\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className=\"p-4 md:p-6 bg-gradient-to-br from-gray-100 to-gray-200 min-h-screen\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h1 className=\"text-2xl font-semibold mb-2 flex items-center space-x-3\">\r\n            <BriefcaseBusiness className=\"h-6 w-6\" />\r\n            <span>Blended summary</span>\r\n            <svg viewBox=\"0 0 64 64\" className=\"w-5 h-5\"\r\n              xmlns=\"http://www.w3.org/2000/svg\" ><g>\r\n                <g><path d=\"M51.759,12.659c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631    c-0.36-0.362-1.063-0.254-1.337-0.171c-0.039,0.011-0.715,0.222-1.834,0.567c-1.096-3.167-3.027-6.077-6.426-6.077    c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844c-7.919,0-11.703,9.951-12.889,15.008    c-3.078,0.956-5.266,1.638-5.542,1.728C9.943,18.42,9.89,18.474,9.667,20.1C9.495,21.331,5,56.264,5,56.264l35.022,6.594    L59,58.731c0,0-6.661-45.261-6.703-45.572C52.255,12.849,51.983,12.677,51.759,12.659z M33.034,10.88    c0,0.119-0.002,0.231-0.002,0.344c-1.928,0.601-4.02,1.251-6.121,1.906c1.179-4.57,3.387-6.78,5.32-7.613    C32.716,6.743,33.034,8.505,33.034,10.88z M29.876,3.278c0.346,0,0.688,0.116,1.018,0.345c-2.539,1.199-5.258,4.224-6.408,10.261    c-1.679,0.522-3.319,1.034-4.838,1.506C20.994,10.783,24.188,3.278,29.876,3.278z M31.241,30.19c0,0-2.05-1.099-4.561-1.099    c-3.686,0-3.872,2.324-3.872,2.908c0,3.195,8.287,4.42,8.287,11.903c0,5.888-3.714,9.678-8.726,9.678    c-6.012,0-9.088-3.761-9.088-3.761l1.609-5.345c0,0,3.16,2.729,5.83,2.729c1.74,0,2.449-1.38,2.449-2.387    c0-4.168-6.799-4.354-6.799-11.203c0-5.761,4.116-11.341,12.428-11.341c3.199,0,4.783,0.923,4.783,0.923L31.241,30.19z     M35.11,10.578c0-0.211,0.002-0.417,0.002-0.644c0-1.966-0.273-3.551-0.709-4.807c1.752,0.219,2.919,2.223,3.67,4.528    C37.194,9.931,36.194,10.241,35.11,10.578z\" fill=\"#95C675\" /></g><g><path d=\"M51.759,12.659c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631    c-0.36-0.362-1.063-0.254-1.337-0.171c-0.039,0.011-0.715,0.222-1.834,0.567c-1.096-3.167-3.027-6.077-6.426-6.077    c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844c-7.919,0-9.873,9.951-11.059,15.008    c-3.078,0.956-5.44,6.219-5.719,6.307c-1.719,0.542-1.772,0.596-1.996,2.223C11.148,25.91,5,56.264,5,56.264l35.022,6.594    L59,58.731c0,0-6.661-45.261-6.703-45.572C52.255,12.849,51.983,12.677,51.759,12.659z M33.034,10.88    c0,0.119-0.002,0.231-0.002,0.344c-1.928,0.601-4.02,1.251-6.121,1.906c1.179-4.57,3.387-6.78,5.32-7.613    C32.716,6.743,33.034,8.505,33.034,10.88z M29.876,3.278c0.346,0,0.688,0.116,1.018,0.345c-2.539,1.199-5.258,4.224-6.408,10.261    c-1.679,0.522-3.319,1.034-4.838,1.506C20.994,10.783,24.188,3.278,29.876,3.278z M31.241,30.19c0,0-2.05-1.099-4.561-1.099    c-3.686,0-3.872,2.324-3.872,2.908c0,3.195,8.287,4.42,8.287,11.903c0,5.888-3.714,9.678-8.726,9.678    c-6.012,0-9.088-3.761-9.088-3.761l1.609-5.345c0,0,3.16,2.729,5.83,2.729c1.74,0,2.449-1.38,2.449-2.387    c0-4.168-6.799-4.354-6.799-11.203c0-5.761,4.116-11.341,12.428-11.341c3.199,0,4.783,0.923,4.783,0.923L31.241,30.19z     M35.11,10.578c0-0.211,0.002-0.417,0.002-0.644c0-1.966-0.273-3.551-0.709-4.807c1.752,0.219,2.919,2.223,3.67,4.528    C37.194,9.931,36.194,10.241,35.11,10.578z\" fill=\"#79B259\" /></g><path d=\"M40.022,62.857L59,58.731c0,0-6.661-45.261-6.703-45.572c-0.042-0.311-0.313-0.482-0.538-0.5   c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631c-0.192-0.194-0.479-0.249-0.75-0.251   c-0.72,1.22-0.571,3.537-0.571,3.537l-2.232,50.839L40.022,62.857z\" fill=\"#55932C\" /><path d=\"M33.583,2.977c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844   c-7.887,0-11.674,9.873-12.875,14.947l2.447-0.759c1.354-4.609,4.545-12.053,10.209-12.053c0.346,0,0.688,0.116,1.018,0.345   c-2.532,1.195-5.244,4.209-6.398,10.213l2.43-0.75c1.182-4.541,3.381-6.739,5.307-7.569c0.484,1.227,0.803,2.988,0.803,5.363   c0,0.108,0,0.211-0.002,0.314l2.078-0.643c0-0.2,0.002-0.4,0.002-0.617c0-1.966-0.273-3.551-0.709-4.807   c1.746,0.218,2.912,2.213,3.662,4.508l1.938-0.601C38.906,5.876,36.976,2.977,33.583,2.977z\" fill=\"#4A7A2B\" /><path d=\"M47.611,12.348c-0.474-0.037-0.793-0.06-0.793-0.06s-3.28-3.271-3.639-3.631   c-0.192-0.194-0.479-0.249-0.75-0.251c-0.72,1.22-0.571,3.537-0.571,3.537l-2.232,50.839l0.396,0.075l10.098-2.196L47.611,12.348z\" fill=\"#4C822A\" />\r\n              </g></svg>\r\n            <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n              <rect x=\"17\" y=\"2\" width=\"5\" height=\"20\" rx=\"2.5\" fill=\"#F9AB00\"></rect>\r\n              <path d=\"M9.5 13.5C9.5 12.1193 10.6193 11 12 11C13.3807 11 14.5 12.1193 14.5 13.5V19.5C14.5 20.8807 13.3807 22 12 22C10.6193 22 9.5 20.8807 9.5 19.5V13.5Z\" fill=\"#E37400\"></path><path d=\"M2 19.5C2 18.1193 3.11929 17 4.5 17C5.88071 17 7 18.1193 7 19.5C7 20.8807 5.88071 22 4.5 22C3.11929 22 2 20.8807 2 19.5Z\" fill=\"#E37400\"></path><path d=\"M6.92162 10C6.36184 10 5.95724 9.68838 5.95724 9.05977V8.55474H3.2304C2.49881 8.55474 2 8.1088 2 7.45332C2 7.07723 2.12193 6.70651 2.40459 6.22297C2.93666 5.29349 3.57403 4.31565 4.31116 3.23573C4.92637 2.31162 5.39747 2 6.20111 2C7.2209 2 7.88044 2.54265 7.88044 3.38617V7.02351H8.19082C8.72842 7.02351 9 7.34587 9 7.79181C9 8.23774 8.72288 8.55474 8.19082 8.55474H7.88044V9.05977C7.88044 9.68838 7.47585 10 6.92162 10ZM6.01267 7.09335V3.48287H5.97387C5.0095 4.8368 4.34996 5.83076 3.7015 7.03962V7.09335H6.01267Z\" fill=\"#E37400\"></path>\r\n            </svg>\r\n          </h1>\r\n          <div className=\"md:flex items-center hidden\">\r\n            {lastUpdated && (\r\n              <span className=\"text-sm text-gray-600 mr-4\">\r\n                Last updated: {lastUpdated.toLocaleTimeString()}\r\n              </span>\r\n            )}\r\n            <Button\r\n              onClick={handleManualRefresh}\r\n              disabled={isLoading}\r\n              className=\"flex items-center\"\r\n            >\r\n              <RefreshCw className={`mr-2 h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              Refresh\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Top stats cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-2 mb-4 md:mb-5\">\r\n          {[\r\n            { title: \"Total Orders\", value: data.totalOrders, colorClass: \"text-cyan-700\", icon: ShoppingCart },\r\n            { title: \"Total Sales\", value: `₹${data.totalSales.toFixed(2)}`, colorClass: \"text-cyan-700\", icon: DollarSign },\r\n            { title: \"Monthly Conversion Rate\", value: `${totalConversionRate.toFixed(2)}%`, colorClass: \"text-cyan-700\", icon: PercentIcon },\r\n            { title: \"Average Order Value\", value: `₹${data.averageOrderValue.toFixed(2)}`, colorClass: \"text-cyan-700\", icon: TrendingUp },\r\n            { title: \"Monthly Return Rate\", value: `${monthlyReturnRate}`, colorClass: \"text-cyan-700\", icon: PercentIcon }\r\n          ].map((item, index) => (\r\n            <Card key={index} className=\"shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\r\n              <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\r\n                <CardTitle className=\"text-lg text-gray-600\">{item.title}</CardTitle>\r\n                <item.icon className={`h-6 w-6 ${item.colorClass}`} />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p className={`text-2xl font-bold ${item.colorClass}`}>{item.value}</p>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n\r\n\r\n        <div className='grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4'>\r\n          <Card className=\"shadow-lg hover:shadow-xl transition-all duration-300 mb-5\">\r\n            <CardHeader className='flex flex-row justify-between items-center'>\r\n              <div className='flex flex-col gap-1'>\r\n                <CardTitle className='text-base'>Aggregated E-commerce Metrics</CardTitle>\r\n                <CardDescription>Total Add to Carts, Checkouts, Sessions, and Purchases</CardDescription>\r\n              </div>\r\n              <Link to={`/ecommerce-metrics/${brandId}`}>\r\n                <Button className=\" bg-blue-50 text-blue-900 hover:text-white \">\r\n                  <FileChartColumn />\r\n                </Button>\r\n              </Link>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <EcommerceMetrics rawData={data?.dailyCartCheckoutReports[0].data || []} />\r\n            </CardContent>\r\n          </Card>\r\n          {/* City Chart */}\r\n          <Card className=\"shadow-lg hover:shadow-xl transition-all duration-300 mb-5\">\r\n            <CardHeader className='flex flex-row justify-between items-center'>\r\n              <div className='flex flex-col gap-1'>\r\n                <CardTitle className='text-base'>Top Cities</CardTitle>\r\n                <CardDescription>Visitor Count For Top cities</CardDescription>\r\n              </div>\r\n              <Link to={`/city-metrics/${brandId}`}>\r\n                <Button className=\" bg-blue-50 text-blue-900 hover:text-white \">\r\n                  <FileChartColumn />\r\n                </Button>\r\n              </Link>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <TopCitiesLineChart cityData={preparedCityData()} />\r\n            </CardContent>\r\n          </Card>\r\n          {/* Referring Channels Chart */}\r\n          <Card className=\"shadow-lg hover:shadow-xl transition-all duration-300 mb-5\">\r\n            <CardHeader className='flex flex-row items-center justify-between'>\r\n              <div className='flex flex-col gap-1'>\r\n                <CardTitle className='text-base'>Top Referring Channels</CardTitle>\r\n                <CardDescription>Visitor count for reffering channels</CardDescription>\r\n              </div>\r\n              <Link to={`/channel-metrics/${brandId}`}>\r\n                <Button className=\" bg-blue-50 text-blue-900 hover:text-white \">\r\n                  <FileChartColumn />\r\n                </Button>\r\n              </Link>\r\n            </CardHeader>\r\n            <CardContent className=\"h-80\">\r\n              <ReferringChannelChart rawData={preparedReferringData()} />\r\n            </CardContent>\r\n          </Card>\r\n\r\n        </div>\r\n        <div className='grid grid-cols-1 xl:grid-cols-2 gap-4'>\r\n          {/* Landing Page Report*/}\r\n          <Card className=\"shadow-lg hover:shadow-xl transition-all duration-300 \">\r\n            <CardHeader className='flex flex-row justify-between items-center px-6 py-3'>\r\n              <div className='flex flex-col gap-1'>\r\n                <CardTitle className='text-base'>Top Landing Pages</CardTitle>\r\n                <CardDescription>Visitors count based on Landing Pages</CardDescription>\r\n              </div>\r\n              <Link to={`/page-metrics/${brandId}`}>\r\n                <Button className=\" bg-blue-50 text-blue-900 hover:text-white \">\r\n                  <FileChartColumn />\r\n                </Button>\r\n              </Link>\r\n            </CardHeader>\r\n            <TopPagesPieChart PageData={preparedPageData()} />\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import CollapsibleSidebar from './CollapsibleSidebar'\r\nimport Dashboard from './dashboard'\r\n\r\nexport default function BusinessDashboard() {\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n        <Dashboard />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-primary/10\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","// AdAccountMetrics.js\r\nimport React from 'react';\r\nimport { Card, CardHeader, CardContent } from \"@/components/ui/card\"\r\nimport { Skeleton } from \"@/components/ui/skeleton\"\r\nimport { HelpCircle } from 'lucide-react';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\n\r\n\r\n// Define the type for each metric\r\nexport interface Metric {\r\n  label: string;\r\n  value: string | number;\r\n  tooltipContent?: string\r\n\r\n}\r\n\r\n// Define the props for the AdAccountMetrics component\r\ninterface AdAccountMetricsProps {\r\n  title?: string;\r\n  metrics: Metric[];\r\n  date: DateRange;\r\n  isLoading: boolean;\r\n  icon?: 'Facebook' | 'Google' | '';\r\n  tooltipContent?: string\r\n  errorMessage?: string;\r\n}\r\n\r\nexport interface DateRange {\r\n  from?: Date;\r\n  to?: Date;\r\n}\r\n\r\ninterface MetricCardProps extends Metric {\r\n  date: DateRange;\r\n  icon?: 'Facebook' | 'Google' | ''\r\n\r\n}\r\n\r\n\r\nconst MetricCardSkeleton: React.FC = () => {\r\n  return (\r\n    <Card className=\"transition-transform transform hover:scale-105 hover:border hover:border-blue-600\">\r\n      <CardHeader className='flex flex-col items-start justify-start'>\r\n        <div className=\"flex flex-row items-center gap-2\">\r\n          <Skeleton className=\"w-4 h-4 rounded-full\" />\r\n          <Skeleton className=\"h-6 w-24\" />\r\n        </div>\r\n        <Skeleton className=\"h-4 w-32 mt-2\" />\r\n      </CardHeader>\r\n      <CardContent>\r\n        <Skeleton className=\"h-8 w-20 mt-2\" />\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\n// MetricCard component to render each metric using ShadCN Card\r\nconst MetricCard: React.FC<MetricCardProps> = ({ label, value, date, icon, tooltipContent }) => {\r\n  return (\r\n    <Card className=\"transition-transform transform hover:scale-105 hover:border hover:border-blue-600\">\r\n      <CardHeader className='flex flex-col items-start justify-start'>\r\n        <div className=\"flex flex-row items-center gap-2\">\r\n          {icon === 'Facebook' ? (\r\n            <svg className=\"w-4 h-4\" fill=\"#1877F2\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n            </svg>\r\n          ) : icon === 'Google' ? (\r\n            <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n              <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n              <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n              <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n            </svg>\r\n          ) : icon === '' ? (\r\n            <>\r\n              <svg className=\"w-4 h-4\" fill=\"#1877F2\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n              </svg>\r\n              <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n                <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n                <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n                <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n              </svg>\r\n            </>\r\n          ) : null}\r\n\r\n          <div className=\"text-base font-medium\">{label}</div>\r\n\r\n          <TooltipProvider>\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <button className=\"p-0 m-0\" aria-label={`Info about ${label}`}>\r\n                  <HelpCircle className=\"w-3 h-3 text-gray-400\" />\r\n                </button>\r\n              </TooltipTrigger>\r\n              <TooltipContent className=\"w-64 p-0 bg-white text-black border shadow-sm\">\r\n                <div className=\"p-2 font-semibold border-black\">{label}</div>\r\n                {tooltipContent && (\r\n                  <>\r\n                    <div className=\"w-full h-[0.5px] bg-black\" />\r\n                    <div className=\"p-2\">{tooltipContent}</div>\r\n                  </>\r\n                )}\r\n              </TooltipContent>\r\n            </Tooltip>\r\n          </TooltipProvider>\r\n\r\n        </div>\r\n        <div className=\"text-xs text-gray-500 font-bold\">\r\n          {date.from ? date.from.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) : ''}\r\n          {date.from && date.to ? ' - ' : ''}\r\n          {date.to ? date.to.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) : ''}\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <p className=\"text-3xl font-bold text-cyan-950\">{value}</p>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n};\r\n\r\nconst AdAccountMetricsCard: React.FC<AdAccountMetricsProps> = ({ title, metrics = [], date, isLoading = false, icon, errorMessage }) => {\r\n  if (errorMessage && !isLoading) {\r\n    return (\r\n      <section className={title ? 'mt-10' : ''}>\r\n        <Card className=\"p-4\">\r\n          <CardHeader><h2 className=\"text-xl font-semibold flex items-center space-x-2\">\r\n            {title && (\r\n              <>\r\n                {icon === 'Facebook' ? (\r\n                  <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n                    <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n                  </svg>\r\n                ) : (\r\n                  <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n                    <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n                    <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n                    <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n                  </svg>\r\n                )}\r\n                <span>{title}</span>\r\n              </>\r\n            )}\r\n          </h2>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <p className=\"text-red-600 text-sm\">{errorMessage}</p>\r\n          </CardContent>\r\n        </Card>\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <section className={title ? 'mt-10' : ''}>\r\n      <h2 className=\"text-xl font-semibold mb-4 flex items-center space-x-2\">\r\n        {title && (\r\n          <>\r\n            {icon === 'Facebook' ? (\r\n              <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n                <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n              </svg>\r\n            ) : (\r\n              <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n                <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n                <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n                <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n              </svg>\r\n            )}\r\n            <span>{title}</span>\r\n          </>\r\n        )}\r\n      </h2>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        {isLoading\r\n          ? Array(metrics.length).fill(0).map((_, index) => <MetricCardSkeleton key={index} />)\r\n          : metrics.map((metric, index) => (\r\n            <MetricCard key={index} label={metric.label} value={metric.value} date={date} icon={icon} tooltipContent={metric.tooltipContent} />\r\n          ))\r\n        }\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AdAccountMetricsCard;","import * as React from \"react\"\r\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { CheckIcon, ChevronRightIcon, DotFilledIcon } from \"@radix-ui/react-icons\"\r\n\r\nconst DropdownMenu = DropdownMenuPrimitive.Root\r\n\r\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\r\n\r\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\r\n\r\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\r\n\r\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\r\n\r\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\r\n\r\nconst DropdownMenuSubTrigger = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRightIcon className=\"ml-auto\" />\r\n  </DropdownMenuPrimitive.SubTrigger>\r\n))\r\nDropdownMenuSubTrigger.displayName =\r\n  DropdownMenuPrimitive.SubTrigger.displayName\r\n\r\nconst DropdownMenuSubContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuSubContent.displayName =\r\n  DropdownMenuPrimitive.SubContent.displayName\r\n\r\nconst DropdownMenuContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Portal>\r\n    <DropdownMenuPrimitive.Content\r\n      ref={ref}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </DropdownMenuPrimitive.Portal>\r\n))\r\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\r\n\r\nconst DropdownMenuItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\r\n\r\nconst DropdownMenuCheckboxItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <CheckIcon className=\"h-4 w-4\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.CheckboxItem>\r\n))\r\nDropdownMenuCheckboxItem.displayName =\r\n  DropdownMenuPrimitive.CheckboxItem.displayName\r\n\r\nconst DropdownMenuRadioItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <DotFilledIcon className=\"h-2 w-2 fill-current\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.RadioItem>\r\n))\r\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\r\n\r\nconst DropdownMenuLabel = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\r\n\r\nconst DropdownMenuSeparator = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\r\n\r\nconst DropdownMenuShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\r\n\r\nexport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuRadioItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuShortcut,\r\n  DropdownMenuGroup,\r\n  DropdownMenuPortal,\r\n  DropdownMenuSub,\r\n  DropdownMenuSubContent,\r\n  DropdownMenuSubTrigger,\r\n  DropdownMenuRadioGroup,\r\n}\r\n","import { useState, useEffect, useCallback } from 'react'\r\nimport { format } from \"date-fns\"\r\nimport { Blend, Filter, RefreshCw } from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from \"axios\"\r\nimport AdAccountMetricsCard from \"./AdAccountsMetricsCard.tsx\"\r\nimport { AdAccountData, AggregatedMetrics, GoogleAdAccountData } from '@/Dashboard/interfaces.ts'\r\nimport { DatePickerWithRange } from '@/components/dashboard_component/DatePickerWithRange.tsx'\r\nimport { Button } from '@/components/ui/button.tsx';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuRadioGroup,\r\n  DropdownMenuRadioItem,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\"\r\ntype DataSource = 'all' | 'facebook' | 'google'\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n  const [date, setDate] = useState<DateRange | undefined>({\r\n    from: new Date(),\r\n    to: new Date(),\r\n  })\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fbAdAccountsMetrics, setFbAdAccountsMetrics] = useState<AdAccountData[]>([]);\r\n  const [aggregatedMetrics, setAggregatedMetrics] = useState<AggregatedMetrics | null>(null)\r\n  const [googleAdMetrics, setGoogleAdMetrics] = useState<GoogleAdAccountData>();\r\n  const [dataSource, setDataSource] = useState<DataSource>('all');\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n\r\n  const { brandId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const handleDataSourceChange = (newSource: DataSource) => {\r\n    if (newSource !== dataSource) {\r\n      setDataSource(newSource);\r\n    }\r\n  };\r\n\r\n  const fetchAdData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const baseURL =\r\n        import.meta.env.PROD\r\n          ? import.meta.env.VITE_API_URL\r\n          : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n      const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n      const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n      let fbData = [];\r\n      let googleData = [];\r\n\r\n      if (dataSource === 'all' || dataSource === 'facebook') {\r\n        try {\r\n          const fbAdResponse = await axios.post(\r\n            `${baseURL}/api/metrics/fbad/${brandId}`,\r\n            { startDate, endDate },\r\n            { withCredentials: true }\r\n          );\r\n          fbData = fbAdResponse.data.data;\r\n          console.log(fbData);\r\n          setFbAdAccountsMetrics(fbData);\r\n        } catch (fbError) {\r\n          console.error('Error fetching Facebook ad data:', fbError);\r\n        }\r\n      }\r\n\r\n      if (dataSource === 'all' || dataSource === 'google') {\r\n        try {\r\n          const googleAdResponse = await axios.post(\r\n            `${baseURL}/api/metrics/googlead/${brandId}`,\r\n            { startDate, endDate },\r\n            { withCredentials: true }\r\n          );\r\n          googleData = googleAdResponse.data.data;\r\n          console.log(googleData);\r\n          setGoogleAdMetrics(googleData);\r\n        } catch (googleError) {\r\n          console.error('Error fetching Google ad data:', googleError);\r\n        }\r\n      }\r\n\r\n      calculateAggregatedMetrics(\r\n        dataSource === 'google' ? [] : fbData,\r\n        dataSource === 'facebook' ? undefined : googleData\r\n      );\r\n      setLastUpdated(new Date());\r\n    } catch (error) {\r\n      console.error('Error fetching ad data:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [navigate, date, dataSource, brandId]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchAdData();\r\n  }, [fetchAdData]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchAdData();\r\n\r\n    const intervalId = setInterval(fetchAdData, 5 * 60 * 1000);\r\n\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchAdData]);\r\n\r\n\r\n  const calculateAggregatedMetrics = (fbData: AdAccountData[], googleData: GoogleAdAccountData | undefined) => {\r\n    let totalSpent = 0;\r\n    let totalRevenue = 0;\r\n    let totalPurchases = 0;\r\n    let totalClicks = 0;\r\n    let totalImpressions = 0;\r\n\r\n    if (fbData && fbData.length > 0) {\r\n      fbData.forEach(account => {\r\n        totalSpent += parseFloat(account.spend || '0');\r\n        totalRevenue += parseFloat(account.Revenue?.value || '0');\r\n        totalPurchases += parseFloat(account.purchases?.value || '0');\r\n        totalClicks += parseFloat(account.clicks || '0');\r\n        totalImpressions += parseFloat(account.impressions || '0');\r\n      });\r\n    }\r\n\r\n    if (googleData) {\r\n      totalSpent += parseFloat(googleData.totalSpend || '0');\r\n      totalRevenue += parseFloat(googleData.totalConversionsValue || '0');\r\n      totalPurchases += parseFloat(googleData.totalConversions || '0');\r\n      totalClicks += parseFloat(googleData.totalClicks || '0');\r\n      totalImpressions += parseFloat(googleData.totalImpressions || '0');\r\n    }\r\n    // console.log(totalR)\r\n\r\n    setAggregatedMetrics({\r\n      totalSpent: `₹ ${totalSpent.toLocaleString()}`,\r\n      totalRevenue: `₹ ${totalRevenue.toLocaleString()}`,\r\n      totalROAS: (totalRevenue / totalSpent).toFixed(2).toString(),\r\n      totalPurchases: totalPurchases.toLocaleString(),\r\n      totalCTR: `${((totalClicks / totalImpressions) * 100).toFixed(2)} %`,\r\n      totalCPC: (totalSpent / totalClicks).toFixed(2).toString(),\r\n    });\r\n  };\r\n\r\n\r\n  const metrics = [\r\n    {\r\n      label: 'Amount Spent',\r\n      value: aggregatedMetrics ? aggregatedMetrics.totalSpent : '₹ 0',\r\n      tooltipContent: 'The sum of ad spends for all advertising platform'\r\n    },\r\n    {\r\n      label: 'Revenue',\r\n      value: aggregatedMetrics ? aggregatedMetrics.totalRevenue : '₹ 0',\r\n      tooltipContent: 'Revenue from Ads Purchases'\r\n    },\r\n    {\r\n      label: 'ROAS (Ads only)',\r\n      value: aggregatedMetrics ? aggregatedMetrics.totalROAS : '0.00',\r\n      tooltipContent: 'Blended ROAS = Ads Purchases vaue / Blended Ad Spend'\r\n    },\r\n    {\r\n      label: 'Ads Purchases',\r\n      value: aggregatedMetrics ? aggregatedMetrics.totalPurchases : '0.00',\r\n      tooltipContent: 'Ads Purchases = Fb Ads Purchase + Google Conversions'\r\n    },\r\n    {\r\n      label: 'CTR',\r\n      value: aggregatedMetrics ? aggregatedMetrics.totalCTR : '0.00',\r\n      tooltipContent: 'Average CTR from all advertising platforms = (Blended Clicks / Blended Impressions)*100'\r\n    },\r\n    {\r\n      label: 'CPC',\r\n      value: aggregatedMetrics ? aggregatedMetrics.totalCPC : '0.00',\r\n      tooltipContent: 'Average CPC from all advertising platforms = (Blended Ad Spend / Blended Clicks )'\r\n    }\r\n  ];\r\n\r\n  const googleMetrics = [\r\n    {\r\n      label: 'Total Cost',\r\n      value: googleAdMetrics ? `₹ ${googleAdMetrics?.totalSpend}` : ' 0',\r\n    },\r\n    {\r\n      label: 'Conversion Value',\r\n      value: googleAdMetrics ? `₹ ${googleAdMetrics?.totalConversionsValue}` : ' 0',\r\n    },\r\n    {\r\n      label: 'ROAS',\r\n      value: googleAdMetrics ? googleAdMetrics?.roas : '0.00',\r\n    },\r\n    {\r\n      label: 'Conversions',\r\n      value: googleAdMetrics ? googleAdMetrics?.totalConversions : '0',\r\n    },\r\n    {\r\n      label: 'CPC',\r\n      value: googleAdMetrics ? `₹ ${googleAdMetrics?.totalCPC}` : ' 0',\r\n    },\r\n    {\r\n      label: 'CPM',\r\n      value: googleAdMetrics ? `₹ ${googleAdMetrics?.totalCPM}` : ' 0',\r\n    },\r\n    {\r\n      label: 'CTR',\r\n      value: googleAdMetrics ? `${googleAdMetrics?.totalCTR} %` : ' 0',\r\n    },\r\n    {\r\n      label: 'Cost Per Conversion',\r\n      value: googleAdMetrics ? `₹ ${googleAdMetrics?.totalCostPerConversion}` : ' 0',\r\n    },\r\n  ]\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchAdData();\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n\r\n      <nav className=\"bg-white border-b border-gray-200 px-4 py-4 md:px-6 lg:px-8\">\r\n        <div className=\" flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n        <h1 className=\"text-2xl font-bold\">Ad Metrics Dashboard</h1>\r\n          <div className=\"flex items-center space-x-2\">\r\n            {/* <ReportsDropdown brandId={brandId} /> */}\r\n            <DatePickerWithRange date={date} setDate={setDate}\r\n              defaultDate={{ from: new Date(), to: new Date() }} />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Main content */}\r\n      <main className=\"p-4 md:p-6 lg:px-8\">\r\n        <div className=\"space-y-2\">\r\n          {/* Blended summary */}\r\n          <section>\r\n            <h2 className=\"text-xl font-semibold flex flex-row items-center justify-between\">\r\n              <div className='flex flex-row items-center space-x-2'>\r\n                <Blend className=\"h-5 w-5\" />\r\n                <span>Blended summary</span>\r\n                {(dataSource === 'all' || dataSource === 'facebook') && (\r\n                  <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n                    <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n                  </svg>\r\n                )}\r\n                {(dataSource === 'all' || dataSource === 'google') && (\r\n                  <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\" >\r\n                    <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path><path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path><path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n                  </svg>\r\n                )}\r\n              </div>\r\n              <div className=\"flex flex-row items-center space-x-2\">\r\n                <div className=\"md:flex items-center hidden\">\r\n                  {lastUpdated && (\r\n                    <span className=\"text-sm text-gray-600 mr-4\">\r\n                      Last updated: {lastUpdated.toLocaleTimeString()}\r\n                    </span>\r\n                  )}\r\n                  <Button\r\n                    onClick={handleManualRefresh}\r\n                    disabled={isLoading}\r\n                    className=\"flex items-center\"\r\n                  >\r\n                    <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n\r\n                  </Button>\r\n                </div>\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button className='bg-cyan-800'><Filter className=\"h-5 w-5 mr-2\" />Filter</Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent>\r\n                    <DropdownMenuRadioGroup value={dataSource} onValueChange={(value) => handleDataSourceChange(value as DataSource)}>\r\n                      <DropdownMenuRadioItem value=\"all\">All Data</DropdownMenuRadioItem>\r\n                      <DropdownMenuRadioItem value=\"facebook\">Facebook Ads</DropdownMenuRadioItem>\r\n                      <DropdownMenuRadioItem value=\"google\">Google Ads</DropdownMenuRadioItem>\r\n                    </DropdownMenuRadioGroup>\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n\r\n              </div>\r\n\r\n            </h2>\r\n            <AdAccountMetricsCard metrics={metrics} date={date || { from: new Date(), to: new Date() }} isLoading={isLoading} icon={dataSource === 'all' ? '' : dataSource === 'facebook' ? 'Facebook' : 'Google'} />\r\n          </section>\r\n        </div>\r\n\r\n\r\n        {(dataSource === 'all' || dataSource === 'facebook') && fbAdAccountsMetrics.length > 0 && fbAdAccountsMetrics.map((accountMetrics, index) => {\r\n          const fbmetrics = [\r\n            { label: 'Amount Spent', value: `₹ ${accountMetrics.spend || '0'}` },\r\n            {\r\n              label: 'Revenue',\r\n              value: `₹ ${parseFloat(accountMetrics.Revenue?.value || '0').toLocaleString()}`\r\n            },\r\n            {\r\n              label: 'ROAS (Ads only)',\r\n              value: accountMetrics.purchase_roas && accountMetrics.purchase_roas.length > 0\r\n                ? parseFloat(accountMetrics.purchase_roas[0].value).toFixed(2)\r\n                : '0'\r\n            },\r\n            { label: 'Ads Purchases', value: accountMetrics.purchases?.value || '0' },\r\n            { label: 'CPC (All clicks)', value: `₹ ${parseFloat(accountMetrics.cpc || '0').toLocaleString()}` },\r\n            { label: 'CPM', value: `₹ ${parseFloat(accountMetrics.cpm || '0').toFixed(2).toLocaleString()}` },\r\n            { label: 'CTR', value: `${parseFloat(accountMetrics.ctr || '0').toFixed(2)} %` },\r\n            { label: 'Cost per Purchase (All)', value: `₹ ${parseFloat(accountMetrics.cpp || '0').toLocaleString()}` },\r\n          ];\r\n\r\n          return (\r\n            <AdAccountMetricsCard\r\n              key={index}\r\n              icon=\"Facebook\"\r\n              title={`Facebook - ${accountMetrics.account_name}`}\r\n              metrics={fbmetrics}  // Pass fbmetrics for the current account\r\n              date={date || { from: new Date(), to: new Date() }}\r\n              isLoading={isLoading}\r\n              errorMessage={accountMetrics.message}\r\n            />\r\n          );\r\n        })}\r\n\r\n        {\r\n          (dataSource === 'all' || dataSource === 'google') && (\r\n            googleAdMetrics && Object.keys(googleAdMetrics).length > 0 ? (\r\n              <AdAccountMetricsCard\r\n                icon=\"Google\"\r\n                title={`Google Ads - ${googleAdMetrics?.adAccountName}`}\r\n                metrics={googleMetrics}\r\n                date={date || { from: new Date(), to: new Date() }}\r\n                isLoading={isLoading}\r\n              />\r\n            ) : (\r\n              <section>\r\n                <div className='flex flex-row gap-2 items-center'>\r\n                <h3 className=\"text-lg font-semibold\">Google Ad Metrics</h3>\r\n                <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n                <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n                <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n                <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n              </svg>\r\n                </div>\r\n           \r\n              <div className=\"text-center text-gray-500 mt-4 bg-white p-2\">\r\n                No Google Ad Account for this brand.\r\n              </div>\r\n              </section>\r\n            )\r\n          )\r\n        }\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport CollapsibleSidebar from \"@/Dashboard/CollapsibleSidebar\";\r\nimport Dashboard from \"./dashboard.tsx\";\r\n\r\nconst AnalyticsDashboard: React.FC = () => {\r\n  return (\r\n    <div className=\"flex h-screen\"> {/* Set a fixed width for the sidebar */}\r\n        <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n        <Dashboard />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalyticsDashboard;\r\n","import { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Bell, Settings, Briefcase, RefreshCw, Store, FileSpreadsheet} from \"lucide-react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useUser } from \"@/context/UserContext\"\r\nimport { useBrand } from \"@/context/BrandContext\"\r\n\r\n\r\nexport default function LandingPage() {\r\n\r\n  const { user } = useUser();\r\n  const { brands } = useBrand();\r\n\r\n  \r\n\r\n \r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-50 to-pink-50 p-6 space-y-6\">\r\n      <div className=\"max-w-7xl mx-auto space-y-6\">\r\n        <h1 className=\"text-3xl font-bold tracking-tight \">Welcome back, {user?.username.split(' ')[0] || 'user'} !</h1>\r\n\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          <Card className=\"bg-white border-t-4 border-t-black shadow-lg\">\r\n            <CardHeader>\r\n              <CardTitle>Your Brands</CardTitle>\r\n              <CardDescription>Quick access to your brand dashboards</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\r\n              {brands.map((brand, index) => (\r\n                <Button\r\n                key={brand._id}\r\n                 asChild\r\n                  className={`w-full justify-start ${index %2 == 0?' hover:bg-black/50 hover:text-white':'hover:bg-pink-500 bg-pink-600 text-white'} `}>\r\n                  <Link to={`/business-dashboard/${brand._id}`}>\r\n                    <Store className=\"mr-2 h-4 w-4\" />\r\n                    {brand.name}\r\n                  </Link>\r\n                </Button>\r\n              ))}\r\n              <Button variant=\"outline\" className=\"w-full justify-start border-dashed border-2 border-gray-300 hover:bg-indigo-50\">\r\n                <Briefcase className=\"mr-2 h-4 w-4\" />\r\n                Add New Brand\r\n              </Button>\r\n            </CardContent>\r\n          </Card>\r\n          <Card className=\"bg-white border-t-4 border-t-cyan-600 shadow-lg\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-cyan-600\">Daily Reports</CardTitle>\r\n            <CardDescription>Get Daily Reports for your brands</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\r\n              {brands.map((brand) => (\r\n                <Link to={`/ad-metrics/${brand._id}`}>\r\n                <Button\r\n                  key={brand._id}\r\n                  variant=\"outline\"\r\n                  className=\"w-full justify-start items-center text-cyan-600 hover:bg-green-50 hover:text-cyan-700 border-cyan-400\">\r\n                  <FileSpreadsheet className=\"h-4 w-4\" />\r\n                  <span className=\"\">{brand.name}</span>\r\n                </Button>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        </div>\r\n        <div className=\"grid gap-6 md:grid-cols-1\">\r\n        <Card className=\"bg-white border-t-4 border-t-amber-500 shadow-lg\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-amber-600\">Getting Started</CardTitle>\r\n            <CardDescription>Follow these steps to make the most of your analytics</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <ol className=\"list-decimal list-inside space-y-2\">\r\n              <li className=\"text-gray-700\">Select a brand from the sidebar or \"Your Brands\" section</li>\r\n              <li className=\"text-gray-700\">Connect your brand's Shopify store</li>\r\n              <li className=\"text-gray-700\">Set up Google Analytics 4 property for your brand</li>\r\n              <li className=\"text-gray-700\">Link your brand's Facebook Ads account</li>\r\n              <li className=\"text-gray-700\">Configure Google Ads integration for your brand</li>\r\n              <li className=\"text-gray-700\">Explore your unified brand analytics in the dashboard</li>\r\n            </ol>\r\n          </CardContent>\r\n        </Card>\r\n      \r\n{/*         \r\n        <Card className=\"bg-white border-t-4 border-t-pink-500 shadow-lg\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-pink-600\">Recent Activity</CardTitle>\r\n              <CardDescription>Your latest actions and updates</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ul className=\"space-y-2\">\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-32 text-sm text-gray-500\">2 hours ago</span>\r\n                  <span>Updated UDD Studio Shopify integration</span>\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-32 text-sm text-gray-500\">Yesterday</span>\r\n                  <span className=\"text-pink-600\">Viewed Fisherman Hub GA4 report</span>\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <span className=\"w-32 text-sm text-gray-500\">2 days ago</span>\r\n                  <span>Created new FB Ad campaign for UDD Studio</span>\r\n                </li>\r\n              </ul>\r\n            </CardContent>\r\n          </Card> */}\r\n        </div>\r\n\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          <Card className=\"bg-white border-t-4 border-t-teal-500 shadow-lg\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-teal-600\">Notifications</CardTitle>\r\n              <CardDescription>Stay updated with your latest alerts</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ul className=\"space-y-2\">\r\n                <li className=\"flex items-center\">\r\n                  <Bell className=\"mr-2 h-4 w-4 text-indigo-500\" />\r\n                  <span className=\"text-gray-700\">New Shopify order received for UDD Studio</span>\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <Bell className=\"mr-2 h-4 w-4 text-pink-500\" />\r\n                  <span className=\"text-gray-700\">Weekly analytics report ready for Fisherman Hub</span>\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <Bell className=\"mr-2 h-4 w-4 text-amber-500\" />\r\n                  <span className=\"text-gray-700\">Facebook Ads campaign ended for UDD Studio</span>\r\n                </li>\r\n              </ul>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"bg-white border-t-4 border-t-purple-500 shadow-lg\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-purple-600\">Quick Actions</CardTitle>\r\n              <CardDescription>Frequently used features and settings</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <Button variant=\"outline\" className=\"w-full justify-start text-purple-600 hover:bg-purple-50 hover:text-purple-700 border-purple-200\">\r\n                <Settings className=\"mr-2 h-4 w-4\" />\r\n                Account Settings\r\n              </Button>\r\n              <Button variant=\"outline\" className=\"w-full justify-start text-purple-600 hover:bg-purple-50 hover:text-purple-700 border-purple-200\">\r\n                <RefreshCw className=\"mr-2 h-4 w-4\" />\r\n                Sync Data Sources\r\n              </Button>\r\n              <Button variant=\"outline\" className=\"w-full justify-start text-purple-600 hover:bg-purple-50 hover:text-purple-700 border-purple-200\">\r\n                <Briefcase className=\"mr-2 h-4 w-4\" />\r\n                Manage Brands\r\n              </Button>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport LandingPage from \"./dashboard\";\r\nimport CollapsibleSidebar from \"@/Dashboard/CollapsibleSidebar\";\r\n const GeneralDashboard : React.FC=()=>{\r\n    return (\r\n        <div className=\"flex h-screen\"> \r\n        <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n        <LandingPage />\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\nexport default GeneralDashboard;","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { cn } from \"@/lib/utils\"\nimport { CheckIcon } from \"@radix-ui/react-icons\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <CheckIcon className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","import { Table, TableBody, TableCell, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Skeleton } from \"@/components/ui/skeleton\"\r\nexport const TableSkeleton = () => (\r\n    <Table className=\"text-center min-w-full\">\r\n      <TableHeader className=\"bg-gray-200 sticky top-0 z-10\">\r\n        <TableRow>\r\n          {Array(8).fill(0).map((_, index) => (\r\n            <TableCell key={index} className=\"font-bold px-4 text-black min-w-[150px]\">\r\n              <Skeleton className=\"h-6 w-full\" />\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHeader>\r\n      <TableBody>\r\n        {Array(10).fill(0).map((_, rowIndex) => (\r\n          <TableRow key={rowIndex}>\r\n            {Array(8).fill(0).map((_, cellIndex) => (\r\n              <TableCell key={cellIndex} className=\"px-4 py-2 max-w-[200px]\">\r\n                <Skeleton className=\"h-6 w-full\" />\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  )","import React from 'react';\r\nimport { ArrowUp, ArrowDown } from \"lucide-react\"\r\nimport { Table, TableBody, TableCell, TableHeader, TableRow } from \"@/components/ui/table\"// Import icons based on your setup\r\n\r\ninterface TableProps {\r\n  columns: string[];\r\n  data: any[];\r\n  rowsToShow: number;\r\n}\r\n\r\nconst ReportTable: React.FC<TableProps> = ({ columns, data, rowsToShow }) => {\r\n  \r\n  const parsePercentage = (value: string): number => {\r\n    return parseFloat(value.replace('%', '').trim());\r\n  };\r\n\r\n  // Define a type for average values\r\n  type AverageValues = {\r\n    [key: string]: number; \r\n  };\r\n\r\n  // Calculate averages for specific columns\r\n  const averageValues: AverageValues = {\r\n    \"Add To Cart Rate\": data.reduce((sum, item) => sum + parsePercentage(item[\"Add To Cart Rate\"]), 0) / data.length,\r\n    \"Checkout Rate\": data.reduce((sum, item) => sum + parsePercentage(item[\"Checkout Rate\"]), 0) / data.length,\r\n    \"Purchase Rate\": data.reduce((sum, item) => sum + parsePercentage(item[\"Purchase Rate\"]), 0) / data.length,\r\n  };\r\n\r\n  // Helper function to get conditional text color based on comparison\r\n  const getConditionalTextColor = (value: number, average: number) => {\r\n    if (value < average) return 'red';\r\n    else if (value > average) return 'green';\r\n    else return '#FFB200';\r\n  };\r\n\r\n  // Helper function to get conditional icon based on comparison\r\n  const getConditionalIcon = (value: number, average: number) => {\r\n    if (value < average) {\r\n      return <ArrowDown className=\"ml-1 text-red-500 w-3 h-3\" />;\r\n    } else if (value > average) {\r\n      return <ArrowUp className=\"ml-1 text-green-500 w-3 h-3\" />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Parse Sessions as numbers and calculate maxSessions\r\n  const parsedData = data.map(item => ({\r\n    ...item,\r\n    Sessions: Number(item.Sessions),\r\n  }));\r\n  const maxSessions = Math.max(...parsedData.map(item => item.Sessions));\r\n\r\n  // Calculate background color and text color based on session intensity\r\n  const getBackgroundColor = (sessions: number) => {\r\n    const intensity = sessions / maxSessions;\r\n    return `rgba(0, 0, 255, ${Math.max(0.1, intensity)})`;\r\n  };\r\n  const getTextColor = (sessions: number) => {\r\n    const intensity = sessions / maxSessions;\r\n    return intensity > 0.7 ? 'white' : 'black';\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative border rounded-md\" style={{ maxHeight: 'calc(100vh - 183px)' }}>\r\n      <div className=\"overflow-y-auto h-full\">\r\n        <div className=\"overflow-x-auto min-w-full\">\r\n          <Table className=\"text-center min-w-[800px]\">\r\n            <TableHeader className=\"bg-gray-200 sticky top-0 z-10\">\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell key={column} className=\"font-bold px-4 text-black min-w-[150px]\">\r\n                    {column}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {parsedData.slice(0, rowsToShow).map((item, index) => (\r\n                <TableRow key={index}>\r\n                  {columns.map((column) => {\r\n                    const cellValue = column.includes('Rate')\r\n                      ? parsePercentage(item[column as keyof typeof item] as string)\r\n                      : item[column as keyof typeof item];\r\n                    const isComparisonColumn = ['Add To Cart Rate', 'Checkout Rate', 'Purchase Rate'].includes(column);\r\n                    return (\r\n                      <TableCell\r\n                        key={column}\r\n                        className=\"px-4 py-2 max-w-[200px] font-medium\"\r\n                        style={{\r\n                          backgroundColor:\r\n                            column === 'Sessions' ? getBackgroundColor(Number(item.Sessions)) : '',\r\n                          color:\r\n                            column === 'Sessions'\r\n                              ? getTextColor(Number(item.Sessions))\r\n                              : isComparisonColumn\r\n                              ? getConditionalTextColor(cellValue as number, averageValues[column as keyof AverageValues])\r\n                              : 'inherit',\r\n                        }}\r\n                      >\r\n                        <div className=\"flex flex-row items-center justify-center gap-1\">\r\n                          {item[column as keyof typeof item]}\r\n                          {isComparisonColumn &&\r\n                            getConditionalIcon(cellValue as number, averageValues[column as keyof AverageValues])}\r\n                        </div>\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportTable;\r\n","import { useState, useCallback, useEffect } from \"react\"\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport { BriefcaseBusiness, ChevronDown, Columns, RefreshCw } from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport CollapsibleSidebar from \"@/Dashboard/CollapsibleSidebar\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\nimport ReportTable from \"@/components/dashboard_component/ReportTable\"\r\n\r\ninterface EcommerceMetric {\r\n  \"Date\": string\r\n  \"Add To Carts\": string\r\n  \"Checkout\": string\r\n  \"Sessions\": string\r\n  \"Purchases\": string\r\n  \"Purchase Rate\": string\r\n  \"Add To Cart Rate\": string\r\n  \"Checkout Rate\": string\r\n}\r\n\r\nexport default function EcommerceMetricsPage() {\r\n  const [date, setDate] = useState<DateRange | undefined>(undefined)\r\n  const now = new Date()\r\n  const [data, setData] = useState<EcommerceMetric[]>([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null)\r\n  const { brandId } = useParams()\r\n  const navigate = useNavigate()\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\"\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\"\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([])\r\n  const [rowsToShow, setRowsToShow] = useState(50)\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns((prev) => {\r\n      if (prev.includes(column)) {\r\n        return prev.filter((col) => col !== column)\r\n      } else {\r\n        return [...prev, column]\r\n      }\r\n    })\r\n  }\r\n\r\n  const fetchMetrics = useCallback(async () => {\r\n    setIsLoading(true)\r\n    try {\r\n      const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL\r\n\r\n      const DailyAnalyticsResponse = await axios.post(\r\n        `${baseURL}/api/analytics/atcreport/${brandId}`,\r\n        {\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n\r\n      const fetchedData = DailyAnalyticsResponse.data.data || [];\r\n      setData(fetchedData)\r\n      setLastUpdated(new Date())\r\n\r\n      if(fetchedData.length > 0) {\r\n        setSelectedColumns(Object.keys(fetchedData[0]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error)\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.')\r\n        navigate('/')\r\n      }\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [navigate, startDate, endDate, brandId])\r\n\r\n  useEffect(() => {\r\n    fetchMetrics()\r\n  }, [fetchMetrics])\r\n\r\n  useEffect(() => {\r\n    fetchMetrics()\r\n    const intervalId = setInterval(fetchMetrics, 5 * 60 * 1000)\r\n    return () => clearInterval(intervalId)\r\n  }, [fetchMetrics])\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchMetrics()\r\n  }\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : []\r\n  const sortedSelectedColumns = allColumns.filter((col) => selectedColumns.includes(col))\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden\">\r\n        <header className=\"bg-white border-b border-gray-200 px-4 py-4 md:px-6\">\r\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <BriefcaseBusiness className=\"h-6 w-6 text-gray-500\" />\r\n              <h1 className=\"text-2xl font-bold\">E-Commerce Metrics Overview</h1>\r\n            </div>\r\n            <div className=\"flex flex-col lg:flex-row lg:space-x-3 items-center\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <DatePickerWithRange\r\n                  date={date}\r\n                  setDate={setDate}\r\n                  defaultDate={{\r\n                    from: new Date(now.getFullYear(), now.getMonth(), 1),\r\n                    to: now,\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <div className=\"m-6\">\r\n          <div className=\"flex flex-col md:flex-row gap-5 justify-start items-start md:justify-between md:items-center mb-6\">\r\n            <h1 className=\"text-lg font-semibold\">Key performance indicators for your online store</h1>\r\n            <div className=\"flex flex-col items-start gap-3 md:flex-row md:items-center md:space-x-2\">\r\n              <div className=\"lg:flex items-center hidden\">\r\n                {lastUpdated && (\r\n                  <span className=\"text-sm text-gray-600 mr-4\">\r\n                    Last updated: {lastUpdated.toLocaleTimeString()}\r\n                  </span>\r\n                )}\r\n                <Button onClick={handleManualRefresh} disabled={isLoading} className=\"flex items-center\">\r\n                  <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n                </Button>\r\n              </div>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" className=\"flex items-center gap-2\">\r\n                    <Columns className=\"h-4 w-4\" />\r\n                    <span>Select Columns</span>\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent className=\"w-44\">\r\n                  {allColumns.map((column) => (\r\n                    <div key={column} className=\"flex items-center space-x-2 p-2\">\r\n                      <Checkbox\r\n                        id={`column-${column}`}\r\n                        checked={selectedColumns.includes(column)}\r\n                        onCheckedChange={() => toggleColumnSelection(column)}\r\n                      />\r\n                      <label\r\n                        htmlFor={`column-${column}`}\r\n                        className=\"text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n                      >\r\n                        {column}\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" className=\"w-[180px]\">\r\n                    Show {rowsToShow === 1000000 ? 'all' : rowsToShow} rows\r\n                    <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow(50)}>Show 50 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow(100)}>Show 100 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow(1000000)}>Show all rows</DropdownMenuItem>\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"relative border rounded-md overflow-hidden\" style={{ maxHeight: 'calc(100vh - 183px)' }}>\r\n            <div className=\"overflow-auto h-full\">\r\n              {isLoading ? (\r\n                <TableSkeleton />\r\n              ) : (\r\n                <ReportTable columns={sortedSelectedColumns} data={data} rowsToShow={rowsToShow} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","\r\n\r\nimport { useEffect, useMemo, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableHeader,\r\n    TableRow,\r\n} from \"@/components/ui/table\"\r\n\r\nimport { useParams } from \"react-router-dom\"\r\nimport CollapsibleSidebar from \"@/Dashboard/CollapsibleSidebar\"\r\nimport { BriefcaseBusiness, ChevronDown, ChevronRight, SearchX } from \"lucide-react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@radix-ui/react-tooltip\"\r\n// import ReportsDropdown from \"@/components/dashboard_component/ReportDropDown\"\r\n\r\n\r\ninterface DailyMetric {\r\n    _id: string\r\n    date: string\r\n    metaSpend: number\r\n    metaROAS: number\r\n    googleSpend: number\r\n    googleROAS: number\r\n    totalSpend: number\r\n    grossROI: number\r\n    shopifySales: number\r\n    netROI: number\r\n}\r\n\r\ninterface MonthlyAggregate {\r\n    _id: {\r\n        month: number\r\n        year: number\r\n    }\r\n    metaSpend: number\r\n    metaROAS: number\r\n    googleSpend: number\r\n    googleROAS: number\r\n    totalSpend: number\r\n    grossROI: number\r\n    shopifySales: number\r\n    netROI: number\r\n    dailyMetrics: DailyMetric[]\r\n    month: number\r\n    year: number\r\n}\r\nfunction TooltipHeader({ title, tooltip }: { title: string; tooltip: string }) {\r\n    return (\r\n      <TableHead className=\"font-bold text-primary-foreground text-center w-[120px]\">\r\n        <TooltipProvider>\r\n          <Tooltip>\r\n            <TooltipTrigger asChild >\r\n              <span className=\"flex items-center justify-center gap-1 cursor-help\">\r\n                {title} \r\n              </span>\r\n            </TooltipTrigger>\r\n            <TooltipContent className=\"mb-3\">\r\n              <div className=\" text-gray-500 bg-white p-1 rounded-md text-xs border\">{tooltip}</div>\r\n            </TooltipContent>\r\n          </Tooltip>\r\n        </TooltipProvider>\r\n      </TableHead>\r\n    )\r\n  }\r\n\r\n\r\nexport const ExcelMetricsPage: React.FC<any> = () => {\r\n    const [metricsData, setMetricsData] = useState<MonthlyAggregate[]>([])\r\n    const [brandName, setBrandName] = useState<string>(\"\")\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [error, setError] = useState<string | null>(null)\r\n    const [date, setDate] = useState<DateRange | undefined>(undefined);\r\n    const [expandedMonths, setExpandedMonths] = useState<string[]>([])\r\n    const { brandId } = useParams();\r\n\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n\r\n    const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n            setError(null)\r\n            try {\r\n                const queryParams: any = {};\r\n\r\n                if (startDate) queryParams.startDate = startDate;\r\n                if (endDate) queryParams.endDate = endDate;\r\n\r\n                // Fetch the metrics data\r\n                const reportResponse = await axios.get(`${baseURL}/api/report/${brandId}`, {\r\n                    params: queryParams, // Pass query parameters here\r\n                    withCredentials: true,\r\n                });\r\n                const metricsData: MonthlyAggregate[] = reportResponse.data.data\r\n\r\n                const brandResponse = await axios.get(`${baseURL}/api/brands/${brandId}`, { withCredentials: true })\r\n                const brandName = brandResponse.data.name\r\n\r\n                setMetricsData(metricsData)\r\n                setBrandName(brandName)\r\n            } catch (err) {\r\n                console.error(err)\r\n                setError(\"Failed to fetch data. Please try again later.\")\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        }\r\n        fetchData()\r\n\r\n    }, [brandId, date, baseURL])\r\n\r\n    \r\n\r\n    const toggleMonth = (monthYear: string) => {\r\n        setExpandedMonths(prev =>\r\n            prev.includes(monthYear)\r\n                ? prev.filter(m => m !== monthYear)\r\n                : [...prev, monthYear]\r\n        )\r\n    }\r\n\r\n    const formatCurrency = (value: number) => {\r\n        return new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR' }).format(value);\r\n    }\r\n    \r\n\r\n    const formatPercentage = (value: number) => {\r\n        return `${value.toFixed(2)}`\r\n    }\r\n    const processedData = useMemo(() => {\r\n        return metricsData.map((monthData: MonthlyAggregate) => {\r\n            const processedDailyMetrics = monthData.dailyMetrics.map(daily => ({\r\n                ...daily,\r\n                metaSales: daily.metaSpend * (daily.metaROAS),\r\n                googleSales: daily.googleSpend * (daily.googleROAS)\r\n            }))\r\n    \r\n            const metaSales = processedDailyMetrics.reduce((sum, daily) => sum + daily.metaSales, 0)\r\n            const googleSales = processedDailyMetrics.reduce((sum, daily) => sum + daily.googleSales, 0)\r\n            const totalSales = metaSales+ googleSales\r\n            \r\n    \r\n            return {\r\n                ...monthData,\r\n                metaSales,\r\n                googleSales,\r\n                totalSales,\r\n                metaROAS: (metaSales / monthData.metaSpend),\r\n                googleROAS: (googleSales / monthData.googleSpend),\r\n                grossROI: (totalSales / monthData.totalSpend),\r\n                netROI: (monthData.shopifySales / monthData.totalSpend),\r\n                dailyMetrics: processedDailyMetrics\r\n            }\r\n        })\r\n    }, [metricsData])\r\n    \r\nconsole.log(processedData);\r\n\r\n    return (\r\n        <div className=\"flex h-screen \">\r\n            <CollapsibleSidebar />\r\n            <div className=\"flex-1 h-screen overflow-hidden\">\r\n                <header className=\"bg-white border-b border-gray-200 px-4 py-4 md:px-6 lg:px-8\">\r\n                    <div className=\" flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n                            <BriefcaseBusiness className=\"h-6 w-6 text-gray-500\" />\r\n                            <h1 className=\"text-2xl font-bold\">{brandName} Ad Metrics Overview</h1>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-2\">\r\n                        {/* <ReportsDropdown brandId={brandId} /> */}\r\n                            <div className=\"flex items-center space-x-4\">\r\n                                <DatePickerWithRange date={date} setDate={setDate}\r\n                                />\r\n                            </div>\r\n                            {date &&\r\n                                <Button onClick={() => setDate(undefined)} className=\"px-4 py-2 text-white bg-red-500 hover:bg-red-600\">\r\n                                    <SearchX className=\"w-6 h-6\" />\r\n                                </Button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n\r\n                <h1 className=\"text-lg font-semibold flex flex-col items-start space-x-3 m-6\">\r\n\r\n                    Key performance indicators for your Ad Accounts\r\n                </h1>\r\n                {loading ? (\r\n                    <div className=\"flex items-baseline justify-center h-screen\">\r\n                        <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-500\"></div>\r\n                    </div>\r\n                ) : error ? (\r\n                    <p className=\"text-red-500\">{error}</p>\r\n                ) : (\r\n                    <div className=\"border rounded-md overflow-auto m-6 lg:mt-3\">\r\n                        <div className=\"max-h-[90vh] overflow-auto\">\r\n                            <Table>\r\n                                <TableHeader className=\"bg-cyan-900 sticky top-0 z-10\">\r\n                                    <TableRow className=\"hover:bg-cyan-900\">\r\n                                        <TableHead className=\"w-[30px]\" />\r\n                                        <TooltipHeader title=\"Date\" tooltip=\"Date\"/>\r\n                                        <TooltipHeader title='Meta Spend'tooltip=\"Meta spend\"/>\r\n                                        <TooltipHeader title='Meta Sales'tooltip=\"Meta Sales = Meta Spend * Meta ROAS\"/>\r\n                                        <TooltipHeader title='Meta ROAS'tooltip=\"Meta ROAS\"/>\r\n                                        <TooltipHeader title='Google Spend'tooltip=\"Google Spend\"/>\r\n                                        <TooltipHeader title='Google Sales'tooltip=\"Google Sales = Google Spend * Google ROAS\"/>\r\n                                        <TooltipHeader title='Google ROAS'tooltip=\"Google ROAS\"/>\r\n                                        <TooltipHeader title='Total Spend'tooltip=\"Total Spend = Meta Spend + Google Spend\"/>\r\n                                        <TooltipHeader title='Gross ROI'tooltip=\"Gross ROI =(MetaSales + GoogleSales)/ Total Spend\"/>\r\n                                        <TooltipHeader title='Shopify Sales' tooltip='Shopify Sales'/> \r\n                                        <TooltipHeader title='Net ROI' tooltip='Net ROI = Shopify Sales / Total Spend'/>                                          \r\n                                        {expandedMonths.length > 0 && <TableHead className=\"w-[15px]\" />}\r\n                                    </TableRow>\r\n                                </TableHeader>\r\n                                </Table>\r\n                                <div className=\"max-h-[70vh] md:max-h-[calc(75vh-2.5rem)]  overflow-y-auto \">\r\n                                    <Table>\r\n                                <TableBody>\r\n                                    {processedData.map((monthData: any,_) => {\r\n                                        const monthYear = `${monthData.year}-${monthData.month.toString().padStart(2, '0')}`\r\n                                        const isExpanded = expandedMonths.includes(monthYear)\r\n                                        return (\r\n                                            <>\r\n                                                <TableRow\r\n                                                    key={monthYear}\r\n                                                    className=\"bg-muted/50 cursor-pointer hover:bg-muted\"\r\n                                                    onClick={() => toggleMonth(monthYear)}\r\n                                                >\r\n                                                    <TableCell className=\"w-[30px]\">\r\n                                                        {isExpanded ? (\r\n                                                            <ChevronDown className=\"h-4 w-4\" />\r\n                                                        ) : (\r\n                                                            <ChevronRight className=\"h-4 w-4\" />\r\n                                                        )}\r\n                                                    </TableCell>\r\n                                                    <TableCell className=\"font-medium text-cyan-950  w-[120px]\">{format(new Date(monthData.year, monthData.month - 1), 'MMMM yyyy')}</TableCell>\r\n                                                    <TableCell className=\" w-[120px] text-center\">{formatCurrency(monthData.metaSpend)}</TableCell>\r\n                                                    <TableCell className=\" w-[120px] text-center\">{formatCurrency(monthData.metaSales)}</TableCell>\r\n                                                    <TableCell className=\" w-[120px] text-center\">{formatPercentage(monthData.metaROAS)}</TableCell>\r\n                                                    <TableCell className=\" w-[120px] text-center\">{formatCurrency(monthData.googleSpend)}</TableCell>\r\n                                                    <TableCell className=\" w-[120px] text-center\">{formatCurrency(monthData.googleSales)}</TableCell>\r\n                                                    <TableCell className=\" w-[120px] text-center\">{formatPercentage(monthData.googleROAS)}</TableCell>\r\n                                                    <TableCell className=\" w-[120px] text-center\">{formatCurrency(monthData.totalSpend)}</TableCell>\r\n                                                    <TableCell className=\" w-[120px] text-center\">{formatPercentage(monthData.grossROI)}</TableCell>\r\n                                                    <TableCell className=\" w-[120px] text-center\">{formatCurrency(monthData.shopifySales)}</TableCell>\r\n                                                    <TableCell className=\" w-[120px] text-center\">{formatPercentage(monthData.netROI)}</TableCell>\r\n                                                </TableRow>\r\n                                                {isExpanded && monthData.dailyMetrics.map((daily: any) => (\r\n                                                    <TableRow key={daily._id} className=\"bg-background\">\r\n                                                        <TableCell />\r\n                                                        <TableCell className=\" w-[120px] text-center\">{format(new Date(daily.date), 'dd/MM/yyyy')}</TableCell>\r\n                                                        <TableCell className=\" w-[120px] text-center\">{formatCurrency(daily.metaSpend)}</TableCell>\r\n                                                        <TableCell className=\" w-[120px] text-center\">{formatCurrency(daily.metaSales)}</TableCell>\r\n                                                        <TableCell className=\" w-[120px] text-center\">{formatPercentage(daily.metaROAS)}</TableCell>\r\n                                                        <TableCell className=\" w-[120px] text-center\">{formatCurrency(daily.googleSpend)}</TableCell>\r\n                                                        <TableCell className=\" w-[120px] text-center\">{formatCurrency(daily.googleSales)}</TableCell>\r\n                                                        <TableCell className=\" w-[120px] text-center\">{formatPercentage(daily.googleROAS)}</TableCell>\r\n                                                        <TableCell className=\" w-[120px] text-center\">{formatCurrency(daily.totalSpend)}</TableCell>\r\n                                                        <TableCell className=\" w-[120px] text-center\">{formatPercentage(daily.grossROI)}</TableCell>\r\n                                                        <TableCell className=\" w-[120px] text-center\">{formatCurrency(daily.shopifySales)}</TableCell>\r\n                                                        <TableCell className=\" w-[120px] text-center\">{formatPercentage(daily.netROI)}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </>\r\n                                        )\r\n                                    })}\r\n                                </TableBody>\r\n                                </Table>\r\n                                </div>\r\n                     \r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { useState, useCallback, useEffect } from \"react\"\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport { BriefcaseBusiness, ChevronDown, Columns, RefreshCw } from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport CollapsibleSidebar from \"@/Dashboard/CollapsibleSidebar\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport ReportTable from \"@/components/dashboard_component/ReportTable\"\r\n\r\ninterface CityMetric {\r\n  \"city\": string;\r\n  \"country\": string;\r\n  \"region\": string;\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\nexport default function CitySessionPage() {\r\n  const [date, setDate] = useState<DateRange | undefined>(undefined);\r\n  const now = new Date();\r\n  const [data, setData] = useState<CityMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n  const { brandId } = useParams();\r\n  const navigate = useNavigate();\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState(50)\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n      \r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchMetrics = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n      const analyticsResponse = await axios.post(`${baseURL}/api/analytics/report/${brandId}`, {\r\n        startDate: startDate,\r\n        endDate: endDate\r\n      }, {\r\n        withCredentials: true\r\n      });\r\n\r\n      const fetchedData = analyticsResponse.data[1].data || [];\r\n\r\n      setData(fetchedData);\r\n      setLastUpdated(new Date());\r\n      if (fetchedData.length > 0) {\r\n        setSelectedColumns(Object.keys(fetchedData[0]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [navigate, startDate, endDate, brandId]);\r\n\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n  }, [fetchMetrics]);\r\n\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n    const intervalId = setInterval(fetchMetrics, 5 * 60 * 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchMetrics]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchMetrics();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden\">\r\n        <header className=\"bg-white border-b border-gray-200 px-4 py-4 md:px-6\">\r\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <BriefcaseBusiness className=\"h-6 w-6 text-gray-500\" />\r\n              <h1 className=\"text-2xl font-bold\">City Metrics Overview</h1>\r\n            </div>\r\n            <div className=\"flex flex-col lg:flex-row lg:space-x-3 items-center\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <DatePickerWithRange\r\n                  date={date}\r\n                  setDate={setDate}\r\n                  defaultDate={{\r\n                    from: new Date(now.getFullYear(), now.getMonth(), 1),\r\n                    to: now,\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <div className=\"m-6\">\r\n          <div className=\"flex flex-col md:flex-row gap-5 justify-start items-start md:justify-between md:items-center mb-6\">\r\n            <h1 className=\"text-lg font-semibold\">Key performance indicators for your online store</h1>\r\n            <div className=\"flex flex-col items-start gap-3 md:flex-row md:items-center md:space-x-2\">\r\n              <div className=\"lg:flex items-center hidden\">\r\n                {lastUpdated && (\r\n                  <span className=\"text-sm text-gray-600 mr-4\">\r\n                    Last updated: {lastUpdated.toLocaleTimeString()}\r\n                  </span>\r\n                )}\r\n                <Button onClick={handleManualRefresh} disabled={isLoading} className=\"flex items-center\">\r\n                  <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n                </Button>\r\n              </div>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" className=\"flex items-center gap-2\">\r\n                    <Columns className=\"h-4 w-4\" />\r\n                    <span>Select Columns</span>\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent className=\"w-44\">\r\n                  {allColumns.map((column) => (\r\n                    <div key={column} className=\"flex items-center space-x-2 p-2\">\r\n                      <Checkbox\r\n                        id={`column-${column}`}\r\n                        checked={selectedColumns.includes(column)}\r\n                        onCheckedChange={() => toggleColumnSelection(column)}\r\n                      />\r\n                      <label\r\n                        htmlFor={`column-${column}`}\r\n                        className=\"text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n                      >\r\n                        {column}\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" className=\"w-[180px]\">\r\n                    Show {rowsToShow === 1000000 ? 'all' : rowsToShow} rows\r\n                    <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow(50)}>Show 50 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow(100)}>Show 100 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow(1000000)}>Show all rows</DropdownMenuItem>\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"relative border rounded-md overflow-hidden\" style={{ maxHeight: 'calc(100vh - 183px)' }}>\r\n            <div className=\"overflow-auto h-full\">\r\n            {isLoading ? (\r\n                <TableSkeleton />\r\n              ) : (\r\n                <ReportTable columns={sortedSelectedColumns} data={data} rowsToShow={rowsToShow} />)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useState, useCallback, useEffect } from \"react\"\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport { BriefcaseBusiness, ChevronDown, Columns, RefreshCw } from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport CollapsibleSidebar from \"@/Dashboard/CollapsibleSidebar\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport ReportTable from \"@/components/dashboard_component/ReportTable\"\r\n\r\ninterface ChannelMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\" : string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\":string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\nconst ChannelSessionPage: React.FC = () => {\r\n  const [date, setDate] = useState<DateRange | undefined>(undefined);\r\n  const now = new Date();\r\n  const [data, setData] = useState<ChannelMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n  const { brandId } = useParams();\r\n  const navigate = useNavigate();\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState(50)\r\n\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n      \r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchMetrics = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n      const analyticsResponse = await axios.post(`${baseURL}/api/analytics/report/${brandId}`, {\r\n        startDate: startDate,\r\n        endDate: endDate\r\n      }, {\r\n        withCredentials: true\r\n      });\r\n\r\n      const fetchedData = analyticsResponse.data[2].data || [];\r\n\r\n      setData(fetchedData);\r\n      setLastUpdated(new Date());\r\n      if (fetchedData.length > 0) {\r\n        setSelectedColumns(Object.keys(fetchedData[0]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [navigate, startDate, endDate, brandId]);\r\n\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n  }, [fetchMetrics]);\r\n\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n    const intervalId = setInterval(fetchMetrics, 5 * 60 * 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchMetrics]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchMetrics();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden\">\r\n        <header className=\"bg-white border-b border-gray-200 px-4 py-4 md:px-6\">\r\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <BriefcaseBusiness className=\"h-6 w-6 text-gray-500\" />\r\n              <h1 className=\"text-2xl font-bold\">Channel Metrics Overview</h1>\r\n            </div>\r\n            <div className=\"flex flex-col lg:flex-row lg:space-x-3 items-center\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <DatePickerWithRange\r\n                  date={date}\r\n                  setDate={setDate}\r\n                  defaultDate={{\r\n                    from: new Date(now.getFullYear(), now.getMonth(), 1),\r\n                    to: now,\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <div className=\"m-6\">\r\n          <div className=\"flex flex-col md:flex-row gap-5 justify-start items-start md:justify-between md:items-center mb-6\">\r\n            <h1 className=\"text-lg font-semibold\">Key performance indicators for your online store</h1>\r\n            <div className=\"flex flex-col items-start gap-3 md:flex-row md:items-center md:space-x-2\">\r\n              <div className=\"lg:flex items-center hidden\">\r\n                {lastUpdated && (\r\n                  <span className=\"text-sm text-gray-600 mr-4\">\r\n                    Last updated: {lastUpdated.toLocaleTimeString()}\r\n                  </span>\r\n                )}\r\n                <Button onClick={handleManualRefresh} disabled={isLoading} className=\"flex items-center\">\r\n                  <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n                </Button>\r\n              </div>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" className=\"flex items-center gap-2\">\r\n                    <Columns className=\"h-4 w-4\" />\r\n                    <span>Select Columns</span>\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent className=\"w-44\">\r\n                  {allColumns.map((column) => (\r\n                    <div key={column} className=\"flex items-center space-x-2 p-2\">\r\n                      <Checkbox\r\n                        id={`column-${column}`}\r\n                        checked={selectedColumns.includes(column)}\r\n                        onCheckedChange={() => toggleColumnSelection(column)}\r\n                      />\r\n                      <label\r\n                        htmlFor={`column-${column}`}\r\n                        className=\"text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n                      >\r\n                        {column}\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" className=\"w-[180px]\">\r\n                    Show {rowsToShow === 1000000 ? 'all' : rowsToShow} rows\r\n                    <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow(50)}>Show 50 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow(100)}>Show 100 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow(1000000)}>Show all rows</DropdownMenuItem>\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"relative border rounded-md overflow-hidden\" style={{ maxHeight: 'calc(100vh - 183px)' }}>\r\n            <div className=\"overflow-auto h-full\">\r\n            {isLoading ? (\r\n                <TableSkeleton />\r\n              ) : (\r\n                <ReportTable columns={sortedSelectedColumns} data={data} rowsToShow={rowsToShow} />)}\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChannelSessionPage;","import { useState, useCallback, useEffect } from \"react\"\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport { BriefcaseBusiness, ChevronDown, Columns, RefreshCw } from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\n\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport CollapsibleSidebar from \"@/Dashboard/CollapsibleSidebar\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport ReportTable from \"@/components/dashboard_component/ReportTable\"\r\n\r\ninterface PageMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\" : string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\":string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\nconst LandingPageSession: React.FC = () => {\r\n  const [date, setDate] = useState<DateRange | undefined>(undefined);\r\n  const now = new Date();\r\n  const [data, setData] = useState<PageMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n  const { brandId } = useParams();\r\n  const navigate = useNavigate();\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState(50)\r\n  \r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchMetrics = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n      const analyticsResponse = await axios.post(`${baseURL}/api/analytics/report/${brandId}`, {\r\n        startDate: startDate,\r\n        endDate: endDate\r\n      }, {\r\n        withCredentials: true\r\n      });\r\n\r\n      const fetchedData = analyticsResponse.data[0].data || []\r\n\r\n      setData(fetchedData);\r\n      setLastUpdated(new Date());\r\n      if (fetchedData.length > 0) {\r\n        setSelectedColumns(Object.keys(fetchedData[0]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [navigate, startDate, endDate, brandId]);\r\n\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n  }, [fetchMetrics]);\r\n\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n    const intervalId = setInterval(fetchMetrics, 5 * 60 * 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchMetrics]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchMetrics();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden\">\r\n        <header className=\"bg-white border-b border-gray-200 px-4 py-4 md:px-6\">\r\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <BriefcaseBusiness className=\"h-6 w-6 text-gray-500\" />\r\n              <h1 className=\"text-2xl font-bold\">Landing Page Metrics Overview</h1>\r\n            </div>\r\n            <div className=\"flex flex-col lg:flex-row lg:space-x-3 items-center\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <DatePickerWithRange\r\n                  date={date}\r\n                  setDate={setDate}\r\n                  defaultDate={{\r\n                    from: new Date(now.getFullYear(), now.getMonth(), 1),\r\n                    to: now,\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <div className=\"m-6\">\r\n          <div className=\"flex flex-col md:flex-row gap-5 justify-start items-start md:justify-between md:items-center mb-6\">\r\n            <h1 className=\"text-lg font-semibold\">Key performance indicators for your online store</h1>\r\n            <div className=\"flex flex-col items-start gap-3 md:flex-row md:items-center md:space-x-2\">\r\n              <div className=\"lg:flex items-center hidden\">\r\n                {lastUpdated && (\r\n                  <span className=\"text-sm text-gray-600 mr-4\">\r\n                    Last updated: {lastUpdated.toLocaleTimeString()}\r\n                  </span>\r\n                )}\r\n                <Button onClick={handleManualRefresh} disabled={isLoading} className=\"flex items-center\">\r\n                  <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n                </Button>\r\n              </div>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" className=\"flex items-center gap-2\">\r\n                    <Columns className=\"h-4 w-4\" />\r\n                    <span>Select Columns</span>\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent className=\"w-44\">\r\n                  {allColumns.map((column) => (\r\n                    <div key={column} className=\"flex items-center space-x-2 p-2\">\r\n                      <Checkbox\r\n                        id={`column-${column}`}\r\n                        checked={selectedColumns.includes(column)}\r\n                        onCheckedChange={() => toggleColumnSelection(column)}\r\n                      />\r\n                      <label\r\n                        htmlFor={`column-${column}`}\r\n                        className=\"text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n                      >\r\n                        {column}\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" className=\"w-[180px]\">\r\n                    Show {rowsToShow === 1000000 ? 'all' : rowsToShow} rows\r\n                    <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow(50)}>Show 50 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow(100)}>Show 100 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow(1000000)}>Show all rows</DropdownMenuItem>\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"relative border rounded-md overflow-hidden\" style={{ maxHeight: 'calc(100vh - 183px)' }}>\r\n            <div className=\"overflow-auto h-full\">\r\n            {isLoading ? (\r\n                <TableSkeleton />\r\n              ) : (\r\n                <ReportTable columns={sortedSelectedColumns} data={data} rowsToShow={rowsToShow} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LandingPageSession;","\r\nimport { UserProvider } from './context/UserContext';\r\nimport { BrowserRouter as Router,Route,Routes } from 'react-router-dom';\r\nimport AuthForm from \"./Auth/AuthForm.tsx\";\r\nimport { Toaster } from \"@/components/ui/toaster\"\r\nimport BusinessDashboard from './Dashboard/BusinessDashboard.tsx';\r\nimport AnalyticsDashboard from './AnalyticsDashboard/AnalyticsDashboard.tsx';\r\nimport GeneralDashboard from './GeneralisedDashboard/GeneralDashboard.tsx';\r\nimport { BrandProvider } from './context/BrandContext.tsx';\r\nimport EcommerceMetricsPage from './EcommerceMetrics/EcommerceMetricsPage.tsx';\r\nimport { ExcelMetricsPage } from './MonthlyAdMetrics/ExcelMetrics.tsx';\r\nimport CitySessionPage from './CitySessionPage/CitySessionPage.tsx';\r\nimport ChannelSessionPage from './RefferingChannelPage/RefferingChannelPage.tsx';\r\nimport LandingPageSession from './LandingPageSession/LandingPageSession.tsx';\r\n\r\nfunction App() {\r\n  return (\r\n    <UserProvider>\r\n      <BrandProvider>\r\n      <Router>\r\n        <Toaster />\r\n        <Routes>\r\n          <Route path=\"/\" element={<AuthForm />} />\r\n          <Route path=\"/dashboard\" element={<GeneralDashboard />} />\r\n          <Route path=\"/business-dashboard/:brandId\" element={<BusinessDashboard />} />\r\n          <Route path=\"/analytics-dashboard/:brandId\" element={<AnalyticsDashboard/>} />\r\n          <Route path =\"/ecommerce-metrics/:brandId\" element={<EcommerceMetricsPage />} />\r\n          <Route path =\"/ad-metrics/:brandId\" element={<ExcelMetricsPage />} />\r\n          <Route path =\"/city-metrics/:brandId\" element={<CitySessionPage />} />\r\n          <Route path ='/channel-metrics/:brandId' element={<ChannelSessionPage />} />\r\n          <Route path ='/page-metrics/:brandId' element={<LandingPageSession />} />\r\n        </Routes>\r\n      </Router>\r\n      </BrandProvider>\r\n    </UserProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"names":["UserContext","createContext","UserProvider","children","user","setUser","useState","jsx","useUser","context","useContext","cn","inputs","twMerge","clsx","Input","React.forwardRef","className","type","props","ref","buttonVariants","cva","Button","variant","size","asChild","Comp","Slot","labelVariants","Label","LabelPrimitive.Root","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","t","toast","listeners","memoryState","listener","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","AuthForm","isLogin","setIsLogin","username","setUsername","email","setEmail","password","setPassword","showPassword","setShowPassword","navigate","useNavigate","errors","setErrors","toggleForm","validateForm","newErrors","isValid","handleSubmit","e","response","baseURL","axios","error","jsxs","motion","EyeOffIcon","EyeIcon","ToastProvider","ToastPrimitives.Provider","ToastViewport","ToastPrimitives.Viewport","toastVariants","Toast","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","Cross2Icon","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","Toaster","toasts","title","description","BrandContext","BrandProvider","selectedBrandId","setSelectedBrandId","brands","setBrands","resetBrand","useBrand","TooltipProvider","TooltipPrimitive.Provider","Tooltip","TooltipPrimitive.Root","TooltipTrigger","TooltipPrimitive.Trigger","TooltipContent","sideOffset","TooltipPrimitive.Portal","TooltipPrimitive.Content","Logo","ScrollArea","ScrollAreaPrimitive.Root","ScrollAreaPrimitive.Viewport","ScrollBar","ScrollAreaPrimitive.Corner","orientation","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb","CollapsibleSidebar","isExpanded","setIsExpanded","location","useLocation","sidebarRef","useRef","toggleSidebar","prev","handleLogout","useEffect","pathParts","reports","CalendarRange","ShoppingCart","MapPin","PanelsTopLeft","Link2","dashboards","BarChart","LineChart","ChevronLeft","ChevronRight","SidebarItem","Store","_a","b","ChevronUp","ChevronDown","brand","SidebarChild","dashboard","report","UserProfile","LogoutButton","icon","text","openIcon","closeIcon","isSelected","tooltipContent","onClick","isOpen","setIsOpen","handleToggle","content","React","child","path","disabled","baseClasses","NavLink","User2Icon","LogOut","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","COLORS","ReferringChannelChart","rawData","aggregatedData","acc","entry","Channel","Visitors","topChannels","a","renderLegend","ResponsiveContainer","PieChart","Pie","_","Cell","getTopCities","data","item","getBarColor","value","max","blueColors","TopCitiesBarChart","cityData","topCities","maxRate","CartesianGrid","XAxis","YAxis","Legend","Bar","visitors","getTopLandingPages","TopPagesPieChart","PageData","topPages","isMobileOrTablet","setIsMobileOrTablet","handleResize","name","Calendar","classNames","showOutsideDays","DayPicker","ChevronLeftIcon","ChevronRightIcon","Popover","PopoverPrimitive.Root","PopoverTrigger","PopoverPrimitive.Trigger","PopoverContent","align","PopoverPrimitive.Portal","PopoverPrimitive.Content","DatePickerWithRange","date","setDate","defaultDate","resetToFirstPage","tempDate","setTempDate","handleDateChange","newDate","handleUpdate","setPresetRange","from","to","formatDateRange","range","format","CalendarIcon","subDays","subMonths","formatData","CustomTooltip","active","payload","colorPalette","EcommerceMetrics","curr","AreaChart","Area","color","Dashboard","brandId","useParams","setData","isLoading","setIsLoading","lastUpdated","setLastUpdated","startDate","endDate","now","fetchData","useCallback","url","params","shopifyResponse","analyticsResponse","DailyAnalyticsResponse","combinedData","intervalId","handleManualRefresh","session","totalConversionRate","monthlyReturnRate","returningCustomerRateReport","returnRate","rate","preparedReferringData","referringChannelData","preparedCityData","preparedPageData","pageData","Fragment","BriefcaseBusiness","RefreshCw","DollarSign","PercentIcon","TrendingUp","Link","FileChartColumn","TopCitiesLineChart","BusinessDashboard","Skeleton","MetricCardSkeleton","MetricCard","label","HelpCircle","AdAccountMetricsCard","metrics","errorMessage","metric","DropdownMenu","DropdownMenuPrimitive.Root","DropdownMenuTrigger","DropdownMenuPrimitive.Trigger","DropdownMenuRadioGroup","DropdownMenuPrimitive.RadioGroup","DropdownMenuSubTrigger","inset","DropdownMenuPrimitive.SubTrigger","DropdownMenuSubContent","DropdownMenuPrimitive.SubContent","DropdownMenuContent","DropdownMenuPrimitive.Portal","DropdownMenuPrimitive.Content","DropdownMenuItem","DropdownMenuPrimitive.Item","DropdownMenuCheckboxItem","checked","DropdownMenuPrimitive.CheckboxItem","DropdownMenuPrimitive.ItemIndicator","CheckIcon","DropdownMenuRadioItem","DropdownMenuPrimitive.RadioItem","DotFilledIcon","DropdownMenuLabel","DropdownMenuPrimitive.Label","DropdownMenuSeparator","DropdownMenuPrimitive.Separator","fbAdAccountsMetrics","setFbAdAccountsMetrics","aggregatedMetrics","setAggregatedMetrics","googleAdMetrics","setGoogleAdMetrics","dataSource","setDataSource","handleDataSourceChange","newSource","fetchAdData","fbData","googleData","fbError","googleError","calculateAggregatedMetrics","totalSpent","totalRevenue","totalPurchases","totalClicks","totalImpressions","account","_b","googleMetrics","Blend","Filter","accountMetrics","fbmetrics","AnalyticsDashboard","LandingPage","Briefcase","FileSpreadsheet","Bell","Settings","GeneralDashboard","Checkbox","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","Table","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableCaption","TableSkeleton","rowIndex","cellIndex","ReportTable","columns","rowsToShow","parsePercentage","averageValues","sum","getConditionalTextColor","average","getConditionalIcon","ArrowDown","ArrowUp","parsedData","maxSessions","getBackgroundColor","sessions","intensity","getTextColor","column","cellValue","isComparisonColumn","EcommerceMetricsPage","selectedColumns","setSelectedColumns","setRowsToShow","toggleColumnSelection","col","fetchMetrics","fetchedData","allColumns","sortedSelectedColumns","Columns","TooltipHeader","tooltip","ExcelMetricsPage","metricsData","setMetricsData","brandName","setBrandName","loading","setLoading","setError","expandedMonths","setExpandedMonths","queryParams","err","toggleMonth","monthYear","m","formatCurrency","formatPercentage","processedData","useMemo","monthData","processedDailyMetrics","daily","metaSales","googleSales","totalSales","SearchX","CitySessionPage","newColumns","ChannelSessionPage","LandingPageSession","App","Router","Routes","Route","createRoot","StrictMode"],"mappings":"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"}