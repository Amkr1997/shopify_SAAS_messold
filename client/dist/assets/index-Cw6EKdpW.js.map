{"version":3,"file":"index-Cw6EKdpW.js","sources":["../../src/context/UserContext.tsx","../../src/lib/utils.ts","../../src/components/ui/input.tsx","../../src/components/ui/button.tsx","../../src/components/ui/label.tsx","../../src/hooks/use-toast.ts","../../src/Auth/AuthForm.tsx","../../src/components/ui/toast.tsx","../../src/components/ui/toaster.tsx","../../src/context/BrandContext.tsx","../../src/components/ui/tooltip.tsx","../../src/assets/messold-icon.png","../../src/components/ui/scroll-area.tsx","../../src/pages/Dashboard/CollapsibleSidebar.tsx","../../src/components/ui/card.tsx","../../src/components/dashboard_component/ReferringChannelChart.tsx","../../src/components/dashboard_component/CityChart.tsx","../../src/components/dashboard_component/LandingPageChart.tsx","../../src/components/ui/calendar.tsx","../../src/components/ui/popover.tsx","../../src/components/dashboard_component/DatePickerWithRange.tsx","../../src/components/dashboard_component/EcommerceChart.tsx","../../src/pages/Dashboard/dashboard.tsx","../../src/pages/Dashboard/BusinessDashboard.tsx","../../src/components/ui/skeleton.tsx","../../src/pages/AnalyticsDashboard/AdAccountsMetricsCard.tsx","../../src/components/ui/dropdown-menu.tsx","../../src/pages/AnalyticsDashboard/dashboard.tsx","../../src/pages/AnalyticsDashboard/AnalyticsDashboard.tsx","../../src/pages/GeneralisedDashboard/dashboard.tsx","../../src/components/ui/dialog.tsx","../../src/pages/GeneralisedDashboard/components/ShopifyModalContent.tsx","../../src/components/ui/table.tsx","../../src/components/dashboard_component/TableSkeleton.tsx","../../src/pages/CampaignMetricsPage.tsx","../../src/pages/GeneralisedDashboard/components/OtherPlatformModalContent.tsx","../../src/pages/GeneralisedDashboard/components/BrandForm.tsx","../../src/pages/GeneralisedDashboard/components/AnalyticsCard.tsx","../../src/pages/GeneralisedDashboard/BrandSetUpDashboard.tsx","../../src/pages/GeneralisedDashboard/GeneralDashboard.tsx","../../src/components/ui/checkbox.tsx","../../src/components/dashboard_component/ReportTable.tsx","../../src/components/ui/select.tsx","../../src/components/dashboard_component/FilterReport.tsx","../../src/pages/EcommerceMetrics/EcommerceMetricsPage.tsx","../../src/pages/MonthlyAdMetrics/ExcelMetrics.tsx","../../src/pages/CitySessionPage/CitySessionPage.tsx","../../src/pages/RefferingChannelPage/RefferingChannelPage.tsx","../../src/pages/LandingPageSession/LandingPageSession.tsx","../../src/pages/BrandPerformanceDashboard/Dashboard.tsx","../../src/pages/BrandPerformanceDashboard/PerformanceDashboard.tsx","../../src/pages/SegmentDashboard/component/ProductTab.tsx","../../src/pages/SegmentDashboard/component/SearchTermTable.tsx","../../src/pages/SegmentDashboard/component/AgeGenderMetrics.tsx","../../src/pages/SegmentDashboard/Dashboard.tsx","../../src/pages/SegmentDashboard/SegmentDashboard.tsx","../../src/Auth/OauthSucces.tsx","../../src/pages/AgeReportPage/AgeReportPage.tsx","../../src/pages/GenderReportPage/GenderReportPage.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n  brands: [];\r\n}\r\n\r\ninterface UserContextType {\r\n  user: User | null;\r\n  setUser: (user: User | null) => void;\r\n}\r\n\r\nconst UserContext = createContext<UserContextType | undefined>(undefined);\r\n\r\nexport const UserProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  // Initialize user state from localStorage\r\n  const [user, setUser] = useState<User | null>(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n\r\n  // Sync localStorage whenever user data changes\r\n  useEffect(() => {\r\n    if (user) {\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n    } else {\r\n      localStorage.removeItem('user');\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = () => {\r\n  const context = useContext(UserContext);\r\n  if (context === undefined) {\r\n    throw new Error('useUser must be used within a UserProvider');\r\n  }\r\n  return context;\r\n};\r\n","import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Eye, EyeOff, Mail, Lock, User } from 'lucide-react'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Label } from '@/components/ui/label'\r\nimport { useToast } from \"../hooks/use-toast\"\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { useUser } from '../context/UserContext';\r\n\r\nexport default function AuthForm() {\r\n  const [isLogin, setIsLogin] = useState(true)\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const { toast } = useToast()\r\n  const navigate = useNavigate()\r\n  const [errors, setErrors] = useState({ username: '', email: '', password: '' })\r\n  const { user,setUser } = useUser();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      navigate('/dashboard');\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  const toggleForm = () => setIsLogin(!isLogin)\r\n\r\n  const validateForm = () => {\r\n    const newErrors = { username: '', email: '', password: '' }\r\n    let isValid = true\r\n\r\n    if (!isLogin && !username.trim()) {\r\n      newErrors.username = 'Username is required'\r\n      isValid = false\r\n    }\r\n\r\n    if (!email.trim()) {\r\n      newErrors.email = 'Email is required'\r\n      isValid = false\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      newErrors.email = 'Email is invalid'\r\n      isValid = false\r\n    }\r\n\r\n    if (!password) {\r\n      newErrors.password = 'Password is required'\r\n      isValid = false\r\n    } else if (password.length < 8) {\r\n      newErrors.password = 'Password must be at least 8 characters'\r\n      isValid = false\r\n    }\r\n\r\n    setErrors(newErrors)\r\n    return isValid\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let response;\r\n      // Determine the base URL based on the environment\r\n      const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n      if (isLogin) {\r\n        response = await axios.post(\r\n          `${baseURL}/api/auth/login/normal`,\r\n          { email, password },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.data.success) {\r\n          // Set the user in the context\r\n          setUser(response.data.user);\r\n          console.log('User set in context:', response.data.user);\r\n\r\n          toast({\r\n            title: 'Login successful!',\r\n            description: 'Welcome! Redirecting to your dashboard.',\r\n            variant: 'default',\r\n          });\r\n          navigate('/dashboard');\r\n          console.log(baseURL);\r\n        }\r\n      } else {\r\n        response = await axios.post(\r\n          `${baseURL}/api/auth/signup`,\r\n          { username, email, password },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.data.success) {\r\n          toast({\r\n            title: 'Registration successful!',\r\n            description: 'Please log in with your new account.',\r\n            variant: 'default',\r\n          });\r\n          setIsLogin(true);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response) {\r\n        toast({\r\n          title: 'Error',\r\n          description: error.response.data.message || 'An error occurred',\r\n          variant: 'destructive',\r\n        });\r\n      } else {\r\n        toast({\r\n          title: 'Unexpected Error',\r\n          description: 'An unexpected error occurred',\r\n          variant: 'destructive',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n      const response = await axios.get(`${baseURL}/api/auth/google?context=userLogin`);\r\n      const { authUrl } = response.data;\r\n\r\n      window.location.href = authUrl;\r\n    } catch (error) {\r\n      console.error('Error getting Google Auth URL:', error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"hidden md:flex md:w-1/2 bg-cover bg-center\" style={{backgroundImage: \"url('https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2015&q=80')\"}}>\r\n        <div className=\"flex items-center justify-center w-full h-full bg-black bg-opacity-40\">\r\n          <div className=\"text-white text-center p-8\">\r\n            <h3 className=\"text-4xl font-bold mb-6\">Unified Marketing Analytics</h3>\r\n            <p className=\"text-xl\">View your Shopify, Facebook, and Google Ads data all in one place.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full md:w-1/2 flex items-center justify-center bg-gradient-to-br from-blue-50 to-white p-8\">\r\n        <div className=\"w-full max-w-md\">\r\n          <h2 className=\"text-3xl font-bold mb-3\">\r\n            {isLogin ? 'Welcome Back' : 'Create an Account'}\r\n          </h2>\r\n          <p className=\"mb-8\">\r\n            {isLogin\r\n              ? 'Sign in to access your marketing dashboard'\r\n              : 'Join us to view all your marketing data in one place'}\r\n          </p>\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            {!isLogin && (\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"username\" >Username</Label>\r\n                <div className=\"relative\">\r\n                  <User className=\"absolute left-3 top-3 h-5 w-5\" />\r\n                  <Input\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    placeholder=\"Enter your username\"\r\n                    required={!isLogin}\r\n                    className=\"pl-10 border-blue-300 focus:border-blue-500 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                {errors.username && <p className=\"text-red-500 text-sm\">{errors.username}</p>}\r\n              </div>\r\n            )}\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"email\" >Email</Label>\r\n              <div className=\"relative\">\r\n                <Mail className=\"absolute left-3 top-3 h-5 w-5\" />\r\n                <Input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  placeholder=\"Enter your email\"\r\n                  required\r\n                  className=\"pl-10 border-blue-300 focus:border-blue-500 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n              {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"password\">Password</Label>\r\n              <div className=\"relative\">\r\n                <Lock className=\"absolute left-3 top-3 h-5 w-5\" />\r\n                <Input\r\n                  id=\"password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  placeholder=\"Enter your password\"\r\n                  required\r\n                  className=\"pl-10 border-blue-300 focus:border-blue-500 focus:ring-blue-500\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  className=\"absolute right-3 top-3 \"\r\n                >\r\n                  {showPassword ? <Eye className=\"h-5 w-5\" /> : <EyeOff className=\"h-5 w-5\" />}\r\n                </button>\r\n              </div>\r\n              {errors.password && <p className=\"text-red-500 text-sm\">{errors.password}</p>}\r\n            </div>\r\n            <Button type=\"submit\" className=\"w-full text-white\">\r\n              {isLogin ? 'Sign In' : 'Sign Up'}\r\n            </Button>\r\n          </form>\r\n          <div className=\"mt-6\">\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"w-full flex items-center justify-center space-x-2\"\r\n              onClick={handleGoogleLogin}\r\n            >\r\n              <FcGoogle className=\"h-5 w-5\" />\r\n              <span>Continue with Google</span>\r\n            </Button>\r\n          </div>\r\n          <p className=\"mt-6 text-center text-sm\">\r\n            {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\r\n            <button onClick={toggleForm} className=\"font-semibold hover:underline\">\r\n              {isLogin ? 'Sign Up' : 'Sign In'}\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import * as React from \"react\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <Cross2Icon className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold [&+div]:text-xs\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ninterface Brand {\r\n  _id: string;\r\n  name: string;\r\n  brandId: string;\r\n  fbAdAccounts?: [];\r\n  googleAdAccount?: string;\r\n}\r\n\r\ninterface BrandContextType {\r\n  selectedBrandId: string | null;\r\n  setSelectedBrandId: (id: string | null) => void;\r\n  resetBrand: () => void;\r\n  brands: Brand[];\r\n  setBrands: (brands: Brand[]) => void;\r\n}\r\n\r\nconst BrandContext = createContext<BrandContextType | undefined>(undefined);\r\n\r\nexport const BrandProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [selectedBrandId, setSelectedBrandId] = useState<string | null>(null);\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n\r\n  // Load brands from local storage when the component mounts\r\n  useEffect(() => {\r\n    const storedBrands = localStorage.getItem('brands');\r\n    if (storedBrands) {\r\n      setBrands(JSON.parse(storedBrands));\r\n    }\r\n  }, []);\r\n\r\n  // Whenever brands state changes, save them to local storage\r\n  useEffect(() => {\r\n    if (brands.length > 0) {\r\n      localStorage.setItem('brands', JSON.stringify(brands));\r\n    }\r\n  }, [brands]);\r\n\r\n  const resetBrand = () => {\r\n    setSelectedBrandId(null);\r\n  };\r\n\r\n  return (\r\n    <BrandContext.Provider value={{ selectedBrandId, setSelectedBrandId, resetBrand, brands, setBrands }}>\r\n      {children}\r\n    </BrandContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useBrand = () => {\r\n  const context = useContext(BrandContext);\r\n  if (context === undefined) {\r\n    throw new Error('useBrand must be used within a BrandProvider');\r\n  }\r\n  return context;\r\n};\r\n","import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Portal>\n    <TooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </TooltipPrimitive.Portal>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","export default \"__VITE_ASSET__BTkxAs8a__\"","import * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { ChevronUp, ChevronDown,ChevronLeft,ChevronRight, Compass, Link2, LogOut, User2Icon, Store,CircleDot, BarChart, CalendarRange, ShoppingCart, MapPin, PanelsTopLeft, LineChart, CalendarFold } from 'lucide-react';\r\nimport React from 'react';\r\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\r\nimport { useUser } from '../../context/UserContext';\r\nimport { useBrand } from '@/context/BrandContext';\r\nimport axios from 'axios';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\nimport Logo from \"@/assets/messold-icon.png\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { MdCampaign } from \"react-icons/md\";\r\n\r\nexport interface Brand {\r\n    _id: string;\r\n    name: string;\r\n    fbAdAccounts?: string[];\r\n    googleAdAccount?: string;\r\n}\r\nexport default function CollapsibleSidebar() {\r\n    const [isExpanded, setIsExpanded] = useState(true);\r\n    const { selectedBrandId, setSelectedBrandId, brands, setBrands } = useBrand();\r\n    const { user, setUser } = useUser();  \r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const sidebarRef = useRef<HTMLDivElement>(null);\r\n    const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n\r\n    // Fetch brands\r\n    useEffect(() => {\r\n        const fetchBrands = async () => {\r\n            try {\r\n                const response = await axios.get(`${baseURL}/api/brands/all`, { withCredentials: true });\r\n                const fetchedBrands = response.data;\r\n                setBrands(fetchedBrands);\r\n    \r\n                // Only set the default brand if no brand is currently selected\r\n                if (!selectedBrandId && fetchedBrands.length > 0) {\r\n                    setSelectedBrandId(fetchedBrands[0]._id);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching brands:', error);\r\n            }\r\n        };\r\n        fetchBrands();\r\n    }, [setBrands, setSelectedBrandId, baseURL, selectedBrandId]);\r\n    \r\n\r\n    const toggleSidebar = () => setIsExpanded(prev => !prev);\r\n    \r\n    const handleLogout = async () => {\r\n        try {\r\n            const response = await axios.post(`${baseURL}/api/auth/logout`, {}, { withCredentials: true });\r\n            if (response.status === 200) {\r\n                setUser(null);\r\n                localStorage.removeItem('user');\r\n                setSelectedBrandId(null);\r\n                navigate('/');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error logging out:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const pathParts = location.pathname.split('/');\r\n        if (pathParts[2]) {\r\n            setSelectedBrandId(pathParts[2]);\r\n        }\r\n    }, [location.pathname, setSelectedBrandId]);\r\n\r\n    const reports = [\r\n        { name: \"Monthly Ad Metrics Reports\", path: `/ad-metrics/${selectedBrandId}`, icon: <CalendarRange size={20} />, requiresAdsData: false },\r\n        { name: \"Daily E-Commerce Metrics Reports\", path: `/ecommerce-metrics/${selectedBrandId}`, icon: <ShoppingCart size={20} /> },\r\n        { name: \"City based Reports\", path: `/city-metrics/${selectedBrandId}`, icon: <MapPin size={20} /> },\r\n        { name: \"Landing Page based Reports\", path: `/page-metrics/${selectedBrandId}`, icon: <PanelsTopLeft size={20} /> },\r\n        { name: \"Referring Channel based Reports\", path: `/channel-metrics/${selectedBrandId}`, icon: <Link2 size={20} /> },\r\n        { name: \"Age based Reports\", path: `/age-metrics/${selectedBrandId}`, icon: <CalendarFold size={20} />},\r\n        { name: \"Gender based Reports\", path: `/gender-metrics/${selectedBrandId}`, icon: <CircleDot size={20} />}\r\n    ];\r\n\r\n    const dashboards = [\r\n        { name: \"Business Dashboard\", path: `/business-dashboard/${selectedBrandId}`, icon: <BarChart size={20} /> },\r\n        { name: \"Analytics Dashboard\", path: `/analytics-dashboard/${selectedBrandId}`, icon: <LineChart size={20} />},\r\n        { name: \"Campaign Metrics\", path: `/campaign-metrics/${selectedBrandId}`, icon: <MdCampaign  size={20} />},\r\n        { name: \"Segment Scope\", path: `/segment-dashboard/${selectedBrandId}`, icon: <Compass size={20} /> },\r\n    ];\r\n\r\n    const isItemDisabled = (item: any) => {\r\n        if (!selectedBrandId) return true;\r\n        \r\n        const currentBrand = brands.find(b => b._id === selectedBrandId);\r\n        if (\r\n            (item.name === 'Analytics Dashboard' || item.name === 'Campaign Metrics') &&\r\n            (!currentBrand?.fbAdAccounts && !currentBrand?.googleAdAccount)\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <TooltipProvider>\r\n            <div ref={sidebarRef} className={`bg-[rgb(4,16,33)] text-white transition-all duration-500 ease-in-out flex flex-col ${isExpanded ? 'w-64' : 'w-16'}`} style={{ height: '100vh' }}>\r\n                <div className={`flex justify-between items-center p-4 relative`}>\r\n                    <div className=\"flex items-center cursor-pointer\" onClick={() => navigate('/dashboard')}>\r\n                        <img src={Logo} alt=\"Messold Logo\" className=\"h-8 w-8\" />\r\n                        {isExpanded ? <span className=\"text-sm ml-2\">Messold</span> : null}\r\n                    </div>\r\n                    <span \r\n                        className={`transition-all duration-300 ease-in-out bg-[rgb(4,16,33)] rounded-full flex items-center justify-center`} \r\n                        style={{\r\n                            width: '25px',\r\n                            height: '25px',\r\n                            position: 'absolute',\r\n                            right: '-10px',\r\n                            top: '50%',\r\n                            transform: 'translateY(-50%)',\r\n                            zIndex: 50,\r\n                        }}\r\n                        onClick={toggleSidebar}\r\n                    >\r\n                        {isExpanded ? <ChevronLeft size={15} /> : <ChevronRight size={15} />}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className={`flex-1 overflow-y-auto ${isExpanded ? 'h-[calc(100vh-64px)]' : 'h-[calc(100vh-16px)]'}`}>\r\n                    <ScrollArea className=\"h-full\">\r\n                        <nav className=\"mt-3\">\r\n                            <SidebarItem \r\n                                icon={<Store size={24} />} \r\n                                text={selectedBrandId ? brands.find(b => b._id === selectedBrandId)?.name.replace(/_/g, ' ') || \"Unknown Brand\" : \"Your Brands\"} \r\n                                isExpanded={isExpanded} \r\n                                openIcon={<ChevronUp />} \r\n                                closeIcon={<ChevronDown />} \r\n                                isSelected={!!selectedBrandId} \r\n                                tooltipContent=\"Your Brands\"\r\n                            >\r\n                                {brands.map(brand => (\r\n                                    <SidebarChild \r\n                                        key={brand._id} \r\n                                        path={`/business-dashboard/${brand._id}`} \r\n                                        text={brand.name.replace(/_/g, ' ')} \r\n                                        onClick={() => {\r\n                                            setSelectedBrandId(brand._id);\r\n                                            navigate(`/business-dashboard/${brand._id}`);\r\n                                        }} \r\n                                        isSelected={selectedBrandId === brand._id}\r\n                                    />\r\n                                ))} \r\n                            </SidebarItem>\r\n\r\n                            {dashboards.map((dashboard, index) => (\r\n                                <SidebarItem \r\n                                    key={index}\r\n                                    icon={dashboard.icon}\r\n                                    text={dashboard.name}\r\n                                    isExpanded={isExpanded}\r\n                                    isSelected={location.pathname === dashboard.path}\r\n                                    tooltipContent={`${dashboard.name}${isItemDisabled(dashboard) ? ' (No Analytics data available)' : ''}`}\r\n                                    onClick={() => {\r\n                                        if (!isItemDisabled(dashboard)) {\r\n                                            navigate(dashboard.path);\r\n                                        }\r\n                                    }} \r\n                                    disabled={isItemDisabled(dashboard)}\r\n                                />\r\n                            ))}\r\n\r\n                            {reports.map((report, index) => (\r\n                                <SidebarItem \r\n                                    key={index}\r\n                                    icon={report.icon}\r\n                                    text={report.name}\r\n                                    isExpanded={isExpanded}\r\n                                    isSelected={location.pathname === report.path}\r\n                                    tooltipContent={`${report.name}${isItemDisabled(report) ? ' (No campaign data available)' : ''}`}\r\n                                    onClick={() => {\r\n                                        if (!isItemDisabled(report)) {\r\n                                            navigate(report.path);\r\n                                        }\r\n                                    }} \r\n                                    disabled={isItemDisabled(report)}\r\n                                />\r\n                            ))}\r\n                        </nav>\r\n                    </ScrollArea>\r\n                </div>\r\n\r\n                <div className=\"flex flex-col\">\r\n                    <UserProfile isExpanded={isExpanded} user={user} />\r\n                    <LogoutButton handleLogout={handleLogout} isExpanded={isExpanded} />\r\n                </div>\r\n            </div>\r\n        </TooltipProvider>\r\n    );\r\n}\r\n\r\nfunction SidebarItem({ icon, text, isExpanded, openIcon, closeIcon, children, isSelected, tooltipContent, onClick, disabled }: {\r\n    icon?: React.ReactNode; text: string; isExpanded: boolean; openIcon?: React.ReactNode; closeIcon?: React.ReactNode; children?: React.ReactNode; isSelected: boolean; tooltipContent: string; onClick?: () => void; disabled?: boolean;\r\n}) {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleToggle = () => {\r\n        setIsOpen(prev => !prev);\r\n    };\r\n\r\n    const content = (\r\n        <div onClick={disabled ? undefined : onClick || handleToggle} className={`flex items-center px-4 py-2 mb-2 text-gray-300 hover:bg-gray-700 hover:text-white transition-colors duration-200 cursor-pointer ${isSelected ? 'text-white font-semibold relative' : 'text-gray-100'} ${disabled ? 'cursor-not-allowed opacity-50' : ''}`}>\r\n            <span className=\"mr-2\">{icon}</span> \r\n            {isExpanded && <span className=\"text-xs\">{text}</span>} \r\n            {isExpanded && <span className=\"ml-auto\">{isOpen ? openIcon : closeIcon}</span>}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {!isExpanded ? (\r\n                <Tooltip>\r\n                    <TooltipTrigger asChild>{content}</TooltipTrigger>\r\n                    <TooltipContent side=\"right\">\r\n                        <p className={React.Children.count(children) > 0 ? 'mb-4' : ''}>{tooltipContent}</p>\r\n                        {React.Children.map(children, (child) => (\r\n                            <div className=\"relative\">\r\n                                <div className=\"absolute top-0 w-1 h-full bg-gray-500\" />\r\n                                {child}\r\n                            </div>\r\n                        ))}\r\n                    </TooltipContent>\r\n                </Tooltip>\r\n            ) : (\r\n                content\r\n            )}\r\n            {isOpen && isExpanded && (\r\n                <div className=\"relative pl-8\">\r\n                    <div className=\"absolute top-0 w-1 h-full bg-gray-500\" />\r\n                    {React.Children.map(children, (child) => (\r\n                        <div>{child}</div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nfunction SidebarChild({ path, text, onClick, disabled = false, isSelected = false }: {\r\n    path: string; \r\n    text: string; \r\n    onClick?: () => void; \r\n    disabled?: boolean; \r\n    isSelected?: boolean;\r\n    hasAdsData?: boolean;  // Add hasAdsData here\r\n}): JSX.Element {\r\n    const baseClasses = `flex items-center text-xs w-full p-2.5 transition-colors duration-200 ${isSelected ? 'text-white font-semibold relative bg-gray-700' : 'text-gray-100'} ${disabled ? 'cursor-not-allowed text-gray-400' : 'hover:bg-gray-700'}`;\r\n\r\n    return disabled ? (\r\n        <div className={baseClasses}>\r\n            {text}\r\n            {isSelected && <div className=\"absolute left-0 w-1 h-full bg-white\" />}\r\n        </div>\r\n    ) : (\r\n        <NavLink to={path} className={baseClasses} onClick={(e) => {\r\n            if (onClick) {\r\n                e.preventDefault();\r\n                onClick();\r\n            }\r\n        }}>\r\n            {text}\r\n            {isSelected && <div className=\"absolute left-0 top-0 w-1 h-full bg-white\" />}\r\n        </NavLink>\r\n    );\r\n}\r\n\r\n// UserProfile component\r\nfunction UserProfile({ isExpanded, user }: { isExpanded: boolean; user: any }) {\r\n    const userProfileContent = (\r\n        <div className={'flex items-center gap-4 px-4 py-2 mb-2 text-gray-300 hover:bg-gray-700 hover:text-white transition-colors duration-200 cursor-pointer'}>\r\n            <span className=\"text-gray-300 hover:text-white\">\r\n                <User2Icon size={24} />\r\n            </span>\r\n            {isExpanded && <span className=\"text-sm mr-2\">{user?.username || 'user'}</span>}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {!isExpanded ? (\r\n                <Tooltip>\r\n                    <TooltipTrigger asChild>\r\n                        {userProfileContent}\r\n                    </TooltipTrigger>\r\n                    <TooltipContent side=\"right\">\r\n                        <p>{user?.username || 'user'}</p>\r\n                    </TooltipContent>\r\n                </Tooltip>\r\n            ) : (\r\n                userProfileContent\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n// LogoutButton component\r\nfunction LogoutButton({ handleLogout, isExpanded }: { handleLogout: () => void; isExpanded: boolean }) {\r\n    const logoutContent = (\r\n        <div  onClick={handleLogout} className={'flex items-center gap-4 px-4 py-2 mb-2 text-gray-300 hover:bg-gray-700 hover:text-white transition-colors duration-200 cursor-pointer'}>\r\n            <span className=\"text-gray-300 hover:text-white\">\r\n                <LogOut size={24} />\r\n            </span>\r\n            {isExpanded && <span className=\"hidden sm:inline\">Logout</span>}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {!isExpanded ? (\r\n                <Tooltip>\r\n                    <TooltipTrigger asChild>\r\n                        {logoutContent}\r\n                    </TooltipTrigger>\r\n                    <TooltipContent side=\"right\">\r\n                        <p>Logout</p>\r\n                    </TooltipContent>\r\n                </Tooltip>\r\n            ) : (\r\n                logoutContent\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import React from 'react';\r\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\ninterface ReferringChannelsChartProps {\r\n  rawData: { Channel: string; Visitors: string }[]; \r\n}\r\n\r\nconst COLORS = ['#071952', '#088395', '#37B7C3', '#4A628A', '#98DED9', '#FF33CC'];\r\n\r\nexport const ReferringChannelChart: React.FC<ReferringChannelsChartProps> = ({ rawData }) => {\r\n\r\n  if (rawData.length === 0) {\r\n    return (\r\n      <div style={{ textAlign: 'center', marginTop: '50px' }}>\r\n        <p>No data available. Please set up Google Analytics for this data.</p>\r\n      </div>\r\n    );\r\n  }\r\n  // Aggregate visitors by channel\r\n  const aggregatedData = rawData.reduce((acc, entry) => {\r\n    const Channel = entry.Channel;\r\n    const Visitors = parseInt(entry.Visitors, 10); \r\n\r\n    if (!acc[Channel]) {\r\n      acc[Channel] = { Channel, totalVisitors: 0 };\r\n    }\r\n    acc[Channel].totalVisitors += Visitors; \r\n\r\n    return acc;\r\n  }, {} as Record<string, { Channel: string; totalVisitors: number }>);\r\n\r\n  \r\n  const topChannels = Object.values(aggregatedData)\r\n    .sort((a, b) => b.totalVisitors - a.totalVisitors)\r\n    .slice(0, 5); \r\n\r\n  // Custom legend component\r\n  const renderLegend = () => (\r\n    <div className=\"grid grid-cols-3 gap-2 mt-2\">\r\n      {topChannels.map((entry, index) => (\r\n        <div key={`legend-${index}`} className=\"flex items-center\">\r\n          <div\r\n            className=\"w-4 h-4 mr-2\"\r\n            style={{ backgroundColor: COLORS[index % COLORS.length] }}\r\n          />\r\n          <span className=\"text-xs\">{entry.Channel}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n  \r\n\r\n  return (\r\n    <div> \r\n       {renderLegend()}\r\n   \r\n      <ResponsiveContainer width=\"100%\" height={280}> \r\n        <PieChart>\r\n          <Pie\r\n            data={topChannels}\r\n            dataKey=\"totalVisitors\"\r\n            nameKey=\"channel\"\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            outerRadius=\"60%\" \r\n            label\r\n          >\r\n            {topChannels.map((_, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n//  interface for city data\r\ninterface CityData {\r\n  City: string;\r\n  Visitors: string; \r\n}\r\n\r\n\r\nconst getTopCities = (data: CityData[]) => {\r\n  return data\r\n    .map(item => ({ city: item.City, visitors: parseInt(item.Visitors, 10) }))\r\n    .filter(item => !isNaN(item.visitors)) // Filtering out invalid entries\r\n    .sort((a, b) => b.visitors - a.visitors)\r\n    .slice(0, 5);\r\n};\r\n\r\ninterface TopCitiesBarChartProps {\r\n  cityData: CityData[];\r\n}\r\n\r\n\r\nconst getBarColor = (value: number, max: number) => {\r\n  const blueColors = ['#E0F7FA', '#B2EBF2', '#80DEEA', '#4DD0E1', '#00ACC1']; \r\n  const index = Math.floor((value / max) * (blueColors.length - 1)); \r\n  return blueColors[index]; \r\n};\r\n\r\n\r\nconst TopCitiesBarChart: React.FC<TopCitiesBarChartProps> = ({ cityData }) => {\r\n  const topCities = getTopCities(cityData);\r\n\r\n  const maxRate = Math.max(...topCities.map(entry => entry.visitors)); \r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      {topCities.length > 0 ? (\r\n        <BarChart\r\n          data={topCities}\r\n          layout=\"vertical\"\r\n          margin={{ right: 30, left: 35, bottom: 30 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis type=\"number\" label={{ value: 'Visitors', position: 'insideBottom', offset: -5 }} />\r\n          <YAxis dataKey=\"city\" type=\"category\" />\r\n          <Tooltip \r\n            formatter={(value) => [value, 'Visitors']}\r\n            contentStyle={{ backgroundColor: 'hsl(var(--background))', borderColor: 'hsl(var(--border))' }}\r\n          />\r\n          <Legend verticalAlign=\"top\" height={36} />\r\n          <Bar \r\n            dataKey=\"visitors\" \r\n            name=\"Visitors\" \r\n            barSize={20} \r\n            fill=\"#00ACC1\" \r\n            shape={(props:any) => {\r\n              const { visitors } = props.payload; \r\n              return <rect {...props} fill={getBarColor(visitors, maxRate)} />; \r\n            }}\r\n          />\r\n        </BarChart>\r\n      ) : (\r\n        <div className=\"flex items-center justify-center h-full\">\r\n          <p className=\"text-muted-foreground\">No data available. Please set up Google Analytics for this data.</p>\r\n        </div>\r\n      )}\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default TopCitiesBarChart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { PieChart, Pie, Tooltip, ResponsiveContainer, Cell, Legend } from 'recharts';\r\n\r\n//  interface for landingPage data\r\ninterface PageData {\r\n  \"Landing Page\": string;\r\n  \"Visitors\": string;\r\n}\r\n\r\n// Function to get top 5 Pages based on visitors from the data\r\nconst getTopLandingPages = (data: PageData[]) => {\r\n  return data\r\n    .map(item => ({\r\n      LandingPage: item['Landing Page'],\r\n      Visitors: parseInt(item.Visitors, 10),\r\n    }))\r\n    .sort((a, b) => b.Visitors - a.Visitors)\r\n    .slice(0, 5);\r\n};\r\n\r\ninterface TopPagesPieChartProps {\r\n  PageData: PageData[];\r\n}\r\n\r\n\r\nconst COLORS = ['#050C9C', '#3572EF', '#3ABEF9', '#577B8D', '#8dd1e1'];\r\n\r\nconst TopPagesPieChart: React.FC<TopPagesPieChartProps> = ({ PageData }) => {\r\n  console.log(PageData);\r\n  const topPages = getTopLandingPages(PageData);\r\n  console.log(topPages);\r\n  const [isMobileOrTablet, setIsMobileOrTablet] = useState(window.innerWidth < 768);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobileOrTablet(window.innerWidth < 768);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ResponsiveContainer width=\"100%\" height={ 280}>\r\n        {topPages.length>0 ?(\r\n        <PieChart className='px-6'>\r\n          <Tooltip formatter={(value, name) => [`${value}`, `${name}`]} />\r\n          {!isMobileOrTablet && ( // Conditionally render the Legend\r\n            <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"middle\" />\r\n          )}\r\n          <Pie\r\n            data={topPages}\r\n            dataKey=\"Visitors\"\r\n            nameKey=\"LandingPage\"\r\n            cx=\"35%\"\r\n            cy=\"50%\"\r\n            outerRadius={100}\r\n            innerRadius={40}\r\n            label\r\n          >\r\n            {topPages.map((_, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n        ):(\r\n          <div style={{ textAlign: 'center', marginTop: '50px' }}>\r\n          <p>No data available for top landing pages.Please set up Google Analytics for this data.</p>\r\n          </div>\r\n        )}\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopPagesPieChart;\r\n\r\n\r\n\r\n","import * as React from \"react\"\r\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@radix-ui/react-icons\"\r\nimport { DayPicker } from \"react-day-picker\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  ...props\r\n}: CalendarProps) {\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"px-3\", className)}\r\n      classNames={{\r\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\r\n        month: \"space-y-4\",\r\n        caption: \"flex justify-center pt-1 relative items-center\",\r\n        caption_label: \"text-sm font-medium\",\r\n        nav: \"space-x-1 flex items-center\",\r\n        nav_button: cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\r\n        ),\r\n        nav_button_previous: \"absolute left-1\",\r\n        nav_button_next: \"absolute right-1\",\r\n        table: \"w-full border-collapse space-y-1\",\r\n        head_row: \"flex\",\r\n        head_cell:\r\n          \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]\",\r\n        row: \"flex w-full mt-2\",\r\n        cell: cn(\r\n          \"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected].day-range-end)]:rounded-r-md\",\r\n          props.mode === \"range\"\r\n            ? \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"\r\n            : \"[&:has([aria-selected])]:rounded-md\"\r\n        ),\r\n        day: cn(\r\n          buttonVariants({ variant: \"ghost\" }),\r\n          \"h-8 w-8 p-0 font-normal aria-selected:opacity-100\"\r\n        ),\r\n        day_range_start: \"day-range-start\",\r\n        day_range_end: \"day-range-end\",\r\n        day_selected:\r\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\r\n        day_today: \"bg-accent text-accent-foreground\",\r\n        day_outside:\r\n          \"day-outside text-muted-foreground opacity-50  aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\r\n        day_disabled: \"text-muted-foreground opacity-50\",\r\n        day_range_middle:\r\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\r\n        day_hidden: \"invisible\",\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        IconLeft: () => <ChevronLeftIcon className=\"h-4 w-4\" />,\r\n        IconRight: () => <ChevronRightIcon className=\"h-4 w-4\" />,\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nCalendar.displayName = \"Calendar\"\r\n\r\nexport { Calendar }\r\n","import * as React from \"react\"\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Popover = PopoverPrimitive.Root\r\n\r\nconst PopoverTrigger = PopoverPrimitive.Trigger\r\n\r\nconst PopoverAnchor = PopoverPrimitive.Anchor\r\n\r\nconst PopoverContent = React.forwardRef<\r\n  React.ElementRef<typeof PopoverPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\r\n>(({ className, align = \"start\", sideOffset = 4, ...props }, ref) => (\r\n  <PopoverPrimitive.Portal>\r\n    <PopoverPrimitive.Content\r\n      ref={ref}\r\n      align={align}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </PopoverPrimitive.Portal>\r\n))\r\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\r\n","import { useState } from \"react\"\r\nimport { CalendarIcon } from \"lucide-react\"\r\nimport { format, subDays, subMonths, subYears } from \"date-fns\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Calendar } from \"@/components/ui/calendar\"\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ntype DatePickerWithRangeProps = {\r\n  date: DateRange | undefined\r\n  setDate: (date: DateRange | undefined) => void\r\n  defaultDate?: DateRange\r\n  resetToFirstPage?: () => void\r\n}\r\n\r\nimport { useEffect } from \"react\"\r\n// (Rest of your imports remain the same)\r\n\r\nexport function DatePickerWithRange({\r\n  date,\r\n  setDate,\r\n  defaultDate,\r\n  resetToFirstPage,\r\n}: DatePickerWithRangeProps) {\r\n  const [tempDate, setTempDate] = useState<DateRange | undefined>(date || defaultDate);\r\n\r\n  // Propagate defaultDate to parent on mount if date is undefined\r\n  useEffect(() => {\r\n    if (!date && defaultDate) {\r\n      setDate(defaultDate);\r\n    }\r\n  }, [date, defaultDate, setDate]);\r\n\r\n  const handleDateChange = (newDate: DateRange | undefined) => {\r\n    setTempDate(newDate);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    setDate(tempDate);\r\n    if (resetToFirstPage) {\r\n      resetToFirstPage();\r\n    }\r\n  };\r\n\r\n  const setPresetRange = (from: Date, to: Date) => {\r\n    const newRange = { from, to };\r\n    setTempDate(newRange);\r\n  };\r\n\r\n  const clearDateRange = () => {\r\n    setTempDate(undefined);\r\n  };\r\n\r\n  const formatDateRange = (range: DateRange | undefined) => {\r\n    if (!range) {\r\n      return defaultDate && defaultDate.from && defaultDate.to\r\n        ? `${format(defaultDate.from, \"LLL dd, y\")} - ${format(defaultDate.to, \"LLL dd, y\")}`\r\n        : \"Pick a date\";\r\n    }\r\n    if (range.from) {\r\n      if (range.to) {\r\n        return `${format(range.from, \"LLL dd, y\")} - ${format(range.to, \"LLL dd, y\")}`;\r\n      }\r\n      return format(range.from, \"LLL dd, y\");\r\n    }\r\n    return \"Pick a date\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid gap-2\">\r\n      <Popover>\r\n        <PopoverTrigger asChild>\r\n          <Button\r\n            id=\"date\"\r\n            variant=\"outline\"\r\n            className={cn(\r\n              \"w-[260px] justify-start text-left font-normal\",\r\n              !tempDate && !defaultDate && \"text-muted-foreground\"\r\n            )}\r\n          >\r\n            <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n            {formatDateRange(tempDate)}\r\n          </Button>\r\n        </PopoverTrigger>\r\n        <PopoverContent className=\"w-auto p-4\" align=\"start\">\r\n          <div className=\"flex space-x-4\">\r\n            {/* Preset Buttons */}\r\n            <div className=\"flex flex-col space-y-2 justify-end\">\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                onClick={() => setPresetRange(new Date(), new Date())}\r\n              >\r\n                Today\r\n              </Button>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                onClick={() => setPresetRange(subDays(new Date(), 6), new Date())}\r\n              >\r\n                Last 7 days\r\n              </Button>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                onClick={() => setPresetRange(subDays(new Date(), 29), new Date())}\r\n              >\r\n                Last 30 days\r\n              </Button>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                onClick={() => setPresetRange(subMonths(new Date(), 3), new Date())}\r\n              >\r\n                Last 3 months\r\n              </Button>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                onClick={() => setPresetRange(subYears(new Date(), 1), new Date())}\r\n              >\r\n                Last 1 year\r\n              </Button>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"destructive\"\r\n                onClick={clearDateRange}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </div>\r\n            {/* Calendar */}\r\n            <div>\r\n              <Calendar\r\n                initialFocus\r\n                mode=\"range\"\r\n                defaultMonth={tempDate?.from || defaultDate?.from || new Date()}\r\n                selected={tempDate}\r\n                onSelect={handleDateChange}\r\n                numberOfMonths={2}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-4\">\r\n            <Button onClick={handleUpdate} className=\"w-full\">\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </PopoverContent>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { DailyCartCheckoutData } from \"@/pages/Dashboard/interfaces\";\r\nimport { AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\ninterface EcommerceMetricsProps {\r\n  rawData: DailyCartCheckoutData[];  \r\n}\r\n\r\nconst formatData = (data: any) => {\r\n  return Object.entries(data).map(([name, value]) => ({ name, value }));\r\n};\r\n\r\nconst CustomTooltip = ({ active, payload }: any) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"bg-background border border-border p-2 rounded-md shadow-md\">\r\n        <p className=\"font-bold\">{payload[0].payload.name}</p>\r\n        <p>{payload[0].value.toLocaleString()}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\n\r\nconst colorPalette = [\r\n  \"#4f83cc\", // Light Blue\r\n  \"#337ab7\", // Medium Blue\r\n  \"#1e6a8c\", // Darker Blue\r\n  \"#0d4d68\"  // Even Darker Blue\r\n];\r\n\r\nexport default function EcommerceMetrics({ rawData }: EcommerceMetricsProps) {\r\n  const aggregateData = () => {\r\n    return rawData.reduce((acc, curr) => {\r\n      acc[\"Add To Carts\"] += parseInt(curr[\"Add To Carts\"], 10);\r\n      acc.Checkouts += parseInt(curr.Checkouts, 10);\r\n      acc.Sessions += parseInt(curr.Sessions, 10);\r\n      acc.Purchases += parseInt(curr.Purchases, 10);\r\n      return acc;\r\n    }, { \"Add To Carts\": 0, Checkouts: 0, Sessions: 0, Purchases: 0 });\r\n  };\r\n\r\n  const aggregatedData = formatData(aggregateData());\r\n\r\n  if(rawData.length === 0) {\r\n    return (\r\n      <div style={{ textAlign: 'center', marginTop: '50px' }}>\r\n      <p>No data available. Please set up Google Analytics for this data.</p>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n      <ResponsiveContainer width=\"100%\" height={280}>\r\n        <AreaChart data={aggregatedData}>\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip content={<CustomTooltip />} />\r\n          <Area \r\n            type=\"monotone\" \r\n            dataKey=\"value\" \r\n            stroke=\"#0d4d68\" \r\n            fillOpacity={0.4} \r\n            fill=\"#0d4d68\" \r\n          />\r\n          <defs>\r\n            <linearGradient id=\"colorGradient\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\r\n              {colorPalette.map((color, index) => (\r\n                <stop\r\n                  key={index}\r\n                  offset={`${(index / (colorPalette.length - 1)) * 100}%`}\r\n                  stopColor={color}\r\n                />\r\n              ))}\r\n            </linearGradient>\r\n          </defs>\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n  );\r\n}\r\n\r\n","import { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { ShoppingCart, DollarSign, PercentIcon, TrendingUp, FileChartColumn, RefreshCw, BriefcaseBusiness} from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { format } from \"date-fns\"\r\nimport { ReferringChannelChart } from '../../components/dashboard_component/ReferringChannelChart.tsx';\r\nimport TopCitiesLineChart from '../../components/dashboard_component/CityChart.tsx';\r\nimport TopPagesPieChart from '../../components/dashboard_component/LandingPageChart.tsx';\r\nimport { DashboardData, CombinedData, DailyCartCheckoutReport } from './interfaces.ts';\r\nimport { DatePickerWithRange } from '@/components/dashboard_component/DatePickerWithRange.tsx';\r\nimport EcommerceMetrics from '@/components/dashboard_component/EcommerceChart.tsx';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n\r\n  const { brandId } = useParams();\r\n  const [data, setData] = useState<CombinedData | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n  const [date, setDate] = useState<DateRange | undefined>(undefined); // Initialize state\r\n\r\n  // const websocketUrl = import.meta.env.PROD ? 'wss://your-production-url' : 'ws://localhost:PORT';\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n\r\n\r\n  const now = new Date(); \r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n\r\n      const baseURL =\r\n        import.meta.env.PROD\r\n          ? import.meta.env.VITE_API_URL\r\n          : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n      let url = `${baseURL}/api/shopify/data/${brandId}`;\r\n      const params = new URLSearchParams();\r\n\r\n      if (startDate) {\r\n        params.append('startDate', startDate);\r\n      }\r\n      if (endDate) {\r\n        params.append('endDate', endDate);\r\n      }\r\n\r\n      if (params.toString()) {\r\n        url += `?${params.toString()}`;\r\n      }\r\n\r\n      const shopifyResponse = await axios.get<DashboardData>(url, {\r\n        withCredentials: true\r\n      });\r\n\r\n      const analyticsResponse = await axios.post(`${baseURL}/api/analytics/report/${brandId}`, {\r\n        startDate: startDate,\r\n        endDate: endDate\r\n      }, {\r\n        withCredentials: true\r\n      });\r\n\r\n      console.log(\"Analytics Data:\", analyticsResponse.data);\r\n\r\n      const DailyAnalyticsResponse = await axios.post<DailyCartCheckoutReport>(`${baseURL}/api/analytics/atcreport/${brandId}`, {\r\n        startDate: startDate,\r\n        endDate: endDate\r\n      }, { withCredentials: true });\r\n\r\n      console.log(\"Daily Analytics Data:\", DailyAnalyticsResponse.data);\r\n\r\n      const combinedData = {\r\n        ...shopifyResponse.data,\r\n        analyticsReports: analyticsResponse.data || null,\r\n        dailyCartCheckoutReports: DailyAnalyticsResponse.data ? [DailyAnalyticsResponse.data] : [] \r\n      };\r\n\r\n      setData(combinedData);\r\n      console.log(\"data\",shopifyResponse.data)\r\n      setLastUpdated(new Date());\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [navigate, startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    const intervalId = setInterval(fetchData, 5 * 60 * 1000);\r\n\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n\r\n  //websocket connection\r\n\r\n  // useEffect(() => {\r\n  //   const ws = new WebSocket(websocketUrl);\r\n\r\n  //   ws.onopen = () => {\r\n  //     console.log('WebSocket connected');\r\n  //   };\r\n\r\n  //   ws.onmessage = (event) => {\r\n  //     const newData = JSON.parse(event.data);\r\n  //     console.log('New webhook data received:', newData);\r\n\r\n  //     // Fetch the latest data again after receiving the update\r\n  //     fetchData(); // Re-fetch data to ensure the dashboard reflects the latest state\r\n  //   };\r\n\r\n  //   ws.onclose = () => {\r\n  //     console.log('WebSocket disconnected');\r\n  //   };\r\n\r\n  //   return () => {\r\n  //     ws.close(); // Clean up WebSocket connection on component unmount\r\n  //   };\r\n  // }, [fetchData, websocketUrl]);\r\n\r\n\r\n\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Conversion Rate calculation\r\n  const session = data?.analyticsReports.find(report => report.reportType === 'Purchase Data');\r\n  let totalConversionRate = 0; \r\n  if (session && Array.isArray(session.data)) {\r\n    totalConversionRate = session.data.reduce((acc, item) => acc + Number(item.ConversionRate), 0);\r\n  }\r\n\r\n\r\n  const prepareMonthlyReturnRatesData = () => {\r\n    if (!data || !data.analyticsReports) return 0;\r\n\r\n    const returningCustomerRateReport = data.analyticsReports.find(report => report.reportType === 'Returning Customer Rate');\r\n\r\n    if (!returningCustomerRateReport || !returningCustomerRateReport.data) return 0;\r\n\r\n    const totalReturnRate = returningCustomerRateReport.data.reduce((acc, { returnRate }) => {\r\n      const rate = parseFloat(returnRate) || 0; \r\n      return acc + rate; \r\n    }, 0);\r\n\r\n    return totalReturnRate;\r\n  };\r\n\r\n  const monthlyReturnRate = parseFloat(prepareMonthlyReturnRatesData().toFixed(2));\r\n\r\n  const preparedReferringData = () => {\r\n    if (!data || !data.analyticsReports) return [];\r\n\r\n    const referringChannelData = data.analyticsReports.find(report => report.reportType === 'Sessions by Referring Channel')?.data || [];\r\n    if (!referringChannelData) return [];\r\n\r\n    return referringChannelData.map(entry => ({\r\n      Channel: entry.Channel,\r\n      Visitors: entry.Visitors,\r\n      Sessions: entry.Sessions\r\n    }));\r\n  };\r\n\r\n\r\n  const preparedCityData = () => {\r\n    if (!data || !data.analyticsReports) return [];\r\n\r\n    const cityData = data.analyticsReports.find(report => report.reportType === 'Sessions by Location')?.data || [];\r\n    if (!cityData) return [];\r\n\r\n    return cityData.map(entry => ({\r\n      City: entry.City,\r\n      Region: entry.Region,\r\n      Country: entry.Country,\r\n      Visitors: entry.Visitors,\r\n      Sessions: entry.Sessions\r\n    }));\r\n  };\r\n\r\n\r\n  const preparedPageData = () => {\r\n    if (!data || !data.analyticsReports) return [];\r\n\r\n    const pageData = data.analyticsReports.find(report => report.reportType === 'Landing Page Report')?.data || [];\r\n    if (!pageData) return [];\r\n\r\n    return pageData.map(entry => ({\r\n      \"Landing Page\": entry[\"Landing Page\"],\r\n      Visitors: entry.Visitors,\r\n\r\n    }));\r\n  };\r\n\r\n\r\n  if (!data) return <div className=\"flex items-center justify-center h-screen\">\r\n    <div className=\"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-blue-500\"></div>\r\n  </div>;\r\n\r\n  return (\r\n    <>\r\n      <header className=\"bg-white border-b border-gray-200 px-4 py-4 md:px-6 lg:px-6\">\r\n        <div className=\" flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n          {/* <div className=\"flex items-center space-x-2\">\r\n            <BriefcaseBusiness className=\"h-6 w-6 text-gray-500\" />\r\n            <h1 className=\"text-2xl font-bold\">Business Dashboard</h1>\r\n          </div> */}\r\n            <h1 className=\"text-2xl font-bold\">Business Dashboard</h1>\r\n          <div className=\"flex items-center space-x-4\">\r\n            {/* <ReportsDropdown brandId={brandId} /> */}\r\n            <DatePickerWithRange date={date} setDate={setDate}\r\n              defaultDate={{\r\n                from: new Date(now.getFullYear(), now.getMonth(), 1), // First day of the current month\r\n                to: now // Current date\r\n              }} />\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className=\"p-4 md:p-6 bg-gradient-to-br from-gray-100 to-gray-200 min-h-screen\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h1 className=\"text-2xl font-semibold mb-2 flex items-center space-x-3\">\r\n            <BriefcaseBusiness className=\"h-6 w-6\" />\r\n            <span>Blended summary</span>\r\n            <svg viewBox=\"0 0 64 64\" className=\"w-5 h-5\"\r\n              xmlns=\"http://www.w3.org/2000/svg\" ><g>\r\n                <g><path d=\"M51.759,12.659c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631    c-0.36-0.362-1.063-0.254-1.337-0.171c-0.039,0.011-0.715,0.222-1.834,0.567c-1.096-3.167-3.027-6.077-6.426-6.077    c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844c-7.919,0-11.703,9.951-12.889,15.008    c-3.078,0.956-5.266,1.638-5.542,1.728C9.943,18.42,9.89,18.474,9.667,20.1C9.495,21.331,5,56.264,5,56.264l35.022,6.594    L59,58.731c0,0-6.661-45.261-6.703-45.572C52.255,12.849,51.983,12.677,51.759,12.659z M33.034,10.88    c0,0.119-0.002,0.231-0.002,0.344c-1.928,0.601-4.02,1.251-6.121,1.906c1.179-4.57,3.387-6.78,5.32-7.613    C32.716,6.743,33.034,8.505,33.034,10.88z M29.876,3.278c0.346,0,0.688,0.116,1.018,0.345c-2.539,1.199-5.258,4.224-6.408,10.261    c-1.679,0.522-3.319,1.034-4.838,1.506C20.994,10.783,24.188,3.278,29.876,3.278z M31.241,30.19c0,0-2.05-1.099-4.561-1.099    c-3.686,0-3.872,2.324-3.872,2.908c0,3.195,8.287,4.42,8.287,11.903c0,5.888-3.714,9.678-8.726,9.678    c-6.012,0-9.088-3.761-9.088-3.761l1.609-5.345c0,0,3.16,2.729,5.83,2.729c1.74,0,2.449-1.38,2.449-2.387    c0-4.168-6.799-4.354-6.799-11.203c0-5.761,4.116-11.341,12.428-11.341c3.199,0,4.783,0.923,4.783,0.923L31.241,30.19z     M35.11,10.578c0-0.211,0.002-0.417,0.002-0.644c0-1.966-0.273-3.551-0.709-4.807c1.752,0.219,2.919,2.223,3.67,4.528    C37.194,9.931,36.194,10.241,35.11,10.578z\" fill=\"#95C675\" /></g><g><path d=\"M51.759,12.659c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631    c-0.36-0.362-1.063-0.254-1.337-0.171c-0.039,0.011-0.715,0.222-1.834,0.567c-1.096-3.167-3.027-6.077-6.426-6.077    c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844c-7.919,0-9.873,9.951-11.059,15.008    c-3.078,0.956-5.44,6.219-5.719,6.307c-1.719,0.542-1.772,0.596-1.996,2.223C11.148,25.91,5,56.264,5,56.264l35.022,6.594    L59,58.731c0,0-6.661-45.261-6.703-45.572C52.255,12.849,51.983,12.677,51.759,12.659z M33.034,10.88    c0,0.119-0.002,0.231-0.002,0.344c-1.928,0.601-4.02,1.251-6.121,1.906c1.179-4.57,3.387-6.78,5.32-7.613    C32.716,6.743,33.034,8.505,33.034,10.88z M29.876,3.278c0.346,0,0.688,0.116,1.018,0.345c-2.539,1.199-5.258,4.224-6.408,10.261    c-1.679,0.522-3.319,1.034-4.838,1.506C20.994,10.783,24.188,3.278,29.876,3.278z M31.241,30.19c0,0-2.05-1.099-4.561-1.099    c-3.686,0-3.872,2.324-3.872,2.908c0,3.195,8.287,4.42,8.287,11.903c0,5.888-3.714,9.678-8.726,9.678    c-6.012,0-9.088-3.761-9.088-3.761l1.609-5.345c0,0,3.16,2.729,5.83,2.729c1.74,0,2.449-1.38,2.449-2.387    c0-4.168-6.799-4.354-6.799-11.203c0-5.761,4.116-11.341,12.428-11.341c3.199,0,4.783,0.923,4.783,0.923L31.241,30.19z     M35.11,10.578c0-0.211,0.002-0.417,0.002-0.644c0-1.966-0.273-3.551-0.709-4.807c1.752,0.219,2.919,2.223,3.67,4.528    C37.194,9.931,36.194,10.241,35.11,10.578z\" fill=\"#79B259\" /></g><path d=\"M40.022,62.857L59,58.731c0,0-6.661-45.261-6.703-45.572c-0.042-0.311-0.313-0.482-0.538-0.5   c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631c-0.192-0.194-0.479-0.249-0.75-0.251   c-0.72,1.22-0.571,3.537-0.571,3.537l-2.232,50.839L40.022,62.857z\" fill=\"#55932C\" /><path d=\"M33.583,2.977c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844   c-7.887,0-11.674,9.873-12.875,14.947l2.447-0.759c1.354-4.609,4.545-12.053,10.209-12.053c0.346,0,0.688,0.116,1.018,0.345   c-2.532,1.195-5.244,4.209-6.398,10.213l2.43-0.75c1.182-4.541,3.381-6.739,5.307-7.569c0.484,1.227,0.803,2.988,0.803,5.363   c0,0.108,0,0.211-0.002,0.314l2.078-0.643c0-0.2,0.002-0.4,0.002-0.617c0-1.966-0.273-3.551-0.709-4.807   c1.746,0.218,2.912,2.213,3.662,4.508l1.938-0.601C38.906,5.876,36.976,2.977,33.583,2.977z\" fill=\"#4A7A2B\" /><path d=\"M47.611,12.348c-0.474-0.037-0.793-0.06-0.793-0.06s-3.28-3.271-3.639-3.631   c-0.192-0.194-0.479-0.249-0.75-0.251c-0.72,1.22-0.571,3.537-0.571,3.537l-2.232,50.839l0.396,0.075l10.098-2.196L47.611,12.348z\" fill=\"#4C822A\" />\r\n              </g></svg>\r\n            <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n              <rect x=\"17\" y=\"2\" width=\"5\" height=\"20\" rx=\"2.5\" fill=\"#F9AB00\"></rect>\r\n              <path d=\"M9.5 13.5C9.5 12.1193 10.6193 11 12 11C13.3807 11 14.5 12.1193 14.5 13.5V19.5C14.5 20.8807 13.3807 22 12 22C10.6193 22 9.5 20.8807 9.5 19.5V13.5Z\" fill=\"#E37400\"></path><path d=\"M2 19.5C2 18.1193 3.11929 17 4.5 17C5.88071 17 7 18.1193 7 19.5C7 20.8807 5.88071 22 4.5 22C3.11929 22 2 20.8807 2 19.5Z\" fill=\"#E37400\"></path><path d=\"M6.92162 10C6.36184 10 5.95724 9.68838 5.95724 9.05977V8.55474H3.2304C2.49881 8.55474 2 8.1088 2 7.45332C2 7.07723 2.12193 6.70651 2.40459 6.22297C2.93666 5.29349 3.57403 4.31565 4.31116 3.23573C4.92637 2.31162 5.39747 2 6.20111 2C7.2209 2 7.88044 2.54265 7.88044 3.38617V7.02351H8.19082C8.72842 7.02351 9 7.34587 9 7.79181C9 8.23774 8.72288 8.55474 8.19082 8.55474H7.88044V9.05977C7.88044 9.68838 7.47585 10 6.92162 10ZM6.01267 7.09335V3.48287H5.97387C5.0095 4.8368 4.34996 5.83076 3.7015 7.03962V7.09335H6.01267Z\" fill=\"#E37400\"></path>\r\n            </svg>\r\n          </h1>\r\n          <div className=\"md:flex items-center hidden\">\r\n            {lastUpdated && (\r\n              <span className=\"text-sm text-gray-600 mr-4\">\r\n                Last updated: {lastUpdated.toLocaleTimeString()}\r\n              </span>\r\n            )}\r\n            <Button\r\n              onClick={handleManualRefresh}\r\n              disabled={isLoading}\r\n              className=\"flex items-center\"\r\n            >\r\n              <RefreshCw className={`mr-2 h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              Refresh\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Top stats cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-2 mb-4 md:mb-5\">\r\n          {[\r\n            { title: \"Total Orders\", value: data.totalOrders, colorClass: \"text-cyan-700\", icon: ShoppingCart },\r\n            { title: \"Total Sales\", value: `₹${data.totalSales.toFixed(2)}`, colorClass: \"text-cyan-700\", icon: DollarSign },\r\n            { title: \"Monthly Conversion Rate\", value: `${totalConversionRate.toFixed(2)}%`, colorClass: \"text-cyan-700\", icon: PercentIcon },\r\n            { title: \"Average Order Value\", value: `₹${data.averageOrderValue.toFixed(2)}`, colorClass: \"text-cyan-700\", icon: TrendingUp },\r\n            { title: \"Monthly Return Rate\", value: `${monthlyReturnRate}`, colorClass: \"text-cyan-700\", icon: PercentIcon }\r\n          ].map((item, index) => (\r\n            <Card key={index} className=\"shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\r\n              <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\r\n                <CardTitle className=\"text-lg text-gray-600\">{item.title}</CardTitle>\r\n                <item.icon className={`h-6 w-6 ${item.colorClass}`} />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p className={`text-2xl font-bold ${item.colorClass}`}>{item.value}</p>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n\r\n\r\n        <div className='grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4'>\r\n          <Card className=\"shadow-lg hover:shadow-xl transition-all duration-300 mb-5\">\r\n            <CardHeader className='flex flex-row justify-between items-center'>\r\n              <div className='flex flex-col gap-1'>\r\n                <CardTitle className='text-base'>Aggregated E-commerce Metrics</CardTitle>\r\n                <CardDescription>Total Add to Carts, Checkouts, Sessions, and Purchases</CardDescription>\r\n              </div>\r\n              <Link to={`/ecommerce-metrics/${brandId}`}>\r\n                <Button className=\" bg-blue-50 text-blue-900 hover:text-white \">\r\n                  <FileChartColumn />\r\n                </Button>\r\n              </Link>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <EcommerceMetrics rawData={data?.dailyCartCheckoutReports[0].data || []} />\r\n            </CardContent>\r\n          </Card>\r\n          {/* City Chart */}\r\n          <Card className=\"shadow-lg hover:shadow-xl transition-all duration-300 mb-5\">\r\n            <CardHeader className='flex flex-row justify-between items-center'>\r\n              <div className='flex flex-col gap-1'>\r\n                <CardTitle className='text-base'>Top Cities</CardTitle>\r\n                <CardDescription>Visitor Count For Top cities</CardDescription>\r\n              </div>\r\n              <Link to={`/city-metrics/${brandId}`}>\r\n                <Button className=\" bg-blue-50 text-blue-900 hover:text-white \">\r\n                  <FileChartColumn />\r\n                </Button>\r\n              </Link>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <TopCitiesLineChart cityData={preparedCityData()} />\r\n            </CardContent>\r\n          </Card>\r\n          {/* Referring Channels Chart */}\r\n          <Card className=\"shadow-lg hover:shadow-xl transition-all duration-300 mb-5\">\r\n            <CardHeader className='flex flex-row items-center justify-between'>\r\n              <div className='flex flex-col gap-1'>\r\n                <CardTitle className='text-base'>Top Referring Channels</CardTitle>\r\n                <CardDescription>Visitor count for reffering channels</CardDescription>\r\n              </div>\r\n              <Link to={`/channel-metrics/${brandId}`}>\r\n                <Button className=\" bg-blue-50 text-blue-900 hover:text-white \">\r\n                  <FileChartColumn />\r\n                </Button>\r\n              </Link>\r\n            </CardHeader>\r\n            <CardContent className=\"h-80\">\r\n              <ReferringChannelChart rawData={preparedReferringData()} />\r\n            </CardContent>\r\n          </Card>\r\n\r\n        </div>\r\n        <div className='grid grid-cols-1 xl:grid-cols-2 gap-4'>\r\n          {/* Landing Page Report*/}\r\n          <Card className=\"shadow-lg hover:shadow-xl transition-all duration-300 \">\r\n            <CardHeader className='flex flex-row justify-between items-center px-6 py-3'>\r\n              <div className='flex flex-col gap-1'>\r\n                <CardTitle className='text-base'>Top Landing Pages</CardTitle>\r\n                <CardDescription>Visitors count based on Landing Pages</CardDescription>\r\n              </div>\r\n              <Link to={`/page-metrics/${brandId}`}>\r\n                <Button className=\" bg-blue-50 text-blue-900 hover:text-white \">\r\n                  <FileChartColumn />\r\n                </Button>\r\n              </Link>\r\n            </CardHeader>\r\n            <TopPagesPieChart PageData={preparedPageData()} />\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import CollapsibleSidebar from './CollapsibleSidebar'\r\nimport Dashboard from './dashboard'\r\n\r\nexport default function BusinessDashboard() {\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n        <Dashboard />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-primary/10\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","// AdAccountMetrics.js\r\nimport React from 'react';\r\nimport { Card, CardHeader, CardContent } from \"@/components/ui/card\"\r\nimport { Skeleton } from \"@/components/ui/skeleton\"\r\nimport { HelpCircle } from 'lucide-react';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\n\r\n\r\n// Define the type for each metric\r\nexport interface Metric {\r\n  label: string;\r\n  value: string | number;\r\n  tooltipContent?: string\r\n\r\n}\r\n\r\n// Define the props for the AdAccountMetrics component\r\ninterface AdAccountMetricsProps {\r\n  title?: string;\r\n  metrics: Metric[];\r\n  date: DateRange;\r\n  isLoading: boolean;\r\n  icon?: 'Facebook' | 'Google' | '';\r\n  tooltipContent?: string\r\n  errorMessage?: string;\r\n}\r\n\r\nexport interface DateRange {\r\n  from?: Date;\r\n  to?: Date;\r\n}\r\n\r\ninterface MetricCardProps extends Metric {\r\n  date: DateRange;\r\n  icon?: 'Facebook' | 'Google' | ''\r\n\r\n}\r\n\r\n\r\nconst MetricCardSkeleton: React.FC = () => {\r\n  return (\r\n    <Card className=\"transition-transform transform hover:scale-105 hover:border hover:border-blue-600\">\r\n      <CardHeader className='flex flex-col items-start justify-start'>\r\n        <div className=\"flex flex-row items-center gap-2\">\r\n          <Skeleton className=\"w-4 h-4 rounded-full\" />\r\n          <Skeleton className=\"h-6 w-24\" />\r\n        </div>\r\n        <Skeleton className=\"h-4 w-32 mt-2\" />\r\n      </CardHeader>\r\n      <CardContent>\r\n        <Skeleton className=\"h-8 w-20 mt-2\" />\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\n// MetricCard component to render each metric using ShadCN Card\r\nconst MetricCard: React.FC<MetricCardProps> = ({ label, value, date, icon, tooltipContent }) => {\r\n  return (\r\n    <Card className=\"transition-transform transform hover:scale-105 hover:border hover:border-blue-600\">\r\n      <CardHeader className='flex flex-col items-start justify-start'>\r\n        <div className=\"flex flex-row items-center gap-2\">\r\n          {icon === 'Facebook' ? (\r\n            <svg className=\"w-4 h-4\" fill=\"#1877F2\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n            </svg>\r\n          ) : icon === 'Google' ? (\r\n            <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n              <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n              <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n              <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n            </svg>\r\n          ) : icon === '' ? (\r\n            <>\r\n              <svg className=\"w-4 h-4\" fill=\"#1877F2\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n              </svg>\r\n              <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n                <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n                <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n                <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n              </svg>\r\n            </>\r\n          ) : null}\r\n\r\n          <div className=\"text-base font-medium\">{label}</div>\r\n\r\n          <TooltipProvider>\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <button className=\"p-0 m-0\" aria-label={`Info about ${label}`}>\r\n                  <HelpCircle className=\"w-3 h-3 text-gray-400\" />\r\n                </button>\r\n              </TooltipTrigger>\r\n              <TooltipContent className=\"w-64 p-0 bg-white text-black border shadow-sm\">\r\n                <div className=\"p-2 font-semibold border-black\">{label}</div>\r\n                {tooltipContent && (\r\n                  <>\r\n                    <div className=\"w-full h-[0.5px] bg-black\" />\r\n                    <div className=\"p-2\">{tooltipContent}</div>\r\n                  </>\r\n                )}\r\n              </TooltipContent>\r\n            </Tooltip>\r\n          </TooltipProvider>\r\n\r\n        </div>\r\n        <div className=\"text-xs text-gray-500 font-bold\">\r\n          {date.from ? date.from.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) : ''}\r\n          {date.from && date.to ? ' - ' : ''}\r\n          {date.to ? date.to.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) : ''}\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <p className=\"text-3xl font-bold text-cyan-950\">{value}</p>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n};\r\n\r\nconst AdAccountMetricsCard: React.FC<AdAccountMetricsProps> = ({ title, metrics = [], date, isLoading = false, icon, errorMessage }) => {\r\n  if (errorMessage && !isLoading) {\r\n    return (\r\n      <section className={title ? 'mt-10' : ''}>\r\n        <Card className=\"p-4\">\r\n          <CardHeader><h2 className=\"text-xl font-semibold flex items-center space-x-2\">\r\n            {title && (\r\n              <>\r\n                {icon === 'Facebook' ? (\r\n                  <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n                    <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n                  </svg>\r\n                ) : (\r\n                  <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n                    <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n                    <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n                    <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n                  </svg>\r\n                )}\r\n                <span>{title}</span>\r\n              </>\r\n            )}\r\n          </h2>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <p className=\"text-red-600 text-sm\">{errorMessage}</p>\r\n          </CardContent>\r\n        </Card>\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <section className={title ? 'mt-10' : ''}>\r\n      <h2 className=\"text-xl font-semibold mb-4 flex items-center space-x-2\">\r\n        {title && (\r\n          <>\r\n            {icon === 'Facebook' ? (\r\n              <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n                <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n              </svg>\r\n            ) : (\r\n              <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n                <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n                <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n                <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n              </svg>\r\n            )}\r\n            <span>{title}</span>\r\n          </>\r\n        )}\r\n      </h2>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        {isLoading\r\n          ? Array(metrics.length).fill(0).map((_, index) => <MetricCardSkeleton key={index} />)\r\n          : metrics.map((metric, index) => (\r\n            <MetricCard key={index} label={metric.label} value={metric.value} date={date} icon={icon} tooltipContent={metric.tooltipContent} />\r\n          ))\r\n        }\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AdAccountMetricsCard;","import * as React from \"react\"\r\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { CheckIcon, ChevronRightIcon, DotFilledIcon } from \"@radix-ui/react-icons\"\r\n\r\nconst DropdownMenu = DropdownMenuPrimitive.Root\r\n\r\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\r\n\r\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\r\n\r\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\r\n\r\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\r\n\r\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\r\n\r\nconst DropdownMenuSubTrigger = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRightIcon className=\"ml-auto\" />\r\n  </DropdownMenuPrimitive.SubTrigger>\r\n))\r\nDropdownMenuSubTrigger.displayName =\r\n  DropdownMenuPrimitive.SubTrigger.displayName\r\n\r\nconst DropdownMenuSubContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuSubContent.displayName =\r\n  DropdownMenuPrimitive.SubContent.displayName\r\n\r\nconst DropdownMenuContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Portal>\r\n    <DropdownMenuPrimitive.Content\r\n      ref={ref}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </DropdownMenuPrimitive.Portal>\r\n))\r\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\r\n\r\nconst DropdownMenuItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\r\n\r\nconst DropdownMenuCheckboxItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <CheckIcon className=\"h-4 w-4\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.CheckboxItem>\r\n))\r\nDropdownMenuCheckboxItem.displayName =\r\n  DropdownMenuPrimitive.CheckboxItem.displayName\r\n\r\nconst DropdownMenuRadioItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <DotFilledIcon className=\"h-2 w-2 fill-current\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.RadioItem>\r\n))\r\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\r\n\r\nconst DropdownMenuLabel = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\r\n\r\nconst DropdownMenuSeparator = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\r\n\r\nconst DropdownMenuShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\r\n\r\nexport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuRadioItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuShortcut,\r\n  DropdownMenuGroup,\r\n  DropdownMenuPortal,\r\n  DropdownMenuSub,\r\n  DropdownMenuSubContent,\r\n  DropdownMenuSubTrigger,\r\n  DropdownMenuRadioGroup,\r\n}\r\n","import { useState, useEffect, useCallback } from 'react'\r\nimport { format } from \"date-fns\"\r\nimport { Blend, Filter, RefreshCw } from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from \"axios\"\r\nimport AdAccountMetricsCard from \"./AdAccountsMetricsCard.tsx\"\r\nimport { AdAccountData, AggregatedMetrics, GoogleAdAccountData } from '@/pages/Dashboard/interfaces.ts'\r\nimport { DatePickerWithRange } from '@/components/dashboard_component/DatePickerWithRange.tsx'\r\nimport { Button } from '@/components/ui/button.tsx';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuRadioGroup,\r\n  DropdownMenuRadioItem,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\"\r\ntype DataSource = 'all' | 'facebook' | 'google'\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n  const [date, setDate] = useState<DateRange | undefined>({\r\n    from: new Date(),\r\n    to: new Date(),\r\n  })\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fbAdAccountsMetrics, setFbAdAccountsMetrics] = useState<AdAccountData[]>([]);\r\n  const [aggregatedMetrics, setAggregatedMetrics] = useState<AggregatedMetrics | null>(null)\r\n  const [googleAdMetrics, setGoogleAdMetrics] = useState<GoogleAdAccountData>();\r\n  const [dataSource, setDataSource] = useState<DataSource>('all');\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n\r\n  const { brandId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const handleDataSourceChange = (newSource: DataSource) => {\r\n    if (newSource !== dataSource) {\r\n      setDataSource(newSource);\r\n    }\r\n  };\r\n\r\n  const fetchAdData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const baseURL =\r\n        import.meta.env.PROD\r\n          ? import.meta.env.VITE_API_URL\r\n          : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n      const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n      const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n      let fbData = [];\r\n      let googleData = [];\r\n\r\n      if (dataSource === 'all' || dataSource === 'facebook') {\r\n        try {\r\n          const fbAdResponse = await axios.post(\r\n            `${baseURL}/api/metrics/fbad/${brandId}`,\r\n            { startDate, endDate },\r\n            { withCredentials: true }\r\n          );\r\n          fbData = fbAdResponse.data.data;\r\n          console.log(\"fbdata\",fbData);\r\n          setFbAdAccountsMetrics(fbData);\r\n        } catch (fbError) {\r\n          console.error('Error fetching Facebook ad data:', fbError);\r\n        }\r\n      }\r\n\r\n      if (dataSource === 'all' || dataSource === 'google') {\r\n        try {\r\n          const googleAdResponse = await axios.post(\r\n            `${baseURL}/api/metrics/googlead/${brandId}`,\r\n            { startDate, endDate },\r\n            { withCredentials: true }\r\n          );\r\n          googleData = googleAdResponse.data.data;\r\n          console.log(googleData);\r\n          setGoogleAdMetrics(googleData);\r\n        } catch (googleError) {\r\n          console.error('Error fetching Google ad data:', googleError);\r\n        }\r\n      }\r\n\r\n      calculateAggregatedMetrics(\r\n        dataSource === 'google' ? [] : fbData,\r\n        dataSource === 'facebook' ? undefined : googleData\r\n      );\r\n      setLastUpdated(new Date());\r\n    } catch (error) {\r\n      console.error('Error fetching ad data:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [navigate, date, dataSource, brandId]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchAdData();\r\n  }, [fetchAdData]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchAdData();\r\n\r\n    const intervalId = setInterval(fetchAdData, 5 * 60 * 1000);\r\n\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchAdData]);\r\n\r\n\r\n  const calculateAggregatedMetrics = (fbData: AdAccountData[], googleData: GoogleAdAccountData | undefined) => {\r\n    let totalSpent = 0;\r\n    let totalRevenue = 0;\r\n    let totalPurchases = 0;\r\n    let totalClicks = 0;\r\n    let totalImpressions = 0;\r\n\r\n    if (fbData?.length) {\r\n      fbData.forEach(account => {\r\n        totalSpent += parseFloat(account.spend || '0');\r\n        totalRevenue += parseFloat(account.Revenue?.value || '0');\r\n        totalPurchases += parseFloat(account.purchases?.value || '0');\r\n        totalClicks += parseFloat(account.clicks || '0');\r\n        totalImpressions += parseFloat(account.impressions || '0');\r\n      });\r\n    }\r\n\r\n    if (googleData) {\r\n      totalSpent += parseFloat(googleData.totalSpend || '0');\r\n      totalRevenue += parseFloat(googleData.totalConversionsValue || '0');\r\n      totalPurchases += parseFloat(googleData.totalConversions || '0');\r\n      totalClicks += parseFloat(googleData.totalClicks || '0');\r\n      totalImpressions += parseFloat(googleData.totalImpressions || '0');\r\n    }\r\n    // console.log(totalR)\r\n\r\n    setAggregatedMetrics({\r\n      totalSpent: `₹ ${totalSpent.toLocaleString()}`,\r\n      totalRevenue: `₹ ${totalRevenue.toLocaleString()}`,\r\n      totalROAS: (totalRevenue / totalSpent).toFixed(2).toString(),\r\n      totalPurchases: totalPurchases.toLocaleString(),\r\n      totalCTR: `${((totalClicks / totalImpressions) * 100).toFixed(2)} %`,\r\n      totalCPC: (totalSpent / totalClicks).toFixed(2).toString(),\r\n    });\r\n  };\r\n\r\n\r\n  const metrics = [\r\n    {\r\n      label: 'Amount Spent',\r\n      value: aggregatedMetrics ? aggregatedMetrics.totalSpent : '₹ 0',\r\n      tooltipContent: 'The sum of ad spends for all advertising platform'\r\n    },\r\n    {\r\n      label: 'Revenue',\r\n      value: aggregatedMetrics ? aggregatedMetrics.totalRevenue : '₹ 0',\r\n      tooltipContent: 'Revenue from Ads Purchases'\r\n    },\r\n    {\r\n      label: 'ROAS (Ads only)',\r\n      value: aggregatedMetrics ? aggregatedMetrics.totalROAS : '0.00',\r\n      tooltipContent: 'Blended ROAS = Ads Purchases vaue / Blended Ad Spend'\r\n    },\r\n    {\r\n      label: 'Ads Purchases',\r\n      value: aggregatedMetrics ? aggregatedMetrics.totalPurchases : '0.00',\r\n      tooltipContent: 'Ads Purchases = Fb Ads Purchase + Google Conversions'\r\n    },\r\n    {\r\n      label: 'CTR',\r\n      value: aggregatedMetrics ? aggregatedMetrics.totalCTR : '0.00',\r\n      tooltipContent: 'Average CTR from all advertising platforms = (Blended Clicks / Blended Impressions)*100'\r\n    },\r\n    {\r\n      label: 'CPC',\r\n      value: aggregatedMetrics ? aggregatedMetrics.totalCPC : '0.00',\r\n      tooltipContent: 'Average CPC from all advertising platforms = (Blended Ad Spend / Blended Clicks )'\r\n    }\r\n  ];\r\n\r\n  const googleMetrics = [\r\n    {\r\n      label: 'Total Cost',\r\n      value: googleAdMetrics ? `₹ ${googleAdMetrics?.totalSpend}` : ' 0',\r\n    },\r\n    {\r\n      label: 'Conversion Value',\r\n      value: googleAdMetrics ? `₹ ${googleAdMetrics?.totalConversionsValue}` : ' 0',\r\n    },\r\n    {\r\n      label: 'ROAS',\r\n      value: googleAdMetrics ? googleAdMetrics?.roas : '0.00',\r\n    },\r\n    {\r\n      label: 'Conversions',\r\n      value: googleAdMetrics ? googleAdMetrics?.totalConversions : '0',\r\n    },\r\n    {\r\n      label: 'CPC',\r\n      value: googleAdMetrics ? `₹ ${googleAdMetrics?.totalCPC}` : ' 0',\r\n    },\r\n    {\r\n      label: 'CPM',\r\n      value: googleAdMetrics ? `₹ ${googleAdMetrics?.totalCPM}` : ' 0',\r\n    },\r\n    {\r\n      label: 'CTR',\r\n      value: googleAdMetrics ? `${googleAdMetrics?.totalCTR} %` : ' 0',\r\n    },\r\n    {\r\n      label: 'Cost Per Conversion',\r\n      value: googleAdMetrics ? `₹ ${googleAdMetrics?.totalCostPerConversion}` : ' 0',\r\n    },\r\n  ]\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchAdData();\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n\r\n      <nav className=\"bg-white border-b border-gray-200 px-4 py-4 md:px-6 lg:px-8\">\r\n        <div className=\" flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n        <h1 className=\"text-2xl font-bold\">Ad Metrics Dashboard</h1>\r\n          <div className=\"flex items-center space-x-2\">\r\n            {/* <ReportsDropdown brandId={brandId} /> */}\r\n            <DatePickerWithRange date={date} setDate={setDate}\r\n              defaultDate={{ from: new Date(), to: new Date() }} />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Main content */}\r\n      <main className=\"p-4 md:p-6 lg:px-8\">\r\n        <div className=\"space-y-2\">\r\n          {/* Blended summary */}\r\n          <section>\r\n            <h2 className=\"text-xl font-semibold flex flex-row items-center justify-between\">\r\n              <div className='flex flex-row items-center space-x-2'>\r\n                <Blend className=\"h-5 w-5\" />\r\n                <span>Blended summary</span>\r\n                {(dataSource === 'all' || dataSource === 'facebook') && (\r\n                  <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n                    <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n                  </svg>\r\n                )}\r\n                {(dataSource === 'all' || dataSource === 'google') && (\r\n                  <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\" >\r\n                    <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path><path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path><path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n                  </svg>\r\n                )}\r\n              </div>\r\n              <div className=\"flex flex-row items-center space-x-2\">\r\n                <div className=\"md:flex items-center hidden\">\r\n                  {lastUpdated && (\r\n                    <span className=\"text-sm text-gray-600 mr-4\">\r\n                      Last updated: {lastUpdated.toLocaleTimeString()}\r\n                    </span>\r\n                  )}\r\n                  <Button\r\n                    onClick={handleManualRefresh}\r\n                    disabled={isLoading}\r\n                    className=\"flex items-center\"\r\n                  >\r\n                    <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n\r\n                  </Button>\r\n                </div>\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button className='bg-cyan-800'><Filter className=\"h-5 w-5 mr-2\" />Filter</Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent>\r\n                    <DropdownMenuRadioGroup value={dataSource} onValueChange={(value) => handleDataSourceChange(value as DataSource)}>\r\n                      <DropdownMenuRadioItem value=\"all\">All Data</DropdownMenuRadioItem>\r\n                      <DropdownMenuRadioItem value=\"facebook\">Facebook Ads</DropdownMenuRadioItem>\r\n                      <DropdownMenuRadioItem value=\"google\">Google Ads</DropdownMenuRadioItem>\r\n                    </DropdownMenuRadioGroup>\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n\r\n              </div>\r\n\r\n            </h2>\r\n            <AdAccountMetricsCard metrics={metrics} date={date || { from: new Date(), to: new Date() }} isLoading={isLoading} icon={dataSource === 'all' ? '' : dataSource === 'facebook' ? 'Facebook' : 'Google'} />\r\n          </section>\r\n        </div>\r\n\r\n\r\n        {(dataSource === 'all' || dataSource === 'facebook') && fbAdAccountsMetrics?.length > 0 && fbAdAccountsMetrics.map((accountMetrics, index) => {\r\n          const fbmetrics = [\r\n            { label: 'Amount Spent', value: `₹ ${accountMetrics.spend || '0'}` },\r\n            {\r\n              label: 'Revenue',\r\n              value: `₹ ${parseFloat(accountMetrics.Revenue?.value || '0').toLocaleString()}`\r\n            },\r\n            {\r\n              label: 'ROAS (Ads only)',\r\n              value: accountMetrics.purchase_roas && accountMetrics.purchase_roas.length > 0\r\n                ? parseFloat(accountMetrics.purchase_roas[0].value).toFixed(2)\r\n                : '0'\r\n            },\r\n            { label: 'Ads Purchases', value: accountMetrics.purchases?.value || '0' },\r\n            { label: 'CPC (All clicks)', value: `₹ ${parseFloat(accountMetrics.cpc || '0').toLocaleString()}` },\r\n            { label: 'CPM', value: `₹ ${parseFloat(accountMetrics.cpm || '0').toFixed(2).toLocaleString()}` },\r\n            { label: 'CTR', value: `${parseFloat(accountMetrics.ctr || '0').toFixed(2)} %` },\r\n            { label: 'Cost per Purchase (All)', value: `₹ ${parseFloat(accountMetrics.cpp || '0').toLocaleString()}` },\r\n          ];\r\n\r\n          return (\r\n            <AdAccountMetricsCard\r\n              key={index}\r\n              icon=\"Facebook\"\r\n              title={`Facebook - ${accountMetrics.account_name}`}\r\n              metrics={fbmetrics}  // Pass fbmetrics for the current account\r\n              date={date || { from: new Date(), to: new Date() }}\r\n              isLoading={isLoading}\r\n              errorMessage={accountMetrics.message}\r\n            />\r\n          );\r\n        })}\r\n\r\n        {\r\n          (dataSource === 'all' || dataSource === 'google') && (\r\n            googleAdMetrics && Object.keys(googleAdMetrics).length > 0 ? (\r\n              <AdAccountMetricsCard\r\n                icon=\"Google\"\r\n                title={`Google Ads - ${googleAdMetrics?.adAccountName}`}\r\n                metrics={googleMetrics}\r\n                date={date || { from: new Date(), to: new Date() }}\r\n                isLoading={isLoading}\r\n              />\r\n            ) : (\r\n              <section>\r\n                <div className='flex flex-row gap-2 items-center'>\r\n                <h3 className=\"text-lg font-semibold\">Google Ad Metrics</h3>\r\n                <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n                <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n                <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n                <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n              </svg>\r\n                </div>\r\n           \r\n              <div className=\"text-center text-gray-500 mt-4 bg-white p-2\">\r\n                No Google Ad Account for this brand.\r\n              </div>\r\n              </section>\r\n            )\r\n          )\r\n        }\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar.tsx\";\r\nimport Dashboard from \"./dashboard.tsx\";\r\n\r\nconst AnalyticsDashboard: React.FC = () => {\r\n  return (\r\n    <div className=\"flex h-screen\"> {/* Set a fixed width for the sidebar */}\r\n        <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n        <Dashboard />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalyticsDashboard;\r\n","import { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Bell, Settings, Briefcase, RefreshCw, FileSpreadsheet, Target, ArrowRight, BarChart3, PieChart, TrendingUp, Activity} from \"lucide-react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useUser } from \"@/context/UserContext\"\r\nimport { useBrand } from \"@/context/BrandContext\"\r\n\r\nexport default function LandingPage() {\r\n  const { user } = useUser();\r\n  const { brands } = useBrand();\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-6\">\r\n      <div className=\"max-w-full mx-auto space-y-6 px-4\">\r\n        <h1 className=\"text-3xl font-bold tracking-tight\">Welcome back, {user?.username.split(' ')[0] || 'user'}!</h1>\r\n\r\n        <div className=\"grid gap-6 grid-cols-1 md:grid-cols-2\">\r\n          <Card className=\"bg-white shadow-lg border-t-4 border-t-[#071952]\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-[#088395] flex items-center\">\r\n                <Activity className=\"mr-2 h-5 w-5\" />\r\n                Performance & Targets\r\n              </CardTitle>\r\n              <CardDescription>Overview of your brand performance and targets</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between bg-[#EBF4F6] p-4 rounded-lg\">\r\n                <div className=\"flex items-center\">\r\n                  <Target className=\"h-8 w-8 text-blue-500 mr-3\" />\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-[#088395]\">Active Targets</p>\r\n                    <p className=\"text-2xl font-bold text-blue-900\">{brands.length}</p>\r\n                  </div>\r\n                </div>\r\n                <BarChart3 className=\"h-12 w-12 text-blue-300\" />\r\n              </div>\r\n              <Button asChild className=\"w-full justify-between bg-[#37B7C3] hover:bg-cyan-800 text-white\">\r\n                <Link to=\"/performance-metrics\">\r\n                  <span>View Performance Dashboard</span>\r\n                  <ArrowRight className=\"h-4 w-4\" />\r\n                </Link>\r\n              </Button>\r\n            </CardContent>\r\n          </Card>\r\n          \r\n          <Card className=\"bg-white shadow-lg border-t-4 border-t-blue-500\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-blue-700 flex items-center\">\r\n                <TrendingUp className=\"mr-2 h-5 w-5\" />\r\n                Getting Started\r\n              </CardTitle>\r\n              <CardDescription>Follow these steps to set up your analytics</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ol className=\"list-decimal list-inside space-y-2 text-sm\">\r\n                <li>Select a brand from \"Your Brands\" section</li>\r\n                <li>Connect your brand's Shopify store</li>\r\n                <li>Set up Google Analytics 4 property</li>\r\n                <li>Link Facebook Ads account</li>\r\n                <li>Configure Google Ads integration</li>\r\n                <li>Explore your unified brand analytics</li>\r\n              </ol>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n<div className=\"grid gap-6 grid-cols-1 md:grid-cols-2\">\r\n        <Card className=\"bg-white shadow-lg border-t-4 border-t-blue-500\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-blue-700 flex items-center\">\r\n              <PieChart className=\"mr-2 h-5 w-5\" />\r\n              Dashboard Overview\r\n            </CardTitle>\r\n            <CardDescription>Key insights and analytics for your brands</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid md:grid-cols-3 gap-4\">\r\n              {brands.map((brand) => (\r\n                <Link key={brand._id} to={`/business-dashboard/${brand._id}`}>\r\n                  <div className=\"border border-[#071952] p-2 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200\">\r\n                    <h3 className=\"text-base font-semibold text-[#071952]\">{brand.name}</h3>\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"bg-white shadow-lg border-t-4 border-t-blue-600\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-blue-700 flex items-center\">\r\n              <FileSpreadsheet className=\"mr-2 h-5 w-5\" />\r\n              Monthly Reports\r\n            </CardTitle>\r\n            <CardDescription>Access comprehensive monthly reports for your brands</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid md:grid-cols-3 gap-4\">\r\n              {brands.map((brand) => (\r\n                <Link key={brand._id} to={`/ad-metrics/${brand._id}`}>\r\n                  <div className=\"bg-blue-50 p-2 rounded-lg shadow hover:shadow-md transition-shadow duration-200 \">\r\n                    <h3 className=\"text-base font-semibold text-blue-700\">{brand.name}</h3>\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        </div>\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          <Card className=\"bg-white shadow-lg border-t-4 border-t-blue-500\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-blue-700 flex items-center\">\r\n                <Bell className=\"mr-2 h-5 w-5\" />\r\n                Notifications\r\n              </CardTitle>\r\n              <CardDescription>Stay updated with your latest alerts</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ul className=\"space-y-2\">\r\n                <li className=\"flex items-center bg-blue-50 p-2 rounded\">\r\n                  <Bell className=\"mr-2 h-4 w-4 text-blue-500\" />\r\n                  <span className=\"text-sm text-blue-700\">New Shopify order received for UDD Studio</span>\r\n                </li>\r\n                <li className=\"flex items-center bg-blue-50 p-2 rounded\">\r\n                  <Bell className=\"mr-2 h-4 w-4 text-blue-500\" />\r\n                  <span className=\"text-sm text-blue-700\">Weekly analytics report ready for Fisherman Hub</span>\r\n                </li>\r\n                <li className=\"flex items-center bg-blue-50 p-2 rounded\">\r\n                  <Bell className=\"mr-2 h-4 w-4 text-blue-500\" />\r\n                  <span className=\"text-sm text-blue-700\">Facebook Ads campaign ended for UDD Studio</span>\r\n                </li>\r\n              </ul>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"bg-white shadow-lg border-t-4 border-t-blue-600\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-blue-700 flex items-center\">\r\n                <Settings className=\"mr-2 h-5 w-5\" />\r\n                Quick Actions\r\n              </CardTitle>\r\n              <CardDescription>Frequently used features and settings</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <Button variant=\"outline\" className=\"w-full justify-start text-blue-600 hover:bg-blue-50 hover:text-blue-700 border-blue-200\">\r\n                <Settings className=\"mr-2 h-4 w-4\" />\r\n                Account Settings\r\n              </Button>\r\n              <Button variant=\"outline\" className=\"w-full justify-start text-blue-600 hover:bg-blue-50 hover:text-blue-700 border-blue-200\">\r\n                <RefreshCw className=\"mr-2 h-4 w-4\" />\r\n                Sync Data Sources\r\n              </Button>\r\n              <Button variant=\"outline\" className=\"w-full justify-start text-blue-600 hover:bg-blue-50 hover:text-blue-700 border-blue-200\">\r\n                <Briefcase className=\"mr-2 h-4 w-4\" />\r\n                Manage Brands\r\n              </Button>\r\n            </CardContent>\r\n          </Card>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","import { useState } from 'react'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\n\r\ninterface ShopifyModalContentProps {\r\n  onConnect: (platform: string, account: string,accountId:string) => void\r\n}\r\n\r\nexport default function ShopifyModalContent({ onConnect }: ShopifyModalContentProps) {\r\n  const [storeName, setStoreName] = useState('')\r\n\r\n  const handleLogin = () => {\r\n    // Here you would typically initiate the Shopify OAuth flow\r\n    // For now, we'll just simulate a connection\r\n    if (storeName) {\r\n      onConnect('Shopify', storeName,'')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-4 space-y-4\">\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Enter your Shopify store name\"\r\n        value={storeName}\r\n        onChange={(e) => setStoreName(e.target.value)}\r\n      />\r\n      <Button className=\"w-full\" onClick={handleLogin} disabled={!storeName}>\r\n        Login to Shopify\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","import { Table, TableBody, TableCell, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Skeleton } from \"@/components/ui/skeleton\"\r\nexport const TableSkeleton = () => (\r\n    <Table className=\"text-center min-w-full\">\r\n      <TableHeader className=\"bg-gray-200 sticky top-0 z-10\">\r\n        <TableRow>\r\n          {Array(8).fill(0).map((_, index) => (\r\n            <TableCell key={index} className=\"font-bold px-4 text-black min-w-[150px]\">\r\n              <Skeleton className=\"h-6 w-full\" />\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHeader>\r\n      <TableBody>\r\n        {Array(10).fill(0).map((_, rowIndex) => (\r\n          <TableRow key={rowIndex}>\r\n            {Array(8).fill(0).map((_, cellIndex) => (\r\n              <TableCell key={cellIndex} className=\"px-4 py-2 max-w-[200px]\">\r\n                <Skeleton className=\"h-6 w-full\" />\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  )","import { useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport { BriefcaseBusiness, RefreshCw, ChevronDown, CalendarDays, IndianRupee, TrendingUp } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport { Table, TableBody, TableCell, TableHeader, TableRow } from \"@/components/ui/table\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardDescription,\r\n  CardContent,\r\n} from \"@/components/ui/card\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useBrand } from '@/context/BrandContext';\r\nimport { MagnifyingGlassIcon } from \"@radix-ui/react-icons\";\r\n\r\n// Facebook and Google Logos (SVGs)\r\ninterface FacebookLogoProps {\r\n  width?: string | number;\r\n  height?: string | number;\r\n}\r\n\r\ninterface GoogleLogoProps {\r\n  width?: string | number;\r\n  height?: string | number;\r\n}\r\n\r\nexport const FacebookLogo: React.FC<FacebookLogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n  <svg viewBox=\"0 0 24 24\" style={{ height, width, fill: '#1877F2' }}>\r\n    <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n  </svg>\r\n);\r\n\r\nexport const GoogleLogo: React.FC<GoogleLogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n  <svg viewBox=\"0 0 24 24\" style={{ height,width }}>\r\n    <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n    <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n    <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n  </svg>\r\n);\r\n\r\n// Interface definitions\r\ninterface PurchaseRoas {\r\n  value: string;\r\n}\r\n\r\ninterface BaseCampaignMetric {\r\n  spend: string;\r\n}\r\n\r\ninterface GoogleCampaignMetric extends BaseCampaignMetric {\r\n  campaignName: string;\r\n  roas: string;\r\n}\r\n\r\ninterface FacebookCampaignMetric extends BaseCampaignMetric {\r\n  campaign_name: string;\r\n  purchase_roas: PurchaseRoas[];\r\n}\r\n\r\ninterface DisplayCampaignMetric {\r\n  campaignName: string;\r\n  spend: string;\r\n  roas: string;\r\n}\r\n\r\ninterface SummaryMetrics {\r\n  totalSpend: number;\r\n  averageRoas: number;\r\n}\r\n\r\ninterface GoogleData {\r\n  adAccountName: string;\r\n  campaignData: GoogleCampaignMetric[];\r\n}\r\n\r\ninterface FacebookAccount {\r\n  account_name: string;\r\n  campaigns: FacebookCampaignMetric[];\r\n}\r\n\r\n// Helper function to format values\r\nconst formatValue = (value: string | number | null): string => {\r\n  if (value === null || value === undefined) return '₹0.00';\r\n  const numberValue = typeof value === 'string' ? parseFloat(value) : value;\r\n  if (isNaN(numberValue)) return '₹0.00';\r\n  return numberValue.toLocaleString('en-IN', {\r\n    style: 'currency',\r\n    currency: 'INR',\r\n    minimumFractionDigits: 2,\r\n  });\r\n};\r\n\r\n// Helper function to format date\r\nconst formatDate = (dateString: string) => {\r\n  if (!dateString) return '';\r\n  const date = new Date(dateString);\r\n  return date.toLocaleDateString('en-IN', {\r\n    day: 'numeric',\r\n    month: 'short',\r\n    year: 'numeric'\r\n  });\r\n};\r\n\r\n// MetricsCards Component\r\nconst MetricsCards: React.FC<{\r\n  summaryMetrics: SummaryMetrics;\r\n  startDate: string;\r\n  endDate: string;\r\n}> = ({ summaryMetrics, startDate, endDate }) => (\r\n  <div className=\"grid grid-cols-2 gap-6 mb-6\">\r\n    <Card className=\"transition-all duration-200 hover:shadow-lg hover:scale-105 hover:border-blue-600\">\r\n      <CardHeader>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <IndianRupee className=\"h-5 w-5 text-black-500\" />\r\n          <CardTitle>Total Spend</CardTitle>\r\n        </div>\r\n        <CardDescription className=\"flex items-center mt-1\">\r\n          <CalendarDays className=\"h-3 w-3 mr-1\" />\r\n          {formatDate(startDate)} - {formatDate(endDate)}\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-1\">\r\n          <p className=\"text-3xl font-bold text-[#071952]\">\r\n            {formatValue(summaryMetrics.totalSpend)}\r\n          </p>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n    \r\n    <Card className=\"transition-all duration-200 hover:shadow-lg hover:scale-105 hover:border-blue-600\">\r\n      <CardHeader>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <TrendingUp className=\"h-5 w-5 text-black-500\" />\r\n          <CardTitle>Average ROAS</CardTitle>\r\n        </div>\r\n        <CardDescription className=\"flex items-center mt-1\">\r\n          <CalendarDays className=\"h-3 w-3 mr-1\" />\r\n          {formatDate(startDate)} - {formatDate(endDate)}\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-1\">\r\n          <p className=\"text-3xl font-bold text-[#071952]\">\r\n            {summaryMetrics.averageRoas.toFixed(2)}\r\n          </p>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  </div>\r\n);\r\n\r\n// MetricsTable Component\r\nconst MetricsTable: React.FC<{\r\n  campaigns: DisplayCampaignMetric[];\r\n  isLoading: boolean;\r\n}> = ({ campaigns, isLoading }) => (\r\n  <Card>\r\n    <CardContent className=\"p-0\">\r\n      <ScrollArea className=\"h-[300px] rounded-lg\">\r\n        {isLoading ? (\r\n          <TableSkeleton />\r\n        ) : (\r\n          <Table>\r\n            <TableHeader className=\"sticky top-0 bg-cyan-800 text-white font-medium z-10\">\r\n              <TableRow>\r\n                <TableCell className=\"font-semibold\">Campaign Name</TableCell>\r\n                <TableCell className=\"font-semibold\">Spend</TableCell>\r\n                <TableCell className=\"font-semibold\">ROAS</TableCell>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {campaigns.map((campaign, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell className=\"font-medium\">{campaign.campaignName}</TableCell>\r\n                  <TableCell>{formatValue(campaign.spend)}</TableCell>\r\n                  <TableCell>{campaign.roas}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        )}\r\n      </ScrollArea>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\n// Main Component\r\nconst CampaignMetricsPage: React.FC = () => {\r\n  // State Management\r\n  const [date, setDate] = useState<DateRange | undefined>({\r\n    from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n    to: new Date()\r\n  });\r\n  const [googleData, setGoogleData] = useState<GoogleData | null>(null);\r\n  const [facebookData, setFacebookData] = useState<FacebookAccount[]>([]);\r\n  const [selectedFacebookAccount, setSelectedFacebookAccount] = useState<string>(\"\");\r\n  const [isGoogleLoading, setIsGoogleLoading] = useState(false);\r\n  const [isFacebookLoading, setIsFacebookLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n\r\n  const { selectedBrandId } = useBrand();\r\n  const navigate = useNavigate();\r\n\r\n  const startDate = format(date?.from || new Date(), \"yyyy-MM-dd\");\r\n  const endDate = format(date?.to || new Date(), \"yyyy-MM-dd\");\r\n  \r\n  // API Base URL\r\n  const baseURL = import.meta.env.PROD\r\n    ? import.meta.env.VITE_API_URL\r\n    : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n  // Helper Functions\r\n  const calculateSummaryMetrics = (campaigns: DisplayCampaignMetric[]): SummaryMetrics => ({\r\n    totalSpend: campaigns.reduce((sum, item) => sum + parseFloat(item.spend || \"0\"), 0),\r\n    averageRoas: campaigns.reduce((sum, item) => sum + parseFloat(item.roas || \"0\"), 0) / (campaigns.length || 1),\r\n  });\r\n\r\n  const filterCampaigns = (campaigns: DisplayCampaignMetric[]): DisplayCampaignMetric[] => {\r\n    if (!searchTerm) return campaigns;\r\n    return campaigns.filter(campaign =>\r\n      campaign.campaignName.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n  };\r\n\r\n  // API Functions\r\n  const fetchGoogleMetrics = useCallback(async () => {\r\n    if (!selectedBrandId) return;\r\n    \r\n    setIsGoogleLoading(true);\r\n    try {\r\n      const response = await axios.post(\r\n        `${baseURL}/api/metrics/googleCampaign/${selectedBrandId}`,\r\n        { startDate, endDate },\r\n        { withCredentials: true }\r\n      );\r\n      setGoogleData(response.data.data);\r\n      setLastUpdated(new Date());\r\n    } catch (error) {\r\n      console.error('Error fetching Google metrics:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n    } finally {\r\n      setIsGoogleLoading(false);\r\n    }\r\n  }, [selectedBrandId, startDate, endDate, navigate, baseURL]);\r\n\r\n  const fetchFacebookMetrics = useCallback(async () => {\r\n    if (!selectedBrandId) return;\r\n    \r\n    setIsFacebookLoading(true);\r\n    try {\r\n      const response = await axios.post(\r\n        `${baseURL}/api/metrics/fbCampaign/${selectedBrandId}`,\r\n        { startDate, endDate },\r\n        { withCredentials: true }\r\n      );\r\n      \r\n      setFacebookData(response.data.data);\r\n      if (!selectedFacebookAccount && response.data.data.length > 0) {\r\n        setSelectedFacebookAccount(response.data.data[0].account_name);\r\n      }\r\n      setLastUpdated(new Date());\r\n    } catch (error) {\r\n      console.error('Error fetching Facebook metrics:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n    } finally {\r\n      setIsFacebookLoading(false);\r\n    }\r\n  }, [selectedBrandId, startDate, endDate, navigate, baseURL]);\r\n\r\n  // Initial Data Load and Refresh\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      await Promise.all([fetchGoogleMetrics(), fetchFacebookMetrics()]);\r\n    };\r\n\r\n    loadData();\r\n    const intervalId = setInterval(loadData, 5 * 60 * 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchGoogleMetrics, fetchFacebookMetrics]);\r\n\r\n  // Section Rendering Functions\r\n  const renderGoogleMetrics = () => {\r\n    if (!googleData) return null;\r\n\r\n    const campaigns: DisplayCampaignMetric[] = googleData.campaignData.map(campaign => ({\r\n      campaignName: campaign.campaignName,\r\n      spend: campaign.spend,\r\n      roas: campaign.roas\r\n    }));\r\n\r\n    const filteredCampaigns = filterCampaigns(campaigns);\r\n    const summaryMetrics = calculateSummaryMetrics(filteredCampaigns);\r\n\r\n    return (\r\n      <div className=\"mb-4\">\r\n        <MetricsCards\r\n          summaryMetrics={summaryMetrics}\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n        />\r\n        <MetricsTable\r\n          campaigns={filteredCampaigns}\r\n          isLoading={isGoogleLoading}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderFacebookMetrics = () => {\r\n    if (!facebookData || facebookData.length === 0) {\r\n      return (\r\n        <Card>\r\n          <CardContent className=\"p-6 text-center\">\r\n            <p className=\"text-gray-500\">No Facebook campaign data available</p>\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    }\r\n\r\n    const selectedAccount = facebookData.find(account => \r\n      account.account_name === selectedFacebookAccount\r\n    );\r\n    \r\n    if (!selectedAccount || !selectedAccount.campaigns) {\r\n      return renderEmptyMetrics();\r\n    }\r\n\r\n    const campaigns: DisplayCampaignMetric[] = selectedAccount.campaigns.map(campaign => ({\r\n      campaignName: campaign.campaign_name,\r\n      spend: campaign.spend || \"0\",\r\n      roas: campaign.purchase_roas?.[0]?.value || \"0\"\r\n    }));\r\n\r\n    const filteredCampaigns = filterCampaigns(campaigns);\r\n    const summaryMetrics = calculateSummaryMetrics(filteredCampaigns);\r\n\r\n    return (\r\n      <div>\r\n        <MetricsCards\r\n          summaryMetrics={summaryMetrics}\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n        />\r\n        <MetricsTable\r\n          campaigns={filteredCampaigns}\r\n          isLoading={isFacebookLoading}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderEmptyMetrics = () => {\r\n    const emptyMetrics: SummaryMetrics = {\r\n      totalSpend: 0,\r\n      averageRoas: 0\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <MetricsCards\r\n          summaryMetrics={emptyMetrics}\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n        />\r\n        <MetricsTable\r\n          campaigns={[]}\r\n          isLoading={isFacebookLoading}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Handle Facebook Account Switch\r\n  const handleFacebookAccountSwitch = (accountName: string) => {\r\n    setIsFacebookLoading(true);\r\n    setSelectedFacebookAccount(accountName);\r\n    setTimeout(() => setIsFacebookLoading(false), 500);\r\n  };\r\n\r\n  // Main Render\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 flex flex-col h-screen overflow-auto\">\r\n        <header className=\"bg-white border-b px-6 py-4\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <BriefcaseBusiness className=\"h-6 w-6 text-primary\" />\r\n              <h1 className=\"text-2xl font-bold\">Campaign Metrics</h1>\r\n            </div>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"relative\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"border px-4 py-2 rounded-lg w-64\"\r\n                  placeholder=\"Search Campaigns\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n                <MagnifyingGlassIcon className=\"absolute right-4 top-3 h-5 w-5 text-gray-500\" />\r\n              </div>\r\n              <DatePickerWithRange \r\n                date={date}\r\n                setDate={setDate}\r\n                defaultDate={{\r\n                  from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                  to: new Date(),\r\n                }}\r\n              />\r\n              {lastUpdated && (\r\n                <span className=\"text-sm text-gray-600\">\r\n                  Last updated: {lastUpdated.toLocaleTimeString()}\r\n                </span>\r\n              )}\r\n              <Button  \r\n                size=\"icon\"\r\n                onClick={() => {\r\n                  fetchGoogleMetrics();\r\n                  fetchFacebookMetrics();\r\n                }}\r\n              >\r\n                <RefreshCw className=\"h-4 w-4\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <div className=\"p-6 flex-1 overflow-auto\">\r\n          {/* Facebook Metrics Section */}\r\n          <div>\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FacebookLogo width=\"1.25rem\" height=\"1.25rem\"/>\r\n                <h2 className=\"text-xl font-bold\">Facebook Campaigns</h2>\r\n              </div>\r\n              {facebookData && facebookData.length > 0 && (\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"outline\">\r\n                      {selectedFacebookAccount || \"Select Account\"}\r\n                      <ChevronDown className=\"h-4 w-4 ml-1\" />\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent>\r\n                    {facebookData.map(account => (\r\n                      <DropdownMenuItem\r\n                        key={account.account_name}\r\n                        onClick={() => handleFacebookAccountSwitch(account.account_name)}\r\n                      >\r\n                        {account.account_name}\r\n                      </DropdownMenuItem>\r\n                    ))}\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n              )}\r\n            </div>\r\n            {renderFacebookMetrics()}\r\n          </div>\r\n          {/* Google Metrics Section */}\r\n          <div className=\"mt-8\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n              <GoogleLogo width=\"1.25rem\" height=\"1.25rem\"/>\r\n                <h2 className=\"text-xl font-bold\">Google Campaigns</h2>\r\n                <span className=\"text-black-500 font-bold md:uppercase\">\r\n                  - {googleData?.adAccountName}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            {renderGoogleMetrics()}\r\n          </div>\r\n\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CampaignMetricsPage;","import { useState, useEffect } from 'react'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { Search, Check } from 'lucide-react'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Input } from '@/components/ui/input'\r\nimport { useUser } from '@/context/UserContext'\r\nimport { GoogleLogo } from '@/pages/CampaignMetricsPage'\r\nimport { FacebookLogo } from '@/pages/CampaignMetricsPage'\r\n\r\ninterface ga4LogoProps {\r\n  width?: string | number;\r\n  height?: string | number;\r\n}\r\n\r\ninterface shopifyLogoProps {\r\n  width?: string | number;\r\n  height?: string | number;\r\n}\r\n\r\nexport const Ga4Logo: React.FC<ga4LogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n  <svg viewBox=\"0 0 24 24\" style={{ height, width }}>\r\n    <rect x=\"17\" y=\"2\" width=\"2rem\" height=\"2rem\" rx=\"2.5\" fill=\"#F9AB00\"></rect>\r\n    <path d=\"M9.5 13.5C9.5 12.1193 10.6193 11 12 11C13.3807 11 14.5 12.1193 14.5 13.5V19.5C14.5 20.8807 13.3807 22 12 22C10.6193 22 9.5 20.8807 9.5 19.5V13.5Z\" fill=\"#E37400\"></path>\r\n    <path d=\"M2 19.5C2 18.1193 3.11929 17 4.5 17C5.88071 17 7 18.1193 7 19.5C7 20.8807 5.88071 22 4.5 22C3.11929 22 2 20.8807 2 19.5Z\" fill=\"#E37400\"></path><path d=\"M6.92162 10C6.36184 10 5.95724 9.68838 5.95724 9.05977V8.55474H3.2304C2.49881 8.55474 2 8.1088 2 7.45332C2 7.07723 2.12193 6.70651 2.40459 6.22297C2.93666 5.29349 3.57403 4.31565 4.31116 3.23573C4.92637 2.31162 5.39747 2 6.20111 2C7.2209 2 7.88044 2.54265 7.88044 3.38617V7.02351H8.19082C8.72842 7.02351 9 7.34587 9 7.79181C9 8.23774 8.72288 8.55474 8.19082 8.55474H7.88044V9.05977C7.88044 9.68838 7.47585 10 6.92162 10ZM6.01267 7.09335V3.48287H5.97387C5.0095 4.8368 4.34996 5.83076 3.7015 7.03962V7.09335H6.01267Z\" fill=\"#E37400\"></path>\r\n  </svg>\r\n);\r\n\r\nexport const shopifyLogo: React.FC<shopifyLogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n  <svg viewBox=\"0 0 64 64\" style={{ height, width }}\r\n    xmlns=\"http://www.w3.org/2000/svg\" ><g>\r\n      <g><path d=\"M51.759,12.659c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631    c-0.36-0.362-1.063-0.254-1.337-0.171c-0.039,0.011-0.715,0.222-1.834,0.567c-1.096-3.167-3.027-6.077-6.426-6.077    c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844c-7.919,0-11.703,9.951-12.889,15.008    c-3.078,0.956-5.266,1.638-5.542,1.728C9.943,18.42,9.89,18.474,9.667,20.1C9.495,21.331,5,56.264,5,56.264l35.022,6.594    L59,58.731c0,0-6.661-45.261-6.703-45.572C52.255,12.849,51.983,12.677,51.759,12.659z M33.034,10.88    c0,0.119-0.002,0.231-0.002,0.344c-1.928,0.601-4.02,1.251-6.121,1.906c1.179-4.57,3.387-6.78,5.32-7.613    C32.716,6.743,33.034,8.505,33.034,10.88z M29.876,3.278c0.346,0,0.688,0.116,1.018,0.345c-2.539,1.199-5.258,4.224-6.408,10.261    c-1.679,0.522-3.319,1.034-4.838,1.506C20.994,10.783,24.188,3.278,29.876,3.278z M31.241,30.19c0,0-2.05-1.099-4.561-1.099    c-3.686,0-3.872,2.324-3.872,2.908c0,3.195,8.287,4.42,8.287,11.903c0,5.888-3.714,9.678-8.726,9.678    c-6.012,0-9.088-3.761-9.088-3.761l1.609-5.345c0,0,3.16,2.729,5.83,2.729c1.74,0,2.449-1.38,2.449-2.387    c0-4.168-6.799-4.354-6.799-11.203c0-5.761,4.116-11.341,12.428-11.341c3.199,0,4.783,0.923,4.783,0.923L31.241,30.19z     M35.11,10.578c0-0.211,0.002-0.417,0.002-0.644c0-1.966-0.273-3.551-0.709-4.807c1.752,0.219,2.919,2.223,3.67,4.528    C37.194,9.931,36.194,10.241,35.11,10.578z\" fill=\"#95C675\" /></g><g><path d=\"M51.759,12.659c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631    c-0.36-0.362-1.063-0.254-1.337-0.171c-0.039,0.011-0.715,0.222-1.834,0.567c-1.096-3.167-3.027-6.077-6.426-6.077    c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844c-7.919,0-9.873,9.951-11.059,15.008    c-3.078,0.956-5.44,6.219-5.719,6.307c-1.719,0.542-1.772,0.596-1.996,2.223C11.148,25.91,5,56.264,5,56.264l35.022,6.594    L59,58.731c0,0-6.661-45.261-6.703-45.572C52.255,12.849,51.983,12.677,51.759,12.659z M33.034,10.88    c0,0.119-0.002,0.231-0.002,0.344c-1.928,0.601-4.02,1.251-6.121,1.906c1.179-4.57,3.387-6.78,5.32-7.613    C32.716,6.743,33.034,8.505,33.034,10.88z M29.876,3.278c0.346,0,0.688,0.116,1.018,0.345c-2.539,1.199-5.258,4.224-6.408,10.261    c-1.679,0.522-3.319,1.034-4.838,1.506C20.994,10.783,24.188,3.278,29.876,3.278z M31.241,30.19c0,0-2.05-1.099-4.561-1.099    c-3.686,0-3.872,2.324-3.872,2.908c0,3.195,8.287,4.42,8.287,11.903c0,5.888-3.714,9.678-8.726,9.678    c-6.012,0-9.088-3.761-9.088-3.761l1.609-5.345c0,0,3.16,2.729,5.83,2.729c1.74,0,2.449-1.38,2.449-2.387    c0-4.168-6.799-4.354-6.799-11.203c0-5.761,4.116-11.341,12.428-11.341c3.199,0,4.783,0.923,4.783,0.923L31.241,30.19z     M35.11,10.578c0-0.211,0.002-0.417,0.002-0.644c0-1.966-0.273-3.551-0.709-4.807c1.752,0.219,2.919,2.223,3.67,4.528    C37.194,9.931,36.194,10.241,35.11,10.578z\" fill=\"#79B259\" /></g><path d=\"M40.022,62.857L59,58.731c0,0-6.661-45.261-6.703-45.572c-0.042-0.311-0.313-0.482-0.538-0.5   c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631c-0.192-0.194-0.479-0.249-0.75-0.251   c-0.72,1.22-0.571,3.537-0.571,3.537l-2.232,50.839L40.022,62.857z\" fill=\"#55932C\" /><path d=\"M33.583,2.977c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844   c-7.887,0-11.674,9.873-12.875,14.947l2.447-0.759c1.354-4.609,4.545-12.053,10.209-12.053c0.346,0,0.688,0.116,1.018,0.345   c-2.532,1.195-5.244,4.209-6.398,10.213l2.43-0.75c1.182-4.541,3.381-6.739,5.307-7.569c0.484,1.227,0.803,2.988,0.803,5.363   c0,0.108,0,0.211-0.002,0.314l2.078-0.643c0-0.2,0.002-0.4,0.002-0.617c0-1.966-0.273-3.551-0.709-4.807   c1.746,0.218,2.912,2.213,3.662,4.508l1.938-0.601C38.906,5.876,36.976,2.977,33.583,2.977z\" fill=\"#4A7A2B\" /><path d=\"M47.611,12.348c-0.474-0.037-0.793-0.06-0.793-0.06s-3.28-3.271-3.639-3.631   c-0.192-0.194-0.479-0.249-0.75-0.251c-0.72,1.22-0.571,3.537-0.571,3.537l-2.232,50.839l0.396,0.075l10.098-2.196L47.611,12.348z\" fill=\"#4C822A\" />\r\n    </g></svg>\r\n)\r\n\r\ninterface OtherPlatformModalContentProps {\r\n  platform: string;\r\n  onConnect: (platform: string, account: string, accountId: string) => void;\r\n  connectedId: string;\r\n}\r\n\r\ninterface GoogleAdsAccount {\r\n  name: string;\r\n  clientId: string;\r\n  hidden?: boolean;\r\n}\r\n\r\ninterface GoogleAnalyticsAccount {\r\n  propertyName: string\r\n  propertyId: string\r\n}\r\n\r\ninterface FacebookAdsAccount {\r\n  adname: string\r\n  id: string\r\n}\r\n\r\nexport default function OtherPlatformModalContent({\r\n  platform,\r\n  onConnect,\r\n  connectedId,\r\n}: OtherPlatformModalContentProps) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [googleAdsAccounts, setGoogleAdsAccounts] = useState<GoogleAdsAccount[]>([]);\r\n  const [googleAnalyticsAccounts, setGoogleAnalyticsAccounts] = useState<GoogleAnalyticsAccount[]>([]);\r\n  const [facebookAdsAccounts, setFacebookAdsAccounts] = useState<FacebookAdsAccount[]>([]);\r\n  const [showLoginButton, setShowLoginButton] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n\r\n  const user = useUser();\r\n\r\n  useEffect(() => {\r\n    const fetchGoogleAdsAccounts = async () => {\r\n      setLoading(true); // Start loading\r\n      try {\r\n        const userId = user.user?.id;\r\n        const response = await axios.post(\r\n          `${baseURL}/api/setup/google-accounts`,\r\n          { userId },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          setShowLoginButton(false);\r\n          setGoogleAdsAccounts(\r\n            response.data?.clientAccounts.filter((account: GoogleAdsAccount) => !account.hidden)\r\n          );\r\n        } else {\r\n          console.log('Unexpected status code:', response.status);\r\n        }\r\n      } catch (error) {\r\n        handleError(error, setShowLoginButton);\r\n      } finally {\r\n        setLoading(false); // End loading\r\n      }\r\n    };\r\n\r\n    const fetchGoogleAnalyticsAccounts = async () => {\r\n      setLoading(true); // Start loading\r\n      try {\r\n        const userId = user.user?.id;\r\n        const response = await axios.post(\r\n          `${baseURL}/api/setup/ga4-propertyIds`,\r\n          { userId },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          setShowLoginButton(false);\r\n          setGoogleAnalyticsAccounts(response.data.propertiesList || []);\r\n        } else {\r\n          console.log('Unexpected status code:', response.status);\r\n        }\r\n      } catch (error) {\r\n        handleError(error, setShowLoginButton);\r\n      } finally {\r\n        setLoading(false); // End loading\r\n      }\r\n    };\r\n\r\n    const fetchFacebookAdsAccounts = async () => {\r\n      setLoading(true); // Start loading\r\n      try {\r\n        const userId = user.user?.id;\r\n        const response = await axios.post(\r\n          `${baseURL}/api/setup/fb-ad-accounts`,\r\n          { userId },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        setFacebookAdsAccounts(response.data.adAccounts || []);\r\n      } catch (error) {\r\n        handleError(error, setShowLoginButton);\r\n      } finally {\r\n        setLoading(false); // End loading\r\n      }\r\n    };\r\n\r\n    if (platform.toLowerCase() === 'google ads') fetchGoogleAdsAccounts();\r\n    if (platform.toLowerCase() === 'google analytics') fetchGoogleAnalyticsAccounts();\r\n    if (platform.toLowerCase() === 'facebook') fetchFacebookAdsAccounts();\r\n  }, [platform, user]);\r\n\r\n  const handleError = (error: unknown, setShowLoginButton: (value: boolean) => void) => {\r\n    const axiosError = error as AxiosError;\r\n\r\n    if (axiosError.response) {\r\n      const { status, data } = axiosError.response;\r\n\r\n      if (status === 400) {\r\n        setShowLoginButton(true);\r\n      } else if (status === 403) {\r\n        setShowLoginButton(true);\r\n      } else {\r\n        console.error('Unhandled Error Status:', status);\r\n        console.error('Error Message:', data);\r\n      }\r\n    } else if (axiosError.request) {\r\n      console.error('No response received:', axiosError.request);\r\n    } else {\r\n      console.error('Unexpected Error:', axiosError.message);\r\n    }\r\n  };\r\n\r\n\r\n  const filteredAccounts = () => {\r\n    if (platform.toLowerCase() === 'google ads') {\r\n      if (!googleAdsAccounts || googleAdsAccounts.length === 0) {\r\n        return null;\r\n      }\r\n      return googleAdsAccounts.filter((account) =>\r\n        account.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    } else if (platform.toLowerCase() === 'google analytics') {\r\n      if (!googleAnalyticsAccounts || googleAnalyticsAccounts.length === 0) {\r\n        return null;\r\n      }\r\n      return googleAnalyticsAccounts.filter((account) =>\r\n        account.propertyName.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    } else if (platform.toLowerCase() === 'facebook') {\r\n      if (!facebookAdsAccounts || facebookAdsAccounts.length === 0) {\r\n        return null; // Return null if there are no Facebook Ads accounts\r\n      }\r\n      return facebookAdsAccounts.filter((account) =>\r\n        account.adname.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const handleConnect = (account: GoogleAdsAccount | GoogleAnalyticsAccount | FacebookAdsAccount) => {\r\n    let accountId: string;\r\n    let displayName: string;\r\n\r\n    if ('clientId' in account) {\r\n      accountId = account.clientId;\r\n      displayName = `${account.name} (${accountId})`;\r\n    } else if ('propertyId' in account) {\r\n      accountId = account.propertyId;\r\n      displayName = `${account.propertyName} (${accountId})`;\r\n    } else if ('id' in account) {\r\n      accountId = account.id;\r\n      displayName = `${account.adname}`;\r\n    } else {\r\n      accountId = '';\r\n      displayName = '';\r\n    }\r\n\r\n    onConnect(platform, displayName, accountId);\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n\r\n      const response = await axios.get(`${baseURL}/api/auth/google?context=brandSetup`, { withCredentials: true });\r\n      const { authUrl } = response.data;\r\n\r\n      window.location.href = authUrl;\r\n    } catch (error) {\r\n      console.error('Error getting Google Auth URL:', error);\r\n    }\r\n  }\r\n\r\n  const handleFbLogin = async () => {\r\n    try {\r\n      const response = await axios.get(`${baseURL}/api/auth/facebook`, { withCredentials: true });\r\n      if (response.data.success) {\r\n        window.location.href = response.data.authURL;\r\n      } else {\r\n        console.error('Failed to get Facebook Auth URL');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting Google Auth URL:', error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    loading ? <div>Loading...</div> : (\r\n      <>\r\n        {showLoginButton ? (\r\n          <Button\r\n            size=\"sm\"\r\n            onClick={platform.toLowerCase() === 'facebook' ? handleFbLogin : handleGoogleLogin}\r\n            className=\"flex items-center gap-2 bg-white text-black border border-green-800 hover:bg-green-50\"\r\n          >\r\n            {platform.toLowerCase() === 'google ads' && (\r\n              <>\r\n                <GoogleLogo height=\"1rem\" width=\"1rem\" />\r\n                Connect to your Google Ads account\r\n              </>\r\n            )}\r\n            {platform.toLowerCase() === 'google analytics' && (\r\n              <>\r\n                <Ga4Logo height=\"1rem\" width=\"1rem\" />\r\n                Connect to your GA4 account\r\n              </>\r\n            )}\r\n            {platform.toLowerCase() === 'facebook' && (\r\n              <>\r\n                <FacebookLogo height=\"1rem\" width=\"1rem\" />\r\n                Connect to your Facebook account\r\n              </>\r\n            )}\r\n          </Button>\r\n        ) : (\r\n          // Handle the case where the button is not shown\r\n          <>\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Search accounts...\"\r\n                className=\"pl-10\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"max-h-[50vh] overflow-auto\">\r\n              {filteredAccounts()?.map((account) => {\r\n                // Extract platform-specific details\r\n                const isGoogleAds = platform.toLowerCase() === 'google ads';\r\n                const isFacebook = platform.toLowerCase() === 'facebook';\r\n                // const isGoogleAnalytics = platform.toLowerCase() === 'google analytics';\r\n\r\n                const accountId = isGoogleAds\r\n                  ? (account as GoogleAdsAccount).clientId\r\n                  : isFacebook\r\n                    ? (account as FacebookAdsAccount).id\r\n                    : (account as GoogleAnalyticsAccount).propertyId;\r\n\r\n                const accountName = isGoogleAds\r\n                  ? (account as GoogleAdsAccount).name\r\n                  : isFacebook\r\n                    ? (account as FacebookAdsAccount).adname\r\n                    : (account as GoogleAnalyticsAccount).propertyName;\r\n\r\n                const platformLogo = isGoogleAds ? (\r\n                  <GoogleLogo height=\"1rem\" width=\"1rem\" />\r\n                ) : isFacebook ? (\r\n                  <FacebookLogo height=\"1rem\" width=\"1rem\" />\r\n                ) : (\r\n                  <Ga4Logo height=\"1rem\" width=\"1rem\" />\r\n                );\r\n\r\n                return (\r\n                  <div\r\n                    key={accountId}\r\n                    className=\"flex items-center justify-between p-2 rounded hover:bg-gray-50\"\r\n                  >\r\n                    <span>\r\n                      <div className=\"flex flex-row items-center gap-3\">\r\n                        {platformLogo}\r\n                        {isFacebook\r\n                          ? `${accountName}`\r\n                          : `${accountName} (${accountId})`} \r\n                      </div>\r\n                    </span>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      onClick={() => handleConnect(account)}\r\n                      disabled={connectedId.includes(accountId)}\r\n                      className=\"bg-blue-600\"\r\n                    >\r\n                      {connectedId.includes(accountId) && <Check className=\"h-4 w-4 mr-2\" />}\r\n                      {connectedId.includes(accountId) ? 'Connected' : 'Connect'}\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </>\r\n    )\r\n  );\r\n}","import React, { useState } from 'react'\r\nimport { Upload, Check, ArrowRight, Building2 } from 'lucide-react'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\r\nimport { useToast } from '@/hooks/use-toast'\r\nimport ShopifyModalContent from './ShopifyModalContent'\r\nimport OtherPlatformModalContent from './OtherPlatformModalContent'\r\nimport { FacebookLogo, GoogleLogo } from '@/pages/CampaignMetricsPage'\r\nimport { Ga4Logo, shopifyLogo } from './OtherPlatformModalContent'\r\nimport axios from 'axios'\r\n\r\nconst platforms = [\r\n  { name: 'Shopify', color: 'from-emerald-50 to-emerald-100', icon: shopifyLogo, border: 'border-emerald-600', description: 'Connect your e-commerce store' },\r\n  { name: 'Facebook', color: 'from-blue-50 to-blue-100', icon: FacebookLogo, border: 'border-blue-600', description: 'Link your ad accounts' },\r\n  { name: 'Google Ads', color: 'from-rose-50 to-rose-100', icon: GoogleLogo, border: 'border-rose-600', description: 'Import campaign data' },\r\n  { name: 'Google Analytics', color: 'from-yellow-50 to-yellow-100', icon: Ga4Logo, border: 'border-yellow-600', description: 'Track website metrics' },\r\n];\r\n\r\nexport default function BrandSetup() {\r\n  const [openModal, setOpenModal] = useState<string | null>(null)\r\n  const [connectedAccounts, setConnectedAccounts] = useState<Record<string, string[]>>({})\r\n  const [brandName, setBrandName] = useState('')\r\n  const [brandLogo, setBrandLogo] = useState<File | null>(null)\r\n  const [googleAdId , setGoogleAdId] = useState<string>('')\r\n  const [ga4Id , setGa4Id] = useState<string>('')\r\n  const [fbAdId , setFBAdId] = useState<string[]>([])\r\n  const { toast } = useToast()\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n\r\n  const handleConnect = (platform: string, account: string, accountId: string) => {\r\n    setConnectedAccounts(prev => ({\r\n      ...prev,\r\n      [platform]: [...(prev[platform] || []), account]\r\n    }))\r\n    if (platform.toLowerCase() === 'google ads') {\r\n      setGoogleAdId(accountId);\r\n    } else if (platform.toLowerCase() === 'google analytics') {\r\n      setGa4Id(accountId);\r\n    } else {\r\n      setFBAdId(prev => [...prev, accountId]);\r\n    }\r\n    toast({ description: `Successfully connected ${account} to ${platform}`, variant: \"default\" })\r\n  }\r\n\r\n  const handleLogoUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0]\r\n    if (file) {\r\n      setBrandLogo(file)\r\n      toast({ description: 'Logo uploaded successfully', variant:\"default\" })\r\n    }\r\n  }\r\n\r\n  const isConnected = (platform: string) => {\r\n    return (connectedAccounts[platform]?.length || 0) > 0\r\n  }\r\n\r\n  function getConnectedId(platformName: string): string {\r\n    switch (platformName.toLowerCase()) {\r\n      case 'google ads':\r\n        return googleAdId;\r\n      case 'google analytics':\r\n        return ga4Id;\r\n      case 'facebook':\r\n        return fbAdId.join(',');\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    if (!brandName || Object.keys(connectedAccounts).length === 0) {\r\n      return toast({ description: 'Please complete all fields before submitting.', variant: \"destructive\" });\r\n    }\r\n\r\n    const payload = {\r\n      name: brandName,\r\n      logoUrl: brandLogo || '',\r\n      googleAdAccount: googleAdId || '',\r\n      ga4Account: { PropertyID: ga4Id || '' },\r\n      fbAdAccounts: fbAdId.map((accountId) => ( accountId )), \r\n    };\r\n  \r\n    try {\r\n      const response = await axios.post(\r\n        `${baseURL}/api/brands/add`,\r\n        payload, \r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n  \r\n      toast({ description: 'Brand setup completed successfully!', variant: \"default\" });\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast({ description: 'Error creating brand. Please try again.', variant: \"destructive\" });\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Card className=\"border-2 border-gray-100 shadow-lg\">\r\n      <CardHeader className=\"space-y-4 pb-8\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"rounded-full bg-primary/10 p-2\">\r\n            <Building2 className=\"h-6 w-6 text-primary\" />\r\n          </div>\r\n          <div>\r\n            <CardTitle className=\"text-2xl font-bold text-gray-900\">Brand Setup</CardTitle>\r\n            <CardDescription className=\"mt-1 text-gray-500\">\r\n              Connect your accounts and configure your brand settings\r\n            </CardDescription>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-4 h-2 w-full rounded-full bg-gray-100\">\r\n          <div \r\n            className=\"h-2 rounded-full bg-primary transition-all bg-green-700\"\r\n            style={{ \r\n              width: `${Math.min(\r\n                ((!!brandName ? 25 : 0) + \r\n                (!!brandLogo ? 25 : 0) + \r\n                (Object.keys(connectedAccounts).length * 12.5)), \r\n                100)}%` \r\n            }}\r\n          />\r\n        </div>\r\n      </CardHeader>\r\n\r\n      <CardContent className=\"space-y-4\">\r\n        <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\r\n          <div>\r\n            <label className=\"text-sm font-medium text-gray-700\">Brand Name</label>\r\n            <Input\r\n              id=\"brandName\"\r\n              placeholder=\"Enter your brand name\"\r\n              value={brandName}\r\n              onChange={(e) => setBrandName(e.target.value)}\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"text-sm font-medium text-gray-700\">Brand Logo</label>\r\n            <div className=\"flex items-center gap-3\">\r\n              <Input\r\n                id=\"brandLogo\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleLogoUpload}\r\n                className=\"hidden\"\r\n              />\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"flex-1\"\r\n                onClick={() => document.getElementById('brandLogo')?.click()}\r\n              >\r\n                <Upload className=\"h-4 w-4 mr-2\" />\r\n                {brandLogo ? 'Change Logo' : 'Upload Logo'}\r\n              </Button>\r\n              {brandLogo && (\r\n                <div className=\"flex items-center space-x-2 px-3 py-2 bg-gray-50 rounded-md\">\r\n                  <Check className=\"h-4 w-4 text-green-500\" />\r\n                  <span className=\"text-sm text-gray-600\">{brandLogo.name}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Connect Platforms</h3>\r\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\r\n            {platforms.map((platform) => (\r\n              <Dialog \r\n                key={platform.name} \r\n                open={openModal === platform.name} \r\n                onOpenChange={(isOpen) => setOpenModal(isOpen ? platform.name : null)}\r\n              >\r\n                <DialogTrigger asChild>\r\n                  <Button \r\n                    variant=\"outline\"\r\n                    className={`w-full h-32 bg-gradient-to-br ${platform.color} hover:shadow-md transition-all duration-200 border ${platform.border} relative group`}\r\n                  >\r\n                    <div className=\"flex flex-col items-center space-y-2\">\r\n                      <platform.icon width='1.5rem' height='1.5rem' />\r\n                      <span className=\"font-medium\">{platform.name}</span>\r\n                      <span className=\"text-xs text-gray-600\">{platform.description}</span>\r\n                    </div>\r\n                    {isConnected(platform.name) && (\r\n                      <div className=\"absolute top-2 right-2 bg-white rounded-full p-1 shadow-sm\">\r\n                        <Check className=\"h-4 w-4 text-green-500\" />\r\n                      </div>\r\n                    )}\r\n                  </Button>\r\n                </DialogTrigger>\r\n                <DialogContent className=\"sm:max-w-[600px]\">\r\n                  <DialogHeader>\r\n                    <DialogTitle>Connect to {platform.name}</DialogTitle>\r\n                    <DialogDescription>\r\n                      {platform.name === 'Shopify' \r\n                        ? 'Enter your Shopify store name and login to connect.'\r\n                        : 'Select an account to connect with your brand.'}\r\n                    </DialogDescription>\r\n                  </DialogHeader>\r\n                  {platform.name === 'Shopify' ? (\r\n                    <ShopifyModalContent onConnect={handleConnect} />\r\n                  ) : (\r\n                    <OtherPlatformModalContent \r\n                      platform={platform.name} \r\n                      onConnect={handleConnect} \r\n                      connectedId={getConnectedId(platform.name)} \r\n                    />\r\n                  )}\r\n                </DialogContent>\r\n              </Dialog>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <Button \r\n          className=\"w-full mt-8 text-sm font-medium\"\r\n          disabled={!brandName || !brandLogo || Object.keys(connectedAccounts).length === 0}\r\n          onClick={handleSubmit}\r\n        >\r\n          Complete Setup\r\n          <ArrowRight className=\"ml-2 h-5 w-5\" />\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","export interface AnalyticsCardProps {\r\n    title: string;\r\n    description: string;\r\n    icon: React.ReactNode;\r\n    bgColor: string;\r\n    ribbonText?: string; \r\n  }\r\nexport function AnalyticsCard({ title, description, icon, bgColor, ribbonText }: AnalyticsCardProps) {\r\n    return (\r\n      <div\r\n        className={`relative overflow-hidden shadow-md rounded-lg h-36 p-4 transition-transform transform hover:scale-105 ${bgColor} bg-gradient-to-br`}\r\n      >\r\n        {ribbonText && (\r\n          <div className=\"absolute top-0 right-0 bg-blue-500 text-white text-xs font-bold px-2 py-1 rounded-bl-lg\">\r\n            {ribbonText}\r\n          </div>\r\n        )}\r\n        <div className=\"flex items-start space-x-4 h-full\">\r\n          <div className=\"flex items-center justify-center w-16 h-16 bg-white rounded-full shadow-lg\">\r\n            {icon}\r\n          </div>\r\n          <div className=\"flex-1\">\r\n            <h3 className=\"text-lg font-semibold text-gray-800\">{title}</h3>\r\n            <p className=\"mt-2 text-sm text-gray-600\">{description}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-transparent via-white to-transparent\" />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  ","\r\n\r\nimport { DollarSign, TrendingUp } from 'lucide-react'\r\nimport { MdCampaign, MdInsights } from \"react-icons/md\"\r\nimport BrandSetup from './components/BrandForm.tsx'\r\nimport { AnalyticsCard, AnalyticsCardProps } from './components/AnalyticsCard.tsx'\r\nimport { useUser } from '@/context/UserContext.tsx'\r\n\r\n\r\nexport default function Dashboard() {\r\n  const { user } = useUser()\r\n  const insights: AnalyticsCardProps[] = [\r\n    {\r\n      title: \"Revenue Tracking\",\r\n      description: \"Monitor your sales performance across all channels\",\r\n      icon: <DollarSign className=\"h-8 w-8 text-green-500\" />,\r\n      bgColor: \"from-green-200 to-green-100\",\r\n    },\r\n    {\r\n      title: \"Ad Performance\",\r\n      description: \"Analyze the effectiveness of your ad campaigns\",\r\n      icon: <MdCampaign className=\"h-8 w-8 text-yellow-500\" />,\r\n      bgColor: \"from-yellow-200 to-yellow-100\",\r\n    },\r\n    {\r\n      title: \"Customer Insights\",\r\n      description: \"Understand your audience and their behavior\",\r\n      icon: <MdInsights className=\"h-8 w-8 text-purple-500\" />,\r\n      bgColor: \"from-purple-200 to-purple-100\",\r\n    },\r\n    {\r\n      title: \"Growth Metrics\",\r\n      description: \"Track your business growth and identify opportunities\",\r\n      icon: <TrendingUp className=\"h-8 w-8 text-amber-500\" />,\r\n      bgColor: \"from-amber-200 to-amber-100\",\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <div className=\"flex-col md:flex\">\r\n      <div className=\"sticky top-0 z-10 border-b bg-white/80 backdrop-blur-sm\">\r\n        <div className=\"lg:px-8\">\r\n          <div className=\"flex h-16 items-center justify-between\">\r\n            <h1 className=\"text-2xl font-bold tracking-tight text-gray-900\">\r\n              Welcome back, <span className=\"text-primary\">{user?.username.split(' ')[0] || 'user'}</span>\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <div className=\"flex-1 space-y-4 p-8 pt-6\">\r\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n            {insights.map((insight, index) => (\r\n              <AnalyticsCard\r\n                key={index}\r\n                title={insight.title}\r\n                description={insight.description}\r\n                icon={insight.icon}\r\n                bgColor={insight.bgColor}\r\n                ribbonText={insight.ribbonText} />\r\n            ))}\r\n          </div>\r\n          <BrandSetup />\r\n        </div>\r\n      </div>\r\n      )\r\n}\r\n\r\n","import React from \"react\";\r\nimport LandingPage from \"./dashboard\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\";\r\nimport { useUser } from \"@/context/UserContext\";\r\nimport Dashboard from \"./BrandSetUpDashboard\";\r\n const GeneralDashboard : React.FC=()=>{\r\n\r\n  const  {user} = useUser();\r\n  console.log(user)\r\n\r\n    return (\r\n        <div className=\"flex h-screen\"> \r\n        <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n       {user?.brands?.length === 0 ?<Dashboard /> : <LandingPage />}\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\nexport default GeneralDashboard;","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { cn } from \"@/lib/utils\"\nimport { CheckIcon } from \"@radix-ui/react-icons\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <CheckIcon className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import React, { useState, useMemo } from 'react';\r\nimport { ArrowUp, ArrowDown, ArrowUpDown, ThumbsDown, Award } from 'lucide-react';\r\nimport { PageMetric } from '@/pages/LandingPageSession/LandingPageSession';\r\n\r\ninterface TableProps {\r\n  columns: string[];\r\n  data: any[];\r\n  rowsToShow?: number;\r\n  allTimeData?: PageMetric[]\r\n}\r\n\r\nconst getConditionalTextColor = (value: number, average: number) => {\r\n  if (value > average) return 'text-green-600';\r\n  if (value < average) return 'text-red-600';\r\n  return 'text-yellow-600';\r\n};\r\n\r\n\r\n\r\nconst getConditionalIcon = (value: number, average: number) => {\r\n  if (value > average) return <ArrowUp className=\"w-4 h-4 text-green-600\" />;\r\n  if (value < average) return <ArrowDown className=\"w-4 h-4 text-red-600\" />;\r\n  return null;\r\n};\r\n\r\nconst ReportTable: React.FC<TableProps> = ({\r\n  columns,\r\n  data,\r\n  rowsToShow,\r\n  allTimeData\r\n}) => {\r\n  const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\r\n  const [filterLabel, setFilterLabel] = useState<string | null>(null);\r\n  const [filterType, setFilterType] = useState<string | null>(null);\r\n\r\n\r\n  const comparisonColumns = ['Add To Cart Rate', 'Checkout Rate', 'Purchase Rate'];\r\n\r\n  const parsePercentage = (value: string): number => {\r\n    return parseFloat(value?.replace('%', '').trim()) || 0;\r\n  };\r\n\r\n  const averageValues = useMemo(() => {\r\n    const averages: Record<string, number> = {};\r\n    comparisonColumns.forEach((key) => {\r\n      averages[key] =\r\n        data.reduce((sum, item) => sum + parsePercentage(item?.[key] || '0'), 0) / data.length || 0;\r\n    });\r\n    return averages;\r\n  }, [data]);\r\n\r\n  const allTimeAverageValues = useMemo(() => {\r\n    const averages: Record<string, number> = {};\r\n    comparisonColumns.forEach((key) => {\r\n      if (allTimeData) {\r\n        averages[key] =\r\n          allTimeData.reduce((sum, item) => sum + parsePercentage(item[key] || '0'), 0) / allTimeData.length;\r\n      } else {\r\n        averages[key] = 0;\r\n      }\r\n    });\r\n    return averages;\r\n  }, [allTimeData])\r\n\r\n  const rowPerformanceLabels = useMemo(() => {\r\n    return data.map((item, _) => {\r\n      const currentPerformance = comparisonColumns.some((column) => {\r\n        const value = parsePercentage(item[column] || '0');\r\n        const average = averageValues[column];\r\n        return value > average;\r\n      });\r\n\r\n      const isWorstPerformingCurrent = comparisonColumns.every((column) => {\r\n        const value = parsePercentage(item[column] || '0');\r\n        const average = averageValues[column];\r\n        return value < average;\r\n      });\r\n\r\n      const currentLabel = currentPerformance ? 'Current Top' : isWorstPerformingCurrent ? 'Current Worst' : '';\r\n\r\n      // Adjust all-time performance labels to ensure consistency\r\n      const allTimePerformance = comparisonColumns.some((column) => {\r\n        const value = parsePercentage(item[column] || '0');\r\n        const allTimeAverage = allTimeAverageValues[column];\r\n        return value > allTimeAverage;\r\n      });\r\n\r\n      const isWorstPerformingAllTime = comparisonColumns.every((column) => {\r\n        const value = parsePercentage(item[column] || '0');\r\n        const allTimeAverage = allTimeAverageValues[column];\r\n        return value < allTimeAverage;\r\n      });\r\n\r\n\r\n      // Assign labels for all-time performance\r\n      const allTimeLabel =\r\n        allTimePerformance\r\n          ? 'All Time Top'\r\n          : isWorstPerformingAllTime\r\n            ? 'All Time Worst'\r\n            : '';\r\n\r\n      return {\r\n        currentLabel,\r\n        allTimeLabel,\r\n      };\r\n    });\r\n  }, [data, allTimeData, averageValues, allTimeAverageValues]);\r\n\r\n\r\n\r\n\r\n\r\n  const parsedData = useMemo(() =>\r\n    data.map((item, index) => ({\r\n      ...item,\r\n      currentPerformanceLabel: rowPerformanceLabels?.[index]?.currentLabel || null,\r\n      allTimePerformanceLabel: rowPerformanceLabels?.[index]?.allTimeLabel || null,\r\n      Sessions: Number(item?.Sessions || 0),\r\n      'Add To Cart Rate': parsePercentage(item?.['Add To Cart Rate'] || '0'),\r\n      'Checkout Rate': parsePercentage(item?.['Checkout Rate'] || '0'),\r\n      'Purchase Rate': parsePercentage(item?.['Purchase Rate'] || '0'),\r\n    })), [data, rowPerformanceLabels]);\r\n\r\n\r\n\r\n  const sortedData = useMemo(() => {\r\n    if (sortColumn) {\r\n      return [...parsedData].sort((a, b) => {\r\n        const aValue = typeof a[sortColumn] === 'number'\r\n          ? a[sortColumn]\r\n          : parseFloat((a[sortColumn] || '0').toString().replace('%', '').trim());\r\n        const bValue = typeof b[sortColumn] === 'number'\r\n          ? b[sortColumn]\r\n          : parseFloat((b[sortColumn] || '0').toString().replace('%', '').trim());\r\n\r\n        if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\r\n        if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\r\n        return 0;\r\n      });\r\n    }\r\n    return parsedData;\r\n  }, [parsedData, sortColumn, sortDirection]);\r\n\r\n  const handleSort = (column: string) => {\r\n    if (!isNumericColumn(column)) return;\r\n\r\n    if (sortColumn === column) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortColumn(column);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const isNumericColumn = (column: string) => {\r\n    return [\r\n      'Add To Cart',\r\n      'Checkouts',\r\n      'Sessions',\r\n      'Purchases',\r\n      'Visitors',\r\n      ...comparisonColumns,\r\n    ].includes(column);\r\n  };\r\n\r\n  const handleClickLabel = (label: string, type: string) => {\r\n    if (filterLabel === label && filterType === type) {\r\n      setFilterLabel(null);\r\n      setFilterType(null);\r\n    } else {\r\n      setFilterLabel(label);\r\n      setFilterType(type);\r\n    }\r\n  };\r\n\r\n\r\n  const filteredData = useMemo(() => {\r\n    if (filterLabel) {\r\n      return sortedData.filter((item) => {\r\n        if (filterType === 'current') {\r\n          return item.currentPerformanceLabel === filterLabel;\r\n        }\r\n        if (filterType === 'allTime') {\r\n          return item.allTimePerformanceLabel === filterLabel;\r\n        }\r\n        return false;\r\n      });\r\n    }\r\n    return sortedData;\r\n  }, [sortedData, filterLabel, filterType]);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"rounded-md overflow-auto\" style={{ maxHeight: 'calc(100vh - 160px)' }}>\r\n      <table className=\"w-full text-center shadow-lg rounded-lg overflow-auto\">\r\n        <thead className=\"bg-white sticky top-0 z-10\">\r\n          <tr>\r\n            {allTimeData &&<th className=\"font-bold p-3 text-gray-800 text-sm min-w-[160px] border-b-2\">\r\n              Performance Label\r\n            </th>}\r\n            {columns.map((column) => (\r\n              <th\r\n                key={column}\r\n                className={`font-bold p-3 text-gray-800 text-sm min-w-[160px] border-b-2 capitalize ${isNumericColumn(column) ? 'cursor-pointer' : ''}`}\r\n                onClick={() => handleSort(column)}\r\n                style={{ position: 'sticky', top: 0 }}\r\n              >\r\n                <div className=\"flex items-center justify-center\">\r\n                  {column}\r\n                  {isNumericColumn(column) && (\r\n                    <span className=\"ml-2\">\r\n                      {sortColumn === column ? (\r\n                        sortDirection === 'asc' ? <ArrowUp className=\"w-4 h-4 text-blue-600\" /> : <ArrowDown className=\"w-4 h-4 text-blue-600\" />\r\n                      ) : (\r\n                        <ArrowUpDown className=\"w-4 h-4 text-gray-500\" />\r\n                      )}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"bg-white divide-y divide-gray-200\">\r\n          {filteredData.slice(0, rowsToShow).map((item, index) => (\r\n            <tr\r\n              key={index}\r\n              className={`${index % 2 === 0 ? 'bg-gray-50' : 'bg-white'} hover:bg-gray-100 transition-colors duration-200 rounded-md`}\r\n            >\r\n             {allTimeData &&\r\n              <td className=\"p-3 text-sm font-normal\">\r\n                <div className=\"flex flex-col items-center gap-1.5 min-w-[150px]\">\r\n                  {item.currentPerformanceLabel === 'Current Top' && (\r\n                    <span\r\n                      onClick={() => handleClickLabel('Current Top', 'current')}\r\n                      className={`flex items-center gap-2 px-3 py-1 bg-green-100 text-green-800 text-xs font-normal rounded-full cursor-pointer ${filterLabel === 'Current Top' && filterType === 'current' ? 'ring-1 ring-green-500' : ''\r\n                        }`}\r\n                    >\r\n                      <ArrowUp size={16} />\r\n                      <span>Current Top</span>\r\n                    </span>\r\n                  )}\r\n                  {item.currentPerformanceLabel === 'Current Worst' && (\r\n                    <span\r\n                      onClick={() => handleClickLabel('Current Worst', 'current')}\r\n                      className={`flex items-center gap-2 px-3 py-1 bg-red-100 text-red-800 text-xs font-normal rounded-full cursor-pointer ${filterLabel === 'Current Worst' && filterType === 'current' ? 'ring-1 ring-red-500' : ''\r\n                        }`}\r\n                    >\r\n                      <ArrowDown size={16} />\r\n                      <span>Current Worst</span>\r\n                    </span>\r\n                  )}\r\n                  {item.allTimePerformanceLabel === 'All Time Top' && (\r\n                    <span\r\n                      onClick={() => handleClickLabel('All Time Top', 'allTime')}\r\n                      className={`flex items-center gap-2 px-3 py-1 bg-blue-100 text-blue-800 text-xs font-normal rounded-full cursor-pointer  ${filterLabel === 'All Time Top' && filterType === 'allTime' ? 'ring-1 ring-blue-500' : ''\r\n                        }`}\r\n                    >\r\n                      <Award size={16} />\r\n                      <span>All Time Top</span>\r\n                    </span>\r\n                  )}\r\n                  {item.allTimePerformanceLabel === 'All Time Worst' && (\r\n                    <span\r\n                      onClick={() => handleClickLabel('All Time Worst', 'allTime')}\r\n                      className={`flex items-center gap-2 px-3 py-1 bg-orange-100 text-orange-800 text-xs font-normal rounded-full cursor-pointer ${filterLabel === 'All Time Worst' && filterType === 'allTime' ? 'ring-1 ring-orange-500' : ''\r\n                        }`}\r\n                    >\r\n                      <ThumbsDown size={16} />\r\n                      <span>All Time Worst</span>\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </td>}\r\n              {columns.map((column) => {\r\n                const cellValue = item[column as keyof typeof item];\r\n                const isComparisonColumn = comparisonColumns.includes(column);\r\n\r\n                return (\r\n                  <td\r\n                    key={column}\r\n                    className={`p-3 text-sm font-normal ${isComparisonColumn\r\n                      ? getConditionalTextColor(cellValue as number, averageValues[column])\r\n                      : 'text-gray-800'\r\n                      }`}\r\n                  >\r\n                    <div className=\"flex items-center justify-center gap-2\">\r\n                      {isComparisonColumn ? `${(cellValue as number).toFixed(2)}%` : cellValue}\r\n                      {isComparisonColumn && getConditionalIcon(cellValue as number, averageValues[column])}\r\n                    </div>\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ReportTable);\r\n","import * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"@radix-ui/react-icons\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDownIcon className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUpIcon className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDownIcon className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <CheckIcon className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Filter } from 'lucide-react'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\n\r\nexport interface FilterItem {\r\n  column: string\r\n  operator: '>' | '<' | '=' \r\n  value: string\r\n}\r\n\r\ninterface FilterComponentProps {\r\n  columns: string[],\r\n  filters: FilterItem[];\r\n  setFilters: (filters: FilterItem[]) => void;\r\n  onFiltersChange: (filters: FilterItem[]) => void\r\n}\r\n\r\nexport function FilterComponent({ columns, onFiltersChange,filters,setFilters }: FilterComponentProps) {\r\n  const [filterColumn, setFilterColumn] = useState<string>('')\r\n  const [filterOperator, setFilterOperator] = useState<FilterItem['operator']>('>')\r\n  const [filterValue, setFilterValue] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    onFiltersChange(filters)\r\n  }, [filters, onFiltersChange])\r\n\r\n  const addFilter = () => {\r\n    if (filterColumn && filterValue) {\r\n      setFilters([...filters, { column: filterColumn, operator: filterOperator, value: filterValue }])\r\n      setFilterColumn('')\r\n      setFilterValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DropdownMenu>\r\n        <DropdownMenuTrigger asChild>\r\n          <Button variant=\"outline\" className=\"flex items-center gap-2\">\r\n            <Filter className=\"h-4 w-4\" />\r\n            <span>Add Filter</span>\r\n          </Button>\r\n        </DropdownMenuTrigger>\r\n        <DropdownMenuContent className=\"w-80 p-4\">\r\n          <div className=\"flex flex-col gap-4\">\r\n            <Select value={filterColumn} onValueChange={(value) => {\r\n              setFilterColumn(value)\r\n            }}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select column\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {columns.map((column) => (\r\n                  <SelectItem key={column} value={column}>{column}</SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n            <Select value={filterOperator} onValueChange={(value) => setFilterOperator(value as FilterItem['operator'])}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select operator\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n\r\n                    <SelectItem value=\">\">Greater than</SelectItem>\r\n                    <SelectItem value=\"<\">Less than</SelectItem>\r\n                    <SelectItem value=\"=\">Equal to</SelectItem>\r\n            \r\n            \r\n              </SelectContent>\r\n            </Select>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Enter filter value\"\r\n              value={filterValue}\r\n              onChange={(e) => setFilterValue(e.target.value)}\r\n            />\r\n            <Button onClick={addFilter}>Add Filter</Button>\r\n          </div>\r\n        </DropdownMenuContent>\r\n      </DropdownMenu>\r\n    </div>\r\n  )\r\n}","import { useState, useCallback, useEffect, useMemo } from \"react\"\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport { ChevronDown, Columns, RefreshCw, ShoppingCart, X } from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\nimport ReportTable from \"@/components/dashboard_component/ReportTable\"\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\"\r\nimport { Ga4Logo } from \"../GeneralisedDashboard/components/OtherPlatformModalContent\"\r\n\r\ninterface EcommerceMetric {\r\n  \"Date\": string\r\n  \"Add To Carts\": string\r\n  \"Checkout\": string\r\n  \"Sessions\": string\r\n  \"Purchases\": string\r\n  \"Purchase Rate\": string\r\n  \"Add To Cart Rate\": string\r\n  \"Checkout Rate\": string\r\n}\r\n\r\nexport default function EcommerceMetricsPage() {\r\n  const [date, setDate] = useState<DateRange | undefined>(undefined)\r\n  const [filteredData, setFilteredData] = useState<EcommerceMetric[]>([])\r\n  const now = new Date()\r\n  const [data, setData] = useState<EcommerceMetric[]>([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null)\r\n  const { brandId } = useParams()\r\n  const navigate = useNavigate()\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\"\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\"\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([])\r\n  const [rowsToShow, setRowsToShow] = useState(50)\r\n  const [filters, setFilters] = useState<FilterItem[]>([])\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns((prev) => {\r\n      if (prev.includes(column)) {\r\n        return prev.filter((col) => col !== column)\r\n      } else {\r\n        return [...prev, column]\r\n      }\r\n    })\r\n  }\r\n\r\n  const fetchMetrics = useCallback(async () => {\r\n    setIsLoading(true)\r\n    try {\r\n      const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL\r\n\r\n      const DailyAnalyticsResponse = await axios.post(\r\n        `${baseURL}/api/analytics/atcreport/${brandId}`,\r\n        {\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n\r\n      const fetchedData = DailyAnalyticsResponse.data.data || [];\r\n      setData(fetchedData)\r\n      setFilteredData(fetchedData)\r\n      setLastUpdated(new Date())\r\n\r\n      if (fetchedData.length > 0) {\r\n        if (selectedColumns.length === 0) {\r\n          const allColumns = Object.keys(fetchedData[0]); \r\n          setSelectedColumns(allColumns);\r\n        } else {\r\n          const newColumns = Object.keys(fetchedData[0]);\r\n          setSelectedColumns((prevSelected) =>\r\n            prevSelected.filter((col) => newColumns.includes(col))\r\n          );\r\n        }\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error)\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.')\r\n        navigate('/')\r\n      }\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [navigate, startDate, endDate, brandId])\r\n\r\n  useEffect(() => {\r\n    fetchMetrics()\r\n    const intervalId = setInterval(fetchMetrics, 5 * 60 * 1000)\r\n    return () => clearInterval(intervalId)\r\n  }, [fetchMetrics])\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchMetrics()\r\n  }\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : []\r\n  const sortedSelectedColumns = allColumns.filter((col) => selectedColumns.includes(col))\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n    \r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof EcommerceMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate']\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index))\r\n  }\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n        <header className=\"px-6 py-4 border-b\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <ShoppingCart className=\"h-6 w-6 text-primary\" />\r\n              <h1 className=\"text-xl font-semibold text-primary\">E-Commerce Metrics Overview</h1>\r\n            </div>\r\n            <div className=\"flex flex-row gap-3 items-center\">\r\n              {lastUpdated && (\r\n                <span className=\"text-sm text-muted-foreground\">\r\n                  Last updated: {lastUpdated.toLocaleTimeString()}\r\n                </span>\r\n              )}\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <DatePickerWithRange\r\n                date={date}\r\n                setDate={setDate}\r\n                defaultDate={{\r\n                  from: new Date(now.getFullYear(), now.getMonth(), 1),\r\n                  to: now,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <main className=\"flex-1 overflow-auto px-6 py-4\">\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <h2 className=\"text-lg font-medium\">Analyze your Daily E-Commerce performance</h2>\r\n                <Ga4Logo />\r\n              </div>\r\n              <div className=\"flex flex-wrap items-center gap-3\">\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"outline\" className=\"flex items-center gap-2\">\r\n                      <Columns className=\"h-4 w-4\" />\r\n                      <span>Select Columns</span>\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent className=\"w-56\">\r\n                    {allColumns.map((column) => (\r\n                      <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                        <Checkbox\r\n                          id={`column-${column}`}\r\n                          checked={selectedColumns.includes(column)}\r\n                          onCheckedChange={() => toggleColumnSelection(column)}\r\n                        />\r\n                        <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                          {column}\r\n                        </label>\r\n                      </DropdownMenuItem>\r\n                    ))}\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"outline\">\r\n                      Show {rowsToShow === 1000000 ? 'all' : rowsToShow} rows\r\n                      <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(50)}>Show 50 rows</DropdownMenuItem>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(100)}>Show 100 rows</DropdownMenuItem>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(1000000)}>Show all rows</DropdownMenuItem>\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n                <FilterComponent\r\n                  columns={numericColumns}\r\n                  onFiltersChange={applyFilters}\r\n                  filters={filters}\r\n                  setFilters={setFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {filters.length > 0 && (\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {filters.map((filter, index) => (\r\n                  <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                    <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                    <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                      <X className=\"h-3 w-3\" />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"rounded-md border overflow-hidden\">\r\n              {isLoading ? (\r\n                <TableSkeleton />\r\n              ) : (\r\n                <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData} rowsToShow={rowsToShow} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useEffect, useMemo, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\"\r\nimport { BriefcaseBusiness, ChevronDown, ChevronRight, SearchX } from \"lucide-react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@radix-ui/react-tooltip\"\r\nimport React from \"react\"\r\n\r\n\r\n\r\ninterface DailyMetric {\r\n    _id: string\r\n    date: string\r\n    metaSpend: number\r\n    metaROAS: number\r\n    googleSpend: number\r\n    googleROAS: number\r\n    totalSpend: number\r\n    grossROI: number\r\n    shopifySales: number\r\n    netROI: number\r\n}\r\n\r\ninterface MonthlyAggregate {\r\n    _id: {\r\n        month: number\r\n        year: number\r\n    }\r\n    metaSpend: number\r\n    metaROAS: number\r\n    googleSpend: number\r\n    googleROAS: number\r\n    totalSpend: number\r\n    grossROI: number\r\n    shopifySales: number\r\n    netROI: number\r\n    dailyMetrics: DailyMetric[]\r\n    month: number\r\n    year: number\r\n}\r\nfunction TooltipHeader({ title, tooltip, colSpan = 1, rowSpan, isSubHeader = false }: { \r\n    title: string; \r\n    tooltip: string; \r\n    colSpan?: number;\r\n    rowSpan?: number;\r\n    isSubHeader?: boolean;\r\n}) {\r\n    return (\r\n        <th \r\n            className={`${\r\n                isSubHeader \r\n                    ? 'text-sm font-medium' \r\n                    : 'font-semibold'\r\n            } text-center whitespace-nowrap border border-gray-500 text-white z-50`}\r\n            colSpan={colSpan}\r\n            rowSpan={rowSpan}\r\n        >\r\n            <TooltipProvider>\r\n                <Tooltip>\r\n                    <TooltipTrigger asChild>\r\n                        <span className=\"flex items-center justify-center gap-1 cursor-help\">\r\n                            {title}\r\n                        </span>\r\n                    </TooltipTrigger>\r\n                    <TooltipContent className=\"mb-3\">\r\n                        <div className=\"text-gray-700 bg-white p-3 rounded-md text-sm border shadow-lg max-w-xs\">\r\n                            {tooltip}\r\n                        </div>\r\n                    </TooltipContent>\r\n                </Tooltip>\r\n            </TooltipProvider>\r\n        </th>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport const ExcelMetricsPage: React.FC<any> = () => {\r\n    const [metricsData, setMetricsData] = useState<MonthlyAggregate[]>([])\r\n    const [brandName, setBrandName] = useState<string>(\"\")\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [error, setError] = useState<string | null>(null)\r\n    const [date, setDate] = useState<DateRange | undefined>(undefined);\r\n    const [expandedMonths, setExpandedMonths] = useState<string[]>([])\r\n    const { brandId } = useParams();\r\n\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n\r\n    const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n            setError(null)\r\n            try {\r\n                const queryParams: any = {};\r\n\r\n                if (startDate) queryParams.startDate = startDate;\r\n                if (endDate) queryParams.endDate = endDate;\r\n\r\n                // Fetch the metrics data\r\n                const reportResponse = await axios.get(`${baseURL}/api/report/${brandId}`, {\r\n                    params: queryParams, // Pass query parameters here\r\n                    withCredentials: true,\r\n                });\r\n                const metricsData: MonthlyAggregate[] = reportResponse.data.data\r\n\r\n                const brandResponse = await axios.get(`${baseURL}/api/brands/${brandId}`, { withCredentials: true })\r\n                const brandName = brandResponse.data.name\r\n\r\n                setMetricsData(metricsData)\r\n                setBrandName(brandName)\r\n            } catch (err) {\r\n                console.error(err)\r\n                setError(\"Failed to fetch data. Please try again later.\")\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        }\r\n        fetchData()\r\n\r\n    }, [brandId, date, baseURL])\r\n\r\n    \r\n\r\n    const toggleMonth = (monthYear: string) => {\r\n        setExpandedMonths(prev =>\r\n            prev.includes(monthYear)\r\n                ? prev.filter(m => m !== monthYear)\r\n                : [...prev, monthYear]\r\n        )\r\n    }\r\n\r\n    const formatCurrency = (value: number) => {\r\n        return new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR' }).format(value);\r\n    }\r\n    \r\n\r\n    const formatPercentage = (value: number) => {\r\n        return `${value.toFixed(2)}`\r\n    }\r\n    const processedData = useMemo(() => {\r\n        return metricsData.map((monthData: MonthlyAggregate) => {\r\n          const processedDailyMetrics = monthData.dailyMetrics.map(daily => ({\r\n            ...daily,\r\n            metaSales: daily.metaSpend * (daily.metaROAS || 0), \r\n            googleSales: daily.googleSpend * (daily.googleROAS || 0), \r\n          }));\r\n      \r\n          const metaSales = processedDailyMetrics.reduce((sum, daily) => sum + daily.metaSales, 0);\r\n          const googleSales = processedDailyMetrics.reduce((sum, daily) => sum + daily.googleSales, 0);\r\n          const totalSales = metaSales + googleSales;\r\n      \r\n          const safeDivide = (numerator: number, denominator: number) => \r\n            denominator ? numerator / denominator : 0;\r\n      \r\n          return {\r\n            ...monthData,\r\n            metaSales,\r\n            googleSales,\r\n            totalSales,\r\n            metaROAS: safeDivide(metaSales, monthData.metaSpend), \r\n            googleROAS: safeDivide(googleSales, monthData.googleSpend), \r\n            grossROI: safeDivide(totalSales, monthData.totalSpend), \r\n            netROI: safeDivide(monthData.shopifySales, monthData.totalSpend), \r\n            dailyMetrics: processedDailyMetrics,\r\n          };\r\n        });\r\n      }, [metricsData]);\r\n      \r\n    \r\n\r\n      return (\r\n        <div className=\"flex h-screen\">\r\n            <CollapsibleSidebar />\r\n            <div className=\"flex-1 h-screen overflow-hidden bg-gray-50\">\r\n                <header className=\"bg-white border-b border-gray-200 px-6 py-4\">\r\n                    <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                            <BriefcaseBusiness className=\"h-7 w-7\" />\r\n                            <h1 className=\"text-2xl font-bold text-gray-900\">{brandName} Ad Metrics Overview</h1>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-3\">\r\n                            <DatePickerWithRange date={date} setDate={setDate} />\r\n                            {date && (\r\n                                <Button \r\n                                    onClick={() => setDate(undefined)} \r\n                                    className=\"px-3 py-2 bg-red-500 hover:bg-red-600 transition-colors\"\r\n                                >\r\n                                    <SearchX className=\"w-5 h-5\" />\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n\r\n                <div className=\"p-6\">\r\n                    <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n                        Key performance indicators for your Ad Accounts\r\n                    </h2>\r\n                    \r\n                    {loading ? (\r\n                        <div className=\"flex items-center justify-center h-[calc(100vh-300px)]\">\r\n                            <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-cyan-600\"></div>\r\n                        </div>\r\n                    ) : error ? (\r\n                        <div className=\"rounded-lg bg-red-50 p-4 text-red-600\">{error}</div>\r\n                    ) : (\r\n                        <div className=\"border rounded-lg shadow-sm bg-white overflow-hidden\">\r\n                        <div className=\"h-[calc(100vh-200px)] overflow-auto\">\r\n                            <table className=\"w-full border-collapse\">\r\n                                <thead className=\"sticky top-0 z-20 bg-cyan-900 border border-gray-500 text-sm\">\r\n                                    <tr>\r\n                                        <th className=\"w-5 bg-cyan-900 border border-gray-500\" rowSpan={2} />\r\n                                        <TooltipHeader \r\n                                            title=\"Date\" \r\n                                            tooltip=\"Date\" \r\n                                            rowSpan={2} \r\n                                        />\r\n                                        <TooltipHeader \r\n                                            title=\"Meta\" \r\n                                            tooltip=\"Meta Metrics\" \r\n                                            colSpan={3} \r\n                                        />\r\n                                        <TooltipHeader \r\n                                            title=\"Google\" \r\n                                            tooltip=\"Google Metrics\" \r\n                                            colSpan={3} \r\n                                        />\r\n                                        <TooltipHeader \r\n                                            title=\"Total Spent\" \r\n                                            tooltip=\"Total Spent = Meta Spent + Google Spent\" \r\n                                            rowSpan={2} \r\n                                        />\r\n                                        <TooltipHeader \r\n                                            title=\"Gross ROI\" \r\n                                            tooltip=\"Gross ROI = (MetaSales + GoogleSales)/ Total Spent\" \r\n                                            rowSpan={2} \r\n                                        />\r\n                                        <TooltipHeader \r\n                                            title=\"Shopify Sales\" \r\n                                            tooltip=\"Shopify Sales\" \r\n                                            rowSpan={2} \r\n                                        />\r\n                                        <TooltipHeader \r\n                                            title=\"Net ROI\" \r\n                                            tooltip=\"Net ROI = Shopify Sales / Total Spend\" \r\n                                            rowSpan={2} \r\n                                        />\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <TooltipHeader \r\n                                            title=\"Spent\" \r\n                                            tooltip=\"Meta spent\" \r\n                                            isSubHeader \r\n                                        />\r\n                                        <TooltipHeader \r\n                                            title=\"Sales\" \r\n                                            tooltip=\"Meta Sales = Meta Spent * Meta ROAS\" \r\n                                            isSubHeader \r\n                                        />\r\n                                        <TooltipHeader \r\n                                            title=\"ROAS\" \r\n                                            tooltip=\"Meta ROAS\" \r\n                                            isSubHeader \r\n                                        />\r\n                                        <TooltipHeader \r\n                                            title=\"Spent\" \r\n                                            tooltip=\"Google Spent\" \r\n                                            isSubHeader \r\n                                        />\r\n                                        <TooltipHeader \r\n                                            title=\"Sales\" \r\n                                            tooltip=\"Google Sales = Google Spent * Google ROAS\" \r\n                                            isSubHeader \r\n                                        />\r\n                                        <TooltipHeader \r\n                                            title=\"ROAS\" \r\n                                            tooltip=\"Google ROAS\" \r\n                                            isSubHeader \r\n                                        />\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {processedData.map((monthData: any) => {\r\n                                        const monthYear = `${monthData.year}-${monthData.month.toString().padStart(2, '0')}`;\r\n                                        const isExpanded = expandedMonths.includes(monthYear);\r\n                                        return (\r\n                                            <React.Fragment key={monthYear}>\r\n                                                <tr\r\n                                                    className={`\r\n                                                        ${isExpanded ? 'bg-gray-200' : 'bg-gray-50'} \r\n                                                        border-b border-gray-100 cursor-pointer \r\n                                                        transition-colors text-sm \r\n                                                    `}\r\n                                                    onClick={() => toggleMonth(monthYear)}\r\n                                                >\r\n                                                    <td className=\"w-5 px-4 py-2\">\r\n                                                        {isExpanded ? (\r\n                                                            <ChevronDown className=\"h-4 w-4 text-gray-500\" />\r\n                                                        ) : (\r\n                                                            <ChevronRight className=\"h-4 w-4 text-gray-500\" />\r\n                                                        )}\r\n                                                    </td>\r\n                                                    <td className=\"py-3 font-medium text-gray-900\">\r\n                                                        {format(new Date(monthData.year, monthData.month - 1), 'MMMM yyyy')}\r\n                                                    </td>\r\n                                                    <td className=\"px-4 py-3 text-right\">{formatCurrency(monthData.metaSpend)}</td>\r\n                                                    <td className=\"px-4 py-3 text-right\">{formatCurrency(monthData.metaSales)}</td>\r\n                                                    <td className=\"px-4 py-3 text-right\">{formatPercentage(monthData.metaROAS)}</td>\r\n                                                    <td className=\"px-4 py-3 text-right\">{formatCurrency(monthData.googleSpend)}</td>\r\n                                                    <td className=\"px-4 py-3 text-right\">{formatCurrency(monthData.googleSales)}</td>\r\n                                                    <td className=\"px-4 py-3 text-right\">{formatPercentage(monthData.googleROAS)}</td>\r\n                                                    <td className=\"px-4 py-3 text-right\">{formatCurrency(monthData.totalSpend)}</td>\r\n                                                    <td className=\"px-4 py-3 text-right\">{formatPercentage(monthData.grossROI)}</td>\r\n                                                    <td className=\"px-4 py-3 text-right\">{formatCurrency(monthData.shopifySales)}</td>\r\n                                                    <td className=\"px-4 py-3 text-right\">{formatPercentage(monthData.netROI)}</td>\r\n                                                </tr>\r\n                                                {isExpanded && monthData.dailyMetrics.map((daily: any) => (\r\n                                                    <tr \r\n                                                        key={daily._id} \r\n                                                        className=\"border-b border-gray-50 hover:bg-gray-50 transition-colors\"\r\n                                                    >\r\n                                                        <td className=\"w-5 px-4 py-2\" />\r\n                                                        <td className=\"py-2 text-sm text-gray-600\">\r\n                                                            {format(new Date(daily.date), 'dd/MM/yyyy')}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-2 text-sm text-right\">{formatCurrency(daily.metaSpend)}</td>\r\n                                                        <td className=\"px-4 py-2 text-sm text-right\">{formatCurrency(daily.metaSales)}</td>\r\n                                                        <td className=\"px-4 py-2 text-sm text-right\">{formatPercentage(daily.metaROAS)}</td>\r\n                                                        <td className=\"px-4 py-2 text-sm text-right\">{formatCurrency(daily.googleSpend)}</td>\r\n                                                        <td className=\"px-4 py-2 text-sm text-right\">{formatCurrency(daily.googleSales)}</td>\r\n                                                        <td className=\"px-4 py-2 text-sm text-right\">{formatPercentage(daily.googleROAS)}</td>\r\n                                                        <td className=\"px-4 py-2 text-sm text-right\">{formatCurrency(daily.totalSpend)}</td>\r\n                                                        <td className=\"px-4 py-2 text-sm text-right\">{formatPercentage(daily.grossROI)}</td>\r\n                                                        <td className=\"px-4 py-2 text-sm text-right\">{formatCurrency(daily.shopifySales)}</td>\r\n                                                        <td className=\"px-4 py-2 text-sm text-right\">{formatPercentage(daily.netROI)}</td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </React.Fragment>\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import { useState, useCallback, useEffect, useMemo } from \"react\"\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport { MapPin, ChevronDown, Columns, RefreshCw, X } from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport ReportTable from \"@/components/dashboard_component/ReportTable\"\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\"\r\nimport { Ga4Logo } from \"../GeneralisedDashboard/components/OtherPlatformModalContent\"\r\n\r\ninterface CityMetric {\r\n  \"city\": string;\r\n  \"country\": string;\r\n  \"region\": string;\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\nexport default function CitySessionPage() {\r\n  const [date, setDate] = useState<DateRange | undefined>(undefined);\r\n  const [allTimeData, setAllTimeData]= useState<CityMetric[]>([])\r\n  const [filteredData, setFilteredData] = useState<CityMetric[]>([])\r\n  const [data, setData] = useState<CityMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n  const { brandId } = useParams();\r\n  const navigate = useNavigate();\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState(50)\r\n  const [filters, setFilters] = useState<FilterItem[]>([])\r\n  const [removedColumns, setRemovedColumns] = useState<string[]>([]);\r\n  const now = new Date();\r\n\r\nconst allColumns =['city','country','region','Visitors','Sessions','Add To Cart','Add To Cart Rate','Checkouts','Checkout Rate','Purchases','Purchase Rate']\r\n\r\nconst toggleColumnSelection = (column: string) => {\r\n  setSelectedColumns(prev => {\r\n    const newColumns = prev.includes(column)\r\n      ? prev.filter(col => col !== column) // Remove column from selected\r\n      : [...prev, column]; // Add column to selected\r\n\r\n    setRemovedColumns(prevRemoved => {\r\n      // Add or remove from removedColumns only if column is 'city', 'region', or 'country'\r\n      if (['city', 'region', 'country'].includes(column)) {\r\n        if (newColumns.includes(column)) {\r\n          // If re-selected, remove from removedColumns\r\n          return prevRemoved.filter(col => col !== column);\r\n        } else {\r\n          // If deselected, add to removedColumns\r\n          return [...prevRemoved, column];\r\n        }\r\n      }\r\n      // For other columns, keep removedColumns unchanged\r\n      return prevRemoved;\r\n    });\r\n\r\n    return allColumns.filter(col => newColumns.includes(col));\r\n  });\r\n};\r\nuseEffect(() => {\r\n  setSelectedColumns(allColumns);\r\n}, [])\r\n\r\nconst fetchMetrics = useCallback(async () => {\r\n  setIsLoading(true);\r\n  try {\r\n    const baseURL = import.meta.env.PROD\r\n      ? import.meta.env.VITE_API_URL\r\n      : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n    // Fetch all-time and date-specific metrics in parallel\r\n    const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n      axios.post(\r\n        `${baseURL}/api/analytics/report/${brandId}`,\r\n        {\r\n          startDate: startDate || \"\",\r\n          endDate: endDate || \"\",\r\n          ...(removedColumns.length > 0\r\n            ? { filters: { location: removedColumns } }\r\n            : {}),\r\n        },\r\n        { withCredentials: true }\r\n      ),\r\n      axios.post(\r\n        `${baseURL}/api/analytics/report/${brandId}`,\r\n        { startDate: \"\", endDate: \"\" ,...(removedColumns.length > 0\r\n          ? { filters: { location: removedColumns } }\r\n          : {})},\r\n        { withCredentials: true }\r\n      ),\r\n    ]);\r\n\r\n    // Process the responses\r\n    const fetchedData = analyticsResponse.data[1]?.data || [];\r\n    const fetchedAllTimeData = allTimeResponse.data[1]?.data || [];\r\n\r\n    setData(fetchedData);\r\n    setFilteredData(fetchedData);\r\n    setAllTimeData(fetchedAllTimeData);\r\n    setLastUpdated(new Date());\r\n\r\n    // Ensure selected columns match fetched data\r\n    if (fetchedData.length > 0) {\r\n      const newColumns = Object.keys(fetchedData[0]);\r\n      setSelectedColumns((prevSelected) =>\r\n        prevSelected.length === 0\r\n          ? newColumns\r\n          : prevSelected.filter((col) => newColumns.includes(col))\r\n      );\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching metrics:\", error);\r\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n      alert(\"Your session has expired. Please log in again.\");\r\n      navigate(\"/\");\r\n    }\r\n  } finally {\r\n    setIsLoading(false);\r\n  }\r\n}, [navigate, brandId, removedColumns, startDate, endDate]);\r\n\r\n// Use fetchMetrics in useEffect\r\nuseEffect(() => {\r\n  fetchMetrics();\r\n  const intervalId = setInterval(fetchMetrics, 5 * 60 * 1000); // Refresh every 5 minutes\r\n  return () => clearInterval(intervalId);\r\n}, [fetchMetrics]);\r\n\r\n// Manual refresh handler\r\nconst handleManualRefresh = () => {\r\n  fetchMetrics();\r\n};\r\n\r\n\r\n\r\n  const sortedSelectedColumns = useMemo(() => {\r\n    return allColumns.filter((col) => selectedColumns.includes(col));\r\n  }, [allColumns, selectedColumns]);\r\n  \r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n    \r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof CityMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate']\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index))\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n      <header className=\"px-6 py-4 border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <MapPin className=\"h-6 w-6 text-primary\" />\r\n          <h1 className=\"text-xl font-semibold text-primary\">Location Metrics Overview</h1>\r\n        </div>\r\n        <div className=\"flex flex-row gap-3 items-center\">\r\n          {lastUpdated && (\r\n            <span className=\"text-sm text-muted-foreground\">\r\n              Last updated: {lastUpdated.toLocaleTimeString()}\r\n            </span>\r\n          )}\r\n          <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n            <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n          </Button>\r\n          <DatePickerWithRange\r\n            date={date}\r\n            setDate={setDate}\r\n            defaultDate={{\r\n              from: new Date(now.getFullYear(), now.getMonth(),1),\r\n              to: now,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </header>\r\n\r\n        <main className=\"flex-1 overflow-auto px-6 py-4\">\r\n          <div className=\"space-y-4\">\r\n              <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n      <div className=\"flex items-center gap-3\">\r\n        <h2 className=\"text-lg font-medium\">Analyze your location wise performance</h2>\r\n        <Ga4Logo />\r\n      </div>\r\n      <div className=\"flex flex-wrap items-center gap-3\">\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <Button variant=\"outline\" className=\"flex items-center gap-2\">\r\n              <Columns className=\"h-4 w-4\" />\r\n              <span>Select Columns</span>\r\n            </Button>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent className=\"w-56\">\r\n            {allColumns.map((column) => (\r\n              <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                <Checkbox\r\n                  id={`column-${column}`}\r\n                  checked={selectedColumns.includes(column)}\r\n                  onCheckedChange={() => toggleColumnSelection(column)}\r\n                />\r\n                <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                  {column}\r\n                </label>\r\n              </DropdownMenuItem>\r\n            ))}\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <Button variant=\"outline\">\r\n              Show {rowsToShow === 1000000 ? 'all' : rowsToShow} rows\r\n              <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n            </Button>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent>\r\n            <DropdownMenuItem onSelect={() => setRowsToShow(50)}>Show 50 rows</DropdownMenuItem>\r\n            <DropdownMenuItem onSelect={() => setRowsToShow(100)}>Show 100 rows</DropdownMenuItem>\r\n            <DropdownMenuItem onSelect={() => setRowsToShow(1000000)}>Show all rows</DropdownMenuItem>\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n        <FilterComponent\r\n          columns={numericColumns}\r\n          onFiltersChange={applyFilters}\r\n          filters={filters}\r\n          setFilters={setFilters}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n            {filters.length > 0 && (\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {filters.map((filter, index) => (\r\n                  <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                    <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                    <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                      <X className=\"h-3 w-3\" />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"rounded-md border overflow-hidden shadow-lg\">\r\n              {isLoading ? (\r\n                <TableSkeleton />\r\n              ) : (\r\n                <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData} rowsToShow={rowsToShow} allTimeData={allTimeData} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useState, useCallback, useEffect, useMemo } from \"react\"\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport { ChevronDown, Columns, Link2, RefreshCw, X } from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport ReportTable from \"@/components/dashboard_component/ReportTable\"\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\"\r\nimport { Ga4Logo } from \"../GeneralisedDashboard/components/OtherPlatformModalContent\"\r\n\r\ninterface ChannelMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\nconst ChannelSessionPage: React.FC = () => {\r\n  const [date, setDate] = useState<DateRange | undefined>(undefined);\r\n  const [filteredData, setFilteredData] = useState<ChannelMetric[]>([])\r\n  const [allTimeData, setAllTimeData] = useState<ChannelMetric[]>([])\r\n  const [filters, setFilters] = useState<FilterItem[]>([])\r\n  const now = new Date();\r\n  const [data, setData] = useState<ChannelMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n  const { brandId } = useParams();\r\n  const navigate = useNavigate();\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState(50)\r\n\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n  \r\n      // Fetch all-time and date-specific metrics\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axios.post(`${baseURL}/api/analytics/report/${brandId}`, {\r\n          startDate: startDate || \"\",\r\n          endDate: endDate || \"\"\r\n        }, { withCredentials: true }),\r\n        axios.post(`${baseURL}/api/analytics/report/${brandId}`, {\r\n          startDate: \"\",\r\n          endDate: \"\"\r\n        }, { withCredentials: true })\r\n      ]);\r\n  \r\n      const fetchedData = analyticsResponse.data[2].data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data[2].data || [];\r\n  \r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n      setLastUpdated(new Date());\r\n  \r\n      if (fetchedData.length > 0) {\r\n        const allColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? allColumns\r\n            : prevSelected.filter((col) => allColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert(\"Your session has expired. Please log in again.\");\r\n        navigate(\"/\");\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, navigate]);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 5 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n  \r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof ChannelMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate']\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index))\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n        <header className=\"px-6 py-4 border-b\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Link2 className=\"h-6 w-6 text-primary\" />\r\n              <h1 className=\"text-xl font-semibold text-primary\">Channel Metrics Overview</h1>\r\n            </div>\r\n            <div className=\"flex flex-row gap-3 items-center\">\r\n              {lastUpdated && (\r\n                <span className=\"text-sm text-muted-foreground\">\r\n                  Last updated: {lastUpdated.toLocaleTimeString()}\r\n                </span>\r\n              )}\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <DatePickerWithRange\r\n                date={date}\r\n                setDate={setDate}\r\n                defaultDate={{\r\n                  from: new Date(now.getFullYear(), now.getMonth(), 1),\r\n                  to: now,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <main className=\"flex-1 overflow-auto px-6 py-4\">\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <h2 className=\"text-lg font-medium\">Analyze your Reffering Channel wise performance</h2>\r\n                <Ga4Logo />\r\n              </div>\r\n              <div className=\"flex flex-wrap items-center gap-3\">\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"outline\" className=\"flex items-center gap-2\">\r\n                      <Columns className=\"h-4 w-4\" />\r\n                      <span>Select Columns</span>\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent className=\"w-56\">\r\n                    {allColumns.map((column) => (\r\n                      <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                        <Checkbox\r\n                          id={`column-${column}`}\r\n                          checked={selectedColumns.includes(column)}\r\n                          onCheckedChange={() => toggleColumnSelection(column)}\r\n                        />\r\n                        <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                          {column}\r\n                        </label>\r\n                      </DropdownMenuItem>\r\n                    ))}\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"outline\">\r\n                      Show {rowsToShow === 1000000 ? 'all' : rowsToShow} rows\r\n                      <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(50)}>Show 50 rows</DropdownMenuItem>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(100)}>Show 100 rows</DropdownMenuItem>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(1000000)}>Show all rows</DropdownMenuItem>\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n                <FilterComponent\r\n                  columns={numericColumns}\r\n                  onFiltersChange={applyFilters}\r\n                  filters={filters}\r\n                  setFilters={setFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {filters.length > 0 && (\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {filters.map((filter, index) => (\r\n                  <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                    <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                    <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                      <X className=\"h-3 w-3\" />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"rounded-md border overflow-hidden\">\r\n              {isLoading ? (\r\n                <TableSkeleton />\r\n              ) : (\r\n                <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData} rowsToShow={rowsToShow} allTimeData={allTimeData} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChannelSessionPage;","import { useState, useCallback, useEffect, useMemo } from \"react\"\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport { PanelsTopLeft, ChevronDown, Columns, RefreshCw, X } from 'lucide-react'\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport ReportTable from \"@/components/dashboard_component/ReportTable\"\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\"\r\nimport { Ga4Logo } from \"../GeneralisedDashboard/components/OtherPlatformModalContent\"\r\n\r\nexport interface PageMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\nconst LandingPageSession: React.FC = () => {\r\n  const [date, setDate] = useState<DateRange | undefined>(undefined);\r\n  const [allTimeData, setAllTimeData]= useState<PageMetric[]>([])\r\n  const [filteredData, setFilteredData] = useState<PageMetric[]>([])\r\n  const [filters, setFilters] = useState<FilterItem[]>([])\r\n  const [data, setData] = useState<PageMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n  const { brandId } = useParams();\r\n  const navigate = useNavigate();\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState(50)\r\n  const now = new Date();\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n  \r\n      // Fetch all-time and date-specific metrics\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axios.post(`${baseURL}/api/analytics/report/${brandId}`, {\r\n          startDate: startDate || \"\",\r\n          endDate: endDate || \"\"\r\n        }, { withCredentials: true }),\r\n        axios.post(`${baseURL}/api/analytics/report/${brandId}`, {\r\n          startDate: \"\",\r\n          endDate: \"\"\r\n        }, { withCredentials: true })\r\n      ]);\r\n  \r\n      const fetchedData = analyticsResponse.data[0].data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data[0].data || [];\r\n  \r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n      setLastUpdated(new Date());\r\n  \r\n      if (fetchedData.length > 0) {\r\n        const allColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? allColumns\r\n            : prevSelected.filter((col) => allColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert(\"Your session has expired. Please log in again.\");\r\n        navigate(\"/\");\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, navigate]);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 5 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof PageMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate']\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index))\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n        <header className=\"px-6 py-4 border-b\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <PanelsTopLeft className=\"h-6 w-6 text-primary\" />\r\n              <h1 className=\"text-xl font-semibold text-primary\">Landing Page Metrics Overview</h1>\r\n            </div>\r\n            <div className=\"flex flex-row gap-3 items-center\">\r\n              {lastUpdated && (\r\n                <span className=\"text-sm text-muted-foreground\">\r\n                  Last updated: {lastUpdated.toLocaleTimeString()}\r\n                </span>\r\n              )}\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <DatePickerWithRange\r\n                date={date}\r\n                setDate={setDate}\r\n                defaultDate={{\r\n                  from: new Date(now.getFullYear(), now.getMonth(), 1),\r\n                  to: now,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <main className=\"flex-1 overflow-auto px-6 py-4\">\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <h2 className=\"text-lg font-medium\">Analyze your landing page wise performance</h2>\r\n                <Ga4Logo />\r\n              </div>\r\n              <div className=\"flex flex-wrap items-center gap-3\">\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"outline\" className=\"flex items-center gap-2\">\r\n                      <Columns className=\"h-4 w-4\" />\r\n                      <span>Select Columns</span>\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent className=\"w-56\">\r\n                    {allColumns.map((column) => (\r\n                      <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                        <Checkbox\r\n                          id={`column-${column}`}\r\n                          checked={selectedColumns.includes(column)}\r\n                          onCheckedChange={() => toggleColumnSelection(column)}\r\n                        />\r\n                        <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                          {column}\r\n                        </label>\r\n                      </DropdownMenuItem>\r\n                    ))}\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"outline\">\r\n                      Show {rowsToShow === 1000000 ? 'all' : rowsToShow} rows\r\n                      <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(50)}>Show 50 rows</DropdownMenuItem>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(100)}>Show 100 rows</DropdownMenuItem>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(1000000)}>Show all rows</DropdownMenuItem>\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n                <FilterComponent\r\n                  columns={numericColumns}\r\n                  onFiltersChange={applyFilters}\r\n                  filters={filters}\r\n                  setFilters={setFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {filters.length > 0 && (\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {filters.map((filter, index) => (\r\n                  <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                    <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                    <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                      <X className=\"h-3 w-3\" />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"rounded-md border overflow-hidden\">\r\n              {isLoading ? (\r\n                <TableSkeleton />\r\n              ) : (\r\n                <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData} rowsToShow={rowsToShow} allTimeData={allTimeData} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LandingPageSession\r\n\r\n","import { useState, useEffect, useCallback } from 'react'\r\nimport { PlusCircle, Edit2, X, Trash2 } from 'lucide-react'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\r\nimport { Calendar } from \"@/components/ui/calendar\"\r\nimport { format, endOfMonth } from \"date-fns\"\r\nimport { Bar, BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip } from 'recharts'\r\nimport { useBrand } from '@/context/BrandContext'\r\nimport { cn } from \"@/lib/utils\"\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function BrandPerformanceDashboard() {\r\n  const { brands } = useBrand()\r\n  const [selectedBrands, setSelectedBrands] = useState<Array<{\r\n    brandId: string,\r\n    name: string,\r\n    source: string,\r\n    targetAmount: number,\r\n    targetDate: Date\r\n  }>>([])\r\n  const [newBrand, setNewBrand] = useState({\r\n    brandId: '',\r\n    source: '',\r\n    targetAmount: 0,\r\n    targetDate: endOfMonth(new Date())\r\n  })\r\n  const [editingBrand, setEditingBrand] = useState<string | null>(null)\r\n  const [editData, setEditData] = useState<typeof newBrand | null>(null)\r\n  const [achievedSales, setAchievedSales] = useState<{ [key: string]: number }>({})\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const getAchievedSales = useCallback(async (brandId: string) => {\r\n    try {\r\n      const response = await axios.get(`${baseURL}/api/shopify/dailysales/${brandId}`, { withCredentials: true });\r\n      return response.data.totalSales;\r\n    } catch (error) {\r\n      console.error('Error fetching sales data:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n      return 0;\r\n    }\r\n  }, [navigate]);\r\n  \r\n  const fetchSalesData = useCallback(async () => {\r\n    setIsLoading(true); // Start the loader\r\n    try {\r\n      const salesData: { [key: string]: number } = {};\r\n      await Promise.all(\r\n        selectedBrands.map(async (brand) => {\r\n          salesData[brand.brandId] = await getAchievedSales(brand.brandId);\r\n        })\r\n      );\r\n      setAchievedSales(salesData); // Update state only after all API calls finish\r\n    } catch (error) {\r\n      console.error('Error fetching sales data:', error);\r\n    } finally {\r\n      setIsLoading(false); // Stop the loader\r\n    }\r\n  }, [selectedBrands, getAchievedSales]);\r\n  \r\n  useEffect(() => {\r\n    fetchSalesData();\r\n  }, [fetchSalesData]);\r\n\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setNewBrand(prev => ({ ...prev, [name]: name === 'brandId' ? value : Number(value) }))\r\n  }\r\n\r\n  const handleSourceChange = (value: string) => {\r\n    setNewBrand(prev => ({ ...prev, source: value }))\r\n  }\r\n\r\n  const handleAddBrand = async () => {\r\n\r\n    const brandToAdd = brands.find(b => String(b._id) === String(newBrand.brandId));\r\n\r\n    if (brandToAdd) {\r\n      try {\r\n        const newBrandTarget = {\r\n          brandId: brandToAdd._id,\r\n          name: brandToAdd.name,\r\n          source: newBrand.source,\r\n          targetAmount: newBrand.targetAmount,\r\n          targetDate: newBrand.targetDate,\r\n        };\r\n\r\n        const response = await axios.post(`${baseURL}/api/performance/addTarget`, newBrandTarget, { withCredentials: true });\r\n\r\n        setSelectedBrands(prev => [...prev, response.data]);\r\n        setNewBrand({ brandId: '', source: '', targetAmount: 0, targetDate: endOfMonth(new Date()) });\r\n\r\n      } catch (error) {\r\n        console.error('Error adding brand:', error);\r\n      }\r\n    } else {\r\n      console.log(\"Brand not found\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleEdit = (brandId: string) => {\r\n    const brandToEdit = selectedBrands.find(b => b.brandId === brandId)\r\n    if (brandToEdit) {\r\n      setEditingBrand(brandId)\r\n      setEditData({ ...brandToEdit })\r\n    }\r\n  }\r\n\r\n  const handleSaveEdit = async (brandId: string) => {\r\n    if (editData) {\r\n      try {\r\n        const response = await axios.patch(`${baseURL}/api/performance/updateTarget/${brandId}`, editData, { withCredentials: true });\r\n        setSelectedBrands(prev => prev.map(brand =>\r\n          brand.brandId === brandId ? { ...brand, ...response.data } : brand\r\n        ));\r\n\r\n        setEditingBrand(null);\r\n        setEditData(null);\r\n\r\n        alert('Brand updated successfully!');\r\n      } catch (error) {\r\n        console.error('Error saving brand edit:', error);\r\n        alert('Failed to update brand');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingBrand(null)\r\n    setEditData(null)\r\n  }\r\n\r\n  const handleDelete = async (brandId: string) => {\r\n    try {\r\n      // Make the API call to delete the brand from the database\r\n      await axios.delete(`${baseURL}/api/performance/deleteTarget/${brandId}`, { withCredentials: true });\r\n\r\n      // Remove the brand from the selected brands in state\r\n      setSelectedBrands(prev => prev.filter(brand => brand.brandId !== brandId));\r\n\r\n      console.log('Brand deleted successfully');\r\n    } catch (error) {\r\n      console.error('Error deleting brand:', error);\r\n    }\r\n  };\r\n  const Loader = () => (\r\n    <div className=\"animate-spin rounded-full h-5 w-5 border-t-2 border-blue-500\"></div>\r\n  )\r\n\r\n  const calculateMetrics = (brand: typeof selectedBrands[0]) => {\r\n    const achieved = achievedSales[brand.brandId] || 0\r\n    const remainingTarget = Math.max(brand.targetAmount - achieved, 0)\r\n    const today = new Date()\r\n    today.setHours(0, 0, 0, 0) // Set to start of day\r\n    const targetDate = new Date(brand.targetDate)\r\n    targetDate.setHours(0, 0, 0, 0) // Set to end of day\r\n    const remainingDays = Math.max(Math.ceil((targetDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24)), 0)\r\n    const requiredSalesPerDay = remainingDays > 0 ? remainingTarget / remainingDays : 0\r\n\r\n    return {\r\n      achievedSales: achieved,\r\n      remainingTarget: remainingTarget,\r\n      remainingDays,\r\n      requiredSalesPerDay: requiredSalesPerDay\r\n    }\r\n  }\r\n\r\n  const chartData = selectedBrands.map(brand => {\r\n    const { achievedSales: achieved, remainingTarget } = calculateMetrics(brand)\r\n    return {\r\n      name: brand.name,\r\n      Achieved: achieved,\r\n      Remaining: remainingTarget\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const fetchBranTargets = async () => {\r\n      try {\r\n        const response = await axios.get(`${baseURL}/api/performance/brandTarget`, { withCredentials: true });\r\n        setSelectedBrands(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching brands:', error);\r\n      }\r\n    };\r\n\r\n    fetchBranTargets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen\">\r\n      <nav className=\"bg-white border-b border-gray-200 px-4 py-4 md:px-6 lg:px-8\">\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n          <h1 className=\"text-2xl font-bold\">Brands Performance Metrics</h1>\r\n        </div>\r\n      </nav>\r\n      <div className='container mx-auto p-4'>\r\n        <Card className=\"mb-4\">\r\n          <CardHeader>\r\n            <CardTitle>Add New Brand Target</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n              <div>\r\n                <Label htmlFor=\"brandName\">Brand Name</Label>\r\n                <Select onValueChange={(value) => setNewBrand(prev => ({ ...prev, brandId: value }))}>\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select brand\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {brands.map(brand => (\r\n                      <SelectItem key={brand._id} value={brand._id}>\r\n                        {brand.name}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <Label htmlFor=\"source\">Source</Label>\r\n                <Select onValueChange={handleSourceChange} value={newBrand.source}>\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select source\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"Meta & Google\">Meta & Google</SelectItem>\r\n                    <SelectItem value=\"Meta\">Meta</SelectItem>\r\n                    <SelectItem value=\"Google\">Google</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <Label htmlFor=\"targetAmount\">Target Amount</Label>\r\n                <Input id=\"targetAmount\" name=\"targetAmount\" type=\"number\" value={newBrand.targetAmount} onChange={handleInputChange} placeholder=\"Enter target amount\" />\r\n              </div>\r\n              <div>\r\n                <Label>Target Date</Label>\r\n                <Popover>\r\n                  <PopoverTrigger asChild>\r\n                    <Button\r\n                      variant={\"outline\"}\r\n                      className={cn(\r\n                        \"w-full justify-start text-left font-normal\",\r\n                        !newBrand.targetDate && \"text-muted-foreground\"\r\n                      )}\r\n                    >\r\n                      {newBrand.targetDate ? format(newBrand.targetDate, \"PPP\") : <span>Pick a date</span>}\r\n                    </Button>\r\n                  </PopoverTrigger>\r\n                  <PopoverContent className=\"w-auto p-0\">\r\n                    <Calendar\r\n                      mode=\"single\"\r\n                      selected={newBrand.targetDate}\r\n                      onSelect={(date) => date && setNewBrand(prev => ({ ...prev, targetDate: date }))}\r\n                      initialFocus\r\n                    />\r\n                  </PopoverContent>\r\n                </Popover>\r\n              </div>\r\n              <div className=\"flex items-end\">\r\n                <Button onClick={handleAddBrand} className=\"w-full\">\r\n                  <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Brand Target\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className='mb-4'>\r\n          <CardHeader>\r\n            <CardTitle>Brand Performance Table</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <Table>\r\n              <TableHeader>\r\n                <TableRow>\r\n                  <TableHead>Brand</TableHead>\r\n                  <TableHead>Source</TableHead>\r\n                  <TableHead>Target Amount</TableHead>\r\n                  <TableHead>Target Date</TableHead>\r\n                  <TableHead>Achieved Sales</TableHead>\r\n                  <TableHead>Remaining Target</TableHead>\r\n                  <TableHead>Remaining Days</TableHead>\r\n                  <TableHead>Required Sales/Day</TableHead>\r\n                  <TableHead>Actions</TableHead>\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {selectedBrands.map(brand => {\r\n                  const { achievedSales: achieved, remainingTarget, remainingDays, requiredSalesPerDay } = calculateMetrics(brand)\r\n                  const isEditing = editingBrand === brand.brandId\r\n                  return (\r\n                    <TableRow key={brand.brandId}>\r\n                      <TableCell className=\"font-medium\">{brand.name}</TableCell>\r\n                      <TableCell>\r\n                        {isEditing ? (\r\n                          <Select\r\n                            onValueChange={(value) => setEditData(prev => prev ? { ...prev, source: value } : null)}\r\n                            defaultValue={editData?.source}\r\n                          >\r\n                            <SelectTrigger>\r\n                              <SelectValue placeholder={brand.source} />\r\n                            </SelectTrigger>\r\n                            <SelectContent>\r\n                              <SelectItem value=\"Meta & Google\">Meta & Google</SelectItem>\r\n                              <SelectItem value=\"Meta\">Meta</SelectItem>\r\n                              <SelectItem value=\"Google\">Google</SelectItem>\r\n                            </SelectContent>\r\n                          </Select>\r\n                        ) : (\r\n                          brand.source\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {isEditing ? (\r\n                          <Input\r\n                            type=\"number\"\r\n                            value={editData?.targetAmount}\r\n                            onChange={(e) => setEditData(prev => prev ? { ...prev, targetAmount: Number(e.target.value) } : null)}\r\n                          />\r\n                        ) : (\r\n                          `₹${brand.targetAmount.toLocaleString()}`\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {isEditing ? (\r\n                          <Popover>\r\n                            <PopoverTrigger asChild>\r\n                              <Button variant={\"outline\"}>\r\n                                {editData?.targetDate ? format(editData.targetDate, \"PPP\") : <span>Pick a date</span>}\r\n                              </Button>\r\n                            </PopoverTrigger>\r\n                            <PopoverContent className=\"w-auto p-0\">\r\n                              <Calendar\r\n                                mode=\"single\"\r\n                                selected={editData?.targetDate}\r\n                                onSelect={(date) => date && setEditData(prev => prev ? { ...prev, targetDate: date } : null)}\r\n                                initialFocus\r\n                              />\r\n                            </PopoverContent>\r\n                          </Popover>\r\n                        ) : (\r\n                          format(brand.targetDate, \"PPP\")\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell>{isLoading?<Loader />:`₹${achieved.toLocaleString()}`}</TableCell>\r\n                      <TableCell>{isLoading?<Loader />:`₹${remainingTarget.toLocaleString()}`}</TableCell>\r\n                      <TableCell>{remainingDays}</TableCell>\r\n                      <TableCell>₹{requiredSalesPerDay.toLocaleString()}</TableCell>\r\n                      <TableCell>\r\n                        {isEditing ? (\r\n                          <>\r\n                            <Button onClick={() => handleSaveEdit(brand.brandId)} className=\"mr-2\">Save</Button>\r\n                            <Button onClick={handleCancelEdit} variant=\"outline\"><X className=\"h-4 w-4\" /></Button>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <Button onClick={() => handleEdit(brand.brandId)} className=\"mr-2\"><Edit2 className=\"h-4 w-4\" /></Button>\r\n                            <Button onClick={() => handleDelete(brand.brandId)} variant=\"destructive\"><Trash2 className=\"h-4 w-4\" /></Button>\r\n                          </>\r\n                        )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Sales Progress</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <BarChart data={chartData}>\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Bar dataKey=\"Achieved\" stackId=\"a\" fill=\"#4ade80\" />\r\n                <Bar dataKey=\"Remaining\" stackId=\"a\" fill=\"#f87171\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport BrandPerformanceDashboard from \"./Dashboard\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\";\r\n const PerformanceDashboard : React.FC=()=>{\r\n    return (\r\n        <div className=\"flex h-screen\"> \r\n        <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n        <BrandPerformanceDashboard />\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\nexport default PerformanceDashboard;","import React, { useEffect, useRef, useState, useCallback } from 'react'\r\nimport { ArrowUp, ArrowDown, ArrowUpDown, Filter, ChevronLeft, X, CheckCircle, AlertCircle, RefreshCw, BarChart2, Tag, Layers, Package, ChevronDown, ChevronRight } from 'lucide-react';\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Skeleton } from '@/components/ui/skeleton'\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@radix-ui/react-tooltip'\r\nimport { GoogleLogo } from '@/pages/CampaignMetricsPage'\r\nimport { Button } from '@/components/ui/button'\r\nimport { format } from \"date-fns\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\n\r\ntype Metrics = {\r\n    products: number\r\n    totalCost: number\r\n    ROAS: number,\r\n    conversions: number,\r\n    ConversionValue: number,\r\n    ConversionRate: number,\r\n    totalClicks: number,\r\n    ctr: number,\r\n    AvgCPC: number,\r\n}\r\n\r\ntype Category = {\r\n    name: string\r\n    metrics: Metrics\r\n    subcategories: Category[]\r\n}\r\n\r\ntype ColumnDef = {\r\n    id: string\r\n    header: string\r\n    accessorKey: string\r\n    cell: (value: any) => React.ReactNode\r\n}\r\n\r\ntype TabConfig = {\r\n    id: string\r\n    label: string\r\n    apiEndpoint: string\r\n    columns: ColumnDef[]\r\n    data: any[]\r\n    lastUpdated: number | null,\r\n}\r\n\r\nexport default function ProductTab() {\r\n    const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n    const { brandId } = useParams()\r\n\r\n    const [tabs, setTabs] = useState<TabConfig[]>([\r\n        { id: 'products', label: 'Products', apiEndpoint: `${baseURL}/api/segment/productMetrics/${brandId}`, columns: [], data: [], lastUpdated: null },\r\n        { id: 'categories', label: 'Categories', apiEndpoint: `${baseURL}/api/segment/categoryMetrics/${brandId}`, columns: [], data: [], lastUpdated: null },\r\n        { id: 'brands', label: 'Brands', apiEndpoint: `${baseURL}/api/segment/brandMetrics/${brandId}`, columns: [], data: [], lastUpdated: null },\r\n        { id: 'productTypes', label: 'Product types', apiEndpoint: `${baseURL}/api/segment/typeMetrics/${brandId}`, columns: [], data: [], lastUpdated: null },\r\n    ])\r\n    const [activeTab, setActiveTab] = useState(tabs[0].id)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [expandedCategories, setExpandedCategories] = useState<Set<string>>(new Set())\r\n    const [loading, setLoading] = useState(false)\r\n    const [filterApplied, setFilterApplied] = useState(false);\r\n    const rowsPerPage = 100\r\n    const [filterData, setFilterData] = useState<any>({});\r\n    const cacheRef = useRef<{ [key: string]: { data: any; timestamp: number } }>({});\r\n    const POLL_INTERVAL = 5 * 60 * 1000;\r\n    const [date, setDate] = useState<DateRange | undefined>(undefined);\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    // Sorting state\r\n    const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n    const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\r\n\r\n    const handleTabChange = (newTabId: string) => {\r\n        setActiveTab(newTabId);\r\n        setCurrentPage(1);\r\n        setExpandedCategories(new Set());\r\n    };\r\n\r\n    const fetchTabData = useCallback(\r\n        async (tabId: string, body: Record<string, any> = {}, isFilterApplied: boolean = false) => {\r\n            if (loading) return;\r\n\r\n            setLoading(true);\r\n\r\n            const tab = tabs.find(t => t.id === tabId);\r\n            if (!tab) {\r\n                console.warn(`Tab not found for ID: ${tabId}`);\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            const updatedBody = {\r\n                ...body,\r\n                ...(startDate && { startDate }),\r\n                ...(endDate && { endDate }),\r\n            };\r\n\r\n            const cacheKey = `${tabId}-${startDate || \"default\"}-${endDate || \"default\"}`;\r\n            const cachedData = cacheRef.current[cacheKey];\r\n            const now = Date.now();\r\n\r\n            if (!isFilterApplied && tabId === 'products') {\r\n                delete cacheRef.current[cacheKey];\r\n            }\r\n\r\n            if (!isFilterApplied && cachedData && now - cachedData.timestamp < POLL_INTERVAL) {\r\n                setTabs(prevTabs =>\r\n                    prevTabs.map(t =>\r\n                        t.id === tabId ? { ...t, data: cachedData.data, lastUpdated: cachedData.timestamp } : t\r\n                    )\r\n                );\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await axios.post(tab.apiEndpoint, updatedBody, { withCredentials: true });\r\n\r\n                if (response.data.success) {\r\n                    const result = response.data;\r\n                    const data = result[`${tabId}Data`] || [];\r\n                    console.log(\"New Data for Tab:\", tabId, data);\r\n\r\n                    const columns: ColumnDef[] = Object.keys(data[0] || {}).map(key => ({\r\n                        id: key,\r\n                        header: key.charAt(0).toUpperCase() + key.slice(1),\r\n                        accessorKey: key,\r\n                        cell: (value: any) => {\r\n                            if (key === 'issues' && Array.isArray(value)) {\r\n                                return value.length > 0 ? value[0].description : 'No issues';\r\n                            }\r\n                            return String(value);\r\n                        },\r\n                    }));\r\n\r\n                    console.log(\"Columns for Tab:\", columns);\r\n\r\n                    setTabs(prevTabs =>\r\n                        prevTabs.map(t =>\r\n                            t.id === tabId ? { ...t, columns, data, lastUpdated: now } : t\r\n                        )\r\n                    );\r\n\r\n                    cacheRef.current[cacheKey] = { data, timestamp: now };\r\n                } else {\r\n                    console.error(`Failed to fetch data for ${tabId}`);\r\n                }\r\n            } catch (error) {\r\n                console.error(`Error fetching data for ${tabId}:`, error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        },\r\n        [tabs, loading, cacheRef, startDate, endDate]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const requestBody = {\r\n            ...filterData,\r\n            ...(startDate && { startDate }),\r\n            ...(endDate && { endDate }),\r\n        };\r\n\r\n        fetchTabData(activeTab, filterApplied ? requestBody : {}, filterApplied ? true : false);\r\n    }, [activeTab, date, filterApplied, filterData]);\r\n\r\n    const handleRowClick = (currentTab: string, rowData: Record<string, any>) => {\r\n        const tabColumnMapping: Record<string, string> = {\r\n            brands: 'Brand', // Column name to fetch value when on Brand tab\r\n            productTypes: 'Type', // Column name to fetch value when on Product types tab\r\n            categories: 'name', // Column name to fetch value when on Categories tab\r\n            products: 'status'\r\n        };\r\n\r\n        const bodyKeyMapping: Record<string, string> = {\r\n            brands: 'brands', // Key to send in the API request body when on Brand tab\r\n            productTypes: 'productType', // Key to send in the API request body when on Product types tab\r\n            categories: 'categoryName', // Key to send in the API request body when on Categories tab\r\n            products: 'status'\r\n        };\r\n\r\n        const columnToFetch = tabColumnMapping[currentTab];\r\n        const bodyKey = bodyKeyMapping[currentTab];\r\n\r\n        if (columnToFetch && bodyKey) {\r\n            const valueToSend = rowData[columnToFetch]; // Get value from the row based on the column name\r\n\r\n            if (valueToSend) {\r\n                const filterPayload: Record<string, any> = {\r\n                    [bodyKey]: valueToSend, // Add the main key-value pair\r\n                };\r\n\r\n                // Add the additional key for the 'categories' tab\r\n                if (currentTab === 'categories' && rowData.level) {\r\n                    filterPayload['categoryLevel'] = rowData.level; // Add the additional key\r\n                }\r\n\r\n                // Set filter state\r\n                setFilterData(filterPayload); // Set custom filter data\r\n                setFilterApplied(true); // Mark filter as applied\r\n                setActiveTab('products'); // Switch to the Products tab\r\n            } else {\r\n                console.warn(`No value found for column \"${columnToFetch}\" in row`, rowData);\r\n            }\r\n        } else {\r\n            console.warn(`No column or body key mapping found for tab: ${currentTab}`);\r\n        }\r\n    };\r\n\r\n    const toggleCategory = (categoryPath: string) => {\r\n        setExpandedCategories(prev => {\r\n            const newSet = new Set(prev)\r\n            if (newSet.has(categoryPath)) {\r\n                newSet.delete(categoryPath)\r\n            } else {\r\n                newSet.add(categoryPath)\r\n            }\r\n            return newSet\r\n        })\r\n    }\r\n\r\n    const renderCategoryRow = (category: Category, depth: number = 0, path: string = '') => {\r\n        const currentPath = path ? `${path}.${category.name}` : category.name\r\n        const isExpanded = expandedCategories.has(currentPath)\r\n\r\n        return (\r\n            <React.Fragment key={currentPath}>\r\n                <tr className={`${isExpanded ? 'bg-gray-100' : 'bg-white'}`}>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm flex items-center\">\r\n                        <div style={{ marginLeft: `${depth * 20}px` }} onClick={() => toggleCategory(currentPath)} className=\"flex items-center cursor-pointer\">\r\n                            {category.subcategories.length > 0 && (\r\n                                <button className=\"mr-2\">\r\n                                    {isExpanded ? <ChevronDown className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\r\n                                </button>\r\n                            )}\r\n                            {category.name}\r\n                        </div>\r\n                    </td>\r\n                    <td\r\n                        className=\"px-4 py-2 whitespace-nowrap text-sm cursor-pointer text-blue-500 underline\"\r\n                        onClick={() => handleRowClick(activeTab, category)} // Adding handleRowClick to the Products column\r\n                    >\r\n                        {category.metrics.products}\r\n                    </td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.totalCost}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.ROAS}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.conversions}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.ConversionValue}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.ConversionRate}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.totalClicks}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.ctr}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.AvgCPC}</td>\r\n                </tr>\r\n                {isExpanded &&\r\n                    category.subcategories.map(subCategory =>\r\n                        renderCategoryRow(subCategory, depth + 1, currentPath)\r\n                    )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    const handleSort = (columnId: string) => {\r\n        if (sortColumn === columnId) {\r\n            setSortOrder(prevOrder => (prevOrder === 'asc' ? 'desc' : 'asc'));\r\n        } else {\r\n            setSortColumn(columnId);\r\n            setSortOrder('asc');\r\n        }\r\n    };\r\n    const getCurrentTabData = () => {\r\n        const currentTab = tabs.find(tab => tab.id === activeTab)\r\n        if (!currentTab || currentTab.id === 'categories') return { columns: [], data: [] }\r\n\r\n        let sortedData = currentTab.data;\r\n\r\n        if (sortColumn) {\r\n            sortedData = [...sortedData].sort((a, b) => {\r\n                const aValue = a[sortColumn];\r\n                const bValue = b[sortColumn];\r\n\r\n                if (typeof aValue === 'number' && typeof bValue === 'number') {\r\n                    return sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\r\n                }\r\n\r\n                const stringA = String(aValue || '').toLowerCase();\r\n                const stringB = String(bValue || '').toLowerCase();\r\n\r\n                if (stringA < stringB) return sortOrder === 'asc' ? -1 : 1;\r\n                if (stringA > stringB) return sortOrder === 'asc' ? 1 : -1;\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        const startIndex = (currentPage - 1) * rowsPerPage;\r\n        const endIndex = startIndex + rowsPerPage;\r\n        return {\r\n            columns: currentTab.columns,\r\n            data: sortedData.slice(startIndex, endIndex),\r\n        };\r\n    }\r\n\r\n    const { columns, data } = getCurrentTabData()\r\n    const totalPages = Math.ceil((tabs.find(tab => tab.id === activeTab)?.data.length || 0) / rowsPerPage)\r\n\r\n    const categoryColumns = [\r\n        { id: 'name', header: 'Name' },\r\n        { id: 'products', header: 'Products' },\r\n        { id: 'totalCost', header: 'Cost' },\r\n        { id: 'ROAS', header: 'ROAS' },\r\n        { id: 'conversions', header: 'Conversions' },\r\n        { id: 'ConversionValue', header: 'Conv. Value' },\r\n        { id: 'ConversionRate', header: 'Conv. Rate' },\r\n        { id: 'totalClicks', header: 'Clicks' },\r\n        { id: 'ctr', header: 'CTR' },\r\n        { id: 'AvgCPC', header: 'Avg CPC' },\r\n    ]\r\n\r\n    function TableSkeleton() {\r\n        return (\r\n            <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full table-auto border-collapse\">\r\n                    <thead>\r\n                        <tr>\r\n                            {['w-24', 'w-32', 'w-32', 'w-24', 'w-24', 'w-24'].map((width, index) => (\r\n                                <th key={index} className=\"px-4 py-2 border-b\">\r\n                                    <Skeleton className={`h-4 ${width}`} />\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Array.from({ length: 8 }).map((_, index) => (\r\n                            <tr key={index}>\r\n                                {['w-24', 'w-32', 'w-32', 'w-24', 'w-24', 'w-24'].map((width, idx) => (\r\n                                    <td key={idx} className=\"px-4 py-2 border-b\">\r\n                                        <Skeleton className={`h-4 ${width}`} />\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n    <div className='w-full'>\r\n        <div className='flex flex-row gap-2 items-center mb-4'>\r\n            <GoogleLogo />\r\n            <h1 className='text-xl font-bold text-gray-800'>Google Ads Product Insights</h1>\r\n        </div>\r\n        <div className='bg-white p-6 rounded-xl shadow-lg border border-gray-200'>\r\n            <div className=\"flex items-center justify-between border-b border-gray-200 pb-2 mb-2\">\r\n                <div className=\"flex space-x-2\" role=\"tablist\">\r\n                    {tabs.map(tab => (\r\n                        <Button\r\n                            key={tab.id}\r\n                            variant={activeTab === tab.id ? \"default\" : \"ghost\"}\r\n                            onClick={() => handleTabChange(tab.id)}\r\n                            className=\"relative\"\r\n                        >\r\n                            {tab.id === 'products' && <Package className=\"w-4 h-4 mr-2\" />}\r\n                            {tab.id === 'categories' && <Layers className=\"w-4 h-4 mr-2\" />}\r\n                            {tab.id === 'brands' && <Tag className=\"w-4 h-4 mr-2\" />}\r\n                            {tab.id === 'productTypes' && <BarChart2 className=\"w-4 h-4 mr-2\" />}\r\n                            {tab.label}\r\n                            {activeTab === tab.id && (\r\n                                <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-blue-600\" />\r\n                            )}\r\n                        </Button>\r\n                    ))}\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                    <DatePickerWithRange\r\n                        date={date}\r\n                        setDate={setDate}\r\n                        defaultDate={{\r\n                            from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                            to: new Date(),\r\n                        }}\r\n                    />\r\n                    <Button variant=\"outline\" size=\"icon\">\r\n                        <Filter className={`h-4 w-4 ${filterApplied ? 'text-blue-600' : 'text-gray-600'}`} />\r\n                    </Button>\r\n                    <TooltipProvider>\r\n                        <Tooltip>\r\n                            <TooltipTrigger asChild>\r\n                                <Button variant=\"outline\" size=\"icon\" onClick={() => fetchTabData(activeTab, {}, false)}>\r\n                                    <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                </Button>\r\n                            </TooltipTrigger>\r\n                            {tabs.find(t => t.id === activeTab)?.lastUpdated && (\r\n                                <TooltipContent>\r\n                                    <p>Last updated: {new Date(tabs.find(t => t.id === activeTab)?.lastUpdated || 0).toLocaleString()}</p>\r\n                                </TooltipContent>\r\n                            )}\r\n                        </Tooltip>\r\n                    </TooltipProvider>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='space-y-4'>\r\n                {filterApplied && (\r\n                    <div className=\"flex items-center gap-2 w-fit p-2 bg-blue-50 rounded-full\">\r\n                        <span className=\"text-xs font-medium text-blue-700\">{Object.entries(filterData).map(([key, value]) => `${key}: ${value}`).join(', ')}</span>\r\n                        <Button\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            onClick={() => {\r\n                                setFilterApplied(false);\r\n                                setFilterData({});\r\n                                setActiveTab('products');\r\n                                cacheRef.current['products'] = null as any;\r\n                                fetchTabData('products', {}, false);\r\n                            }}\r\n                            className=\"text-blue-700 hover:text-blue-800 hover:bg-blue-100 p-1 h-auto\"\r\n                        >\r\n                            <X className=\"h-3 w-3\" />\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n                <div className=\"rounded-md border border-gray-200 overflow-hidden\">\r\n                    <div className=\"max-h-[350px] overflow-auto\">\r\n                        {loading ? <TableSkeleton /> : (\r\n                            <table className=\"w-full\">\r\n                                <thead className=\"sticky top-0 z-10 bg-[#4A628A]\">\r\n                                    <tr>\r\n                                        {(activeTab === 'categories' ? categoryColumns : columns).map(column => (\r\n                                            <th key={column.id} className=\"px-4 py-3 text-left text-xs font-medium text-gray-50 uppercase tracking-wider min-w-[150px] cursor-pointer\" onClick={() => handleSort(column.id)}>\r\n                                            <div className=\"flex items-center gap-1\">\r\n                                                {column.header}\r\n                                                {sortColumn === column.id ? (\r\n                                                    sortOrder === 'asc' ? <ArrowUp className=\"h-4 w-4\" /> : <ArrowDown className=\"h-4 w-4\" />\r\n                                                ) : (\r\n                                                    <ArrowUpDown className=\"h-4 w-4\" />\r\n                                                )}\r\n                                            </div>\r\n                                        </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                    {activeTab === 'categories' ? (\r\n                                        tabs.find(tab => tab.id === 'categories')?.data.map((category: Category) =>\r\n                                            renderCategoryRow(category)\r\n                                        )\r\n                                    ) : (\r\n                                        data.map((row, i) => (\r\n                                            <tr key={i} className=\"hover:bg-gray-50\">\r\n                                                {columns.map((column) => {\r\n                                                    const value = column.cell(row[column.accessorKey]);\r\n                                                    const isIssuesColumn = column.id === 'issues';\r\n                                                    const isProductColumn = column.id === 'Products';\r\n                                                    const isStatusColumn = column.id === 'status';\r\n                                                    const isNoIssues = typeof value === 'string' && value.trim().toLowerCase() === 'no issues';\r\n\r\n                                                    const getStatusColor = (status: string) => {\r\n                                                        switch (status.trim().toUpperCase()) {\r\n                                                            case \"UNSPECIFIED\": return 'bg-gray-100 text-gray-800';\r\n                                                            case \"UNKNOWN\": return 'bg-yellow-100 text-yellow-800';\r\n                                                            case \"NOT_ELIGIBLE\": return 'bg-red-100 text-red-800';\r\n                                                            case \"ELIGIBLE_LIMITED\": return 'bg-orange-100 text-orange-800';\r\n                                                            case \"ELIGIBLE\": return 'bg-green-100 text-green-800';\r\n                                                            default: return 'bg-gray-100 text-gray-700';\r\n                                                        }\r\n                                                    };\r\n\r\n                                                    const renderCell = () => {\r\n                                                        if (isIssuesColumn) {\r\n                                                            return (\r\n                                                                <div className={`flex items-center ${isNoIssues ? 'text-green-600' : 'text-red-600'}`}>\r\n                                                                    {isNoIssues ? <CheckCircle className=\"w-4 h-4 mr-2\" /> : <AlertCircle className=\"w-4 h-4 mr-2\" />}\r\n                                                                    {value}\r\n                                                                </div>\r\n                                                            );\r\n                                                        }\r\n\r\n                                                        if (isStatusColumn) {\r\n                                                            const statusValue = value ? String(value) : '';\r\n                                                            const colorClass = getStatusColor(statusValue);\r\n                                                            return (\r\n                                                                <div className={`px-2 py-1.5 rounded-full text-xs font-medium w-full ${colorClass} cursor-pointer`} onClick={() => handleRowClick(activeTab, row)}>\r\n                                                                    {statusValue}\r\n                                                                </div>\r\n                                                            );\r\n                                                        }\r\n                                                        return column.cell ? column.cell(value) : value;\r\n                                                    };\r\n\r\n                                                    return (\r\n                                                        <td\r\n                                                            key={column.id}\r\n                                                            className={`px-4 py-2.5 text-sm whitespace-nowrap min-w-[150px] ${isProductColumn ? 'cursor-pointer text-blue-600 hover:text-blue-800' : ''}`}\r\n                                                            onClick={() => isProductColumn && handleRowClick(activeTab, row)}\r\n                                                        >\r\n                                                            {renderCell()}\r\n                                                        </td>\r\n                                                    );\r\n                                                })}\r\n                                            </tr>\r\n                                        ))\r\n                                    )}\r\n                                    {(activeTab === 'categories' ? tabs.find(tab => tab.id === 'categories')?.data.length === 0 : data.length === 0) && (\r\n                                        <tr>\r\n                                            <td\r\n                                                colSpan={(activeTab === 'categories' ? categoryColumns : columns).length}\r\n                                                className=\"px-4 py-2 text-sm text-gray-500 text-center\"\r\n                                            >\r\n                                                No data available\r\n                                            </td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between px-4 py-3 bg-gray-50 border-t border-gray-200\">\r\n                        <div className=\"text-sm text-gray-700\">\r\n                            Showing {((currentPage - 1) * rowsPerPage) + 1} to {Math.min(currentPage * rowsPerPage, tabs.find(t => t.id === activeTab)?.data.length || 0)} of {tabs.find(t => t.id === activeTab)?.data.length || 0} entries\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                            <Button\r\n                                variant=\"outline\"\r\n                                size=\"sm\"\r\n                                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\r\n                                disabled={currentPage === 1}\r\n                            >\r\n                                <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n                                Previous\r\n                            </Button>\r\n                            <div className=\"text-sm text-gray-700\">\r\n                                Page {currentPage} of {totalPages}\r\n                            </div>\r\n                            <Button\r\n                                variant=\"outline\"\r\n                                size=\"sm\"\r\n                                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\r\n                                disabled={currentPage === totalPages}\r\n                            >\r\n                                Next\r\n                                <ChevronRight className=\"h-4 w-4 ml-1\" />\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n};      ","import { GoogleLogo } from \"@/pages/CampaignMetricsPage\";\r\nimport { useState, useEffect, useCallback, useMemo } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ChevronLeft, ChevronRight, Search, Filter, RefreshCw, Zap, DollarSign, Percent, MousePointer, CreditCard, TrendingUp, Target, Users, Megaphone, ArrowUp, ArrowDown, ArrowUpDown } from 'lucide-react';\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { format } from \"date-fns\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\r\n\r\ninterface SearchTerm {\r\n  id: string;\r\n  searchTerm: string\r\n  matchType: string\r\n  status: string\r\n  campaignName: string\r\n  adGroup: string\r\n  impressions: number\r\n  clicks: number\r\n  ctr: string\r\n  cost: string\r\n  performance: string\r\n}\r\n\r\ninterface CampaignAdGroupPair {\r\n  campaignName: string;\r\n  adGroups: string[];\r\n}\r\n\r\nexport default function SearchTermTable() {\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n  const { brandId } = useParams();\r\n  const [searchTerms, setSearchTerms] = useState<SearchTerm[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [hasMoreData, setHasMoreData] = useState(true);\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [campaignAdGroupPairs, setCampaignAdGroupPairs] = useState<CampaignAdGroupPair[]>([]);\r\n  const [selectedCampaign, setSelectedCampaign] = useState<string>('all');\r\n  const [statusOptions, setStatusOptions] = useState<[]>([]);\r\n  const [selectedAdGroup, setSelectedAdGroup] = useState<string>('all');\r\n  const [selectedStatus, setSelectedStatus] = useState<string>('all');\r\n  const [date, setDate] = useState<DateRange | undefined>(undefined);\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const rowsPerPage = 100;\r\n\r\n  const columns = [\r\n    { id: 'searchTerm', header: 'Search Term', icon: <Search className=\"w-4 h-4\" /> },\r\n    { id: 'matchType', header: 'Match Type', icon: <Zap className=\"w-4 h-4\" /> },\r\n    { id: 'status', header: 'Status', icon: <Filter className=\"w-4 h-4\" /> },\r\n    { id: 'campaignName', header: 'Campaign Name', icon: <Megaphone className=\"w-4 h-4\" /> },\r\n    { id: 'adGroupName', header: 'Ad Group', icon: <Users className=\"w-4 h-4\" /> },\r\n    { id: 'cost', header: 'Cost', icon: <DollarSign className=\"w-4 h-4\" /> },\r\n    { id: 'conversions', header: 'Conversions', icon: <Target className=\"w-4 h-4\" /> },\r\n    { id: 'conversionsValue', header: 'Conv. Value', icon: <TrendingUp className=\"w-4 h-4\" /> },\r\n    { id: 'conversionsRate', header: 'Conv. Rate', icon: <Percent className=\"w-4 h-4\" /> },\r\n    { id: 'clicks', header: 'Clicks', icon: <MousePointer className=\"w-4 h-4\" /> },\r\n    { id: 'ctr', header: 'CTR', icon: <Percent className=\"w-4 h-4\" /> },\r\n    { id: 'avg_cpc', header: 'Avg. CPC', icon: <CreditCard className=\"w-4 h-4\" /> },\r\n  ]\r\n\r\n  const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\r\n\r\n  const handleSort = (column: string) => {\r\n    if (sortColumn === column) {\r\n      setSortOrder(prevOrder => prevOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortColumn(column);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  const sortedSearchTerms = useMemo(() => {\r\n    if (!sortColumn) return searchTerms;\r\n\r\n    return [...searchTerms].sort((a, b) => {\r\n      const aValue = a[sortColumn as keyof SearchTerm];\r\n      const bValue = b[sortColumn as keyof SearchTerm];\r\n\r\n      // Handle numeric comparisons\r\n      if (typeof aValue === 'number' && typeof bValue === 'number') {\r\n        return sortOrder === 'asc' \r\n          ? aValue - bValue \r\n          : bValue - aValue;\r\n      }\r\n\r\n      // String comparison (case-insensitive)\r\n      const stringA = String(aValue).toLowerCase();\r\n      const stringB = String(bValue).toLowerCase();\r\n\r\n      if (stringA < stringB) return sortOrder === 'asc' ? -1 : 1;\r\n      if (stringA > stringB) return sortOrder === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n  }, [searchTerms, sortColumn, sortOrder]);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Prepare request body\r\n      const requestBody = {\r\n        limit: rowsPerPage,\r\n        page: currentPage,\r\n        startDate,\r\n        endDate,\r\n        ...(selectedCampaign && selectedCampaign !== 'all' && { campaign: selectedCampaign }),\r\n        ...(selectedAdGroup && selectedAdGroup !== 'all' && { adGroup: selectedAdGroup }),\r\n        ...(selectedStatus && selectedStatus !== 'all' && { status: selectedStatus }),\r\n      };\r\n\r\n      // Make API request\r\n      const { data: response } = await axios.post(\r\n        `${baseURL}/api/segment/searchTermMetrics/${brandId}`,\r\n        requestBody,\r\n        { withCredentials: true }\r\n      );\r\n\r\n      if (response.success) {\r\n        // Set data in state\r\n        setSearchTerms(response.data);\r\n        setTotalRecords(response.totalRecords);\r\n        setTotalPages(response.totalPages);\r\n        setHasMoreData(currentPage * rowsPerPage < response.totalRecords);\r\n        setCampaignAdGroupPairs(response.campaignAdGroupPairs);\r\n        setStatusOptions(response.statusOptions)\r\n      } else {\r\n        console.error('Failed to fetch search term metrics:', response.message);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching search term metrics:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [\r\n    baseURL,\r\n    brandId,\r\n    currentPage,\r\n    rowsPerPage,\r\n    selectedCampaign,\r\n    selectedAdGroup,\r\n    selectedStatus,\r\n    startDate,\r\n    endDate\r\n  ]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 300000);\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  const handleCampaignChange = (value: string) => {\r\n    setSelectedCampaign(value);\r\n    setSelectedAdGroup('all');\r\n    setCurrentPage(1)\r\n  };\r\n\r\n  const handleAdGroupChange = (value: string) => {\r\n    setSelectedAdGroup(value);\r\n    setCurrentPage(1)\r\n  };\r\n\r\n  const handleStatusChange = (value: string) => {\r\n    setSelectedStatus(value);\r\n    setCurrentPage(1)\r\n  };\r\n\r\n  const filteredAdGroups = selectedCampaign !== 'all'\r\n    ? campaignAdGroupPairs?.find(pair => pair.campaignName === selectedCampaign)?.adGroups || []\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"flex flex-row gap-2 items-center mb-4\">\r\n        <GoogleLogo />\r\n        <h1 className=\"text-xl font-bold text-gray-800\">Google Ads Search Term Insights</h1>\r\n      </div>\r\n      <div className=\"bg-white rounded-xl overflow-hidden border border-gray-200 shadow-md\">\r\n        <div className=\"p-4\">\r\n          <div className=\"flex justify-between mb-4\">\r\n            <Popover>\r\n              <PopoverTrigger asChild>\r\n                <Button variant=\"outline\" className=\"bg-white border-gray-300 hover:bg-gray-50 transition-colors duration-200\">\r\n                  <Filter className=\"w-4 h-4 mr-2\" />\r\n                  Filter\r\n                </Button>\r\n              </PopoverTrigger>\r\n              <PopoverContent className=\"w-80\">\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <h3 className=\"font-medium mb-2\">Status</h3>\r\n                    <Select onValueChange={handleStatusChange} value={selectedStatus}>\r\n                      <SelectTrigger className=\"w-full\">\r\n                        <SelectValue placeholder=\"Select Status\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"all\">All Status</SelectItem>\r\n                        {statusOptions.map((status) => (\r\n                          <SelectItem key={status} value={status}>{status}</SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-medium mb-2\">Campaign</h3>\r\n                    <Select onValueChange={handleCampaignChange} value={selectedCampaign}>\r\n                      <SelectTrigger className=\"w-full\">\r\n                        <SelectValue placeholder=\"Select Campaign\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"all\">All Campaigns</SelectItem>\r\n                        {campaignAdGroupPairs.map((pair) => (\r\n                          <SelectItem key={pair.campaignName} value={pair.campaignName}>{pair.campaignName}</SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  {selectedCampaign !== 'all' && (\r\n                    <div>\r\n                      <h3 className=\"font-medium mb-2\">Ad Group</h3>\r\n                      <Select\r\n                        disabled={selectedCampaign === 'all'}\r\n                        onValueChange={handleAdGroupChange}\r\n                        value={selectedAdGroup}\r\n                      >\r\n                        <SelectTrigger className=\"w-full\">\r\n                          <SelectValue placeholder=\"Select Ad Group\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"all\">All Ad Groups</SelectItem>\r\n                          {filteredAdGroups.map((adGroup) => (\r\n                            <SelectItem key={adGroup} value={adGroup}>{adGroup}</SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </PopoverContent>\r\n            </Popover>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <DatePickerWithRange\r\n                date={date}\r\n                setDate={setDate}\r\n                defaultDate={{\r\n                  from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                  to: new Date(),\r\n                }}\r\n              />\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"bg-gray-50 text-gray-600 border-gray-200 hover:bg-gray-100\"\r\n                onClick={fetchData}\r\n              >\r\n                <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n                Refresh\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"rounded-md border border-gray-200 overflow-hidden\">\r\n            <div className=\"max-h-[380px] overflow-auto rounded-lg\">\r\n              {loading ? (\r\n                <TableSkeleton />\r\n              ) : (\r\n                <table className=\"w-full text-center\">\r\n                  <thead className=\"sticky top-0 z-10 bg-[#4A628A] rounded-t-lg\">\r\n                    <tr>\r\n                      {columns.map((column) => (\r\n                        <th\r\n                          key={column.id}\r\n                          className=\"px-4 py-3 text-xs font-medium text-gray-50 uppercase tracking-wider min-w-[200px] cursor-pointer\"\r\n                          onClick={() => handleSort(column.id)}\r\n                        >\r\n                          <div className=\"flex items-center justify-center gap-1\">\r\n                            {column.icon}\r\n                            {column.header}\r\n                            {sortColumn === column.id ? (\r\n                              sortOrder === 'asc' ? <ArrowUp className=\"ml-1 w-4 h-6 text-[#ffffff]\" /> : <ArrowDown className=\"ml-1 w-4 h-6 text-[#ffffff]\" />\r\n                            ) : (\r\n                              <ArrowUpDown className=\"ml-1 w-4 h-6 text-gray-300\" />\r\n                            )}\r\n                          </div>\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {sortedSearchTerms.map((row, i) => (\r\n                      <tr key={i} className=\"hover:bg-gray-50 transition-colors duration-150\">\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id as keyof SearchTerm];\r\n                          const isStatusColumn = column.id === 'status';\r\n                          const isSearchTermColumn = column.id === 'searchTerm'\r\n\r\n                          const renderCell = () => {\r\n                            if (isStatusColumn) {\r\n                              const statusValue = value ? String(value) : '';\r\n                              const getStatusColor = (status: string) => {\r\n                                switch (status.trim().toUpperCase()) {\r\n                                  case 'ADDED':\r\n                                    return 'bg-green-100 text-green-800';\r\n                                  case 'NONE':\r\n                                    return 'bg-yellow-100 text-yellow-800';\r\n                                  default:\r\n                                    return 'bg-gray-100 text-gray-800';\r\n                                }\r\n                              };\r\n                              const colorClass = getStatusColor(statusValue);\r\n\r\n                              return (\r\n                                <div className={`px-2 py-1 rounded-full text-xs font-medium ${colorClass}`}>\r\n                                  {statusValue}\r\n                                </div>\r\n                              );\r\n                            }\r\n\r\n                            if (isSearchTermColumn) {\r\n                              const searchTermValue = value ? String(value) : '';\r\n                              const performance = row.performance;\r\n                              const isPerformingWell = performance === 'Best Performing Keyword';\r\n\r\n                              return (\r\n                                <div className=\"px-2 py-1 rounded-full font-medium flex flex-col items-center\">\r\n                                  <span className={`text-xs ${isPerformingWell ? 'text-green-600' : 'text-red-600'}`}>\r\n                                    {performance}\r\n                                  </span>\r\n                                  <span className=\"text-sm mt-1\">{searchTermValue}</span>\r\n                                </div>\r\n                              );\r\n                            }\r\n\r\n                            return value;\r\n                          };\r\n\r\n                          return (\r\n                            <td\r\n                              key={column.id}\r\n                              className=\"px-4 py-2.5 text-sm min-w-[200px]\"\r\n                            >\r\n                              {renderCell()}\r\n                            </td>\r\n                          );\r\n                        })}\r\n                      </tr>\r\n                    ))}\r\n                    {searchTerms.length === 0 && (\r\n                      <tr>\r\n                        <td\r\n                          colSpan={columns.length}\r\n                          className=\"px-4 py-2 text-sm text-gray-500 text-center\"\r\n                        >\r\n                          No data available\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              )}\r\n            </div>\r\n            <div className=\"flex items-center justify-between px-4 py-3 bg-gray-50\">\r\n              <div className=\"text-sm text-gray-600\">\r\n                Showing {((currentPage - 1) * rowsPerPage) + 1} to{' '}\r\n                {Math.min(currentPage * rowsPerPage, totalRecords || 0)} of{' '}\r\n                {totalRecords || 0} entries\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n                  disabled={currentPage === 1}\r\n                  className=\"text-gray-600 border-gray-200 hover:bg-gray-50\"\r\n                >\r\n                  <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n                  Previous\r\n                </Button>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Page {currentPage} of {totalPages}\r\n                </div>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  onClick={() => setCurrentPage((prev) => prev + 1)}\r\n                  disabled={!hasMoreData}\r\n                  className=\"text-gray-600 border-gray-200 hover:bg-gray-50\"\r\n                >\r\n                  Next\r\n                  <ChevronRight className=\"h-4 w-4 ml-1\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { ChevronLeft, ChevronRight, RefreshCw, Package, Layers, ArrowUp, ArrowDown, ArrowUpDown, Filter } from 'lucide-react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Button } from '@/components/ui/button';\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, Legend } from 'recharts';\r\nimport { format } from \"date-fns\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { GoogleLogo } from '@/pages/CampaignMetricsPage';\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\n\r\ntype TabConfig = {\r\n    id: string;\r\n    label: string;\r\n    apiEndpoint: string;\r\n    columns: ColumnDef[];\r\n    data: any[];\r\n    lastUpdated: number | null;\r\n    totalPages?: number;\r\n    currentPage?: number;\r\n    campaignAdGroupPairs?: CampaignAdGroupPair[];\r\n};\r\n\r\ntype CampaignAdGroupPair = {\r\n    campaignName: string;\r\n    adGroups: string[];\r\n};\r\n\r\ntype ColumnDef = {  \r\n    id: string;\r\n    header: string;\r\n    accessorKey: string;\r\n    cell: (value: any) => React.ReactNode;\r\n};\r\n\r\ntype MetricKey = keyof typeof metricLabels;\r\n\r\ntype FilterState = {\r\n    status: string;\r\n    campaign: string;\r\n    adGroup: string;\r\n    ageRange?: string;\r\n    gender?: string;\r\n    campaignStatus: string;\r\n};\r\n\r\nconst metricLabels = {\r\n    totalConversions: 'Total Conversions',\r\n    totalClicks: 'Total Clicks',\r\n    totalCost: 'Total Cost',\r\n    totalCTR: 'Total C T R'\r\n};\r\n\r\n// Define rows per page constant\r\nconst ROWS_PER_PAGE = 100;\r\n\r\nexport default function AgeAndGenderMetrics() {\r\n    const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n    const { brandId } = useParams();\r\n\r\n    if (!brandId) {\r\n        return <div>Error: Brand ID is missing</div>;\r\n    }\r\n\r\n    // State for filters\r\n    const [filters, setFilters] = useState<FilterState>({\r\n        campaign: 'all',\r\n        adGroup: 'all',\r\n        ageRange: 'all',\r\n        gender: 'all',\r\n        status: 'all', \r\n        campaignStatus: 'all' \r\n    });\r\n\r\n\r\n    const [filterOptions, setFilterOptions] = useState<{\r\n        campaigns: string[];\r\n        adGroups: string[];\r\n        ageRanges: string[];\r\n        genders: string[];\r\n        campaignAdGroupMap?: Record<string, string[]>;\r\n        statusOptions: string[]; \r\n    }>({\r\n        campaigns: [],\r\n        adGroups: [],\r\n        ageRanges: [],\r\n        genders: [],\r\n        campaignAdGroupMap: {},\r\n        statusOptions: ['REMOVED', 'PAUSED', 'ENABLED'], \r\n    });\r\n\r\n    const [data, setData] = useState<any[]>([]);\r\n    const [tabs, setTabs] = useState<TabConfig[]>([\r\n        { \r\n            id: 'age', \r\n            label: 'Age', \r\n            apiEndpoint: `${baseURL}/api/segment/ageMetrics/${brandId}`, \r\n            columns: [], \r\n            data: [], \r\n            lastUpdated: null,\r\n            totalPages: 1,\r\n            currentPage: 1\r\n        },\r\n        { \r\n            id: 'gender', \r\n            label: 'Gender', \r\n            apiEndpoint: `${baseURL}/api/segment/genderMetrics/${brandId}`, \r\n            columns: [], \r\n            data: [], \r\n            lastUpdated: null,\r\n            totalPages: 1,\r\n            currentPage: 1\r\n        },\r\n    ]);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [hasMoreData, setHasMoreData] = useState(true);\r\n    const [activeTab, setActiveTab] = useState(tabs[0].id);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [showGraph, setShowGraph] = useState(false);\r\n    const [graphData, setGraphData] = useState<any>(null);\r\n    const [selectedMetrics, setSelectedMetrics] = useState<MetricKey[]>(['totalClicks', 'totalCost']);\r\n\r\n    const [date, setDate] = useState<DateRange | undefined>({\r\n        from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n        to: new Date()\r\n    });\r\n\r\n    // Add handleMetricChange function\r\n    const handleMetricChange = (metric: MetricKey) => {\r\n        setSelectedMetrics(prev => \r\n            prev.includes(metric) \r\n                ? prev.filter(m => m !== metric)\r\n                : [...prev, metric]\r\n        );\r\n    };\r\n\r\n    // State variables for caching filter options\r\n    const [cachedAgeRanges, setCachedAgeRanges] = useState<string[]>([]);\r\n    const [cachedGenders, setCachedGenders] = useState<string[]>([]);\r\n    \r\n    const fetchData = async (\r\n        tabId: string, \r\n        requestData?: {\r\n            startDate: string;\r\n            endDate: string;\r\n            page: number;\r\n            limit: number;\r\n            status?: string; // Ensure status is included here\r\n            campaign?: string;\r\n            adGroup?: string;\r\n            agerange?: string;\r\n            gender?: string;\r\n        }, \r\n        _forceRefresh?: boolean\r\n    ) => {\r\n        try {\r\n            setLoading(true);\r\n            const apiEndpoint = tabId === 'gender' \r\n                ? `${baseURL}/api/segment/genderMetrics/${brandId}`\r\n                : `${baseURL}/api/segment/ageMetrics/${brandId}`;\r\n    \r\n            // Prepare the request body with all possible filters\r\n            const requestBody = {\r\n                startDate: requestData?.startDate || (date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\"),\r\n                endDate: requestData?.endDate || (date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\"),\r\n                page: requestData?.page || currentPage,\r\n                limit: requestData?.limit || ROWS_PER_PAGE,\r\n                ...(requestData?.status && { status: requestData.status }), // Ensure this line is present\r\n                ...(requestData?.campaign && requestData.campaign !== 'all' && { campaign: requestData.campaign }),\r\n                ...(requestData?.adGroup && requestData.adGroup !== 'all' && { adGroup: requestData.adGroup }),\r\n                ...(activeTab === 'age' && requestData?.agerange && requestData.agerange !== 'all' && { agerange: requestData.agerange }),\r\n                ...(activeTab === 'gender' && requestData?.gender && requestData.gender !== 'all' && { gender: requestData.gender })\r\n            };\r\n    \r\n            console.log(\"Fetch Request Body:\", requestBody); // Debug logging\r\n    \r\n            const response = await axios.post(apiEndpoint, requestBody, { withCredentials: true });\r\n            const genderCampaignNames: string[] = response.data.genderCampaignAdGroupPairs?.map((pair: { campaignName: string }) => pair.campaignName) || [];\r\n            if (response.data.success) {\r\n                // Combine campaign names and ad groups from both age and gender metrics\r\n                const campaignNames: string[] = [\r\n                    ...(response.data.campaignAdGroupPairs?.map((pair: { campaignName: string }) => pair.campaignName) || []),\r\n                    ...(response.data.campaignAdGroupPairs?.map((pair: { campaignName: string }) => pair.campaignName) || []),\r\n                    ...genderCampaignNames\r\n                ];\r\n                \r\n                // Initialize and update campaignAdGroupMap\r\n                const campaignAdGroupMap: Record<string, string[]> = {};\r\n                const campaignAdGroupPairs = [\r\n                    ...(response.data.campaignAdGroupPairs || []),\r\n                    ...(response.data.genderCampaignAdGroupPairs || [])\r\n                ];\r\n            \r\n                campaignAdGroupPairs.forEach((pair: CampaignAdGroupPair) => {\r\n                    campaignAdGroupMap[pair.campaignName] = pair.adGroups || [];\r\n                });\r\n            \r\n                // Get unique ad groups\r\n                const adGroups = Array.from(new Set(\r\n                    campaignAdGroupPairs.flatMap((pair: CampaignAdGroupPair) => pair.adGroups || [])\r\n                ));\r\n            \r\n                setFilterOptions(prevOptions => ({\r\n                    ...prevOptions,\r\n                    campaigns: Array.from(new Set(campaignNames)),\r\n                    adGroups: adGroups,\r\n                    campaignAdGroupMap: campaignAdGroupMap\r\n                }));\r\n            \r\n            \r\n                const data = tabId === 'gender' ? response.data.genderData || [] : response.data.ageData || [];\r\n            \r\n                if (tabId === 'age') {\r\n                    const ageRanges = new Set(data.map((item: any) => item.ageRange));\r\n            \r\n                    if (cachedAgeRanges.length === 0) {\r\n                        setCachedAgeRanges(Array.from(ageRanges) as string[]);\r\n                    }\r\n            \r\n                    setFilterOptions(prevOptions => ({\r\n                        ...prevOptions,\r\n                        ageRanges: cachedAgeRanges.length > 0 ? cachedAgeRanges : Array.from(ageRanges) as string[],\r\n                        genders: prevOptions.genders\r\n                    }));\r\n                } else {\r\n                    const genders = new Set(data.map((item: any) => \r\n                        item.gender === 'MALE' ? 'MALE' : \r\n                        item.gender === 'FEMALE' ? 'FEMALE' : \r\n                        item.gender\r\n                    ));\r\n            \r\n                    if (cachedGenders.length === 0) {\r\n                        setCachedGenders(Array.from(genders) as string[]);\r\n                    }\r\n            \r\n                    setFilterOptions(prevOptions => ({\r\n                        ...prevOptions,\r\n                        campaigns: [...new Set([...campaignNames, ...genderCampaignNames])], // Combine both sets of campaign names\r\n                        genders: cachedGenders.length > 0 ? cachedGenders : Array.from(genders) as string[]\r\n                    }));\r\n                }\r\n            \r\n                setData(data);\r\n    \r\n                const columns: ColumnDef[] = data.length > 0\r\n                    ? Object.keys(data[0] || {})\r\n                        .filter(key => key !== 'adGroupStatus')\r\n                        .map(key => ({\r\n                            id: key,\r\n                            header: key === 'campaignStatus' \r\n                                ? 'Campaign Status' \r\n                                : key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()),\r\n                            accessorKey: key,\r\n                            cell: (value: any) => {\r\n                                if (key === 'cost') {\r\n                                    return `$${Number(value).toFixed(2)}`;\r\n                                }\r\n                                if (['roas', 'conversionsRate', 'ctr'].includes(key)) {\r\n                                    return `${(Number(value) * 100).toFixed(2)}%`;\r\n                                }\r\n                                if (key === 'campaignStatus') {\r\n                                    // Capitalize and style campaign status\r\n                                    const statusColor = {\r\n                                        'REMOVED': 'text-red-600',\r\n                                        'PAUSED': 'text-yellow-600',\r\n                                        'ENABLED': 'text-green-600'\r\n                                    }[value as string] || '';\r\n                                    return (\r\n                                        <span className={`font-medium ${statusColor}`}>\r\n                                            {value === 'REMOVED' ? 'Removed' : \r\n                                             value === 'PAUSED' ? 'Paused' : \r\n                                             value === 'ENABLED' ? 'Enabled' : value}\r\n                                        </span>\r\n                                    );\r\n                                }\r\n                                return String(value);\r\n                            }\r\n                        }))\r\n                    : [];\r\n                \r\n                setTabs(prevTabs =>\r\n                    prevTabs.map(t =>\r\n                        t.id === tabId\r\n                            ? { ...t, columns, data, lastUpdated: Date.now() }\r\n                            : t\r\n                    )\r\n                );\r\n                \r\n                const aggregatedData = tabId === 'gender' \r\n                    ? response.data.aggregatedRecords \r\n                    : response.data.ageRangeAggregatedMetrics;\r\n                console.log(\"Aggregated Data:\", aggregatedData);\r\n                console.log(\"Response Data afterfilter test:\", response.data);\r\n                const processedGraphData = Object.entries(aggregatedData || {}).map(([key, metrics]) => {\r\n                    const displayKey = tabId === 'gender' \r\n                        ? (key === 'MALE' ? 'Male' : key === 'FEMALE' ? 'Female' : key)\r\n                        : key;\r\n                        \r\n                    const baseEntry = {\r\n                        [tabId === 'gender' ? 'gender' : 'ageRange']: displayKey\r\n                    };\r\n                    \r\n                    if (metrics && typeof metrics === 'object' && !Array.isArray(metrics)) {\r\n                        const typedMetrics = metrics as Record<string, number>;\r\n                        return {\r\n                            ...baseEntry,\r\n                            totalConversions: typedMetrics.totalConversions || 0,\r\n                            totalClicks: typedMetrics.totalClicks || 0,\r\n                            totalCost: typedMetrics.totalCost || 0,\r\n                            totalCTR: typedMetrics.totalCTR || 0\r\n                        };\r\n                    }\r\n                    return baseEntry;\r\n                });\r\n                console.log(\"Processed Graph Data:\", processedGraphData);\r\n                setGraphData(processedGraphData);\r\n                setTotalRecords(response.data.totalRecords || 0);\r\n                setTotalPages(response.data.totalPages || 1);\r\n                setHasMoreData(currentPage * ROWS_PER_PAGE < response.data.totalRecords);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.error(`Error fetching data:`, error);\r\n            setGraphData(null);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleFilterChange = (filterKey: keyof FilterState, value: string) => {\r\n        setFilters(prev => {\r\n            const updatedFilters = {\r\n                ...prev,\r\n                [filterKey]: value\r\n            };\r\n    \r\n            // Reset dependent filters when certain filters change\r\n            if (filterKey === 'campaign') {\r\n                updatedFilters.adGroup = 'all';\r\n            }\r\n    \r\n            return updatedFilters;\r\n        });\r\n    \r\n        // Prepare request body with updated filters\r\n        const requestBody = {\r\n            startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n            endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n            page: 1,\r\n            limit: ROWS_PER_PAGE,\r\n            status: filters.status === 'all' ? undefined : filters.status,\r\n            campaign: filters.campaign === 'all' ? undefined : filters.campaign,\r\n            adGroup: filters.adGroup === 'all' ? undefined : filters.adGroup,\r\n            ...(activeTab === 'age' && filters.ageRange !== 'all' && { agerange: filters.ageRange }),\r\n            ...(activeTab === 'gender' && filters.gender !== 'all' && { gender: filters.gender })\r\n        };\r\n    \r\n        // Reset graph data before fetching\r\n        setGraphData(null);\r\n    \r\n        // Force data refresh with new filters\r\n        fetchData(activeTab, requestBody, true);\r\n    };\r\n    useEffect(() => {\r\n        const requestBody = {\r\n            startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n            endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n            page: currentPage,\r\n            limit: ROWS_PER_PAGE,\r\n            status: filters.status === 'all' ? undefined : filters.status,\r\n            campaign: filters.campaign === 'all' ? undefined : filters.campaign,\r\n            adGroup: filters.adGroup === 'all' ? undefined : filters.adGroup,\r\n            \r\n            // Conditional filters based on active tab\r\n            ...(activeTab === 'age' && filters.ageRange !== 'all' && { \r\n                agerange: filters.ageRange \r\n            }),\r\n            ...(activeTab === 'gender' && filters.gender !== 'all' && { \r\n                gender: filters.gender \r\n            })\r\n        };\r\n    \r\n        // Reset graph data before fetching\r\n        setGraphData(null);\r\n        \r\n        console.log('UseEffect Fetch Request:', { \r\n            activeTab, \r\n            filters, \r\n            requestBody \r\n        });\r\n        \r\n        fetchData(activeTab, requestBody);\r\n    \r\n        const intervalId = setInterval(() => {\r\n            fetchData(activeTab, requestBody);\r\n        }, 300000); // 5 minutes\r\n    \r\n        return () => clearInterval(intervalId);\r\n    }, [\r\n        activeTab, \r\n        date, \r\n        currentPage, \r\n        filters.campaign,\r\n        filters.adGroup,\r\n        filters.ageRange,\r\n        filters.gender,\r\n        filters.status\r\n    ]);\r\n    const handleTabChange = (newTabId: string) => {\r\n        setActiveTab(newTabId);\r\n        setCurrentPage(1);\r\n        const requestBody = {\r\n            startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n            endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n            page: 1,\r\n            limit: ROWS_PER_PAGE\r\n        };\r\n        fetchData(newTabId, requestBody);\r\n    };\r\n\r\n    const sortableColumns = [\r\n        'campaignName',\r\n        'adGroupName',\r\n        'campaignStatus',\r\n        'ageRange',\r\n        'conversionsValue',\r\n        'conversionsRate',\r\n        'avg_cpc', \r\n        'cost',\r\n        'roas',\r\n        'conversions',\r\n        'clicks',\r\n        'ctr'\r\n    ];\r\n\r\n    const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n    const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\r\n\r\n    const handleSort = (column: string) => {\r\n        if (sortColumn === column) {\r\n            setSortOrder(prevOrder => prevOrder === 'asc' ? 'desc' : 'asc');\r\n        } else {\r\n            setSortColumn(column);\r\n            setSortOrder('asc');\r\n        }\r\n    };\r\n\r\n    const { columns } = (() => {\r\n        const currentTab = tabs.find(tab => tab.id === activeTab);\r\n        if (!currentTab) return { columns: [] };\r\n        return {\r\n            columns: currentTab.columns,\r\n        };\r\n    })();\r\n\r\n    const sortedData = useMemo(() => {\r\n        if (!sortColumn) return data;\r\n\r\n        return [...data].sort((a, b) => {\r\n            const aValue = a[sortColumn];\r\n            const bValue = b[sortColumn];\r\n\r\n            if (typeof aValue === 'number' && typeof bValue === 'number') {\r\n                return sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\r\n            }\r\n\r\n            const stringA = String(aValue || '').toLowerCase();\r\n            const stringB = String(bValue || '').toLowerCase();\r\n\r\n            if (stringA < stringB) return sortOrder === 'asc' ? -1 : 1;\r\n            if (stringA > stringB) return sortOrder === 'asc' ? 1 : -1;\r\n            return 0;\r\n        });\r\n    }, [data, sortColumn, sortOrder]);\r\n\r\n   // Handle page change\r\n    const handlePageChange = (newPage: number) => {\r\n        const validPage = Math.min(Math.max(1, newPage), totalPages);\r\n        setCurrentPage(validPage);\r\n        // Fetch data for the new page\r\n        const requestBody = {\r\n            startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n            endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n            page: validPage,\r\n            limit: ROWS_PER_PAGE\r\n        };\r\n        fetchData(activeTab, requestBody);\r\n    };\r\n\r\n    const colorPalette = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300'];\r\n\r\n    return (\r\n        <div className='w-full'>\r\n            <div className='flex flex-row gap-2 items-center mb-4'>\r\n                <GoogleLogo />\r\n                <h1 className='text-xl font-bold text-gray-800'>Age and Gender Metrics</h1>\r\n            </div>\r\n            <div className='bg-white p-6 rounded-xl shadow-lg border border-gray-200'>\r\n                <div className=\"flex items-center justify-between border-b border-gray-200 pb-2 mb-2\">\r\n                    <div className=\"flex space-x-2\" role=\"tablist\">\r\n                        {tabs.map(tab => (\r\n                            <Button\r\n                                key={tab.id}\r\n                                variant={activeTab === tab.id ? \"default\" : \"ghost\"}\r\n                                onClick={() => handleTabChange(tab.id)}\r\n                                className=\"relative\"\r\n                            >\r\n                                {tab.id === 'age' ? <Package className=\"w-4 h-4 mr-2\" /> : <Layers className=\"w-4 h-4 mr-2\" />}\r\n                                {tab.label}\r\n                                {activeTab === tab.id && (\r\n                                    <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-blue-600\" />\r\n                                )}\r\n                            </Button>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <DatePickerWithRange\r\n                            date={date}\r\n                            setDate={setDate}\r\n                            defaultDate={{\r\n                                from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                                to: new Date(),\r\n                            }}\r\n                        />\r\n                        {showGraph && (\r\n                            <div className=\"flex gap-2\">\r\n                                {Object.keys(metricLabels).map(metric => (\r\n                                    <label key={metric} className=\"flex items-center space-x-2\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={selectedMetrics.includes(metric as MetricKey)}\r\n                                            onChange={() => handleMetricChange(metric as MetricKey)}\r\n                                        />\r\n                                        <span className=\"text-sm text-gray-700\">{metricLabels[metric as MetricKey]}</span>\r\n                                    </label>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        <Button \r\n                            variant=\"outline\" \r\n                            size=\"icon\" \r\n                            onClick={() => {\r\n                                const requestBody = {\r\n                                    startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n                                    endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n                                    page: 1,\r\n                                    limit: 1000\r\n                                };\r\n                                fetchData(activeTab, requestBody, true);\r\n                            }}\r\n                            disabled={loading}\r\n                        >\r\n                            <RefreshCw className={`h-4 w-4 ${loading ? '' : ''}`} />\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"outline\" \r\n                            onClick={() => setShowGraph(!showGraph)}\r\n                        >\r\n                            {showGraph ? \"Show Table\" : \"Show Graph\"}\r\n                        </Button>\r\n                        <Popover>\r\n                            <PopoverTrigger asChild>\r\n                                <Button variant=\"outline\" className=\"bg-white border-gray-300 hover:bg-gray-50 transition-colors duration-200\">\r\n                                    <Filter className=\"w-4 h-4 mr-2\" />\r\n                                    Filter\r\n                                </Button>\r\n                            </PopoverTrigger>\r\n                            <PopoverContent className=\"w-80\">\r\n                                <div className=\"space-y-4\">\r\n                                    <div>\r\n                                        <h3 className=\"font-medium mb-2\">Campaign</h3>\r\n                                        <Select \r\n                                            onValueChange={(value) => handleFilterChange('campaign', value)} \r\n                                            value={filters.campaign}\r\n                                        >\r\n                                            <SelectTrigger>\r\n                                                <SelectValue placeholder=\"Select campaign\" />\r\n                                            </SelectTrigger>\r\n                                            <SelectContent>\r\n                                                <SelectItem value=\"all\">All</SelectItem>\r\n                                                {filterOptions.campaigns.map(campaign => (\r\n                                                    <SelectItem key={campaign} value={campaign}>\r\n                                                        {campaign}\r\n                                                    </SelectItem>\r\n                                                ))}\r\n                                            </SelectContent>\r\n                                        </Select>\r\n                                    </div>\r\n                                    {filters.campaign !== 'all' && (\r\n                                        <div>\r\n                                            <h3 className=\"font-medium mb-2\">Ad Group</h3>\r\n                                            <Select \r\n                                                onValueChange={(value) => handleFilterChange('adGroup', value)} \r\n                                                value={filters.adGroup}\r\n                                            >\r\n                                                <SelectTrigger>\r\n                                                    <SelectValue placeholder=\"Select ad group\" />\r\n                                                </SelectTrigger>\r\n                                                <SelectContent>\r\n                                                    <SelectItem value=\"all\">All Ad Groups</SelectItem>\r\n                                                    {(\r\n                                                        filterOptions.campaignAdGroupMap?.[filters.campaign] || \r\n                                                        (activeTab === 'gender' \r\n                                                            ? filterOptions.adGroups.filter(() => {\r\n                                                                if (filterOptions && filterOptions.campaignAdGroupMap) {\r\n                                                                    const campaign = Object.keys(filterOptions.campaignAdGroupMap).find(() => \r\n                                                                        filterOptions.campaignAdGroupMap?.[filters.campaign]?.some(ag => \r\n                                                                            filterOptions.campaignAdGroupMap?.[filters.campaign]?.includes(ag)\r\n                                                                        )\r\n                                                                    );\r\n                                                                    return campaign && filterOptions.campaigns.includes(campaign);\r\n                                                                }\r\n                                                                return false;\r\n                                                            })\r\n                                                            : filterOptions.adGroups)\r\n                                                    )?.map(adGroup => (\r\n                                                        <SelectItem key={adGroup} value={adGroup}>\r\n                                                            {adGroup}\r\n                                                        </SelectItem>\r\n                                                    ))}\r\n                                                </SelectContent>\r\n                                            </Select>\r\n                                        </div>\r\n                                    )}\r\n                                    <div>\r\n                                        <h3 className=\"font-medium mb-2\">Status</h3>\r\n                                        <Select \r\n                                            onValueChange={(value) => handleFilterChange('status', value)} \r\n                                            value={filters.status}\r\n                                        >\r\n                                            <SelectTrigger>\r\n                                                <SelectValue placeholder=\"Select status\" />\r\n                                            </SelectTrigger>\r\n                                            <SelectContent>\r\n                                                <SelectItem value=\"all\">All</SelectItem>\r\n                                                {filterOptions.statusOptions.map((status) => (\r\n                                                    <SelectItem key={status} value={status}>\r\n                                                        {status}\r\n                                                    </SelectItem>\r\n                                                ))}\r\n                                            </SelectContent>\r\n                                        </Select>\r\n                                    </div>\r\n                                    {activeTab === 'age' && (\r\n                                        <div>\r\n                                            <h3 className=\"font-medium mb-2\">Age Range</h3>\r\n                                            <Select \r\n                                                onValueChange={(value) => handleFilterChange('ageRange', value)} \r\n                                                value={filters.ageRange}\r\n                                            >\r\n                                                <SelectTrigger>\r\n                                                    <SelectValue placeholder=\"Select age range\" />\r\n                                                </SelectTrigger>\r\n                                                <SelectContent>\r\n                                                    <SelectItem value=\"all\">All</SelectItem>\r\n                                                    {filterOptions.ageRanges.map((range) => (\r\n                                                        <SelectItem key={range} value={range}>\r\n                                                            {range.replace('AGE_RANGE_', '').replace(/_/g, '-')}\r\n                                                        </SelectItem>\r\n                                                    ))}\r\n                                                </SelectContent>\r\n                                            </Select>\r\n                                        </div>\r\n                                    )}\r\n                                    {activeTab === 'gender' && (\r\n                                        <div>\r\n                                            <h3 className=\"font-medium mb-2\">Gender</h3>\r\n                                            <Select \r\n                                                onValueChange={(value) => handleFilterChange('gender', value)} \r\n                                                value={filters.gender}\r\n                                            >\r\n                                                <SelectTrigger>\r\n                                                    <SelectValue placeholder=\"Select gender\" />\r\n                                                </SelectTrigger>\r\n                                                <SelectContent>\r\n                                                    <SelectItem value=\"all\">All</SelectItem>\r\n                                                    {filterOptions.genders.map((gender) => (\r\n                                                        <SelectItem key={gender} value={gender}>\r\n                                                            {gender === 'MALE' ? 'Male' : gender === 'FEMALE' ? 'Female' : gender}\r\n                                                        </SelectItem>\r\n                                                    ))}\r\n                                                </SelectContent>\r\n                                            </Select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </PopoverContent>\r\n                        </Popover>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                    {loading ? (\r\n                        <div className=\"flex justify-center items-center h-64\">\r\n                            <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-blue-500\"></div>\r\n                        </div>\r\n                    ) : showGraph ? (\r\n                        activeTab === 'age' && graphData ? (\r\n                            <ResponsiveContainer width=\"100%\" height={300}>\r\n                                <BarChart data={graphData}>\r\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"ageRange\" />\r\n                                    <YAxis />\r\n                                    <RechartsTooltip />\r\n                                    <Legend />\r\n                                    {selectedMetrics.map((metric, index) => (\r\n                                        <Bar key={metric} dataKey={metric} fill={colorPalette[index % colorPalette.length]} name={metricLabels[metric as MetricKey]} />\r\n                                    ))}\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        ) : (\r\n                            activeTab === 'gender' && graphData ? (\r\n                                <ResponsiveContainer width=\"100%\" height={300}>\r\n                                    <BarChart data={graphData}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"gender\" />\r\n                                        <YAxis />\r\n                                        <RechartsTooltip />\r\n                                        <Legend />\r\n                                        {selectedMetrics.map((metric, index) => (\r\n                                            <Bar key={metric} dataKey={metric} fill={colorPalette[index % colorPalette.length]} name={metricLabels[metric as MetricKey]} />\r\n                                        ))}\r\n                                    </BarChart>\r\n                                </ResponsiveContainer>\r\n                            ) : null\r\n                        )\r\n                    ) : (\r\n                        <div className=\"rounded-md border border-gray-200 overflow-hidden\">\r\n                            <div className=\"max-h-[350px] overflow-auto\">\r\n                                <table className=\"w-full\">\r\n                                    <thead className=\"sticky top-0 z-10 bg-[#4A628A]\">\r\n                                        <tr>\r\n                                            {columns.map(column => (\r\n                                                <th \r\n                                                    key={column.id} \r\n                                                    className=\"px-4 py-3 text-left text-xs font-medium text-gray-50 uppercase tracking-wider min-w-[150px] cursor-pointer\"\r\n                                                    onClick={() => sortableColumns.includes(column.id) && handleSort(column.id)}\r\n                                                >\r\n                                                    <div className=\"flex items-center gap-1\">\r\n                                                        {column.header}\r\n                                                        {sortableColumns.includes(column.id) && (\r\n                                                            sortColumn === column.id ? (\r\n                                                                sortOrder === 'asc' ? <ArrowUp className=\"ml-1 w-4 h-6 text-[#ffffff]\" /> : <ArrowDown className=\"ml-1 w-4 h-6 text-[#ffffff]\" />\r\n                                                            ) : (\r\n                                                                <ArrowUpDown className=\"ml-1 w-4 h-6 text-gray-300\" />\r\n                                                            )\r\n                                                        )}\r\n                                                    </div>\r\n                                                </th>\r\n                                            ))}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                        {sortedData.map((row, rowIndex) => (\r\n                                            <tr \r\n                                                key={rowIndex} \r\n                                                className=\"hover:bg-gray-50\"\r\n                                            >\r\n                                                {columns.map((column) => (\r\n                                                    <td \r\n                                                        key={column.id} \r\n                                                        className=\"px-4 py-2.5 text-sm whitespace-nowrap min-w-[150px]\"\r\n                                                    >\r\n                                                        {column.cell(row[column.accessorKey])}\r\n                                                    </td>\r\n                                                ))}\r\n                                            </tr>\r\n                                        ))}\r\n                                        {sortedData.length === 0 && (\r\n                                            <tr>\r\n                                                <td \r\n                                                    colSpan={columns.length} \r\n                                                    className=\"px-4 py-4 text-center text-gray-500\"\r\n                                                >\r\n                                                    No data available\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <div className=\"flex items-center justify-between px-4 py-3 bg-white border-t border-gray-200\">\r\n                                <div className=\"text-sm text-gray-700\">\r\n                                    {sortedData.length > 0 ? (\r\n                                        `Showing ${((currentPage - 1) * ROWS_PER_PAGE) + 1} to ${Math.min(currentPage * ROWS_PER_PAGE, totalRecords)} of ${totalRecords} entries`\r\n                                    ) : (\r\n                                        'Showing 0 entries'\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"flex items-center space-x-2\">\r\n                                    <Button\r\n                                        variant=\"outline\"\r\n                                        size=\"sm\"\r\n                                        onClick={() => handlePageChange(currentPage - 1)}\r\n                                        disabled={currentPage === 1}\r\n                                    >\r\n                                        <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n                                        Previous\r\n                                    </Button>\r\n                                    <div className=\"text-sm text-gray-700\">\r\n                                        Page {currentPage} of {totalPages}\r\n                                    </div>\r\n                                    <Button\r\n                                        variant=\"outline\"\r\n                                        size=\"sm\"\r\n                                        onClick={() => handlePageChange(currentPage + 1)}\r\n                                        disabled={!hasMoreData}\r\n                                    >\r\n                                        Next\r\n                                        <ChevronRight className=\"h-4 w-4 ml-1\" />\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import ProductTab from \"./component/ProductTab\";\r\nimport SearchTermTable from \"./component/SearchTermTable\";\r\nimport { useParams } from 'react-router-dom'\r\nimport AgeGenderMetrics from \"./component/AgeGenderMetrics\";\r\n\r\nexport default function Dashboard() {\r\n  const { brandId } = useParams()\r\n\r\n    if (!brandId) {\r\n        console.error(\"Brand ID is not defined\");\r\n        return <div>Error: Brand ID is missing</div>;\r\n    }\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen overflow-hidden\">\r\n       <nav className=\"sticky top-0 z-10 bg-white border-b border-gray-200 px-4 py-4 md:px-6 lg:px-8\">\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n          <h1 className=\"text-2xl font-bold\">Segment Dashboard</h1>\r\n        </div>\r\n      </nav>\r\n      <div className=\"flex flex-col p-6 gap-6 overflow-auto\">\r\n      <ProductTab />\r\n      <SearchTermTable />\r\n      <AgeGenderMetrics />\r\n      </div>\r\n  \r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\";\r\n const SegmentDashboard : React.FC=()=>{\r\n    return (\r\n        <div className=\"flex h-screen\"> \r\n        <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n       <Dashboard />\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\nexport default SegmentDashboard;","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useToast } from '../hooks/use-toast';\r\nimport { useUser } from '../context/UserContext';\r\n\r\nconst GoogleCallback = () => {\r\n    const navigate = useNavigate();\r\n    const { setUser } = useUser();\r\n    const { toast } = useToast();\r\n    const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n        useEffect(() => {\r\n            const handleOauthCallback = async () => {\r\n                try {\r\n                    const queryParams = new URLSearchParams(window.location.search);\r\n                    const googletoken = queryParams.get('token');\r\n                    const fbToken = queryParams.get('fbToken');\r\n                    const googleRefreshToken = queryParams.get('googleRefreshToken');\r\n        \r\n                    // Helper function for token update\r\n                    const updateToken = async (url: string, token: string, type: string) => {\r\n                        const response = await axios.get(`${baseURL}${url}?${type}=${token}`, { withCredentials: true });\r\n                        if (response.data.success) {\r\n                            console.log(`${type} token updated successfully, redirecting to /dashboard`);\r\n                            navigate('/dashboard');\r\n                            return true;\r\n                        } else {\r\n                            console.error(`Failed to update ${type} token`);\r\n                            toast({\r\n                                title: 'Update Failed',\r\n                                description: `Unable to update ${type} token.`,\r\n                                variant: 'destructive',\r\n                            });\r\n                            navigate('/');\r\n                            return false;\r\n                        }\r\n                    };\r\n        \r\n                    if (googletoken) {\r\n                        console.log('Token found, proceeding with login');\r\n                        const login = await axios.post(`${baseURL}/api/auth/login/oauth?auth_token=${googletoken}`, { email: null, password: null });\r\n        \r\n                        if (login.data.success) {\r\n                            console.log('Login successful, redirecting to /dashboard');\r\n                            setUser(login.data.user);\r\n                            navigate('/dashboard');\r\n                            return;\r\n                        } else {\r\n                            console.log('Login failed, redirecting to /');\r\n                            toast({\r\n                                title: 'Login Failed',\r\n                                description: 'Unable to authenticate with Google.',\r\n                                variant: 'destructive',\r\n                            });\r\n                            navigate('/');\r\n                            return;\r\n                        }\r\n                    }\r\n        \r\n                    if (fbToken) {\r\n                        await updateToken('/api/auth/updateTokens/facebook', fbToken, 'fbToken');\r\n                        return;\r\n                    }\r\n        \r\n                    if (googleRefreshToken) {\r\n                        await updateToken('/api/auth/updateTokens/google', googleRefreshToken, 'googleRefreshToken');\r\n                        return;\r\n                    }\r\n        \r\n                    console.log('No token present, redirecting to /');\r\n                    navigate('/');\r\n        \r\n                } catch (error) {\r\n                    console.error('Error during OAuth callback:', error);\r\n                    toast({\r\n                        title: 'Error',\r\n                        description: 'An error occurred while handling the login callback.',\r\n                        variant: 'destructive',\r\n                    });\r\n                    navigate('/');\r\n                }\r\n            };\r\n        \r\n            handleOauthCallback();\r\n        }, [navigate, setUser, toast, baseURL]);\r\n        \r\n\r\n    return null;\r\n};\r\n\r\nexport default GoogleCallback;\r\n","import { useState, useCallback, useEffect, useMemo } from \"react\"\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport { ChevronDown, Columns, RefreshCw, X, CalendarFold } from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport ReportTable from \"@/components/dashboard_component/ReportTable\"\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\"\r\nimport { Ga4Logo } from \"../GeneralisedDashboard/components/OtherPlatformModalContent\"\r\n\r\ninterface AgeMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\nconst AgeReportPage: React.FC = () => {\r\n  const [date, setDate] = useState<DateRange | undefined>(undefined);\r\n  const [filteredData, setFilteredData] = useState<AgeMetric[]>([])\r\n  const [allTimeData, setAllTimeData] = useState<AgeMetric[]>([])\r\n  const [filters, setFilters] = useState<FilterItem[]>([])\r\n  const now = new Date();\r\n  const [data, setData] = useState<AgeMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n  const { brandId } = useParams();\r\n  const navigate = useNavigate();\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState(50)\r\n\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n  \r\n      // Fetch all-time and date-specific metrics\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axios.post(`${baseURL}/api/analytics/agereport/${brandId}`, {\r\n          startDate: startDate || \"\",\r\n          endDate: endDate || \"\"\r\n        }, { withCredentials: true }),\r\n        axios.post(`${baseURL}/api/analytics/agereport/${brandId}`, {\r\n          startDate: \"\",\r\n          endDate: \"\"\r\n        }, { withCredentials: true })\r\n      ]);\r\n  \r\n      const fetchedData = analyticsResponse.data.data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data.data || [];\r\n  \r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n      setLastUpdated(new Date());\r\n  \r\n      if (fetchedData.length > 0) {\r\n        const allColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? allColumns\r\n            : prevSelected.filter((col) => allColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert(\"Your session has expired. Please log in again.\");\r\n        navigate(\"/\");\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, navigate]);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 5 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n  \r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof AgeMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index))\r\n  }\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate']\r\n  \r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n        <header className=\"px-6 py-4 border-b\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <CalendarFold className=\"h-6 w-6 text-primary\" />\r\n              <h1 className=\"text-xl font-semibold text-primary\">Age Metrics Overview</h1>\r\n            </div>\r\n            <div className=\"flex flex-row gap-3 items-center\">\r\n              {lastUpdated && (\r\n                <span className=\"text-sm text-muted-foreground\">\r\n                  Last updated: {lastUpdated.toLocaleTimeString()}\r\n                </span>\r\n              )}\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <DatePickerWithRange\r\n                date={date}\r\n                setDate={setDate}\r\n                defaultDate={{\r\n                  from: new Date(now.getFullYear(), now.getMonth(), 1),\r\n                  to: now,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <main className=\"flex-1 overflow-auto px-6 py-4\">\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <h2 className=\"text-lg font-medium\">Analyze Age wise performance</h2>\r\n                <Ga4Logo />\r\n              </div>\r\n              <div className=\"flex flex-wrap items-center gap-3\">\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"outline\" className=\"flex items-center gap-2\">\r\n                      <Columns className=\"h-4 w-4\" />\r\n                      <span>Select Columns</span>\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent className=\"w-56\">\r\n                    {allColumns.map((column) => (\r\n                      <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                        <Checkbox\r\n                          id={`column-${column}`}\r\n                          checked={selectedColumns.includes(column)}\r\n                          onCheckedChange={() => toggleColumnSelection(column)}\r\n                        />\r\n                        <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                          {column}\r\n                        </label>\r\n                      </DropdownMenuItem>\r\n                    ))}\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"outline\">\r\n                      Show {rowsToShow === 1000000 ? 'all' : rowsToShow} rows\r\n                      <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(50)}>Show 50 rows</DropdownMenuItem>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(100)}>Show 100 rows</DropdownMenuItem>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(1000000)}>Show all rows</DropdownMenuItem>\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n                <FilterComponent\r\n                  columns={numericColumns}\r\n                  onFiltersChange={applyFilters}\r\n                  filters={filters}\r\n                  setFilters={setFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {filters.length > 0 && (\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {filters.map((filter, index) => (\r\n                  <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                    <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                    <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                      <X className=\"h-3 w-3\" />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"rounded-md border overflow-hidden\">\r\n              {isLoading ? (\r\n                <TableSkeleton />\r\n              ) : (\r\n                <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData} rowsToShow={rowsToShow} allTimeData={allTimeData} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AgeReportPage;","import { useState, useCallback, useEffect, useMemo } from \"react\"\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport { ChevronDown, CircleDot, Columns, RefreshCw, X} from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport ReportTable from \"@/components/dashboard_component/ReportTable\"\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\"\r\nimport { Ga4Logo } from \"../GeneralisedDashboard/components/OtherPlatformModalContent\"\r\n\r\n\r\ninterface GenderMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\nconst GenderReportPage: React.FC = () => {\r\n  const [date, setDate] = useState<DateRange | undefined>(undefined);\r\n  const [filteredData, setFilteredData] = useState<GenderMetric[]>([])\r\n  const [allTimeData, setAllTimeData] = useState<GenderMetric[]>([])\r\n  const [filters, setFilters] = useState<FilterItem[]>([])\r\n  const now = new Date();\r\n  const [data, setData] = useState<GenderMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n  const { brandId } = useParams();\r\n  const navigate = useNavigate();\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState(50)\r\n\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n  \r\n      // Fetch all-time and date-specific metrics\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axios.post(`${baseURL}/api/analytics/genderReport/${brandId}`, {\r\n          startDate: startDate || \"\",\r\n          endDate: endDate || \"\"\r\n        }, { withCredentials: true }),\r\n        axios.post(`${baseURL}/api/analytics/genderReport/${brandId}`, {\r\n          startDate: \"\",\r\n          endDate: \"\"\r\n        }, { withCredentials: true })\r\n      ]);\r\n  \r\n      const fetchedData = analyticsResponse.data.data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data.data || [];\r\n  \r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n      setLastUpdated(new Date());\r\n  \r\n      if (fetchedData.length > 0) {\r\n        const allColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? allColumns\r\n            : prevSelected.filter((col) => allColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert(\"Your session has expired. Please log in again.\");\r\n        navigate(\"/\");\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, navigate]);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 5 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n  \r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof GenderMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index))\r\n  }\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate']\r\n  \r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n        <header className=\"px-6 py-4 border-b\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <CircleDot className=\"h-6 w-6 text-primary\" />\r\n              <h1 className=\"text-xl font-semibold text-primary\">Gender Metrics Overview</h1>\r\n            </div>\r\n            <div className=\"flex flex-row gap-3 items-center\">\r\n              {lastUpdated && (\r\n                <span className=\"text-sm text-muted-foreground\">\r\n                  Last updated: {lastUpdated.toLocaleTimeString()}\r\n                </span>\r\n              )}\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <DatePickerWithRange\r\n                date={date}\r\n                setDate={setDate}\r\n                defaultDate={{\r\n                  from: new Date(now.getFullYear(), now.getMonth(), 1),\r\n                  to: now,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <main className=\"flex-1 overflow-auto px-6 py-4\">\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <h2 className=\"text-lg font-medium\">Analyze Gender wise performance</h2>\r\n                <Ga4Logo />\r\n              </div>\r\n              <div className=\"flex flex-wrap items-center gap-3\">\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"outline\" className=\"flex items-center gap-2\">\r\n                      <Columns className=\"h-4 w-4\" />\r\n                      <span>Select Columns</span>\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent className=\"w-56\">\r\n                    {allColumns.map((column) => (\r\n                      <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                        <Checkbox\r\n                          id={`column-${column}`}\r\n                          checked={selectedColumns.includes(column)}\r\n                          onCheckedChange={() => toggleColumnSelection(column)}\r\n                        />\r\n                        <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                          {column}\r\n                        </label>\r\n                      </DropdownMenuItem>\r\n                    ))}\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"outline\">\r\n                      Show {rowsToShow === 1000000 ? 'all' : rowsToShow} rows\r\n                      <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(50)}>Show 50 rows</DropdownMenuItem>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(100)}>Show 100 rows</DropdownMenuItem>\r\n                    <DropdownMenuItem onSelect={() => setRowsToShow(1000000)}>Show all rows</DropdownMenuItem>\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n                <FilterComponent\r\n                  columns={numericColumns}\r\n                  onFiltersChange={applyFilters}\r\n                  filters={filters}\r\n                  setFilters={setFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {filters.length > 0 && (\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {filters.map((filter, index) => (\r\n                  <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                    <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                    <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                      <X className=\"h-3 w-3\" />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"rounded-md border overflow-hidden\">\r\n              {isLoading ? (\r\n                <TableSkeleton />\r\n              ) : (\r\n                <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData} rowsToShow={rowsToShow} allTimeData={allTimeData} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenderReportPage;","\r\nimport { UserProvider } from './context/UserContext';\r\nimport { BrowserRouter as Router,Route,Routes } from 'react-router-dom';\r\nimport AuthForm from \"./Auth/AuthForm.tsx\";\r\nimport { Toaster } from \"@/components/ui/toaster\"\r\nimport BusinessDashboard from './pages/Dashboard/BusinessDashboard.tsx';\r\nimport AnalyticsDashboard from './pages/AnalyticsDashboard/AnalyticsDashboard.tsx';\r\nimport GeneralDashboard from './pages/GeneralisedDashboard/GeneralDashboard.tsx';\r\nimport { BrandProvider } from './context/BrandContext.tsx';\r\nimport EcommerceMetricsPage from './pages/EcommerceMetrics/EcommerceMetricsPage.tsx';\r\nimport { ExcelMetricsPage } from './pages/MonthlyAdMetrics/ExcelMetrics.tsx';\r\nimport CitySessionPage from './pages/CitySessionPage/CitySessionPage.tsx';\r\nimport ChannelSessionPage from './pages/RefferingChannelPage/RefferingChannelPage.tsx';\r\nimport LandingPageSession from './pages/LandingPageSession/LandingPageSession.tsx';\r\nimport CampaignMetricsPage from './pages/CampaignMetricsPage.tsx';\r\nimport PerformanceDashboard from './pages/BrandPerformanceDashboard/PerformanceDashboard.tsx';\r\nimport SegmentDashboard from './pages/SegmentDashboard/SegmentDashboard.tsx';\r\nimport GoogleCallback from './Auth/OauthSucces.tsx';\r\nimport AgeReportPage from './pages/AgeReportPage/AgeReportPage.tsx';\r\nimport GenderReportPage from './pages/GenderReportPage/GenderReportPage.tsx';\r\n\r\nfunction App() {\r\n  return (\r\n    <UserProvider>\r\n      <BrandProvider>\r\n      <Router>\r\n        <Toaster />\r\n        <Routes>\r\n          <Route path=\"/\" element={<AuthForm />} />\r\n          <Route path=\"/dashboard\" element={<GeneralDashboard />} />\r\n          <Route path=\"/business-dashboard/:brandId\" element={<BusinessDashboard />} />\r\n          <Route path=\"/analytics-dashboard/:brandId\" element={<AnalyticsDashboard/>} />\r\n          <Route path =\"/ecommerce-metrics/:brandId\" element={<EcommerceMetricsPage />} />\r\n          <Route path =\"/ad-metrics/:brandId\" element={<ExcelMetricsPage />} />\r\n          <Route path =\"/city-metrics/:brandId\" element={<CitySessionPage />} />\r\n          <Route path ='/channel-metrics/:brandId' element={<ChannelSessionPage />} />\r\n          <Route path ='/page-metrics/:brandId' element={<LandingPageSession />} />\r\n          <Route path = '/age-metrics/:brandId' element={<AgeReportPage/>} />\r\n          <Route path = '/gender-metrics/:brandId' element={<GenderReportPage/>} />\r\n          <Route path = '/campaign-metrics/:brandId' element={<CampaignMetricsPage/>}/>\r\n          <Route path = '/performance-metrics' element={<PerformanceDashboard />} />\r\n          <Route path = '/segment-dashboard/:brandId' element={<SegmentDashboard />} />\r\n          <Route path=\"/callback\" element={<GoogleCallback />} />\r\n        </Routes>\r\n      </Router>\r\n      </BrandProvider>\r\n    </UserProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"names":["UserContext","createContext","UserProvider","children","user","setUser","useState","storedUser","useEffect","jsx","useUser","context","useContext","cn","inputs","twMerge","clsx","Input","React.forwardRef","className","type","props","ref","buttonVariants","cva","Button","variant","size","asChild","Comp","Slot","labelVariants","Label","LabelPrimitive.Root","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","toast","t","listeners","memoryState","listener","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","AuthForm","isLogin","setIsLogin","username","setUsername","email","setEmail","password","setPassword","showPassword","setShowPassword","navigate","useNavigate","errors","setErrors","toggleForm","validateForm","newErrors","isValid","handleSubmit","e","response","baseURL","axios","error","handleGoogleLogin","authUrl","jsxs","User","Mail","Lock","Eye","EyeOff","FcGoogle","ToastProvider","ToastPrimitives.Provider","ToastViewport","ToastPrimitives.Viewport","toastVariants","Toast","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","Cross2Icon","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","Toaster","toasts","title","description","BrandContext","BrandProvider","selectedBrandId","setSelectedBrandId","brands","setBrands","storedBrands","resetBrand","useBrand","TooltipProvider","TooltipPrimitive.Provider","Tooltip","TooltipPrimitive.Root","TooltipTrigger","TooltipPrimitive.Trigger","TooltipContent","sideOffset","TooltipPrimitive.Portal","TooltipPrimitive.Content","Logo","ScrollArea","ScrollAreaPrimitive.Root","ScrollAreaPrimitive.Viewport","ScrollBar","ScrollAreaPrimitive.Corner","orientation","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb","CollapsibleSidebar","isExpanded","setIsExpanded","location","useLocation","sidebarRef","useRef","fetchedBrands","toggleSidebar","prev","handleLogout","pathParts","reports","CalendarRange","ShoppingCart","MapPin","PanelsTopLeft","Link2","CalendarFold","CircleDot","dashboards","BarChart","LineChart","MdCampaign","Compass","isItemDisabled","item","currentBrand","ChevronLeft","ChevronRight","SidebarItem","Store","_a","b","ChevronUp","ChevronDown","brand","SidebarChild","dashboard","report","UserProfile","LogoutButton","icon","text","openIcon","closeIcon","isSelected","tooltipContent","onClick","disabled","isOpen","setIsOpen","handleToggle","content","React","child","path","baseClasses","NavLink","userProfileContent","User2Icon","logoutContent","LogOut","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","COLORS","ReferringChannelChart","rawData","aggregatedData","acc","entry","Channel","Visitors","topChannels","a","renderLegend","ResponsiveContainer","PieChart","Pie","_","Cell","getTopCities","data","getBarColor","value","max","blueColors","TopCitiesBarChart","cityData","topCities","maxRate","CartesianGrid","XAxis","YAxis","Legend","Bar","visitors","getTopLandingPages","TopPagesPieChart","PageData","topPages","isMobileOrTablet","setIsMobileOrTablet","handleResize","name","Calendar","classNames","showOutsideDays","DayPicker","ChevronLeftIcon","ChevronRightIcon","Popover","PopoverPrimitive.Root","PopoverTrigger","PopoverPrimitive.Trigger","PopoverContent","align","PopoverPrimitive.Portal","PopoverPrimitive.Content","DatePickerWithRange","date","setDate","defaultDate","resetToFirstPage","tempDate","setTempDate","handleDateChange","newDate","handleUpdate","setPresetRange","from","to","clearDateRange","formatDateRange","range","format","CalendarIcon","subDays","subMonths","subYears","formatData","CustomTooltip","active","payload","colorPalette","EcommerceMetrics","curr","AreaChart","Area","color","Dashboard","brandId","useParams","setData","isLoading","setIsLoading","lastUpdated","setLastUpdated","startDate","endDate","now","fetchData","useCallback","url","params","shopifyResponse","analyticsResponse","DailyAnalyticsResponse","combinedData","intervalId","handleManualRefresh","session","totalConversionRate","monthlyReturnRate","returningCustomerRateReport","returnRate","rate","preparedReferringData","referringChannelData","preparedCityData","preparedPageData","pageData","Fragment","BriefcaseBusiness","RefreshCw","DollarSign","PercentIcon","TrendingUp","Link","FileChartColumn","TopCitiesLineChart","BusinessDashboard","Skeleton","MetricCardSkeleton","MetricCard","label","HelpCircle","AdAccountMetricsCard","metrics","errorMessage","metric","DropdownMenu","DropdownMenuPrimitive.Root","DropdownMenuTrigger","DropdownMenuPrimitive.Trigger","DropdownMenuRadioGroup","DropdownMenuPrimitive.RadioGroup","DropdownMenuSubTrigger","inset","DropdownMenuPrimitive.SubTrigger","DropdownMenuSubContent","DropdownMenuPrimitive.SubContent","DropdownMenuContent","DropdownMenuPrimitive.Portal","DropdownMenuPrimitive.Content","DropdownMenuItem","DropdownMenuPrimitive.Item","DropdownMenuCheckboxItem","checked","DropdownMenuPrimitive.CheckboxItem","DropdownMenuPrimitive.ItemIndicator","CheckIcon","DropdownMenuRadioItem","DropdownMenuPrimitive.RadioItem","DotFilledIcon","DropdownMenuLabel","DropdownMenuPrimitive.Label","DropdownMenuSeparator","DropdownMenuPrimitive.Separator","fbAdAccountsMetrics","setFbAdAccountsMetrics","aggregatedMetrics","setAggregatedMetrics","googleAdMetrics","setGoogleAdMetrics","dataSource","setDataSource","handleDataSourceChange","newSource","fetchAdData","fbData","googleData","fbError","googleError","calculateAggregatedMetrics","totalSpent","totalRevenue","totalPurchases","totalClicks","totalImpressions","account","_b","googleMetrics","Blend","Filter","accountMetrics","fbmetrics","AnalyticsDashboard","LandingPage","Activity","Target","BarChart3","ArrowRight","FileSpreadsheet","Bell","Settings","Briefcase","Dialog","DialogPrimitive.Root","DialogTrigger","DialogPrimitive.Trigger","DialogPortal","DialogPrimitive.Portal","DialogOverlay","DialogPrimitive.Overlay","DialogContent","DialogPrimitive.Content","DialogPrimitive.Close","DialogHeader","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","ShopifyModalContent","onConnect","storeName","setStoreName","handleLogin","Table","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableCaption","TableSkeleton","rowIndex","cellIndex","FacebookLogo","width","height","GoogleLogo","formatValue","numberValue","formatDate","dateString","MetricsCards","summaryMetrics","IndianRupee","CalendarDays","MetricsTable","campaigns","campaign","CampaignMetricsPage","setGoogleData","facebookData","setFacebookData","selectedFacebookAccount","setSelectedFacebookAccount","isGoogleLoading","setIsGoogleLoading","isFacebookLoading","setIsFacebookLoading","searchTerm","setSearchTerm","calculateSummaryMetrics","sum","filterCampaigns","fetchGoogleMetrics","fetchFacebookMetrics","loadData","renderGoogleMetrics","filteredCampaigns","renderFacebookMetrics","selectedAccount","renderEmptyMetrics","emptyMetrics","handleFacebookAccountSwitch","accountName","MagnifyingGlassIcon","Ga4Logo","shopifyLogo","OtherPlatformModalContent","platform","connectedId","googleAdsAccounts","setGoogleAdsAccounts","googleAnalyticsAccounts","setGoogleAnalyticsAccounts","facebookAdsAccounts","setFacebookAdsAccounts","showLoginButton","setShowLoginButton","loading","setLoading","fetchGoogleAdsAccounts","userId","handleError","fetchGoogleAnalyticsAccounts","fetchFacebookAdsAccounts","axiosError","status","filteredAccounts","handleConnect","accountId","displayName","handleFbLogin","Search","isGoogleAds","isFacebook","platformLogo","Check","platforms","BrandSetup","openModal","setOpenModal","connectedAccounts","setConnectedAccounts","brandName","setBrandName","brandLogo","setBrandLogo","googleAdId","setGoogleAdId","ga4Id","setGa4Id","fbAdId","setFBAdId","handleLogoUpload","event","file","isConnected","getConnectedId","platformName","Building2","Upload","AnalyticsCard","bgColor","ribbonText","insights","MdInsights","insight","GeneralDashboard","Checkbox","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","getConditionalTextColor","average","getConditionalIcon","ArrowUp","ArrowDown","ReportTable","columns","rowsToShow","allTimeData","sortColumn","setSortColumn","sortDirection","setSortDirection","filterLabel","setFilterLabel","filterType","setFilterType","comparisonColumns","parsePercentage","averageValues","useMemo","averages","key","allTimeAverageValues","rowPerformanceLabels","currentPerformance","column","isWorstPerformingCurrent","currentLabel","allTimePerformance","allTimeAverage","isWorstPerformingAllTime","parsedData","sortedData","aValue","bValue","handleSort","isNumericColumn","handleClickLabel","filteredData","ArrowUpDown","Award","ThumbsDown","cellValue","isComparisonColumn","ReportTable$1","Select","SelectPrimitive.Root","SelectValue","SelectPrimitive.Value","SelectTrigger","SelectPrimitive.Trigger","SelectPrimitive.Icon","ChevronDownIcon","SelectScrollUpButton","SelectPrimitive.ScrollUpButton","ChevronUpIcon","SelectScrollDownButton","SelectPrimitive.ScrollDownButton","SelectContent","position","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectLabel","SelectPrimitive.Label","SelectItem","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","SelectPrimitive.ItemText","SelectSeparator","SelectPrimitive.Separator","FilterComponent","onFiltersChange","filters","setFilters","filterColumn","setFilterColumn","filterOperator","setFilterOperator","filterValue","setFilterValue","addFilter","EcommerceMetricsPage","setFilteredData","selectedColumns","setSelectedColumns","setRowsToShow","toggleColumnSelection","col","fetchMetrics","fetchedData","allColumns","newColumns","prevSelected","sortedSelectedColumns","applyFilters","result","filters2","filter","numValue","memoizedFilteredData","numericColumns","removeFilter","i","Columns","X","TooltipHeader","tooltip","colSpan","rowSpan","isSubHeader","ExcelMetricsPage","metricsData","setMetricsData","setError","expandedMonths","setExpandedMonths","queryParams","err","toggleMonth","monthYear","m","formatCurrency","formatPercentage","processedData","monthData","processedDailyMetrics","daily","metaSales","googleSales","totalSales","safeDivide","numerator","denominator","SearchX","CitySessionPage","setAllTimeData","removedColumns","setRemovedColumns","prevRemoved","allTimeResponse","fetchedAllTimeData","_c","ChannelSessionPage","LandingPageSession","BrandPerformanceDashboard","selectedBrands","setSelectedBrands","newBrand","setNewBrand","endOfMonth","editingBrand","setEditingBrand","editData","setEditData","achievedSales","setAchievedSales","getAchievedSales","fetchSalesData","salesData","handleInputChange","handleSourceChange","handleAddBrand","brandToAdd","newBrandTarget","handleEdit","brandToEdit","handleSaveEdit","handleCancelEdit","handleDelete","Loader","calculateMetrics","achieved","remainingTarget","today","targetDate","remainingDays","requiredSalesPerDay","chartData","PlusCircle","isEditing","Edit2","Trash2","PerformanceDashboard","ProductTab","tabs","setTabs","activeTab","setActiveTab","currentPage","setCurrentPage","expandedCategories","setExpandedCategories","filterApplied","setFilterApplied","rowsPerPage","filterData","setFilterData","cacheRef","POLL_INTERVAL","sortOrder","setSortOrder","handleTabChange","newTabId","fetchTabData","tabId","body","isFilterApplied","tab","updatedBody","cacheKey","cachedData","prevTabs","requestBody","handleRowClick","currentTab","rowData","tabColumnMapping","bodyKeyMapping","columnToFetch","bodyKey","valueToSend","filterPayload","toggleCategory","categoryPath","newSet","renderCategoryRow","category","depth","currentPath","subCategory","columnId","prevOrder","getCurrentTabData","stringA","stringB","startIndex","endIndex","totalPages","categoryColumns","idx","Package","Layers","Tag","BarChart2","_d","row","isIssuesColumn","isProductColumn","isStatusColumn","isNoIssues","getStatusColor","renderCell","CheckCircle","AlertCircle","statusValue","colorClass","_e","_f","_g","SearchTermTable","searchTerms","setSearchTerms","hasMoreData","setHasMoreData","totalRecords","setTotalRecords","setTotalPages","campaignAdGroupPairs","setCampaignAdGroupPairs","selectedCampaign","setSelectedCampaign","statusOptions","setStatusOptions","selectedAdGroup","setSelectedAdGroup","selectedStatus","setSelectedStatus","Zap","Megaphone","Users","Percent","MousePointer","CreditCard","sortedSearchTerms","handleCampaignChange","handleAdGroupChange","handleStatusChange","filteredAdGroups","pair","adGroup","isSearchTermColumn","searchTermValue","performance","isPerformingWell","metricLabels","ROWS_PER_PAGE","AgeAndGenderMetrics","filterOptions","setFilterOptions","showGraph","setShowGraph","graphData","setGraphData","selectedMetrics","setSelectedMetrics","handleMetricChange","cachedAgeRanges","setCachedAgeRanges","cachedGenders","setCachedGenders","requestData","_forceRefresh","apiEndpoint","genderCampaignNames","campaignNames","campaignAdGroupMap","adGroups","prevOptions","ageRanges","genders","str","statusColor","processedGraphData","displayKey","baseEntry","typedMetrics","handleFilterChange","filterKey","updatedFilters","sortableColumns","handlePageChange","newPage","validPage","ag","gender","RechartsTooltip","AgeGenderMetrics","SegmentDashboard","GoogleCallback","googletoken","fbToken","googleRefreshToken","updateToken","token","login","AgeReportPage","GenderReportPage","App","Router","Routes","Route","createRoot","StrictMode"],"mappings":"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"}