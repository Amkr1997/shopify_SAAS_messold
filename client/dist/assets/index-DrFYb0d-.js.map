{"version":3,"file":"index-DrFYb0d-.js","sources":["../../src/context/UserContext.tsx","../../src/lib/utils.ts","../../src/components/ui/input.tsx","../../src/components/ui/button.tsx","../../src/components/ui/label.tsx","../../src/hooks/use-toast.ts","../../src/store/slices/UserSlice.ts","../../src/Auth/AuthForm.tsx","../../src/components/ui/toast.tsx","../../src/components/ui/toaster.tsx","../../src/store/slices/BrandSlice.ts","../../src/components/ui/tooltip.tsx","../../src/assets/messold-icon.png","../../src/components/ui/scroll-area.tsx","../../src/pages/Dashboard/CollapsibleSidebar.tsx","../../src/components/ui/card.tsx","../../src/components/ui/skeleton.tsx","../../src/pages/AnalyticsDashboard/AdAccountsMetricsCard.tsx","../../src/pages/ConversionReportPage/components/CustomTabs.tsx","../../src/components/ui/calendar.tsx","../../src/components/ui/popover.tsx","../../src/store/slices/DateSlice.ts","../../src/components/dashboard_component/DatePickerWithRange.tsx","../../src/components/dashboard_component/Header.tsx","../../src/pages/AnalyticsDashboard/dashboard.tsx","../../src/pages/AnalyticsDashboard/AnalyticsDashboard.tsx","../../src/components/ui/dialog.tsx","../../src/pages/GeneralisedDashboard/components/ShopifyModalContent.tsx","../../src/pages/GeneralisedDashboard/components/OtherPlatformModalContent.tsx","../../src/pages/GeneralisedDashboard/components/BrandForm.tsx","../../src/pages/GeneralisedDashboard/components/LandingSlides.tsx","../../src/pages/GeneralisedDashboard/dashboard.tsx","../../src/pages/GeneralisedDashboard/BrandSetUpDashboard.tsx","../../src/pages/GeneralisedDashboard/GeneralDashboard.tsx","../../src/context/BrandContext.tsx","../../src/pages/MonthlyAdMetrics/ExcelMetrics.tsx","../../src/components/ui/table.tsx","../../src/components/ui/select.tsx","../../src/pages/BrandPerformanceDashboard/Dashboard.tsx","../../src/pages/BrandPerformanceDashboard/PerformanceDashboard.tsx","../../src/pages/SegmentDashboard/component/ProductTab.tsx","../../src/components/dashboard_component/TableSkeleton.tsx","../../src/pages/SegmentDashboard/component/SearchTermTable.tsx","../../src/pages/SegmentDashboard/component/AgeGenderMetrics.tsx","../../src/components/ui/checkbox.tsx","../../src/components/ui/dropdown-menu.tsx","../../src/pages/ReportPage/component/ReportTable.tsx","../../src/components/dashboard_component/FilterReport.tsx","../../src/context/TokenErrorContext.tsx","../../src/pages/ConversionReportPage/components/axiosInstance.ts","../../src/pages/ReportPage/component/CitySessionPage.tsx","../../src/pages/ReportPage/component/LandingPageSession.tsx","../../src/pages/ReportPage/component/AgeReportPage.tsx","../../src/pages/ReportPage/component/GenderReportPage.tsx","../../src/pages/ReportPage/component/RefferingChannelPage.tsx","../../src/pages/SegmentDashboard/Dashboard.tsx","../../src/pages/SegmentDashboard/SegmentDashboard.tsx","../../src/Auth/OauthSucces.tsx","../../src/pages/ReportPage/component/NewReportTable.tsx","../../src/components/ui/sheet.tsx","../../src/pages/META/Campaign/ColumnManagementSheet.tsx","../../src/pages/ReportPage/component/EcommerceMetricsPage.tsx","../../src/pages/ReportPage/NoGA4AccessPage..tsx","../../src/components/dashboard_component/PlatformModal.tsx","../../src/pages/ReportPage/ConnectPlatformPage.tsx","../../src/pages/ReportPage/component/DaywiseMetricsPage.tsx","../../src/pages/ReportPage/ReportsPage.tsx","../../src/pages/ConversionReportPage/components/Table.tsx","../../src/pages/ConversionReportPage/components/PerformanceSummary.tsx","../../src/pages/ConversionReportPage/components/ExcelDownload.tsx","../../src/store/slices/ConversionFilterSlice.ts","../../src/pages/ConversionReportPage/components/Filter.tsx","../../src/pages/ConversionReportPage/components/DeviceConversion.tsx","../../src/pages/ConversionReportPage/components/GenderConversion.tsx","../../src/pages/ConversionReportPage/components/AgeConversion.tsx","../../src/pages/ConversionReportPage/components/InterestConversion.tsx","../../src/pages/ConversionReportPage/components/OperatingSystemConversion.tsx","../../src/pages/ConversionReportPage/components/BrowserConversion.tsx","../../src/pages/ConversionReportPage/components/SourceConversion.tsx","../../src/pages/ConversionReportPage/AudienceConversionReportPage.tsx","../../src/pages/ConversionReportPage/components/CityConversion.tsx","../../src/pages/ConversionReportPage/components/ChannelConversion.tsx","../../src/pages/ConversionReportPage/components/RegionConversion.tsx","../../src/pages/ConversionReportPage/components/LandingPageConversion.tsx","../../src/pages/ConversionReportPage/components/CampaignConversion.tsx","../../src/pages/ConversionReportPage/components/PagePathConversion.tsx","../../src/pages/ConversionReportPage/components/PageTitleConversion.tsx","../../src/pages/ConversionReportPage/components/CountryConversion.tsx","../../src/pages/ConversionReportPage/WebsiteConversionReportPage.tsx","../../src/pages/GoogleAdsHub/components/SearchTerm.tsx","../../src/pages/GoogleAdsHub/components/Age.tsx","../../src/pages/GoogleAdsHub/components/Gender.tsx","../../src/pages/GoogleAdsHub/Dashboard.tsx","../../src/pages/FbReports/component/AudienceFbReport.tsx","../../src/pages/FbReports/component/PlacementFbReport.tsx","../../src/pages/FbReports/component/PlatformFbReport.tsx","../../src/pages/FbReports/component/CountryFbReport.tsx","../../src/pages/FbReports/component/DeviceFbReport.tsx","../../src/pages/FbReports/component/GenderFbReport.tsx","../../src/pages/FbReports/component/AgeFbReport.tsx","../../src/pages/FbReports/FbReportPage.tsx","../../src/store/slices/CampaignGroupSlice.ts","../../src/store/index.ts","../../src/pages/META/AdAccount/MetaDashboard.tsx","../../src/components/ui/badge.tsx","../../src/pages/META/Campaign/MetaCampaignTable.tsx","../../src/pages/META/Campaign/CampaignDashboard.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n  brands: string[];\r\n  hasSeenLandingSlides?: boolean;\r\n}\r\n\r\ninterface UserContextType {\r\n  user: User | null;\r\n  setUser: (user: User | null) => void;\r\n  showLandingPopup: boolean;\r\n  setShowLandingPopup: (show: boolean) => void;\r\n}\r\n\r\nconst UserContext = createContext<UserContextType | undefined>(undefined);\r\n\r\nexport const UserProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n\r\n  const [showLandingPopup, setShowLandingPopup] = useState(() => {\r\n    if (!user) return false;\r\n    // Only show landing popup if user has no brands\r\n    return !user.hasSeenLandingSlides && (!user.brands || user.brands.length === 0);\r\n  });\r\n\r\n  // Sync localStorage whenever user data changes\r\n  useEffect(() => {\r\n    if (user) {\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n    } else {\r\n      localStorage.removeItem('user');\r\n    }\r\n  }, [user]);\r\n\r\n  // Show landing popup when user logs in and hasn't seen it\r\n  useEffect(() => {\r\n    if (user && !user.hasSeenLandingSlides && (!user.brands || user.brands.length === 0)) {\r\n      setShowLandingPopup(true);\r\n    }\r\n  }, [user]);\r\n\r\n  const updateUser = (newUser: User | null) => {\r\n    if (newUser && !newUser.hasSeenLandingSlides && (!newUser.brands || newUser.brands.length === 0)) {\r\n      setShowLandingPopup(true);\r\n    }\r\n    setUser(newUser);\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ \r\n      user, \r\n      setUser: updateUser,\r\n      showLandingPopup,\r\n      setShowLandingPopup\r\n    }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = () => {\r\n  const context = useContext(UserContext);\r\n  if (context === undefined) {\r\n    throw new Error('useUser must be used within a UserProvider');\r\n  }\r\n  return context;\r\n};\r\n","import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n  brands: string[];\r\n  hasSeenLandingSlides?: boolean;\r\n}\r\n\r\ninterface UserState {\r\n  user: User | null;\r\n  showLandingPopup: boolean;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  user: null,\r\n  showLandingPopup: false,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<User | null>) => {\r\n      state.user = action.payload;\r\n      \r\n      // Determine whether to show the landing popup\r\n      state.showLandingPopup =\r\n        !!action.payload &&\r\n        !action.payload.hasSeenLandingSlides &&\r\n        (!action.payload.brands || action.payload.brands.length === 0);\r\n    },\r\n\r\n    setShowLandingPopup: (state, action: PayloadAction<boolean>) => {\r\n      state.showLandingPopup = action.payload;\r\n    },\r\n\r\n    clearUser: (state) => {\r\n      state.user = null;\r\n      state.showLandingPopup = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser, setShowLandingPopup, clearUser } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Eye, EyeOff, Mail, Lock, User } from 'lucide-react'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Label } from '@/components/ui/label'\r\nimport { useToast } from \"../hooks/use-toast\"\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '@/store'\r\nimport { setUser } from '@/store/slices/UserSlice'\r\n\r\nexport default function AuthForm() {\r\n  const [isLogin, setIsLogin] = useState(true)\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const { toast } = useToast()\r\n  const navigate = useNavigate()\r\n  const [errors, setErrors] = useState({ username: '', email: '', password: '' })\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      navigate('/dashboard');\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  const toggleForm = () => setIsLogin(!isLogin)\r\n\r\n  const validateForm = () => {\r\n    const newErrors = { username: '', email: '', password: '' }\r\n    let isValid = true\r\n\r\n    if (!isLogin && !username.trim()) {\r\n      newErrors.username = 'Username is required'\r\n      isValid = false\r\n    }\r\n\r\n    if (!email.trim()) {\r\n      newErrors.email = 'Email is required'\r\n      isValid = false\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      newErrors.email = 'Email is invalid'\r\n      isValid = false\r\n    }\r\n\r\n    if (!password) {\r\n      newErrors.password = 'Password is required'\r\n      isValid = false\r\n    } else if (password.length < 8) {\r\n      newErrors.password = 'Password must be at least 8 characters'\r\n      isValid = false\r\n    }\r\n\r\n    setErrors(newErrors)\r\n    return isValid\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let response;\r\n      // Determine the base URL based on the environment\r\n      const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n      if (isLogin) {\r\n        response = await axios.post(\r\n          `${baseURL}/api/auth/login/normal`,\r\n          { email, password },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.data.success) {\r\n          // Set the user in the context with hasSeenLandingSlides flag\r\n          const userData = {\r\n            ...response.data.user,\r\n            // Only set hasSeenLandingSlides to false if the user has no brands\r\n            hasSeenLandingSlides: response.data.user.brands && response.data.user.brands.length > 0 \r\n          };\r\n          dispatch(setUser(userData))\r\n          // Only show landing popup if user has no brands\r\n          // setShowLandingPopup(!(response.data.user.brands && response.data.user.brands.length > 0));\r\n\r\n          toast({\r\n            title: 'Login successful!',\r\n            description: 'Welcome! Redirecting to your dashboard.',\r\n            variant: 'default',\r\n          });\r\n          navigate('/dashboard');\r\n        }\r\n      } else {\r\n        response = await axios.post(\r\n          `${baseURL}/api/auth/signup`,\r\n          { username, email, password },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.data.success) {\r\n          toast({\r\n            title: 'Registration successful!',\r\n            description: 'Please log in with your new account.',\r\n            variant: 'default',\r\n          });\r\n          setIsLogin(true);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response) {\r\n        toast({\r\n          title: 'Error',\r\n          description: error.response.data.message || 'An error occurred',\r\n          variant: 'destructive',\r\n        });\r\n      } else {\r\n        toast({\r\n          title: 'Unexpected Error',\r\n          description: 'An unexpected error occurred',\r\n          variant: 'destructive',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n      const response = await axios.get(`${baseURL}/api/auth/google?context=userLogin`);\r\n      const { authUrl } = response.data;\r\n\r\n      window.location.href = authUrl;\r\n    } catch (error) {\r\n      console.error('Error getting Google Auth URL:', error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"hidden md:flex md:w-1/2 bg-cover bg-center\" style={{ backgroundImage: \"url('https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2015&q=80')\" }}>\r\n        <div className=\"flex items-center justify-center w-full h-full bg-black bg-opacity-40\">\r\n          <div className=\"text-white text-center p-8\">\r\n            <h3 className=\"text-4xl font-bold mb-6\">Unified Marketing Analytics</h3>\r\n            <p className=\"text-xl\">View your Shopify, Facebook, and Google Ads data all in one place.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full md:w-1/2 flex items-center justify-center bg-gradient-to-br from-blue-50 to-white p-8\">\r\n        <div className=\"w-full max-w-md\">\r\n          <h2 className=\"text-3xl font-bold mb-3\">\r\n            {isLogin ? 'Welcome Back' : 'Create an Account'}\r\n          </h2>\r\n          <p className=\"mb-8\">\r\n            {isLogin\r\n              ? 'Sign in to access your marketing dashboard'\r\n              : 'Join us to view all your marketing data in one place'}\r\n          </p>\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            {!isLogin && (\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"username\" >Username</Label>\r\n                <div className=\"relative\">\r\n                  <User className=\"absolute left-3 top-3 h-5 w-5\" />\r\n                  <Input\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    placeholder=\"Enter your username\"\r\n                    required={!isLogin}\r\n                    className=\"pl-10 border-blue-300 focus:border-blue-500 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                {errors.username && <p className=\"text-red-500 text-sm\">{errors.username}</p>}\r\n              </div>\r\n            )}\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"email\" >Email</Label>\r\n              <div className=\"relative\">\r\n                <Mail className=\"absolute left-3 top-3 h-5 w-5\" />\r\n                <Input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  placeholder=\"Enter your email\"\r\n                  required\r\n                  className=\"pl-10 border-blue-300 focus:border-blue-500 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n              {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"password\">Password</Label>\r\n              <div className=\"relative\">\r\n                <Lock className=\"absolute left-3 top-3 h-5 w-5\" />\r\n                <Input\r\n                  id=\"password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  placeholder=\"Enter your password\"\r\n                  required\r\n                  className=\"pl-10 border-blue-300 focus:border-blue-500 focus:ring-blue-500\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  className=\"absolute right-3 top-3 \"\r\n                >\r\n                  {showPassword ? <Eye className=\"h-5 w-5\" /> : <EyeOff className=\"h-5 w-5\" />}\r\n                </button>\r\n              </div>\r\n              {errors.password && <p className=\"text-red-500 text-sm\">{errors.password}</p>}\r\n            </div>\r\n            <Button type=\"submit\" className=\"w-full text-white\">\r\n              {isLogin ? 'Sign In' : 'Sign Up'}\r\n            </Button>\r\n          </form>\r\n          <div className=\"mt-6\">\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"w-full flex items-center justify-center space-x-2\"\r\n              onClick={handleGoogleLogin}\r\n            >\r\n              <FcGoogle className=\"h-5 w-5\" />\r\n              <span>Continue with Google</span>\r\n            </Button>\r\n          </div>\r\n          <p className=\"mt-6 text-center text-sm\">\r\n            {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\r\n            <button onClick={toggleForm} className=\"font-semibold hover:underline\">\r\n              {isLogin ? 'Sign Up' : 'Sign In'}\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import * as React from \"react\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <Cross2Icon className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold [&+div]:text-xs\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface Brand {\r\n  _id: string;\r\n  name: string;\r\n  brandId: string;\r\n  fbAdAccounts?: [];\r\n  googleAdAccount?: string;\r\n  ga4Account?: { [key: string]: string };\r\n}\r\n\r\ninterface BrandState {\r\n  selectedBrandId: string | null;\r\n  brands: Brand[];\r\n}\r\n\r\nconst initialState: BrandState = {\r\n  selectedBrandId: null,\r\n  brands: [],\r\n};\r\n\r\nconst brandSlice = createSlice({\r\n  name: 'brand',\r\n  initialState,\r\n  reducers: {\r\n    setSelectedBrandId: (state, action: PayloadAction<string | null>) => {\r\n      state.selectedBrandId = action.payload;\r\n    },\r\n    setBrands: (state, action: PayloadAction<Brand[]>) => {\r\n      state.brands = action.payload;\r\n    },\r\n    resetBrand: (state) => {\r\n      state.selectedBrandId = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setSelectedBrandId, setBrands, resetBrand } = brandSlice.actions;\r\nexport default brandSlice.reducer;\r\n","import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Portal>\n    <TooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </TooltipPrimitive.Portal>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","export default \"__VITE_ASSET__BTkxAs8a__\"","import * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n","import { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { ChevronUp, ChevronDown, ChevronLeft, ChevronRight, Compass, LogOut, User2Icon, Radar, Store, ShoppingCart, CalendarRange, LineChart } from 'lucide-react';\r\nimport React from 'react';\r\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\r\nimport { setSelectedBrandId, setBrands, resetBrand } from \"@/store/slices/BrandSlice.ts\";\r\nimport axios from 'axios';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\nimport Logo from \"@/assets/messold-icon.png\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { FaMeta } from \"react-icons/fa6\";\r\nimport { SiGoogleads } from \"react-icons/si\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from \"../../store/index.ts\";\r\nimport { clearUser } from '@/store/slices/UserSlice.ts';\r\n\r\n\r\nexport interface Brand {\r\n    _id: string;\r\n    name: string;\r\n    fbAdAccounts?: string[];\r\n    googleAdAccount?: string;\r\n    ga4Account?: { string: string };\r\n}\r\nexport default function CollapsibleSidebar() {\r\n    const [isExpanded, setIsExpanded] = useState(true);\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const sidebarRef = useRef<HTMLDivElement>(null);\r\n    const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n    const dispatch = useDispatch();\r\n    const selectedBrandId = useSelector((state: RootState) => state.brand.selectedBrandId);\r\n    const brands = useSelector((state: RootState) => state.brand.brands);\r\n    const user = useSelector((state: RootState) => state.user.user);\r\n    // Fetch brands\r\n    const fetchBrands = useCallback(async () => {\r\n        try {\r\n            if (!user?.brands || user.brands.length === 0) {\r\n                console.warn('No brand IDs found in user context.');\r\n                return;\r\n            }\r\n    \r\n            const response = await axios.post(\r\n                `${baseURL}/api/brands/filter`,\r\n                { brandIds: user.brands },\r\n                { withCredentials: true }\r\n            );\r\n    \r\n            dispatch(setBrands(response.data));\r\n    \r\n            if (!selectedBrandId && response.data.length > 0) {\r\n                dispatch(setSelectedBrandId(response.data[0]._id));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching brands:', error);\r\n        }\r\n    }, [user?.brands]); // Only depends on user.brands and baseURL\r\n    \r\n    useEffect(() => {\r\n        fetchBrands();\r\n    }, [fetchBrands]); // Will only run when user.brands changes\r\n\r\n    const toggleSidebar = () => setIsExpanded(prev => !prev);\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            const response = await axios.post(`${baseURL}/api/auth/logout`, {}, { withCredentials: true });\r\n            if (response.status === 200) {\r\n                dispatch(clearUser());\r\n                dispatch(resetBrand());\r\n                navigate('/');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error logging out:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const pathParts = location.pathname.split('/');\r\n        if (pathParts[2]) {\r\n            setSelectedBrandId(pathParts[2]);\r\n        }\r\n    }, [location.pathname, setSelectedBrandId]);\r\n\r\n    const dashboards = [\r\n        { name: \"Marketing Insights Tracker\", path: `/ad-metrics/${selectedBrandId}`, icon: <CalendarRange size={20} />, requiresAdsData: false },\r\n        { name: \"E-Commerce Insights\", path: `/ecommerce-reports/${selectedBrandId}`, icon: <ShoppingCart size={20} /> },\r\n        { name: \"AdMetrics Hub\", path: `/analytics-dashboard/${selectedBrandId}`, icon: <LineChart size={20} /> },\r\n        {\r\n            name: \"Conversion Radar\", path: `/#`, icon: <Radar size={20} />,\r\n            subItems: [\r\n                {\r\n                    name: \"Audience & Traffic Sources\",\r\n                    path: `/conversion-reports/${selectedBrandId}/demographics`\r\n                },\r\n                {\r\n                    name: \"Camapign and Website Performance\",\r\n                    path: `/conversion-reports/${selectedBrandId}/performance`\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: \"Meta Insights\", path: `/#`, icon: <FaMeta size={20} />,\r\n            subItems: [\r\n                {\r\n                    name: \"Adaccount Summary\",\r\n                    path: `/adaccount-summary/${selectedBrandId}`\r\n                },\r\n                {\r\n                    name: \"Meta Campaigns\",\r\n                    path: `/meta-campaigns/${selectedBrandId}`\r\n                },\r\n                {\r\n                    name: \"Meta Reports\",\r\n                    path: `/meta-reports/${selectedBrandId}`\r\n                }\r\n            ]\r\n        },\r\n        { name: \"Google Ads Reports\", path: `/google-ads-hub/${selectedBrandId}`, icon: <SiGoogleads size={18} /> },  \r\n        { name: \"Segment Scope\", path: `/segment-dashboard/${selectedBrandId}`, icon: <Compass size={20} /> },\r\n    ];\r\n\r\n\r\n    const isItemDisabled = (item: any) => {\r\n        if (!selectedBrandId) return true;\r\n\r\n        const currentBrand = brands.find(b => b._id === selectedBrandId);\r\n        if (\r\n            (item.name === 'Analytics Dashboard' || item.name === 'Campaign Metrics') &&\r\n            (!currentBrand?.fbAdAccounts && !currentBrand?.googleAdAccount)\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    return (\r\n        <TooltipProvider>\r\n            <div ref={sidebarRef} className={`bg-[rgb(4,16,33)] text-white transition-all duration-500 ease-in-out flex flex-col ${isExpanded ? 'w-64' : 'w-16'}`} style={{ height: '100vh' }}>\r\n                <div className={`flex justify-between items-center p-4 relative`}>\r\n                    <div className=\"flex items-center cursor-pointer\" onClick={() => navigate('/dashboard')}>\r\n                        <img src={Logo} alt=\"Messold Logo\" className=\"h-8 w-8\" />\r\n                        {isExpanded ? <span className=\"text-sm ml-2\">Messold</span> : null}\r\n                    </div>\r\n                    <span\r\n                        className={`transition-all duration-300 ease-in-out bg-[rgb(4,16,33)] rounded-full flex items-center justify-center`}\r\n                        style={{\r\n                            width: '25px',\r\n                            height: '25px',\r\n                            position: 'absolute',\r\n                            right: '-10px',\r\n                            top: '50%',\r\n                            transform: 'translateY(-50%)',\r\n                            zIndex: 50,\r\n                        }}\r\n                        onClick={toggleSidebar}\r\n                    >\r\n                        {isExpanded ? <ChevronLeft size={15} /> : <ChevronRight size={15} />}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className={`flex-1 overflow-y-auto ${isExpanded ? 'h-[calc(100vh-64px)]' : 'h-[calc(100vh-16px)]'}`}>\r\n                    <ScrollArea className=\"h-full\">\r\n                        {brands && brands.length > 0 && <nav className=\"mt-3\">\r\n                            <SidebarItem\r\n                                icon={<Store size={24} />}\r\n                                text={selectedBrandId ? brands.find(b => b._id === selectedBrandId)?.name.replace(/_/g, ' ') || \"Unknown Brand\" : \"Your Brands\"}\r\n                                isExpanded={isExpanded}\r\n                                openIcon={<ChevronUp />}\r\n                                closeIcon={<ChevronDown />}\r\n                                isSelected={!!selectedBrandId}\r\n                                tooltipContent=\"Your Brands\"\r\n                                autoOpenOnSelect= {false}\r\n                            >\r\n                                {brands.map(brand => (\r\n                                    <SidebarChild\r\n                                        key={brand._id}\r\n                                        path={`/ad-metrics/${brand._id}}`}\r\n                                        text={brand.name.replace(/_/g, ' ')}\r\n                                        onClick={() => {\r\n                                            dispatch(setSelectedBrandId(brand._id));\r\n                                            navigate(`/ad-metrics/${brand._id}`);\r\n                                        }}\r\n                                        isSelected={selectedBrandId === brand._id}\r\n                                    />\r\n                                ))}\r\n                            </SidebarItem>\r\n\r\n                            {dashboards.map((dashboard, index) => (\r\n                                <SidebarItem\r\n                                    key={index}\r\n                                    icon={dashboard.icon}\r\n                                    text={dashboard.name}\r\n                                    isExpanded={isExpanded}\r\n                                    isSelected={location.pathname.startsWith(dashboard.path)}\r\n                                    tooltipContent={`${dashboard.name}${isItemDisabled(dashboard) ? ' (No Analytics data available)' : ''}`}\r\n                                    onClick={dashboard.subItems ? undefined : () => {\r\n                                        if (!isItemDisabled(dashboard)) {\r\n                                            navigate(dashboard.path);\r\n                                        }\r\n                                    }}\r\n                                    disabled={isItemDisabled(dashboard)}\r\n                                    openIcon={dashboard.subItems ? <ChevronUp /> : undefined}\r\n                                    closeIcon={dashboard.subItems ? <ChevronDown /> : undefined}\r\n                                    \r\n                                >\r\n                                    {dashboard.subItems?.map((subItem, subIndex) => (\r\n                                        <SidebarChild\r\n                                            key={subIndex}\r\n                                            path={subItem.path}\r\n                                            text={subItem.name}\r\n                                            onClick={() => navigate(subItem.path)}\r\n                                            isSelected={location.pathname === subItem.path}\r\n                                        />\r\n                                    ))}\r\n                                </SidebarItem>\r\n                            ))}\r\n                        </nav>}\r\n                    </ScrollArea>\r\n                </div>\r\n\r\n                <div className=\"flex flex-col\">\r\n                    <UserProfile isExpanded={isExpanded} user={user} />\r\n                    <LogoutButton handleLogout={handleLogout} isExpanded={isExpanded} />\r\n                </div>\r\n            </div>\r\n        </TooltipProvider>\r\n    );\r\n}\r\n\r\nfunction SidebarItem({ icon, text, isExpanded, openIcon, closeIcon, children, isSelected, tooltipContent, onClick, disabled, autoOpenOnSelect=true }: {\r\n    icon?: React.ReactNode; text: string; isExpanded: boolean; openIcon?: React.ReactNode; closeIcon?: React.ReactNode; children?: React.ReactNode; isSelected: boolean; tooltipContent: string; onClick?: () => void; disabled?: boolean ; autoOpenOnSelect?: boolean;\r\n}) {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleToggle = () => {\r\n        setIsOpen(prev => !prev);\r\n    };\r\n\r\n    const isChildSelected = React.Children.toArray(children).some(\r\n        (child: any) => child?.props?.isSelected\r\n      );\r\n    const isActive = isSelected || isChildSelected;\r\n\r\n    useEffect(() => {\r\n        if (autoOpenOnSelect && isActive) {\r\n          setIsOpen(true);\r\n        }\r\n      }, [isActive, autoOpenOnSelect]);\r\n\r\n      const content = (\r\n        <div\r\n          onClick={disabled ? undefined : onClick || handleToggle}\r\n          className={`flex items-center px-4 py-2 mb-2 text-gray-300 hover:bg-gray-700 hover:text-white transition-colors duration-200 cursor-pointer ${\r\n            isActive ? 'text-white font-semibold relative' : 'text-gray-100'\r\n          } ${disabled ? 'cursor-not-allowed opacity-50' : ''}`}\r\n        >\r\n          <span className=\"mr-2\">{icon}</span>\r\n          {isExpanded && <span className=\"text-xs\">{text}</span>}\r\n          {isExpanded && <span className=\"ml-auto\">{isOpen ? openIcon : closeIcon}</span>}\r\n        </div>\r\n      );\r\n\r\n    return (\r\n        <div>\r\n          {!isExpanded ? (\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>{content}</TooltipTrigger>\r\n              <TooltipContent side=\"right\">\r\n                <p className={React.Children.count(children) > 0 ? 'mb-4' : ''}>\r\n                  {tooltipContent}\r\n                </p>\r\n                {React.Children.map(children, (child) => (\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute top-0 w-1 h-full bg-gray-500\" />\r\n                    {child}\r\n                  </div>\r\n                ))}\r\n              </TooltipContent>\r\n            </Tooltip>\r\n          ) : (\r\n            content\r\n          )}\r\n          {isOpen && isExpanded && (\r\n            <div className=\"relative pl-8\">\r\n              <div className=\"absolute top-0 w-1 h-full bg-gray-500\" />\r\n              {React.Children.map(children, (child) => (\r\n                <div>{child}</div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    };\r\n\r\nfunction SidebarChild({ path, text, onClick, disabled = false, isSelected = false }: {\r\n    path: string;\r\n    text: string;\r\n    onClick?: () => void;\r\n    disabled?: boolean;\r\n    isSelected?: boolean;\r\n}): JSX.Element {\r\n    const baseClasses = `flex items-center text-xs w-full p-2.5 transition-colors duration-200 ${isSelected ? 'text-white font-semibold relative bg-gray-700' : 'text-gray-100'} ${disabled ? 'cursor-not-allowed text-gray-400' : 'hover:bg-gray-700'}`;\r\n\r\n    return disabled ? (\r\n        <div className={baseClasses}>\r\n            {text}\r\n            {isSelected && <div className=\"absolute left-0 w-1 h-full bg-white\" />}\r\n        </div>\r\n    ) : (\r\n        <NavLink to={path} className={baseClasses} onClick={(e) => {\r\n            if (onClick) {\r\n                e.preventDefault();\r\n                onClick();\r\n            }\r\n        }}>\r\n            {text}\r\n            {isSelected && <div className=\"absolute left-0 top-0 w-1 h-full bg-white\" />}\r\n        </NavLink>\r\n    );\r\n}\r\n\r\n// UserProfile component\r\nfunction UserProfile({ isExpanded, user }: { isExpanded: boolean; user: any }) {\r\n    const userProfileContent = (\r\n        <div className={'flex items-center gap-4 px-4 py-2 mb-2 text-gray-300 hover:bg-gray-700 hover:text-white transition-colors duration-200 cursor-pointer'}>\r\n            <span className=\"text-gray-300 hover:text-white\">\r\n                <User2Icon size={24} />\r\n            </span>\r\n            {isExpanded && <span className=\"text-sm mr-2\">{user?.username || 'user'}</span>}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {!isExpanded ? (\r\n                <Tooltip>\r\n                    <TooltipTrigger asChild>\r\n                        {userProfileContent}\r\n                    </TooltipTrigger>\r\n                    <TooltipContent side=\"right\">\r\n                        <p>{user?.username || 'user'}</p>\r\n                    </TooltipContent>\r\n                </Tooltip>\r\n            ) : (\r\n                userProfileContent\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n// LogoutButton component\r\nfunction LogoutButton({ handleLogout, isExpanded }: { handleLogout: () => void; isExpanded: boolean }) {\r\n    const logoutContent = (\r\n        <div onClick={handleLogout} className={'flex items-center gap-4 px-4 py-2 mb-2 text-gray-300 hover:bg-gray-700 hover:text-white transition-colors duration-200 cursor-pointer'}>\r\n            <span className=\"text-gray-300 hover:text-white\">\r\n                <LogOut size={24} />\r\n            </span>\r\n            {isExpanded && <span className=\"hidden sm:inline\">Logout</span>}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {!isExpanded ? (\r\n                <Tooltip>\r\n                    <TooltipTrigger asChild>\r\n                        {logoutContent}\r\n                    </TooltipTrigger>\r\n                    <TooltipContent side=\"right\">\r\n                        <p>Logout</p>\r\n                    </TooltipContent>\r\n                </Tooltip>\r\n            ) : (\r\n                logoutContent\r\n            )}\r\n        </div>\r\n    );\r\n}","import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-xl border bg-card text-card-foreground shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-3\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-4 pt-3\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n","import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-primary/10\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","// AdAccountMetrics.js\r\nimport React from 'react';\r\nimport { Card, CardHeader, CardContent } from \"@/components/ui/card\"\r\nimport { Skeleton } from \"@/components/ui/skeleton\"\r\nimport {  HelpCircle } from 'lucide-react';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\nimport { Campaign, GoogleCampaign } from '../Dashboard/interfaces';\r\n\r\n\r\n// Define the type for each metric\r\nexport interface Metric {\r\n  label: string;\r\n  value: string | number;\r\n  tooltipContent?: string\r\n\r\n}\r\n\r\n// Define the props for the AdAccountMetrics component\r\ninterface AdAccountMetricsProps {\r\n  title?: string;\r\n  metrics: Metric[];\r\n  date: DateRange;\r\n  isLoading: boolean;\r\n  icon?: 'Facebook' | 'Google' | '';\r\n  tooltipContent?: string\r\n  errorMessage?: string;\r\n}\r\n\r\nexport interface DateRange {\r\n  from?: Date;\r\n  to?: Date;\r\n}\r\n\r\ninterface MetricCardProps extends Metric {\r\n  date: DateRange;\r\n  icon?: 'Facebook' | 'Google' | ''\r\n\r\n}\r\ninterface LogoProps {\r\n  width?: string | number;\r\n  height?: string | number;\r\n}\r\n\r\nexport const FacebookLogo: React.FC<LogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n  <svg style={{ height, width }}fill=\"#1877F2\" viewBox=\"0 0 24 24\">\r\n  <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n</svg>\r\n);\r\n\r\nexport const GoogleLogo: React.FC<LogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n  <svg viewBox=\"0 0 24 24\" style={{ height, width }}>\r\n  <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n  <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n  <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n</svg>\r\n)\r\n\r\n\r\nconst MetricCardSkeleton: React.FC = () => {\r\n  return (\r\n    <Card className=\"transition-transform transform hover:scale-105 hover:border hover:border-blue-600\">\r\n      <CardHeader className='flex flex-col items-start justify-start'>\r\n        <div className=\"flex flex-row items-center gap-2\">\r\n          <Skeleton className=\"w-4 h-4 rounded-full\" />\r\n          <Skeleton className=\"h-6 w-24\" />\r\n        </div>\r\n        <Skeleton className=\"h-4 w-32 mt-2\" />\r\n      </CardHeader>\r\n      <CardContent>\r\n        <Skeleton className=\"h-8 w-20 mt-2\" />\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\n// MetricCard component to render each metric using ShadCN Card\r\nconst MetricCard: React.FC<MetricCardProps> = ({ label, value, date, icon, tooltipContent }) => {\r\n  const formatDate = (dateValue: Date | undefined) => {\r\n    if (!dateValue) return \"\";\r\n    if (typeof dateValue === \"string\") {\r\n      dateValue = new Date(dateValue); // Convert string to Date\r\n    }\r\n    return dateValue.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"transition-transform transform hover:scale-105 hover:border hover:border-blue-600\">\r\n      <CardHeader className='flex flex-col items-start justify-start'>\r\n        <div className=\"flex flex-row items-center gap-2\">\r\n          {icon === 'Facebook' ? (\r\n            <FacebookLogo width=\"1rem\" height=\"1rem\" />\r\n          ) : icon === 'Google' ? (\r\n            <GoogleLogo width=\"1rem\" height=\"1rem\" />\r\n          ) : null}\r\n\r\n          <div className=\"text-base font-medium\">{label}</div>\r\n\r\n          {tooltipContent && (\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <button className=\"p-0 m-0\" aria-label={`Info about ${label}`}>\r\n                    <HelpCircle className=\"w-3 h-3 text-gray-400\" />\r\n                  </button>\r\n                </TooltipTrigger>\r\n                <TooltipContent className=\"w-64 p-0 bg-white text-black border shadow-sm\">\r\n                  <div className=\"p-2 font-semibold border-black\">{label}</div>\r\n                  <div className=\"w-full h-[0.5px] bg-black\" />\r\n                  <div className=\"p-2\">{tooltipContent}</div>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"text-xs text-gray-500 font-bold\">\r\n          {formatDate(date.from)}\r\n          {date.from && date.to ? ' - ' : ''}\r\n          {formatDate(date.to)}\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <p className=\"text-3xl font-bold text-cyan-950\">{value}</p>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n};\r\n\r\n\r\nconst AdAccountMetricsCard: React.FC<AdAccountMetricsProps> = ({ title, metrics = [], date, isLoading = false, icon, errorMessage }) => {\r\n  if (errorMessage && !isLoading) {\r\n    return (\r\n      <section className={title ? 'mt-10' : ''}>\r\n        <Card className=\"p-4\">\r\n          <CardHeader><h2 className=\"text-xl font-semibold flex items-center space-x-2\">\r\n            {title && (\r\n              <>\r\n                {icon === 'Facebook' ? (\r\n                  <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n                    <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n                  </svg>\r\n                ) : (\r\n                  <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n                    <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n                    <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n                    <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n                  </svg>\r\n                )}\r\n                <span>{title}</span>\r\n              </>\r\n            )}\r\n          </h2>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <p className=\"text-red-600 text-sm\">{errorMessage}</p>\r\n          </CardContent>\r\n        </Card>\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <section className={title ? 'mt-10' : ''}>\r\n      <h2 className=\"text-xl font-semibold mb-4 flex items-center space-x-2\">\r\n        {title && (\r\n          <>\r\n            {icon === 'Facebook' ? (\r\n              <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n                <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n              </svg>\r\n            ) : (\r\n              <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n                <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n                <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n                <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n              </svg>\r\n            )}\r\n            <span>{title}</span>\r\n          </>\r\n        )}\r\n      </h2>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        {isLoading\r\n          ? Array(metrics.length).fill(0).map((_, index) => <MetricCardSkeleton key={index} />)\r\n          : metrics.map((metric, index) => (\r\n            <>\r\n              <MetricCard key={index} label={metric.label} value={metric.value} date={date} icon={icon} tooltipContent={metric.tooltipContent} />\r\n            </>\r\n          ))\r\n        }\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AdAccountMetricsCard;\r\n\r\nexport const CampaignGrid = ({ campaigns, isLoading, icon }: { campaigns: (Campaign | GoogleCampaign)[], isLoading: boolean, icon: string }) => {\r\n  return isLoading ? (\r\n    <div>Loading...</div>\r\n  ) : (\r\n    <Card className=\" p-4 my-4  hover:border hover:border-blue-600\">\r\n      <div className='flex items-center space-x-2 mb-3'>\r\n        {icon === 'Facebook' ? (\r\n          <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n            <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n          </svg>\r\n        ) : (\r\n          <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n            <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n            <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n            <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n          </svg>\r\n        )}\r\n        <h3 className=\"text-lg font-semibold\">Campaign Performance</h3>\r\n      </div>\r\n\r\n      {/* Wrapper for scrolling */}\r\n      <div className=\"overflow-x-auto max-h-[280px] overflow-y-auto\">\r\n        <table className=\"min-w-full table-auto border-collapse bg-white shadow-md rounded-lg\">\r\n          <thead>\r\n            <tr className=\"bg-gray-100 text-left text-sm font-medium text-gray-700 sticky top-0\">\r\n              <th className=\"px-6 py-3\">Campaign Name</th>\r\n              <th className=\"px-6 py-3 text-center\">Spend (₹)</th>\r\n              <th className=\"px-6 py-3 text-center\">ROAS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {campaigns.map((campaign: Campaign | GoogleCampaign, index) => {\r\n              const spendValue = parseFloat(campaign.spend);\r\n              const roas = typeof campaign.purchase_roas === 'string' ? campaign.purchase_roas : campaign.purchase_roas?.[0]?.value;\r\n              const roasValue = roas ? parseFloat(roas) : null;\r\n\r\n              return (\r\n                <tr\r\n                  key={index}\r\n                  className={`border-t text-sm ${index % 2 === 0 ? 'bg-gray-50' : 'bg-white'\r\n                    }`}\r\n                >\r\n                  <td className=\"px-6 py-3 line-clamp-2\" title={campaign.campaign_name}>\r\n                    {campaign.campaign_name}\r\n                  </td>\r\n                  <td className=\"px-6 py-3 text-center text-gray-700 font-semibold\">\r\n                  ₹{spendValue.toFixed(2)}\r\n                  </td>\r\n                  <td className=\"px-6 py-3 text-center\">\r\n                    {roasValue !== null ? (\r\n                      <span className=\"inline-flex items-center rounded-full font-medium\">\r\n                        {roasValue.toFixed(2)}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"text-gray-500\">N/A</span>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\n\r\ninterface TabProps {\r\n  label: string;\r\n  value: string;\r\n  isActive: boolean;\r\n  onClick: (value: string) => void;\r\n}\r\n\r\nconst Tab: React.FC<TabProps> = ({ label, value, isActive, onClick }) => (\r\n  <button\r\n    className={`px-6 py-2 text-sm font-bold transition-colors duration-200 ${\r\n      isActive\r\n        ? ' text-blue-500' \r\n        : 'text-gray-600 hover:text-gray-900'\r\n    }`}\r\n    onClick={() => onClick(value)}\r\n  >\r\n    {label}\r\n  </button>\r\n);\r\n\r\ninterface CustomTabsProps {\r\n  tabs: { label: string; value: string }[];\r\n  activeTab: string;\r\n  onTabChange: (value: string) => void;\r\n}\r\n\r\nexport const CustomTabs: React.FC<CustomTabsProps> = ({ tabs, activeTab, onTabChange }) => {\r\n  return (\r\n    <div className=\"flex justify-center items-center border-b border-gray-200\">\r\n      {tabs.map((tab) => (\r\n        <Tab\r\n          key={tab.value}\r\n          label={tab.label}\r\n          value={tab.value}\r\n          isActive={activeTab === tab.value}\r\n          onClick={onTabChange}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import * as React from \"react\"\r\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@radix-ui/react-icons\"\r\nimport { DayPicker } from \"react-day-picker\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  ...props\r\n}: CalendarProps) {\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"px-3\", className)}\r\n      classNames={{\r\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\r\n        month: \"space-y-4\",\r\n        caption: \"flex justify-center pt-1 relative items-center\",\r\n        caption_label: \"text-xs font-medium\",\r\n        nav: \"space-x-1 flex items-center\",\r\n        nav_button: cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\r\n        ),\r\n        nav_button_previous: \"absolute left-1\",\r\n        nav_button_next: \"absolute right-1\",\r\n        table: \"w-full border-collapse space-y-1\",\r\n        head_row: \"flex\",\r\n        head_cell: \"text-muted-foreground rounded-md w-7 font-normal text-[0.6rem]\",\r\n        row: \"flex w-full mt-2\",\r\n        cell: cn(\r\n          \"relative p-0 text-center text-[0.7rem] focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected].day-range-end)]:rounded-r-md\",\r\n          props.mode === \"range\"\r\n            ? \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"\r\n            : \"[&:has([aria-selected])]:rounded-md\",\r\n        ),\r\n        day: cn(buttonVariants({ variant: \"ghost\" }), \"h-7 w-7 p-0 font-normal aria-selected:opacity-100 text-[0.7rem]\"),\r\n        day_range_start: \"day-range-start\",\r\n        day_range_end: \"day-range-end\",\r\n        day_selected:\r\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\r\n        day_today: \"bg-accent text-accent-foreground\",\r\n        day_outside:\r\n          \"day-outside text-muted-foreground opacity-50  aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\r\n        day_disabled: \"text-muted-foreground opacity-50\",\r\n        day_range_middle:\r\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\r\n        day_hidden: \"invisible\",\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        IconLeft: () => <ChevronLeftIcon className=\"h-4 w-4\" />,\r\n        IconRight: () => <ChevronRightIcon className=\"h-4 w-4\" />,\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nCalendar.displayName = \"Calendar\"\r\n\r\nexport { Calendar }\r\n","import * as React from \"react\"\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Popover = PopoverPrimitive.Root\r\n\r\nconst PopoverTrigger = PopoverPrimitive.Trigger\r\n\r\nconst PopoverAnchor = PopoverPrimitive.Anchor\r\n\r\nconst PopoverContent = React.forwardRef<\r\n  React.ElementRef<typeof PopoverPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\r\n>(({ className, align = \"start\", sideOffset = 4, ...props }, ref) => (\r\n  <PopoverPrimitive.Portal>\r\n    <PopoverPrimitive.Content\r\n      ref={ref}\r\n      align={align}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </PopoverPrimitive.Portal>\r\n))\r\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface DateRange {\r\n  from?: string; // Store as ISO string\r\n  to?: string;\r\n}\r\n\r\n// Define the initial state with ISO strings\r\nconst initialState: DateRange = {\r\n  from: new Date(new Date().getFullYear(), new Date().getMonth(), 1).toISOString(),\r\n  to: new Date().toISOString(),\r\n};\r\n\r\n// Create the Redux slice\r\nconst dateSlice = createSlice({\r\n  name: \"date\",\r\n  initialState,\r\n  reducers: {\r\n    setDate: (state, action: PayloadAction<{ from?: string; to?: string } | undefined>) => {\r\n      if (action.payload) {\r\n        state.from = action.payload.from;\r\n        state.to = action.payload.to;\r\n      } else {\r\n        state.from = undefined;\r\n        state.to = undefined;\r\n      }\r\n    },\r\n    clearDate: (state) => {\r\n      state.from = undefined;\r\n      state.to = undefined;\r\n    },\r\n  },\r\n});\r\n\r\n// Export actions and reducer\r\nexport const { setDate, clearDate } = dateSlice.actions;\r\nexport default dateSlice.reducer;\r\n","import { useState, useEffect, useMemo, useCallback } from \"react\"\r\nimport { createSelector } from '@reduxjs/toolkit'\r\nimport { CalendarIcon } from \"lucide-react\"\r\nimport { addDays, endOfYear, format, startOfYear, subDays, subMonths, subYears } from \"date-fns\"\r\nimport type { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Calendar } from \"@/components/ui/calendar\"\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setDate, clearDate } from \"@/store/slices/DateSlice\"\r\nimport { RootState } from '@/store'\r\n\r\ntype DatePickerWithRangeProps = {\r\n  defaultDate?: DateRange\r\n  resetToFirstPage?: () => void\r\n}\r\n\r\n// Memoized selector\r\nconst selectDateRange = createSelector(\r\n  (state: RootState) => state.date.from,\r\n  (state: RootState) => state.date.to,\r\n  (from, to) => ({\r\n    from,\r\n    to\r\n  })\r\n);\r\n\r\nexport function DatePickerWithRange({ defaultDate, resetToFirstPage }: DatePickerWithRangeProps) {\r\n  const dispatch = useDispatch()\r\n  const dateRange = useSelector(selectDateRange)\r\n\r\n  // Memoize the initial date\r\n  const initialDate = useMemo(() => {\r\n    if (dateRange) {\r\n      return {\r\n        from: dateRange.from ? new Date(dateRange.from) : undefined,\r\n        to: dateRange.to ? new Date(dateRange.to) : undefined\r\n      };\r\n    }\r\n    return defaultDate ? {\r\n      from: defaultDate.from ? new Date(defaultDate.from) : undefined,\r\n      to: defaultDate.to ? new Date(defaultDate.to) : undefined\r\n    } : undefined;\r\n  }, [dateRange, defaultDate]);\r\n  const [tempDate, setTempDate] = useState<DateRange | undefined>(initialDate)\r\n  const [open, setOpen] = useState(false)\r\n  const [selectedPreset, setSelectedPreset] = useState<string | null>(null)\r\n\r\n  // Memoize date calculations\r\n  const dates = useMemo(() => {\r\n    const today = new Date()\r\n    const daysSinceSunday = today.getDay()\r\n    const startOfThisWeek = subDays(today, daysSinceSunday)\r\n    const endOfThisWeek = addDays(startOfThisWeek, 6)\r\n    const startOfThisMonth = new Date(today.getFullYear(), today.getMonth(), 1)\r\n    const endOfThisMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0)\r\n    const startOfLastWeek = subDays(startOfThisWeek, 7)\r\n    const endOfLastWeek = subDays(startOfThisWeek, 1)\r\n    const quarter = Math.floor(today.getMonth() / 3); // Get current quarter (0-based)\r\n    const startOfThisQuarter = new Date(today.getFullYear(), quarter * 3, 1)\r\n    const endOfThisQuarter = new Date(today.getFullYear(),(quarter + 1)* 3, 0)\r\n\r\n    const lastQuarter = Math.floor(today.getMonth() / 3) - 1; // Get last quarter\r\n    const year = lastQuarter < 0 ? today.getFullYear() - 1 : today.getFullYear(); // Adjust year if needed\r\n    const startOfLastQuarter = new Date(year, ((lastQuarter + 4) % 4) * 3, 1); // Start of last quarter\r\n    const endOfLastQuarter = new Date(year, ((lastQuarter + 5) % 4) * 3, 0); // End of last quarter\r\n\r\n    return {\r\n      today,\r\n      startOfThisWeek,\r\n      endOfThisWeek,\r\n      startOfThisMonth,\r\n      endOfThisMonth,\r\n      startOfLastWeek,\r\n      endOfLastWeek,\r\n      startOfThisQuarter,\r\n      endOfThisQuarter,\r\n      startOfLastQuarter,\r\n      endOfLastQuarter\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!dateRange.from && !dateRange.to && defaultDate) {\r\n      dispatch(setDate({\r\n        from: defaultDate.from ? defaultDate.from.toISOString() : undefined,\r\n        to: defaultDate.to ? defaultDate.to.toISOString() : undefined\r\n      }));\r\n    }\r\n  }, [dateRange, defaultDate, dispatch])\r\n\r\n  const handleUpdate = useCallback(() => {\r\n    if (tempDate) {\r\n      dispatch(setDate({\r\n        from: tempDate.from ? tempDate.from.toISOString() : undefined,\r\n        to: tempDate.to ? tempDate.to.toISOString() : undefined\r\n      }));\r\n    }\r\n    if (resetToFirstPage) {\r\n      resetToFirstPage();\r\n    }\r\n    setOpen(false)\r\n  }, [dispatch, resetToFirstPage, tempDate])\r\n\r\n  const clearDateRange = useCallback(() => {\r\n    setTempDate(undefined)\r\n    setSelectedPreset(null)\r\n    dispatch(clearDate())\r\n    if (resetToFirstPage) {\r\n      resetToFirstPage()\r\n    }\r\n    setOpen(false)\r\n  }, [dispatch, resetToFirstPage])\r\n\r\n  const setPresetRange = useCallback((from: Date, to: Date) => {\r\n    const newRange = { from, to }\r\n    setTempDate(newRange)\r\n  }, [])\r\n\r\n  const formatDateRange = useCallback((range: DateRange | undefined) => {\r\n    if (!range) {\r\n      return defaultDate && defaultDate.from && defaultDate.to\r\n        ? `${format(defaultDate.from, \"LLL dd, y\")} - ${format(defaultDate.to, \"LLL dd, y\")}`\r\n        : \"Pick a date\"\r\n    }\r\n    if (range.from) {\r\n      if (range.to) {\r\n        return `${format(range.from, \"LLL dd, y\")} - ${format(range.to, \"LLL dd, y\")}`\r\n      }\r\n      return format(range.from, \"LLL dd, y\")\r\n    }\r\n    return \"Pick a date\"\r\n  }, [defaultDate])\r\n\r\n  // Memoize presets array\r\n  const presets = useMemo(() => [\r\n    { label: \"Today\", fn: () => setPresetRange(dates.today, dates.today) },\r\n    { label: \"Yesterday\", fn: () => setPresetRange(subDays(dates.today, 1), subDays(dates.today, 1)) },\r\n    { label: \"This Week\", fn: () => setPresetRange(dates.startOfThisWeek, dates.endOfThisWeek) },\r\n    { label: \"Last 7 Days\", fn: () => setPresetRange(subDays(dates.today, 6), dates.today) },\r\n    { label: \"Last week\", fn: () => setPresetRange(dates.startOfLastWeek, dates.endOfLastWeek) },\r\n    { label: \"Last 30 Days\", fn: () => setPresetRange(subDays(dates.today, 29), dates.today) },\r\n    { label: \"This Month\", fn: () => setPresetRange(dates.startOfThisMonth, dates.today) },\r\n    { label: \"Last 3 Months\", fn: () => setPresetRange(subMonths(dates.today, 3), dates.today) },\r\n    { label: \"Last 6 Months\", fn: () => setPresetRange(subMonths(dates.today, 6), dates.today) },\r\n    { label: \"This Quarter\", fn: () => setPresetRange(dates.startOfThisQuarter , dates.endOfThisQuarter)},\r\n    { label: \"Last Quarter\", fn: () => setPresetRange(dates.startOfLastQuarter , dates.endOfLastQuarter)},\r\n    { label: \"This Year\", fn: () => setPresetRange(new Date(new Date().getFullYear(), 0, 1), dates.today)}, \r\n    { label: \"Last 365 Days\" , fn: () => setPresetRange(subDays(dates.today, 365), dates.today) },\r\n    { label: \"Last Year\", fn: () => setPresetRange(subYears(startOfYear(new Date()), 1), subYears(endOfYear(new Date()), 1)) }\r\n  ], [dates, setPresetRange])\r\n\r\n  const handleCalendarSelect = useCallback((range: DateRange | undefined) => {\r\n    if (range?.from && !range.to) {\r\n      setTempDate({ from: range.from, to: range.from })\r\n    } else if (range?.from && range?.to && range.from > range.to) {\r\n      setTempDate({ from: range.from, to: range.from })\r\n    } else {\r\n      setTempDate(range)\r\n    }\r\n    setSelectedPreset(null)\r\n  }, [])\r\n\r\n  return (\r\n    <Popover open={open} onOpenChange={setOpen}>\r\n      <PopoverTrigger asChild>\r\n        <Button\r\n          id=\"date\"\r\n          variant=\"outline\"\r\n          className={cn(\r\n            \"w-[250px] justify-start text-left font-normal text-sm\",\r\n            !tempDate && !defaultDate && \"text-muted-foreground\",\r\n          )}\r\n        >\r\n          <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n          {formatDateRange(tempDate)}\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-auto p-0\" align=\"start\">\r\n        <div className=\"flex\">\r\n          <div className=\"border-r p-2 w-[140px] overflow-y-auto\" style={{ maxHeight: \"240px\" }}>\r\n            <div className=\"space-y-1\">\r\n              <h1 className=\"text-xs pb-2 px-2 font-medium border-b\">Custom</h1>\r\n              {presets.map((preset) => (\r\n                <Button\r\n                  key={preset.label}\r\n                  size=\"sm\"\r\n                  variant=\"ghost\"\r\n                  className={cn(\r\n                    \"w-full justify-start text-xs font-normal\",\r\n                    selectedPreset === preset.label && \"bg-accent\",\r\n                  )}\r\n                  onClick={() => {\r\n                    preset.fn()\r\n                    setSelectedPreset(preset.label)\r\n                  }}\r\n                >\r\n                  {preset.label}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"p-2\">\r\n            <Calendar\r\n              initialFocus\r\n              mode=\"range\"\r\n              defaultMonth={tempDate?.from || defaultDate?.from || dates.today}\r\n              selected={tempDate}\r\n              onSelect={handleCalendarSelect}\r\n              numberOfMonths={2}\r\n              disabled={(date) =>\r\n                date > new Date() || date < new Date(\"2023-01-01\")\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"border-t p-2 flex justify-end gap-2\">\r\n          <Button variant=\"outline\" size=\"sm\" onClick={clearDateRange}>\r\n            Clear\r\n          </Button>\r\n          <Button size=\"sm\" onClick={handleUpdate}>\r\n            Apply\r\n          </Button>\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}","import { Settings, RefreshCw, Palette } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { DatePickerWithRange } from \"./DatePickerWithRange\";\r\nimport { Popover, PopoverTrigger, PopoverContent } from \"@/components/ui/popover\";\r\n\r\n\r\ninterface HeaderProps {\r\n  title: string;\r\n  Icon: React.ComponentType<{ className?: string }>;\r\n  showDatePicker?: boolean;\r\n  showSettings?: boolean;\r\n  showRefresh?: boolean;\r\n  showColorPalette?: boolean;\r\n  isLoading?: boolean;\r\n  handleManualRefresh?: () => void;\r\n  locale?: \"en-IN\" | \"en-US\";\r\n  setLocale?: (value: \"en-IN\" | \"en-US\") => void;\r\n  colorInfo?: { color: string; condition: string }[];\r\n}\r\n\r\nexport default function Header({\r\n  title,\r\n  Icon,\r\n  showDatePicker = false,\r\n  showSettings = false,\r\n  showRefresh = false,\r\n  showColorPalette = false,\r\n  isLoading = false,\r\n  handleManualRefresh,\r\n  locale,\r\n  setLocale,\r\n  colorInfo = [],\r\n}: HeaderProps) {\r\n \r\n\r\n  return (\r\n    <header className=\"sticky top-0 z-40 bg-white border-b px-6 py-3 transition-all duration-300\">\r\n      <div className=\"flex items-center justify-between\">\r\n        {/* Left Section */}\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"rounded-lg bg-secondary p-2 transition-transform duration-300 ease-in-out hover:scale-110\">\r\n            <Icon className=\"h-6 w-6 text-secondary-foreground\" />\r\n          </div>\r\n          <h1 className=\"text-2xl font-semibold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-secondary-foreground to-primary\">\r\n            {title}\r\n          </h1>\r\n        </div>\r\n\r\n        {/* Right Section */}\r\n        <div className=\"flex flex-row items-center space-x-2\">\r\n          {showDatePicker && (\r\n            <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n              <DatePickerWithRange \r\n                defaultDate={{\r\n                  from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                  to: new Date()\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {showRefresh && (\r\n            <div className=\"md:flex items-center hidden\">\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} className=\"flex items-center\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? \"animate-spin\" : \"\"}`} />\r\n              </Button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Rest of the component remains the same */}\r\n          {showSettings && (\r\n            <Popover>\r\n              <PopoverTrigger asChild>\r\n                <Button variant=\"outline\" size=\"icon\">\r\n                  <Settings className=\"h-4 w-4\" />\r\n                </Button>\r\n              </PopoverTrigger>\r\n              <PopoverContent>\r\n                <div className=\"grid gap-2\">\r\n                  <h3 className=\"font-medium\">Locale Settings</h3>\r\n                  <div className=\"flex flex-col space-y-2\">\r\n                    <label className=\"cursor-pointer\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"locale\"\r\n                        value=\"en-IN\"\r\n                        checked={locale === \"en-IN\"}\r\n                        onChange={() => setLocale && setLocale(\"en-IN\")}\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Indian Formatting\r\n                    </label>\r\n                    <label className=\"cursor-pointer\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"locale\"\r\n                        value=\"en-US\"\r\n                        checked={locale === \"en-US\"}\r\n                        onChange={() => setLocale && setLocale(\"en-US\")}\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Western Formatting\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </PopoverContent>\r\n            </Popover>\r\n          )}\r\n\r\n          {showColorPalette && (\r\n            <Popover>\r\n              <PopoverTrigger asChild>\r\n                <Button variant=\"outline\" size=\"icon\">\r\n                  <Palette className=\"h-4 w-4\" />\r\n                </Button>\r\n              </PopoverTrigger>\r\n              <PopoverContent className=\"w-80\">\r\n                <div className=\"grid gap-4\">\r\n                  <h3 className=\"font-medium leading-none\">Color Information</h3>\r\n                  <div className=\"grid gap-2\">\r\n                    {colorInfo.map(({ color, condition }) => (\r\n                      <div key={color} className=\"flex items-center gap-2\">\r\n                        <div className={`w-6 h-6 rounded ${color}`} />\r\n                        <span className=\"text-xs\">{condition}</span>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </PopoverContent>\r\n            </Popover>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}","import { useState, useEffect, useCallback, useMemo } from 'react'\r\nimport { format } from \"date-fns\"\r\nimport { Blend, LineChart} from \"lucide-react\"\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from \"axios\"\r\nimport AdAccountMetricsCard, { CampaignGrid } from \"./AdAccountsMetricsCard.tsx\"\r\nimport { AdAccountData, GoogleAdAccountData } from '@/pages/Dashboard/interfaces.ts'\r\ntype DataSource = 'all' | 'facebook' | 'google'\r\nimport { CustomTabs } from '../ConversionReportPage/components/CustomTabs.tsx';\r\nimport Header from '@/components/dashboard_component/Header.tsx';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store/index.ts';\r\n\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fbAdAccountsMetrics, setFbAdAccountsMetrics] = useState<AdAccountData[]>([]);\r\n  const [googleAdMetrics, setGoogleAdMetrics] = useState<GoogleAdAccountData>();\r\n  const [activeTab, setActiveTab] = useState<string>('all'); \r\n  const [dataSource, setDataSource] = useState<DataSource>('all');\r\n  const [locale, setLocale] = useState<\"en-IN\" | \"en-US\">(\"en-IN\"); \r\n  const [rawMetrics, setRawMetrics] = useState({\r\n    totalSpent: 0,\r\n    totalRevenue: 0,\r\n    totalROAS: 0,\r\n    totalPurchases: 0,\r\n    totalCTR: 0,\r\n    totalCPC: 0,\r\n    totalCPM: 0,\r\n    totalCPP: 0,\r\n  });\r\n  const { brandId } = useParams();\r\n  const navigate = useNavigate();\r\n  const tabs: { label: string; value: DataSource }[] = [\r\n    { label: \"All Data\", value: \"all\" },\r\n    { label: \"Meta\", value: \"facebook\" },\r\n    { label: \"Google\", value: \"google\" },\r\n  ];\r\n\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n\r\n\r\n  const handleDataSourceChange = (newValue: string) => {\r\n    const selectedTab = tabs.find((tab) => tab.value === newValue);\r\n    if (selectedTab && selectedTab.value !== dataSource) {\r\n      setActiveTab(selectedTab.value); \r\n      setDataSource(selectedTab.value); \r\n    }\r\n  };\r\n\r\n  const user = useSelector((state : RootState) => state.user.user);\r\n\r\n  const userId = user?.id;\r\n\r\n\r\n  const fetchAdData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const baseURL =\r\n        import.meta.env.PROD\r\n          ? import.meta.env.VITE_API_URL\r\n          : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n      const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n      const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n      let fbData = [];\r\n      let googleData = [];\r\n\r\n      if (dataSource === 'all' || dataSource === 'facebook') {\r\n        try {\r\n          const fbAdResponse = await axios.post(\r\n            `${baseURL}/api/metrics/fbAdAndCampaign/${brandId}`,\r\n            { startDate, endDate },\r\n            { withCredentials: true }\r\n          );\r\n          fbData = fbAdResponse.data.data;\r\n          console.log(\"fbdata\", fbData);\r\n          setFbAdAccountsMetrics(fbData);\r\n        } catch (fbError) {\r\n          console.error('Error fetching Facebook ad data:', fbError);\r\n        }\r\n      }\r\n\r\n      if (dataSource === 'all' || dataSource === 'google') {\r\n        try {\r\n          const googleAdResponse = await axios.post(\r\n            `${baseURL}/api/metrics/googleAdAndCampaign/${brandId}`,\r\n            { startDate, endDate, userId },\r\n            { withCredentials: true }\r\n          );\r\n          googleData = googleAdResponse.data?.data || [];\r\n          console.log(googleData);\r\n          setGoogleAdMetrics(googleData);\r\n        } catch (googleError) {\r\n          console.error('Error fetching Google ad data:', googleError);\r\n        }\r\n      }\r\n\r\n      calculateAggregatedMetrics(\r\n        dataSource === 'google' ? [] : fbData,\r\n        dataSource === 'facebook' ? undefined : googleData\r\n      );\r\n   \r\n    } catch (error) {\r\n      console.error('Error fetching ad data:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [navigate, date, dataSource, brandId, userId]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchAdData();\r\n  }, [fetchAdData]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchAdData();\r\n\r\n    const intervalId = setInterval(fetchAdData, 5 * 60 * 1000);\r\n\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchAdData]);\r\n\r\n  \r\n  const calculateAggregatedMetrics = useCallback((fbData: AdAccountData[], googleData: GoogleAdAccountData | undefined) => {\r\n    let totalSpent = 0;\r\n    let totalRevenue = 0;\r\n    let totalPurchases = 0;\r\n    let totalClicks = 0;\r\n    let totalImpressions = 0;\r\n  \r\n    if (fbData?.length) {\r\n      fbData.forEach(account => {\r\n        totalSpent += parseFloat(account.spend || '0');\r\n        totalRevenue += parseFloat(account.Revenue?.value || '0');\r\n        totalPurchases += parseFloat(account.purchases?.value || '0');\r\n        totalClicks += parseFloat(account.clicks || '0');\r\n        totalImpressions += parseFloat(account.impressions || '0');\r\n      });\r\n    }\r\n  \r\n    if (googleData?.adMetrics) {\r\n      totalSpent += parseFloat(googleData.adMetrics.totalSpent || '0');\r\n      totalRevenue += parseFloat(googleData.adMetrics.totalConversionsValue || '0');\r\n      totalPurchases += parseFloat(googleData.adMetrics.totalConversions || '0');\r\n      totalClicks += parseFloat(googleData.adMetrics.totalClicks || '0');\r\n      totalImpressions += parseFloat(googleData.adMetrics.totalImpressions || '0');\r\n    }\r\n    \r\n  \r\n    setRawMetrics({\r\n      totalSpent,\r\n      totalRevenue,\r\n      totalROAS: totalRevenue / totalSpent || 0,\r\n      totalPurchases,\r\n      totalCTR: (totalClicks / totalImpressions) * 100 || 0,\r\n      totalCPC: totalSpent / totalClicks || 0,\r\n      totalCPM: (totalSpent * 1000) / totalImpressions || 0,\r\n      totalCPP: totalPurchases > 0 ? (totalSpent / totalPurchases) : 0 ,\r\n    });\r\n  }, []);\r\n\r\n\r\n  const formattedMetrics = useMemo(() => {\r\n    return {\r\n      totalSpent: `₹ ${rawMetrics.totalSpent.toLocaleString(locale)}`,\r\n      totalRevenue: `₹ ${rawMetrics.totalRevenue.toLocaleString(locale)}`,\r\n      totalROAS: Number((rawMetrics.totalROAS).toFixed(2)).toLocaleString(locale),\r\n      totalPurchases: rawMetrics.totalPurchases.toLocaleString(locale),\r\n      totalCTR: `${Number((rawMetrics.totalCTR).toFixed(2)).toLocaleString(locale)} %`,\r\n      totalCPC: Number((rawMetrics.totalCPC).toFixed(2)).toLocaleString(locale),\r\n      totalCPM: Number((rawMetrics.totalCPM).toFixed(2)).toLocaleString(locale),\r\n      totalCPP: Number((rawMetrics.totalCPP).toFixed(2)).toLocaleString(locale),\r\n    };\r\n  }, [rawMetrics, locale]);\r\n    \r\n\r\n// Use formattedMetrics for rendering\r\nconst metrics = [\r\n  {\r\n    label: 'Amount Spent',\r\n    value: formattedMetrics.totalSpent,\r\n    tooltipContent: 'The sum of ad spends for all advertising platforms',\r\n  },\r\n  {\r\n    label: 'Revenue',\r\n    value: formattedMetrics.totalRevenue,\r\n    tooltipContent: 'Revenue from Ads Purchases',\r\n  },\r\n  {\r\n    label: 'ROAS (Ads only)',\r\n    value: formattedMetrics.totalROAS,\r\n    tooltipContent: 'Blended ROAS = Ads Purchases value / Blended Ad Spend',\r\n  },\r\n  {\r\n    label: 'Ads Purchases',\r\n    value: formattedMetrics.totalPurchases,\r\n    tooltipContent: 'Ads Purchases = Fb Ads Purchase + Google Conversions',\r\n  },\r\n  {\r\n    label: 'CTR',\r\n    value: formattedMetrics.totalCTR,\r\n    tooltipContent:\r\n      'Average CTR from all advertising platforms = (Blended Clicks / Blended Impressions)*100',\r\n  },\r\n  {\r\n    label: 'CPC',\r\n    value: formattedMetrics.totalCPC,\r\n    tooltipContent:\r\n      'Average CPC from all advertising platforms = (Blended Ad Spend / Blended Clicks)',\r\n  },\r\n  {\r\n    label: 'CPM',\r\n    value: formattedMetrics.totalCPM,\r\n    tooltipContent:\r\n      'Average CPM from all advertising platforms = (Blended Ad Spend * 1000 / Blended Impressions)',\r\n  },\r\n  {\r\n    label: 'CPP',\r\n    value: formattedMetrics.totalCPP,\r\n    tooltipContent:\r\n      'Average CPP from all advertising platforms = (Blended Ad Spend / Blended Purchases)',\r\n  },\r\n];\r\n\r\n\r\n  const googleMetrics = [\r\n    {\r\n      label: 'Total Cost',\r\n      value: googleAdMetrics ? `₹ ${new Intl.NumberFormat(locale).format(parseFloat(googleAdMetrics?.adMetrics?.totalSpent))}` : ' 0',\r\n    },\r\n    {\r\n      label: 'Conversion Value',\r\n      value: googleAdMetrics ? `₹ ${parseFloat(googleAdMetrics?.adMetrics?.totalConversionsValue).toLocaleString(locale)}` : ' 0',\r\n    },\r\n    {\r\n      label: 'ROAS',\r\n      value: googleAdMetrics ? parseFloat(googleAdMetrics?.adMetrics?.roas).toLocaleString(locale) : '0.00',\r\n    },\r\n    {\r\n      label: 'Conversions',\r\n      value: googleAdMetrics ? parseFloat(googleAdMetrics?.adMetrics?.totalConversions).toLocaleString(locale) : '0',\r\n    },\r\n    {\r\n      label: 'CPC',\r\n      value: googleAdMetrics ? `₹ ${parseFloat(googleAdMetrics?.adMetrics?.totalCPC).toLocaleString(locale)}` : ' 0',\r\n    },\r\n    {\r\n      label: 'CPM',\r\n      value: googleAdMetrics ? `₹ ${parseFloat(googleAdMetrics?.adMetrics?.totalCPM).toLocaleString(locale)}` : ' 0',\r\n    },\r\n    {\r\n      label: 'CTR',\r\n      value: googleAdMetrics ? `${parseFloat(googleAdMetrics?.adMetrics?.totalCTR).toLocaleString(locale)} %` : ' 0',\r\n    },\r\n    {\r\n      label: 'Cost Per Conversion',\r\n      value: googleAdMetrics ? `₹ ${parseFloat(googleAdMetrics?.adMetrics?.totalCostPerConversion).toLocaleString(locale)}` : ' 0',\r\n    },\r\n  ]\r\n\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n        <Header\r\n      title=\"AdMetrics Dashboard\"\r\n      Icon={LineChart}\r\n      showDatePicker={true}\r\n      showSettings={true}\r\n      showRefresh={true}\r\n      isLoading={false}\r\n      handleManualRefresh={() => {\r\n        fetchAdData();\r\n      }} \r\n      locale={locale}\r\n      setLocale={setLocale}/>\r\n\r\n      <div className=\"bg-white px-6 sticky top-0 z-10\">\r\n        <CustomTabs tabs={tabs} activeTab={activeTab} onTabChange={handleDataSourceChange} />\r\n      </div>\r\n\r\n\r\n      {/* Main content */}\r\n      <main className=\"p-4 md:p-6 lg:px-8\">\r\n        <div className=\"space-y-2\">\r\n          {/* Blended summary */}\r\n          <section>\r\n            <h2 className=\"text-xl font-semibold flex flex-row items-center justify-between\">\r\n              <div className='flex flex-row items-center space-x-2'>\r\n                <Blend className=\"h-5 w-5\" />\r\n                <span>Blended summary</span>\r\n                {(dataSource === 'all' || dataSource === 'facebook') && (\r\n                  <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n                    <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n                  </svg>\r\n                )}\r\n                {(dataSource === 'all' || dataSource === 'google') && (\r\n                  <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\" >\r\n                    <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path><path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path><path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n                  </svg>\r\n                )}\r\n              </div>\r\n              \r\n          \r\n\r\n            </h2>\r\n            <AdAccountMetricsCard \r\n              metrics={metrics} \r\n              date={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} \r\n              isLoading={isLoading} \r\n              icon={dataSource === 'all' ? '' : dataSource === 'facebook' ? 'Facebook' : 'Google'} \r\n            />\r\n          </section>\r\n        </div>\r\n\r\n\r\n        {(dataSource === 'all' || dataSource === 'facebook') && fbAdAccountsMetrics?.length > 0 && fbAdAccountsMetrics.map((accountMetrics, index) => {\r\n          const fbmetrics = [\r\n            { label: 'Amount Spent', value: `₹ ${parseFloat(accountMetrics.spend || '0').toLocaleString(locale)}` },\r\n            {\r\n              label: 'Revenue',\r\n              value: `₹ ${parseFloat(accountMetrics.Revenue?.value || '0').toLocaleString(locale)}`\r\n            },\r\n            {\r\n              label: 'ROAS (Ads only)',\r\n              value: accountMetrics.purchase_roas && accountMetrics.purchase_roas.length > 0\r\n                ? parseFloat(accountMetrics.purchase_roas[0].value).toFixed(2)\r\n                : '0'\r\n            },\r\n            { label: 'Ads Purchases', value: accountMetrics.purchases?.value || '0' },\r\n            { label: 'CPC (All clicks)', value: `₹ ${new Intl.NumberFormat(locale).format(parseFloat(accountMetrics.cpc || '0'))}` },\r\n            { label: 'CPM', value: `₹ ${new Intl.NumberFormat(locale, { minimumFractionDigits: 2 }).format(parseFloat(accountMetrics.cpm || '0'))}` },\r\n            { label: 'CTR', value: `${parseFloat(accountMetrics.ctr || '0').toFixed(2)} %` },\r\n            { label: 'Cost per Purchase (All)', value: `₹ ${new Intl.NumberFormat(locale).format(parseFloat(accountMetrics.cpp || '0'))}` },\r\n          ];\r\n\r\n          return (\r\n            <>\r\n              <AdAccountMetricsCard\r\n                key={index}\r\n                icon=\"Facebook\"\r\n                title={`Facebook - ${accountMetrics.account_name}`}\r\n                metrics={fbmetrics}  // Pass fbmetrics for the current account\r\n                date={{ \r\n                  from: date.from ? new Date(date.from) : undefined,\r\n                  to: date.to ? new Date(date.to) : undefined \r\n                }}\r\n                isLoading={isLoading}\r\n                errorMessage={accountMetrics.message}\r\n              />\r\n              <CampaignGrid \r\n                campaigns={accountMetrics.campaigns || []} \r\n                isLoading={isLoading} \r\n                icon=\"Facebook\" \r\n              />\r\n            </>\r\n          );\r\n        })}\r\n\r\n        {\r\n          (dataSource === 'all' || dataSource === 'google') && (\r\n            googleAdMetrics && Object.keys(googleAdMetrics).length > 0 ? (\r\n              <>\r\n                <AdAccountMetricsCard\r\n                  icon=\"Google\"\r\n                  title={`Google Ads - ${googleAdMetrics?.adAccountName}`}\r\n                  metrics={googleMetrics}\r\n                  date={{ \r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined \r\n                  }}\r\n                  isLoading={isLoading}\r\n                />\r\n                <CampaignGrid campaigns={googleAdMetrics.campaignData || []} isLoading={isLoading} icon=\"Google\" />\r\n              </>\r\n            ) : (\r\n              <section>\r\n                <div className='flex flex-row gap-2 items-center'>\r\n                  <h3 className=\"text-lg font-semibold\">Google Ad Metrics</h3>\r\n                  <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n                    <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n                    <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n                    <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n                  </svg>\r\n                </div>\r\n\r\n                <div className=\"text-center text-gray-500 mt-4 bg-white p-2\">\r\n                  No Google Ad Account for this brand.\r\n                </div>\r\n              </section>\r\n            )\r\n          )\r\n        }\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar.tsx\";\r\nimport Dashboard from \"./dashboard.tsx\";\r\n\r\nconst AnalyticsDashboard: React.FC = () => {\r\n  return (\r\n    <div className=\"flex h-screen\"> {/* Set a fixed width for the sidebar */}\r\n        <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n        <Dashboard />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalyticsDashboard;\r\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","import { useState } from 'react'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport axios from 'axios'\r\n\r\n\r\nexport default function ShopifyModalContent() {\r\n  const [storeName, setStoreName] = useState('')\r\n  const baseURL = import.meta.env.PROD? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n  const handleShopifyLogin = async () => {\r\n    try {\r\n      const response = await axios.post(`${baseURL}/api/auth/shopify`, { shop: storeName }, { withCredentials: true });\r\n      if (response.data.success) {\r\n        const { authUrl } = response.data;\r\n        console.log('Generated Shopify Auth URL:', authUrl); // Log the URL to check if it's correct\r\n        window.location.href = authUrl;\r\n      } else {\r\n        console.error('Failed to get Shopify Auth URL');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting Shopify Auth URL:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"mt-4 space-y-4\">\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Enter your Shopify store name\"\r\n        value={storeName}\r\n        onChange={(e) => setStoreName(e.target.value)}\r\n      />\r\n      <Button className=\"w-full\" onClick={handleShopifyLogin} disabled={!storeName}>\r\n        Login to Shopify\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { Search, Check } from 'lucide-react'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Input } from '@/components/ui/input'\r\nimport { useUser } from '@/context/UserContext'\r\nimport { FacebookLogo, GoogleLogo } from '@/pages/AnalyticsDashboard/AdAccountsMetricsCard'\r\n\r\ninterface LogoProps {\r\n  width?: string | number;\r\n  height?: string | number;\r\n}\r\n\r\n\r\n\r\nexport const Ga4Logo: React.FC<LogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n  <svg viewBox=\"0 0 24 24\" style={{ height, width }}>\r\n    <rect x=\"17\" y=\"2\" width=\"2rem\" height=\"2rem\" rx=\"2.5\" fill=\"#F9AB00\"></rect>\r\n    <path d=\"M9.5 13.5C9.5 12.1193 10.6193 11 12 11C13.3807 11 14.5 12.1193 14.5 13.5V19.5C14.5 20.8807 13.3807 22 12 22C10.6193 22 9.5 20.8807 9.5 19.5V13.5Z\" fill=\"#E37400\"></path>\r\n    <path d=\"M2 19.5C2 18.1193 3.11929 17 4.5 17C5.88071 17 7 18.1193 7 19.5C7 20.8807 5.88071 22 4.5 22C3.11929 22 2 20.8807 2 19.5Z\" fill=\"#E37400\"></path><path d=\"M6.92162 10C6.36184 10 5.95724 9.68838 5.95724 9.05977V8.55474H3.2304C2.49881 8.55474 2 8.1088 2 7.45332C2 7.07723 2.12193 6.70651 2.40459 6.22297C2.93666 5.29349 3.57403 4.31565 4.31116 3.23573C4.92637 2.31162 5.39747 2 6.20111 2C7.2209 2 7.88044 2.54265 7.88044 3.38617V7.02351H8.19082C8.72842 7.02351 9 7.34587 9 7.79181C9 8.23774 8.72288 8.55474 8.19082 8.55474H7.88044V9.05977C7.88044 9.68838 7.47585 10 6.92162 10ZM6.01267 7.09335V3.48287H5.97387C5.0095 4.8368 4.34996 5.83076 3.7015 7.03962V7.09335H6.01267Z\" fill=\"#E37400\"></path>\r\n  </svg>\r\n);\r\n\r\nexport const ShopifyLogo: React.FC<LogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n  <svg viewBox=\"0 0 64 64\" style={{ height, width }}\r\n    xmlns=\"http://www.w3.org/2000/svg\" ><g>\r\n      <g><path d=\"M51.759,12.659c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631    c-0.36-0.362-1.063-0.254-1.337-0.171c-0.039,0.011-0.715,0.222-1.834,0.567c-1.096-3.167-3.027-6.077-6.426-6.077    c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844c-7.919,0-11.703,9.951-12.889,15.008    c-3.078,0.956-5.266,1.638-5.542,1.728C9.943,18.42,9.89,18.474,9.667,20.1C9.495,21.331,5,56.264,5,56.264l35.022,6.594    L59,58.731c0,0-6.661-45.261-6.703-45.572C52.255,12.849,51.983,12.677,51.759,12.659z M33.034,10.88    c0,0.119-0.002,0.231-0.002,0.344c-1.928,0.601-4.02,1.251-6.121,1.906c1.179-4.57,3.387-6.78,5.32-7.613    C32.716,6.743,33.034,8.505,33.034,10.88z M29.876,3.278c0.346,0,0.688,0.116,1.018,0.345c-2.539,1.199-5.258,4.224-6.408,10.261    c-1.679,0.522-3.319,1.034-4.838,1.506C20.994,10.783,24.188,3.278,29.876,3.278z M31.241,30.19c0,0-2.05-1.099-4.561-1.099    c-3.686,0-3.872,2.324-3.872,2.908c0,3.195,8.287,4.42,8.287,11.903c0,5.888-3.714,9.678-8.726,9.678    c-6.012,0-9.088-3.761-9.088-3.761l1.609-5.345c0,0,3.16,2.729,5.83,2.729c1.74,0,2.449-1.38,2.449-2.387    c0-4.168-6.799-4.354-6.799-11.203c0-5.761,4.116-11.341,12.428-11.341c3.199,0,4.783,0.923,4.783,0.923L31.241,30.19z     M35.11,10.578c0-0.211,0.002-0.417,0.002-0.644c0-1.966-0.273-3.551-0.709-4.807c1.752,0.219,2.919,2.223,3.67,4.528    C37.194,9.931,36.194,10.241,35.11,10.578z\" fill=\"#95C675\" /></g><g><path d=\"M51.759,12.659c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631    c-0.36-0.362-1.063-0.254-1.337-0.171c-0.039,0.011-0.715,0.222-1.834,0.567c-1.096-3.167-3.027-6.077-6.426-6.077    c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844c-7.919,0-9.873,9.951-11.059,15.008    c-3.078,0.956-5.44,6.219-5.719,6.307c-1.719,0.542-1.772,0.596-1.996,2.223C11.148,25.91,5,56.264,5,56.264l35.022,6.594    L59,58.731c0,0-6.661-45.261-6.703-45.572C52.255,12.849,51.983,12.677,51.759,12.659z M33.034,10.88    c0,0.119-0.002,0.231-0.002,0.344c-1.928,0.601-4.02,1.251-6.121,1.906c1.179-4.57,3.387-6.78,5.32-7.613    C32.716,6.743,33.034,8.505,33.034,10.88z M29.876,3.278c0.346,0,0.688,0.116,1.018,0.345c-2.539,1.199-5.258,4.224-6.408,10.261    c-1.679,0.522-3.319,1.034-4.838,1.506C20.994,10.783,24.188,3.278,29.876,3.278z M31.241,30.19c0,0-2.05-1.099-4.561-1.099    c-3.686,0-3.872,2.324-3.872,2.908c0,3.195,8.287,4.42,8.287,11.903c0,5.888-3.714,9.678-8.726,9.678    c-6.012,0-9.088-3.761-9.088-3.761l1.609-5.345c0,0,3.16,2.729,5.83,2.729c1.74,0,2.449-1.38,2.449-2.387    c0-4.168-6.799-4.354-6.799-11.203c0-5.761,4.116-11.341,12.428-11.341c3.199,0,4.783,0.923,4.783,0.923L31.241,30.19z     M35.11,10.578c0-0.211,0.002-0.417,0.002-0.644c0-1.966-0.273-3.551-0.709-4.807c1.752,0.219,2.919,2.223,3.67,4.528    C37.194,9.931,36.194,10.241,35.11,10.578z\" fill=\"#79B259\" /></g><path d=\"M40.022,62.857L59,58.731c0,0-6.661-45.261-6.703-45.572c-0.042-0.311-0.313-0.482-0.538-0.5   c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631c-0.192-0.194-0.479-0.249-0.75-0.251   c-0.72,1.22-0.571,3.537-0.571,3.537l-2.232,50.839L40.022,62.857z\" fill=\"#55932C\" /><path d=\"M33.583,2.977c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844   c-7.887,0-11.674,9.873-12.875,14.947l2.447-0.759c1.354-4.609,4.545-12.053,10.209-12.053c0.346,0,0.688,0.116,1.018,0.345   c-2.532,1.195-5.244,4.209-6.398,10.213l2.43-0.75c1.182-4.541,3.381-6.739,5.307-7.569c0.484,1.227,0.803,2.988,0.803,5.363   c0,0.108,0,0.211-0.002,0.314l2.078-0.643c0-0.2,0.002-0.4,0.002-0.617c0-1.966-0.273-3.551-0.709-4.807   c1.746,0.218,2.912,2.213,3.662,4.508l1.938-0.601C38.906,5.876,36.976,2.977,33.583,2.977z\" fill=\"#4A7A2B\" /><path d=\"M47.611,12.348c-0.474-0.037-0.793-0.06-0.793-0.06s-3.28-3.271-3.639-3.631   c-0.192-0.194-0.479-0.249-0.75-0.251c-0.72,1.22-0.571,3.537-0.571,3.537l-2.232,50.839l0.396,0.075l10.098-2.196L47.611,12.348z\" fill=\"#4C822A\" />\r\n    </g></svg>\r\n)\r\n\r\ninterface OtherPlatformModalContentProps {\r\n  platform: string;\r\n  onConnect: (platform: string, account: string, accountId: string) => void;\r\n  connectedId: string;\r\n}\r\n\r\ninterface GoogleAdsAccount {\r\n  name: string;\r\n  clientId: string;\r\n  hidden?: boolean;\r\n}\r\n\r\ninterface GoogleAnalyticsAccount {\r\n  propertyName: string\r\n  propertyId: string\r\n}\r\n\r\ninterface FacebookAdsAccount {\r\n  adname: string\r\n  id: string\r\n}\r\n\r\nexport default function OtherPlatformModalContent({\r\n  platform,\r\n  onConnect,\r\n  connectedId,\r\n}: OtherPlatformModalContentProps) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [googleAdsAccounts, setGoogleAdsAccounts] = useState<GoogleAdsAccount[]>([]);\r\n  const [googleAnalyticsAccounts, setGoogleAnalyticsAccounts] = useState<GoogleAnalyticsAccount[]>([]);\r\n  const [facebookAdsAccounts, setFacebookAdsAccounts] = useState<FacebookAdsAccount[]>([]);\r\n  const [showLoginButton, setShowLoginButton] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n\r\n  const user = useUser();\r\n\r\n  useEffect(() => {\r\n    const fetchGoogleAdsAccounts = async () => {\r\n      setLoading(true); // Start loading\r\n      try {\r\n        const userId = user.user?.id;\r\n        const response = await axios.post(\r\n          `${baseURL}/api/setup/google-accounts`,\r\n          { userId },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          setShowLoginButton(false);\r\n          setGoogleAdsAccounts(\r\n            response.data?.clientAccounts.filter((account: GoogleAdsAccount) => !account.hidden)\r\n          );\r\n        } else {\r\n          console.log('Unexpected status code:', response.status);\r\n        }\r\n      } catch (error) {\r\n        handleError(error, setShowLoginButton);\r\n      } finally {\r\n        setLoading(false); // End loading\r\n      }\r\n    };\r\n\r\n    const fetchGoogleAnalyticsAccounts = async () => {\r\n      setLoading(true); // Start loading\r\n      try {\r\n        const userId = user.user?.id;\r\n        const response = await axios.post(\r\n          `${baseURL}/api/setup/ga4-propertyIds`,\r\n          { userId },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          setShowLoginButton(false);\r\n          setGoogleAnalyticsAccounts(response.data.propertiesList || []);\r\n        } else {\r\n          console.log('Unexpected status code:', response.status);\r\n        }\r\n      } catch (error) {\r\n        handleError(error, setShowLoginButton);\r\n      } finally {\r\n        setLoading(false); // End loading\r\n      }\r\n    };\r\n\r\n    const fetchFacebookAdsAccounts = async () => {\r\n      setLoading(true); // Start loading\r\n      try {\r\n        const userId = user.user?.id;\r\n        const response = await axios.post(\r\n          `${baseURL}/api/setup/fb-ad-accounts`,\r\n          { userId },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        setFacebookAdsAccounts(response.data.adAccounts || []);\r\n      } catch (error) {\r\n        handleError(error, setShowLoginButton);\r\n      } finally {\r\n        setLoading(false); // End loading\r\n      }\r\n    };\r\n\r\n    if (platform.toLowerCase() === 'google ads') fetchGoogleAdsAccounts();\r\n    if (platform.toLowerCase() === 'google analytics') fetchGoogleAnalyticsAccounts();\r\n    if (platform.toLowerCase() === 'facebook') fetchFacebookAdsAccounts();\r\n  }, [platform, user]);\r\n\r\n  const handleError = (error: unknown, setShowLoginButton: (value: boolean) => void) => {\r\n    const axiosError = error as AxiosError;\r\n\r\n    if (axiosError.response) {\r\n      const { status, data } = axiosError.response;\r\n      const code = axiosError.code;\r\n      if (status === 400) {\r\n        setShowLoginButton(true);\r\n      } else if (status === 403) {\r\n        setShowLoginButton(true);\r\n      } else if (status === 401 || code === 'TOKEN_EXPIRED') {\r\n        alert('Your Google session has expired. Please log in again.');\r\n        setShowLoginButton(true);\r\n      } else {\r\n        console.error('Unhandled Error Status:', status);\r\n        console.error('Error Message:', data);\r\n      }\r\n    } else if (axiosError.request) {\r\n      console.error('No response received:', axiosError.request);\r\n    } else {\r\n      console.error('Unexpected Error:', axiosError.message);\r\n    }\r\n  };\r\n\r\n\r\n  const filteredAccounts = () => {\r\n    if (platform.toLowerCase() === 'google ads') {\r\n      if (!googleAdsAccounts || googleAdsAccounts.length === 0) {\r\n        return null;\r\n      }\r\n      return googleAdsAccounts.filter((account) =>\r\n        account.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    } else if (platform.toLowerCase() === 'google analytics') {\r\n      if (!googleAnalyticsAccounts || googleAnalyticsAccounts.length === 0) {\r\n        return null;\r\n      }\r\n      return googleAnalyticsAccounts.filter((account) =>\r\n        account.propertyName.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    } else if (platform.toLowerCase() === 'facebook') {\r\n      if (!facebookAdsAccounts || facebookAdsAccounts.length === 0) {\r\n        return null; // Return null if there are no Facebook Ads accounts\r\n      }\r\n      return facebookAdsAccounts.filter((account) =>\r\n        account.adname.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const handleConnect = (account: GoogleAdsAccount | GoogleAnalyticsAccount | FacebookAdsAccount) => {\r\n    let accountId: string;\r\n    let displayName: string;\r\n\r\n    if ('clientId' in account) {\r\n      accountId = account.clientId;\r\n      displayName = `${account.name} (${accountId})`;\r\n    } else if ('propertyId' in account) {\r\n      accountId = account.propertyId;\r\n      displayName = `${account.propertyName} (${accountId})`;\r\n    } else if ('id' in account) {\r\n      accountId = account.id;\r\n      displayName = `${account.adname}`;\r\n    } else {\r\n      accountId = '';\r\n      displayName = '';\r\n    }\r\n\r\n    onConnect(platform, displayName, accountId);\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n\r\n      const response = await axios.get(`${baseURL}/api/auth/google?context=brandSetup`, { withCredentials: true });\r\n      const { authUrl } = response.data;\r\n\r\n      window.location.href = authUrl;\r\n    } catch (error) {\r\n      console.error('Error getting Google Auth URL:', error);\r\n    }\r\n  }\r\n\r\n  const handleFbLogin = async () => {\r\n    try {\r\n      const response = await axios.get(`${baseURL}/api/auth/facebook`, { withCredentials: true });\r\n      if (response.data.success) {\r\n        window.location.href = response.data.authURL;\r\n      } else {\r\n        console.error('Failed to get Facebook Auth URL');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting Facebook Auth URL:', error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    loading ? <div>Loading...</div> : (\r\n      <>\r\n        {showLoginButton ? (\r\n          <Button\r\n            size=\"sm\"\r\n            onClick={platform.toLowerCase() === 'facebook' ? handleFbLogin : handleGoogleLogin}\r\n            className=\"flex items-center gap-2 bg-white text-black border border-green-800 hover:bg-green-50\"\r\n          >\r\n            {platform.toLowerCase() === 'google ads' && (\r\n              <>\r\n                <GoogleLogo height=\"1rem\" width=\"1rem\" />\r\n                Connect to your Google Ads account\r\n              </>\r\n            )}\r\n            {platform.toLowerCase() === 'google analytics' && (\r\n              <>\r\n                <Ga4Logo height=\"1rem\" width=\"1rem\" />\r\n                Connect to your GA4 account\r\n              </>\r\n            )}\r\n            {platform.toLowerCase() === 'facebook' && (\r\n              <>\r\n                <FacebookLogo height=\"1rem\" width=\"1rem\" />\r\n                Connect to your Facebook account\r\n              </>\r\n            )}\r\n          </Button>\r\n        ) : (\r\n          // Handle the case where the button is not shown\r\n          <>\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Search accounts...\"\r\n                className=\"pl-10\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"max-h-[50vh] overflow-auto\">\r\n              {filteredAccounts()?.map((account) => {\r\n                // Extract platform-specific details\r\n                const isGoogleAds = platform.toLowerCase() === 'google ads';\r\n                const isFacebook = platform.toLowerCase() === 'facebook';\r\n                // const isGoogleAnalytics = platform.toLowerCase() === 'google analytics';\r\n\r\n                const accountId = isGoogleAds\r\n                  ? (account as GoogleAdsAccount).clientId\r\n                  : isFacebook\r\n                    ? (account as FacebookAdsAccount).id\r\n                    : (account as GoogleAnalyticsAccount).propertyId;\r\n\r\n                const accountName = isGoogleAds\r\n                  ? (account as GoogleAdsAccount).name\r\n                  : isFacebook\r\n                    ? (account as FacebookAdsAccount).adname\r\n                    : (account as GoogleAnalyticsAccount).propertyName;\r\n\r\n                const platformLogo = isGoogleAds ? (\r\n                  <GoogleLogo height=\"1rem\" width=\"1rem\" />\r\n                ) : isFacebook ? (\r\n                  <FacebookLogo height=\"1rem\" width=\"1rem\" />\r\n                ) : (\r\n                  <Ga4Logo height=\"1rem\" width=\"1rem\" />\r\n                );\r\n\r\n                return (\r\n                  <div\r\n                    key={accountId}\r\n                    className=\"flex items-center justify-between p-2 rounded hover:bg-gray-50\"\r\n                  >\r\n                    <span>\r\n                      <div className=\"flex flex-row items-center gap-3\">\r\n                        {platformLogo}\r\n                        {isFacebook\r\n                          ? `${accountName}`\r\n                          : `${accountName} (${accountId})`} \r\n                      </div>\r\n                    </span>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      onClick={() => handleConnect(account)}\r\n                      disabled={connectedId.includes(accountId)}\r\n                      className=\"bg-blue-600\"\r\n                    >\r\n                      {connectedId.includes(accountId) && <Check className=\"h-4 w-4 mr-2\" />}\r\n                      {connectedId.includes(accountId) ? 'Connected' : 'Connect'}\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </>\r\n    )\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Upload, Check, ArrowRight, Building2, ChevronRight } from 'lucide-react';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport ShopifyModalContent from './ShopifyModalContent';\r\nimport OtherPlatformModalContent from './OtherPlatformModalContent';\r\nimport { FacebookLogo, GoogleLogo } from '@/pages/AnalyticsDashboard/AdAccountsMetricsCard';\r\nimport { Ga4Logo, ShopifyLogo } from './OtherPlatformModalContent';\r\nimport axios from 'axios';\r\nimport { useUser } from '@/context/UserContext';\r\n\r\n\r\nconst platforms = [\r\n  { name: 'Shopify', color: 'bg-emerald-50', icon: ShopifyLogo, textColor: 'text-emerald-700', ringColor: 'ring-emerald-200', description: 'Connect your e-commerce store' },\r\n  { name: 'Facebook', color: 'bg-blue-50', icon: FacebookLogo, textColor: 'text-blue-700', ringColor: 'ring-blue-200', description: 'Link your ad accounts' },\r\n  { name: 'Google Ads', color: 'bg-rose-50', icon: GoogleLogo, textColor: 'text-rose-700', ringColor: 'ring-rose-200', description: 'Import campaign data' },\r\n  { name: 'Google Analytics', color: 'bg-yellow-50', icon: Ga4Logo, textColor: 'text-yellow-700', ringColor: 'ring-yellow-200', description: 'Track website metrics' },\r\n];\r\n\r\nconst steps = ['Brand Details', 'Platform Connections', 'Review'];\r\n\r\nexport default function BrandSetup() {\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [openModal, setOpenModal] = useState<string | null>(null);\r\n  const [connectedAccounts, setConnectedAccounts] = useState<Record<string, string[]>>({});\r\n  const [brandName, setBrandName] = useState('');\r\n  const [brandLogo, setBrandLogo] = useState<File | null>(null);\r\n  const [googleAdId, setGoogleAdId] = useState<string>('');\r\n  const [ga4Id, setGa4Id] = useState<string>('');\r\n  const [fbAdId, setFBAdId] = useState<string[]>([]);\r\n  const [shop, setShop] = useState<string>('');\r\n  const [shopifyAccessToken, setShopifyAccessToken] = useState('');\r\n  const { toast } = useToast();\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n  const {user, setUser} = useUser();\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const accessToken = params.get('access_token');\r\n    const shopName = params.get('shop_name');\r\n\r\n    if (accessToken && shopName) {\r\n      setShopifyAccessToken(accessToken);\r\n      setShop(shopName);\r\n      setConnectedAccounts(prev => ({\r\n        ...prev,\r\n        Shopify: [shopName],\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  const handleConnect = (platform: string, account: string, accountId: string) => {\r\n    setConnectedAccounts(prev => ({\r\n      ...prev,\r\n      [platform]: [...(prev[platform] || []), account]\r\n    }));\r\n    if (platform.toLowerCase() === 'google ads') {\r\n      setGoogleAdId(accountId);\r\n    } else if (platform.toLowerCase() === 'google analytics') {\r\n      setGa4Id(accountId);\r\n    } else {\r\n      setFBAdId(prev => [...prev, accountId]);\r\n    }\r\n    toast({ description: `Successfully connected ${account} to ${platform}`, variant: \"default\" });\r\n  };\r\n\r\n  const handleLogoUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      setBrandLogo(file);\r\n      toast({ description: 'Logo uploaded successfully', variant: \"default\" });\r\n    }\r\n  };\r\n\r\n  const isConnected = (platform: string) => {\r\n    return (connectedAccounts[platform]?.length || 0) > 0;\r\n  };\r\n\r\n  const getConnectedId = (platformName: string): string => {\r\n    switch (platformName.toLowerCase()) {\r\n      case 'google ads':\r\n        return googleAdId;\r\n      case 'google analytics':\r\n        return ga4Id;\r\n      case 'facebook':\r\n        return fbAdId.join(',');\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const canProceed = () => {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return !!brandName && !!brandLogo;\r\n      case 1:\r\n        return Object.keys(connectedAccounts).length > 0;\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!brandName || Object.keys(connectedAccounts).length === 0) {\r\n      return toast({ description: 'Please complete all fields before submitting.', variant: \"destructive\" });\r\n    }\r\n  \r\n    const payload = {\r\n      name: brandName,\r\n      logoUrl: brandLogo || '',\r\n      googleAdAccount: googleAdId || '',\r\n      ga4Account: { PropertyID: ga4Id || '' },\r\n      fbAdAccounts: fbAdId.map((accountId) => accountId),\r\n      shopifyAccount: { shopName: shop || '', shopifyAccessToken: shopifyAccessToken || '' }\r\n    };\r\n  \r\n    try {\r\n      // First create the brand\r\n      const brandResponse = await axios.post(\r\n        `${baseURL}/api/brands/add`,\r\n        payload,\r\n        { withCredentials: true }\r\n      );\r\n  \r\n      const newBrandId = brandResponse.data.brand._id;\r\n  \r\n      // Then add the brand to user\r\n      if (user) {\r\n        await axios.post(\r\n          `${baseURL}/api/users/add-brand`,\r\n          {\r\n            userId: user.id,\r\n            brandId: newBrandId\r\n          },\r\n          { withCredentials: true }\r\n        );\r\n      }\r\n  \r\n      // Update local state\r\n      const updatedUser = user ? {\r\n        ...user,\r\n        brands: [...user.brands, newBrandId]\r\n      } : null;\r\n      \r\n      if (updatedUser) setUser(updatedUser);\r\n      \r\n      toast({ description: 'Brand setup completed successfully!', variant: \"default\" });\r\n  \r\n    } catch (error) {\r\n      console.error(error);\r\n      toast({ description: 'Error creating brand. Please try again.', variant: \"destructive\" });\r\n    }\r\n  };\r\n  \r\n\r\n  const renderStepContent = () => {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"space-y-4\">\r\n              <label className=\"block text-sm font-medium text-gray-700\">Brand Name</label>\r\n              <Input\r\n                placeholder=\"Enter your brand name\"\r\n                value={brandName}\r\n                onChange={(e) => setBrandName(e.target.value)}\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"space-y-4\">\r\n              <label className=\"block text-sm font-medium text-gray-700\">Brand Logo</label>\r\n              <div className=\"flex items-center gap-4\">\r\n                <Input\r\n                  id=\"brandLogo\"\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleLogoUpload}\r\n                  className=\"hidden\"\r\n                />\r\n                <Button\r\n                  variant=\"outline\"\r\n                  className=\"flex-1\"\r\n                  onClick={() => document.getElementById('brandLogo')?.click()}\r\n                >\r\n                  <Upload className=\"h-4 w-4 mr-2\" />\r\n                  {brandLogo ? 'Change Logo' : 'Upload Logo'}\r\n                </Button>\r\n                {brandLogo && (\r\n                  <div className=\"flex items-center gap-2 px-4 py-2 bg-gray-50 rounded-lg\">\r\n                    <Check className=\"h-4 w-4 text-green-500\" />\r\n                    <span className=\"text-sm text-gray-600\">{brandLogo.name}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\r\n            {platforms.map((platform) => (\r\n              <Dialog\r\n                key={platform.name}\r\n                open={openModal === platform.name}\r\n                onOpenChange={(isOpen) => setOpenModal(isOpen ? platform.name : null)}\r\n              >\r\n                <DialogTrigger asChild>\r\n                  <button\r\n                    className={`relative group p-6 rounded-xl ${platform.color} ring-1 ${platform.ringColor} transition-all duration-200 hover:scale-[1.02]`}\r\n                  >\r\n                    <div className=\"flex items-start gap-4\">\r\n                      <platform.icon width=\"2rem\" height=\"2rem\" />\r\n                      <div className=\"flex-1 text-left\">\r\n                        <h3 className={`font-semibold ${platform.textColor}`}>{platform.name}</h3>\r\n                        <p className=\"text-sm text-gray-600 mt-1\">{platform.description}</p>\r\n                      </div>\r\n                      {isConnected(platform.name) ? (\r\n                        <Check className=\"h-5 w-5 text-green-500\" />\r\n                      ) : (\r\n                        <ChevronRight className=\"h-5 w-5 text-gray-400\" />\r\n                      )}\r\n                    </div>\r\n                  </button>\r\n                </DialogTrigger>\r\n                <DialogContent className=\"sm:max-w-[600px]\">\r\n                  <DialogHeader>\r\n                    <DialogTitle>Connect to {platform.name}</DialogTitle>\r\n                    <DialogDescription>\r\n                      {platform.name === 'Shopify'\r\n                        ? 'Enter your Shopify store name and login to connect.'\r\n                        : 'Select an account to connect with your brand.'}\r\n                    </DialogDescription>\r\n                  </DialogHeader>\r\n                  {platform.name === 'Shopify' ? (\r\n                    <ShopifyModalContent />\r\n                  ) : (\r\n                    <OtherPlatformModalContent\r\n                      platform={platform.name}\r\n                      onConnect={handleConnect}\r\n                      connectedId={getConnectedId(platform.name)}\r\n                    />\r\n                  )}\r\n                </DialogContent>\r\n              </Dialog>\r\n            ))}\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"rounded-lg bg-gray-50 p-6\">\r\n              <h3 className=\"font-medium text-gray-900\">Brand Details</h3>\r\n              <div className=\"mt-4 space-y-3\">\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-gray-600\">Name</span>\r\n                  <span className=\"font-medium\">{brandName}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-gray-600\">Logo</span>\r\n                  <span className=\"font-medium\">{brandLogo?.name}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"rounded-lg bg-gray-50 p-6\">\r\n              <h3 className=\"font-medium text-gray-900\">Connected Platforms</h3>\r\n              <div className=\"mt-4 space-y-3\">\r\n                {Object.entries(connectedAccounts).map(([platform, accounts]) => (\r\n                  <div key={platform} className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">{platform}</span>\r\n                    <span className=\"font-medium\">{accounts.join(', ')}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mx-auto shadow-lg\">\r\n      <CardContent className=\"p-8\">\r\n        <div className=\"flex items-center gap-3 mb-8\">\r\n          <div className=\"rounded-full bg-primary/10 p-2\">\r\n            <Building2 className=\"h-6 w-6 text-primary\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">Brand Setup</h2>\r\n            <p className=\"text-gray-500\">Complete the steps below to set up your brand</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            {steps.map((step, index) => (\r\n              <div key={step} className=\"flex items-center\">\r\n                <div className={`flex items-center justify-center w-8 h-8 rounded-full ${index <= currentStep ? 'bg-primary text-white' : 'bg-gray-100 text-gray-400'}`}>\r\n                  {index < currentStep ? (\r\n                    <Check className=\"h-5 w-5\" />\r\n                  ) : (\r\n                    <span>{index + 1}</span>\r\n                  )}\r\n                </div>\r\n                <span className={`ml-2 ${index <= currentStep ? 'text-gray-900' : 'text-gray-400'}`}>\r\n                  {step}\r\n                </span>\r\n                {index < steps.length - 1 && (\r\n                  <div className={`w-24 h-0.5 mx-4 ${index < currentStep ? 'bg-primary' : 'bg-gray-100'}`} />\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {renderStepContent()}\r\n\r\n        <div className=\"flex justify-between mt-8\">\r\n          {currentStep > 0 && (\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => setCurrentStep(current => current - 1)}\r\n            >\r\n              Back\r\n            </Button>\r\n          )}\r\n          <Button\r\n            className=\"ml-auto\"\r\n            disabled={!canProceed()}\r\n            onClick={() => {\r\n              if (currentStep === steps.length - 1) {\r\n                handleSubmit();\r\n              } else {\r\n                setCurrentStep(current => current + 1);\r\n              }\r\n            }}\r\n          >\r\n            {currentStep === steps.length - 1 ? (\r\n              <>\r\n                Complete Setup\r\n                <Check className=\"ml-2 h-5 w-5\" />\r\n              </>\r\n            ) : (\r\n              <>\r\n                Continue\r\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\r\n              </>\r\n            )}\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\nimport './landingSlides.css';\r\n\r\ninterface LandingSlidesProps {\r\n    onEnd: () => void;\r\n}\r\n\r\nconst LandingSlides: React.FC<LandingSlidesProps> = ({ onEnd }) => {\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n    \r\n    const slides = [\r\n        {\r\n            title: \"All-in-One Marketing Analytics Platform\",\r\n            description: \"Your complete solution for Shopify marketing analytics and performance tracking\",\r\n            features: [\r\n                \"Multi-brand performance tracking\",\r\n                \"Real-time analytics dashboard\",\r\n                \"Campaign ROI analysis\",\r\n                \"Segment-based insights\"\r\n            ],\r\n            bgColor: \"bg-gradient-to-br from-blue-500 to-indigo-600\",\r\n            // Using placeholder image for demo\r\n            image: \"/sildeimages/slide-1.webp\"\r\n        },\r\n        {\r\n            title: \"Advanced Campaign Analytics\",\r\n            description: \"Deep dive into your marketing campaigns with detailed performance metrics\",\r\n            features: [\r\n                \"Campaign performance tracking\",\r\n                \"Monthly ad metrics analysis\",\r\n                \"Cross-channel campaign insights\",\r\n                \"Custom date range analytics\"\r\n            ],\r\n            bgColor: \"bg-gradient-to-br from-purple-500 to-pink-600\",\r\n            image: \"/sildeimages/slide-2.webp\"\r\n        },\r\n        {\r\n            title: \"Interactive Analytics Dashboard\",\r\n            description: \"Dive deep into your business metrics with our powerful analytics dashboard\",\r\n            features: [\r\n                \"Real-time data visualization\",\r\n                \"Interactive filtering & sorting\",\r\n                \"Custom KPI tracking\",\r\n                \"Multi-dimensional analysis\"\r\n            ],\r\n            bgColor: \"bg-gradient-to-br from-blue-500 to-indigo-600\",\r\n            image: \"/slideimages/slide-3.webp\"\r\n        },\r\n        {\r\n            title: \"Customer Segmentation & Insights\",\r\n            description: \"Understand your customers better with powerful segmentation tools\",\r\n            features: [\r\n                \"Customer behavior analysis\",\r\n                \"Segment-based performance metrics\",\r\n                \"Geographic insights\",\r\n                \"Purchase pattern tracking\"\r\n            ],\r\n            bgColor: \"bg-gradient-to-br from-green-500 to-teal-600\",\r\n            image: \"/slideimages/slide-4.webp\"\r\n        },\r\n        {\r\n            title: \"Performance Reporting\",\r\n            description: \"Generate comprehensive reports and track your brand's growth\",\r\n            features: [\r\n                \"Automated report generation\",\r\n                \"Brand performance metrics\",\r\n                \"Revenue tracking & forecasting\",\r\n                \"Custom KPI monitoring\"\r\n            ],\r\n            bgColor: \"bg-gradient-to-br from-orange-500 to-red-600\",\r\n            image: \"slideimages/slide-5.webp\"\r\n        },\r\n        {\r\n            title: \"Marketing Intelligence\",\r\n            description: \"Make data-driven decisions with our advanced analytics tools\",\r\n            features: [\r\n                \"ROI optimization suggestions\",\r\n                \"Performance benchmarking\",\r\n                \"Trend analysis & insights\",\r\n                \"Marketing spend optimization\"\r\n            ],\r\n            bgColor: \"bg-gradient-to-br from-cyan-500 to-blue-600\",\r\n            image: \"/slideimages/slide-6.webp\"\r\n        }\r\n    ];\r\n\r\n    const nextSlide = () => {\r\n        if (currentSlide === slides.length - 1) {\r\n            onEnd();\r\n        } else {\r\n            setCurrentSlide(prev => prev + 1);\r\n        }\r\n    };\r\n\r\n    const prevSlide = () => {\r\n        if (currentSlide > 0) {\r\n            setCurrentSlide(prev => prev - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"relative h-[600px] w-full rounded-xl overflow-hidden\">\r\n            <div className={`absolute inset-0 ${slides[currentSlide].bgColor} p-8 transition-all duration-500 bg-opacity-50`}>\r\n                <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-8 items-center h-full\">\r\n                    <div className=\"text-white space-y-6\">\r\n                        <h2 className=\"text-4xl font-bold mb-4 animate-fade-in\">\r\n                            {slides[currentSlide].title}\r\n                        </h2>\r\n                        <p className=\"text-xl text-white/90 mb-6 animate-fade-in\">\r\n                            {slides[currentSlide].description}\r\n                        </p>\r\n                        <div className=\"space-y-3\">\r\n                            {slides[currentSlide].features.map((feature, index) => (\r\n                                <div \r\n                                    key={index} \r\n                                    className=\"flex items-center space-x-2 animate-slide-in\"\r\n                                    style={{ \r\n                                        animationDelay: `${index * 100}ms`\r\n                                    }}\r\n                                >\r\n                                    <div className=\"w-2 h-2 rounded-full bg-white/75\" />\r\n                                    <p className=\"text-lg\">{feature}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"hidden md:block relative h-[400px]\">\r\n                        <div className=\"absolute inset-0 bg-white/10 rounded-lg backdrop-blur-sm overflow-hidden\">\r\n                            <img \r\n                                src={slides[currentSlide].image}\r\n                                alt={slides[currentSlide].title}\r\n                                className=\"w-full h-full object-cover opacity-90 hover:opacity-100 transition-opacity duration-300\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"absolute bottom-8 left-8 right-8 flex justify-between items-center\">\r\n                    <div className=\"flex items-center gap-4\">\r\n                        <Button\r\n                            variant=\"secondary\"\r\n                            onClick={prevSlide}\r\n                            disabled={currentSlide === 0}\r\n                            className=\"bg-white/90 text-gray-800 hover:bg-white shadow-lg hover:shadow-xl transition-all\"\r\n                        >\r\n                            <ChevronLeft className=\"mr-2 h-4 w-4\" />\r\n                            Previous\r\n                        </Button>\r\n                        <button\r\n                            onClick={onEnd}\r\n                            className=\"text-white/80 hover:text-white underline-offset-4 hover:underline transition-all duration-200 text-sm font-medium\"\r\n                        >\r\n                            Skip\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"flex gap-2\">\r\n                        {slides.map((_, index) => (\r\n                            <button\r\n                                key={index}\r\n                                onClick={() => setCurrentSlide(index)}\r\n                                className={`w-3 h-3 rounded-full transition-all duration-300 ${\r\n                                    currentSlide === index \r\n                                        ? 'bg-white scale-110' \r\n                                        : 'bg-white/50 hover:bg-white/70'\r\n                                }`}\r\n                                aria-label={`Go to slide ${index + 1}`}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={nextSlide}\r\n                        className=\"bg-white/90 text-gray-800 hover:bg-white shadow-lg hover:shadow-xl transition-all\"\r\n                    >\r\n                        {currentSlide === slides.length - 1 ? (\r\n                            \"Get Started\"\r\n                        ) : (\r\n                            <>\r\n                                Next\r\n                                <ChevronRight className=\"ml-2 h-4 w-4\" />\r\n                            </>\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LandingSlides;","// CombinedDashboard.tsx\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useUser } from \"@/context/UserContext\";\r\nimport { Activity, Target, TrendingUp, ArrowUpRight } from \"lucide-react\";\r\nimport axios from 'axios';\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport BrandSetup from \"./components/BrandForm\";\r\nimport LandingSlides from \"./components/LandingSlides\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store/index.ts\"\r\n\r\n\r\n// Define the Brand interface\r\ninterface Brand {\r\n    brandId: string;\r\n    name: string;\r\n    targetAmount: number;\r\n}\r\n\r\nexport default function CombinedDashboard() {\r\n    const { user, setUser, showLandingPopup, setShowLandingPopup } = useUser();\r\n    const brands = useSelector((state: RootState) => state.brand.brands);\r\n    const [activeTab, setActiveTab] = useState(\"landing\");\r\n    const [selectedBrands, setSelectedBrands] = useState<Brand[]>([]);\r\n    const [achievedSales, setAchievedSales] = useState<{ [key: string]: number }>({});\r\n    const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n    const getAchievedSales = useCallback(async (brandId: string) => {\r\n        try {\r\n            const response = await axios.get(`${baseURL}/api/shopify/dailysales/${brandId}`, { withCredentials: true });\r\n            return response.data.totalSales;\r\n        } catch (error) {\r\n            console.error('Error fetching sales data:', error);\r\n            return 0;\r\n        }\r\n    }, [baseURL]);\r\n\r\n    const fetchSalesData = useCallback(async () => {\r\n        try {\r\n            const salesData: { [key: string]: number } = {};\r\n            await Promise.all(\r\n                selectedBrands.map(async (brand) => {\r\n                    salesData[brand.brandId] = await getAchievedSales(brand.brandId);\r\n                })\r\n            );\r\n            setAchievedSales(salesData);\r\n        } catch (error) {\r\n            console.error('Error fetching sales data:', error);\r\n        } \r\n    }, [selectedBrands, getAchievedSales]);\r\n\r\n    useEffect(() => {\r\n        const fetchBrandTargets = async () => {\r\n            try {\r\n                const response = await axios.get(`${baseURL}/api/performance/brandTarget`, { withCredentials: true });\r\n                setSelectedBrands(response.data); // Ensure response.data is correctly typed\r\n            } catch (error) {\r\n                console.error('Error fetching brands:', error);\r\n            }\r\n        };\r\n\r\n        fetchBrandTargets();\r\n    }, [baseURL]);\r\n\r\n    useEffect(() => {\r\n        fetchSalesData();\r\n    }, [fetchSalesData]);\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-b from-gray-50 to-gray-100 p-6 relative\">\r\n            {/* Landing Slides Popup */}\r\n            {showLandingPopup && (\r\n                <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center\">\r\n                    <div className=\"w-full max-w-4xl mx-4\">\r\n                        <LandingSlides \r\n                            onEnd={() => {\r\n                                setShowLandingPopup(false);\r\n                                if (user) {\r\n                                    setUser({\r\n                                        ...user,\r\n                                        hasSeenLandingSlides: true\r\n                                    });\r\n                                }\r\n                                if (brands.length === 0) {\r\n                                    setActiveTab(\"setup\");\r\n                                }\r\n                            }} \r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Main Dashboard Content */}\r\n            <div className=\"max-w-7xl mx-auto space-y-8\">\r\n                {/* Header Section */}\r\n                <div className=\"flex justify-between items-center\">\r\n                    <div>\r\n                        <h1 className=\"text-4xl font-bold text-gray-700\">\r\n                            Welcome{brands.length === 0 ? '' : ' back'}, {user?.username.split(' ')[0] || 'user'}! 👋\r\n                        </h1>\r\n                        <p className=\"mt-2 text-gray-500\">\r\n                            {brands.length === 0 \r\n                                ? \"Let's get started by setting up your first brand!\"\r\n                                : \"Here's what's happening with your brands today.\"\r\n                            }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Main Content */}\r\n                {brands.length === 0 ? (\r\n                    <></>\r\n                ) : (\r\n                    <>\r\n                        {/* Tabs Section */}\r\n                        <div className=\"flex space-x-4 border-b border-gray-300\">\r\n                            <div\r\n                                onClick={() => setActiveTab(\"landing\")}\r\n                                className={`cursor-pointer py-2 px-4 ${activeTab === \"landing\" ? \"border-b-2 border-blue-500 font-bold\" : \"text-gray-600\"}`}\r\n                            >\r\n                                Dashboard\r\n                            </div>\r\n                            <div\r\n                                onClick={() => setActiveTab(\"setup\")}\r\n                                className={`cursor-pointer py-2 px-4 ${activeTab === \"setup\" ? \"border-b-2 border-blue-500 font-bold\" : \"text-gray-600\"}`}\r\n                            >\r\n                                Brand Setup\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Dashboard Content */}\r\n                        {activeTab === \"landing\" && (\r\n                            <div className=\"space-y-6\">\r\n                                {/* Quick Stats Grid */}\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                                    <Card className=\"bg-white shadow-md rounded-lg\">\r\n                                        <CardContent className=\"p-6\">\r\n                                            <div className=\"flex justify-between items-start\">\r\n                                                <div>\r\n                                                    <p className=\"text-gray-800 font-semibold\">Active Brands</p>\r\n                                                    <p className=\"text-3xl font-bold mt-2\">{brands.length}</p>\r\n                                                </div>\r\n                                                <Target className=\"h-8 w-8 text-blue-500\" />\r\n                                            </div>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                    <Card className=\"bg-white shadow-md rounded-lg\">\r\n                                        <CardContent className=\"p-6\">\r\n                                            <div className=\"flex justify-between items-start\">\r\n                                                <div>\r\n                                                    <p className=\"text-gray-800 font-semibold\">Total Sales</p>\r\n                                                    <p className=\"text-3xl font-bold mt-2\">\r\n                                                        ${Object.values(achievedSales).reduce((a, b) => a + b, 0).toLocaleString()}\r\n                                                    </p>\r\n                                                </div>\r\n                                                <TrendingUp className=\"h-8 w-8 text-green-500\" />\r\n                                            </div>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                    <Card className=\"bg-white shadow-md rounded-lg\">\r\n                                        <CardContent className=\"p-6\">\r\n                                            <div className=\"flex justify-between items-start\">\r\n                                                <div>\r\n                                                    <p className=\"text-gray-800 font-semibold\">Active Targets</p>\r\n                                                    <p className=\"text-3xl font-bold mt-2\">{selectedBrands.length}</p>\r\n                                                </div>\r\n                                                <Activity className=\"h-8 w-8 text-purple-500\" />\r\n                                            </div>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </div>\r\n\r\n                                {/* Brand Quick Access */}\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                    <Card>\r\n                                        <CardHeader>\r\n                                            <CardTitle className=\"flex items-center text-lg\">\r\n                                                <ArrowUpRight className=\"mr-2 h-5 w-5 text-blue-500\" />\r\n                                                Analytics Dashboards\r\n                                            </CardTitle>\r\n                                        </CardHeader>\r\n                                        <CardContent>\r\n                                            <div className=\"grid grid-cols-2 gap-4\">\r\n                                                {brands.map((brand) => (\r\n                                                    <Link key={brand.brandId} to={`/analytics-dashboard/${brand.brandId}`}>\r\n                                                        <div className=\"p-4 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors\">\r\n                                                            <p className=\"font-medium text-gray-900\">{brand.name}</p>\r\n                                                            <p className=\"text-sm text-gray-500 mt-1\">View Analytics</p>\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                ))}\r\n                                            </div>\r\n                                        </CardContent>\r\n                                    </Card>\r\n\r\n                                    <Card>\r\n                                        <CardHeader>\r\n                                            <CardTitle className=\"flex items-center text-lg\">\r\n                                                <ArrowUpRight className=\"mr-2 h-5 w-5 text-blue-500\" />\r\n                                                Monthly Reports\r\n                                            </CardTitle>\r\n                                        </CardHeader>\r\n                                        <CardContent>\r\n                                            <div className=\"grid grid-cols-2 gap-4\">\r\n                                                {brands.map((brand) => (\r\n                                                    <Link key={brand.brandId} to={`/ad-metrics/${brand.brandId}`}>\r\n                                                        <div className=\"p-4 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors\">\r\n                                                            <p className=\"font-medium text-gray-900\">{brand.name}</p>\r\n                                                            <p className=\"text-sm text-gray-500 mt-1\">View Report</p>\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                ))}\r\n                                            </div>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {activeTab === \"setup\" && <BrandSetup />}\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { \r\n  Rocket, \r\n  ChevronRight, \r\n  Zap \r\n} from 'lucide-react'\r\nimport BrandSetup from './components/BrandForm.tsx'\r\nimport { useUser } from '@/context/UserContext.tsx'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\r\n\r\nexport default function Dashboard() {\r\n  const { user } = useUser()\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 py-6 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"space-y-5\">\r\n        {/* Vibrant Welcome Header */}\r\n        <div className=\"bg-gradient-to-r from-primary to-primary/80 text-white rounded-2xl shadow-md overflow-hidden\">\r\n          <div className=\"p-8 flex items-center justify-between\">\r\n            <div className=\"space-y-4 max-w-2xl\">\r\n              <h1 className=\"text-4xl font-extrabold tracking-tight\">\r\n                Welcome, <span className=\"text-white/90\">{user?.username.split(' ')[0] || 'User'}</span>\r\n              </h1>\r\n              <p className=\"text-lg text-white/80 leading-relaxed\">\r\n                Embark on your analytics journey! Setting up your first brand will unlock powerful insights, helping you transform data into strategic growth.\r\n              </p>\r\n              <div className=\"flex space-x-4 pt-4\">\r\n                <Button variant=\"secondary\" className=\"bg-white text-primary hover:bg-gray-100\">\r\n                  Get Started\r\n                  <ChevronRight className=\"ml-2 h-4 w-4\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <Rocket className=\"h-24 w-24 text-white/20 animate-pulse\" />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Brand Setup Card */}\r\n        <Card className=\"border-0 rounded-2xl shadow-xl\">\r\n          <CardHeader className=\"bg-gradient-to-r from-blue-50 to-blue-100/50\">\r\n            <CardTitle className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <Zap className=\"h-8 w-8 text-yellow-500 animate-bounce\" />\r\n                <span className=\"text-2xl font-bold text-gray-800\">\r\n                  Add Your First Brand\r\n                </span>\r\n              </div>\r\n              <Button variant=\"outline\" className=\"group border-primary/30 hover:bg-primary/5\">\r\n                <span className=\"text-primary\">Quick Setup Guide</span>\r\n                <ChevronRight className=\"ml-2 h-4 w-4 text-primary group-hover:translate-x-1 transition-transform\" />\r\n              </Button>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"p-6\">\r\n            <BrandSetup />\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport LandingPage from \"./dashboard\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\";\r\nimport { useUser } from \"@/context/UserContext\";\r\nimport Dashboard from \"./BrandSetUpDashboard\";\r\n// import LandingSlides from \"./components/LandingSlides\";\r\n\r\nconst GeneralDashboard: React.FC = () => {\r\n    const { user } = useUser();\r\n\r\n    return (\r\n        <div className=\"flex h-screen relative\"> \r\n            <CollapsibleSidebar />\r\n            <div className=\"flex-1 h-screen overflow-auto\">\r\n                {/* Landing Slides Popup */}\r\n                {/* {showLandingPopup && (\r\n                    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center\">\r\n                        <div className=\"w-full max-w-4xl mx-4\">\r\n                            <LandingSlides \r\n                                onEnd={() => {\r\n                                    setShowLandingPopup(false);\r\n                                    if (user) {\r\n                                        setUser({\r\n                                            ...user,\r\n                                            hasSeenLandingSlides: true\r\n                                        });\r\n                                    }\r\n                                }} \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )} */}\r\n                \r\n                {/* Main Content */}\r\n                {user?.brands?.length === 0 ? <Dashboard /> : <LandingPage />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GeneralDashboard;","import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ninterface Brand {\r\n  _id: string;\r\n  name: string;\r\n  brandId: string;\r\n  fbAdAccounts?: [];\r\n  googleAdAccount?: string;\r\n  ga4Account?: {string : string};\r\n}\r\n\r\ninterface BrandContextType {\r\n  selectedBrandId: string | null;\r\n  setSelectedBrandId: (id: string | null) => void;\r\n  resetBrand: () => void;\r\n  brands: Brand[];\r\n  setBrands: (brands: Brand[]) => void;\r\n}\r\n\r\nconst BrandContext = createContext<BrandContextType | undefined>(undefined);\r\n\r\nexport const BrandProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [selectedBrandId, setSelectedBrandId] = useState<string | null>(null);\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n\r\n  // Load brands from local storage when the component mounts\r\n  useEffect(() => {\r\n    const storedBrands = localStorage.getItem('brands');\r\n    const storedSelectedBrandId = localStorage.getItem('selectedBrandId');\r\n\r\n    if (storedBrands) {\r\n      setBrands(JSON.parse(storedBrands));\r\n    }\r\n    if (storedSelectedBrandId) {\r\n      setSelectedBrandId(storedSelectedBrandId);\r\n    }\r\n  }, []);\r\n\r\n  // Whenever brands state changes, save them to local storage\r\n  useEffect(() => {\r\n    if (brands.length > 0) {\r\n      localStorage.setItem('brands', JSON.stringify(brands));\r\n    }\r\n  }, [brands]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBrandId) {\r\n      localStorage.setItem('selectedBrandId', selectedBrandId);\r\n    }\r\n  }, [selectedBrandId]);\r\n\r\n  const resetBrand = () => {\r\n    setSelectedBrandId(null);\r\n    localStorage.removeItem('selectedBrandId');\r\n  };\r\n\r\n  return (\r\n    <BrandContext.Provider value={{ selectedBrandId, setSelectedBrandId, resetBrand, brands, setBrands }}>\r\n      {children}\r\n    </BrandContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useBrand = () => {\r\n  const context = useContext(BrandContext);\r\n  if (context === undefined) {\r\n    throw new Error('useBrand must be used within a BrandProvider');\r\n  }\r\n  return context;\r\n};\r\n","import { useEffect, useMemo, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\"\r\nimport { CalendarRange, ChevronDown, Maximize, Minimize } from \"lucide-react\"\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@radix-ui/react-tooltip\"\r\nimport React from \"react\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { ShopifyLogo } from \"../GeneralisedDashboard/components/OtherPlatformModalContent\"\r\nimport { FacebookLogo, GoogleLogo } from \"@/pages/AnalyticsDashboard/AdAccountsMetricsCard\"\r\nimport { useSelector } from \"react-redux\"\r\nimport type { RootState } from \"@/store\"\r\nimport Header from \"@/components/dashboard_component/Header\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\n\r\ninterface DailyMetric {\r\n    _id: string\r\n    date: string\r\n    metaSpend: number\r\n    metaROAS: number\r\n    googleSpend: number\r\n    googleROAS: number\r\n    totalSpend: number\r\n    adSales: number\r\n    grossROI: number\r\n    shopifySales: number\r\n    totalSales: number\r\n    refundAmount: number\r\n    netROI: number\r\n    metaSales?: number\r\n    googleSales?: number\r\n    ROI?: number\r\n}\r\n\r\ninterface MonthlyAggregate {\r\n    _id: {\r\n        month: number\r\n        year: number\r\n    }\r\n    metaSpend: number\r\n    metaROAS: number\r\n    googleSpend: number\r\n    googleROAS: number\r\n    totalSpend: number\r\n    grossROI: number\r\n    shopifySales: number\r\n    totalSales: number\r\n    refundAmount: number\r\n    netROI: number\r\n    dailyMetrics: DailyMetric[]\r\n    month: number\r\n    year: number\r\n    metaSales?: number\r\n    googleSales?: number\r\n    totalAdSales?: number\r\n    ROI?: number\r\n}\r\n\r\nfunction TooltipHeader({\r\n    title,\r\n    tooltip,\r\n    colSpan = 1,\r\n    rowSpan,\r\n    isSubHeader = false,\r\n}: {\r\n    title: string\r\n    tooltip: string\r\n    colSpan?: number\r\n    rowSpan?: number\r\n    isSubHeader?: boolean\r\n}) {\r\n    return (\r\n        <th\r\n            className={`\r\n                ${isSubHeader ? 'text-xs font-medium' : 'font-semibold text-sm'}\r\n                text-center whitespace-nowrap border-r border-gray-400 p-2\r\n                ${isSubHeader ? 'bg-gradient-to-b from-gray-100 to-gray-200' : 'bg-gradient-to-r from-gray-100 to-gray-200'}\r\n                relative overflow-hidden\r\n                ${!isSubHeader ? 'after:content-[\"\"] after:absolute after:bottom-0 after:left-0 after:w-full after:h-0.5 after:bg-blue-500/20' : ''}\r\n            `}\r\n            colSpan={colSpan}\r\n            rowSpan={rowSpan}\r\n        >\r\n            <TooltipProvider>\r\n                <Tooltip>\r\n                    <TooltipTrigger asChild>\r\n                        <span className=\"flex items-center justify-center gap-1 cursor-help\">{title}</span>\r\n                    </TooltipTrigger>\r\n                    <TooltipContent className=\"mb-3\">\r\n                        <div className=\"text-gray-700 bg-white p-2 rounded-md text-sm border shadow-lg max-w-xs\">{tooltip}</div>\r\n                    </TooltipContent>\r\n                </Tooltip>\r\n            </TooltipProvider>\r\n        </th>\r\n    )\r\n}\r\n\r\nexport const ExcelMetricsPage: React.FC = () => {\r\n    const [metricsData, setMetricsData] = useState<MonthlyAggregate[]>([])\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [error, setError] = useState<string | null>(null)\r\n    const [isFullScreen, setIsFullScreen] = useState<boolean>(false)\r\n    const dateFrom = useSelector((state: RootState) => state.date.from)\r\n    const dateTo = useSelector((state: RootState) => state.date.to)\r\n    const [expandedMonths, setExpandedMonths] = useState<string[]>([])\r\n    const { brandId } = useParams()\r\n\r\n    const date = useMemo(\r\n        () => ({\r\n            from: dateFrom,\r\n            to: dateTo,\r\n        }),\r\n        [dateFrom, dateTo],\r\n    )\r\n\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\"\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\"\r\n\r\n    const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n\r\n    const toggleFullScreen = () => {\r\n        setIsFullScreen(!isFullScreen)\r\n    }\r\n\r\n    const getTableHeight = () => {\r\n        if (isFullScreen) {\r\n            return 'max-h-[calc(100vh-80px)]'\r\n        }\r\n        return 'max-h-[calc(100vh-200px)]'\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n            setError(null)\r\n            try {\r\n                const queryParams: Record<string, string> = {}\r\n\r\n                if (startDate) queryParams.startDate = startDate\r\n                if (endDate) queryParams.endDate = endDate\r\n\r\n                const reportResponse = await axios.get(`${baseURL}/api/report/${brandId}`, {\r\n                    params: queryParams,\r\n                    withCredentials: true,\r\n                })\r\n                const metricsData: MonthlyAggregate[] = reportResponse.data.data\r\n                setMetricsData(metricsData)\r\n            } catch (err) {\r\n                console.error(err)\r\n                setError(\"Failed to fetch data. Please try again later.\")\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [brandId, startDate, endDate, baseURL])\r\n\r\n    const toggleMonth = (monthYear: string) => {\r\n        setExpandedMonths((prev) => \r\n            prev.includes(monthYear) \r\n                ? prev.filter((m) => m !== monthYear) \r\n                : [...prev, monthYear]\r\n        )\r\n    }\r\n\r\n    const formatCurrency = (value: number) => {\r\n        return new Intl.NumberFormat(\"en-IN\", { \r\n            style: \"currency\", \r\n            currency: \"INR\" \r\n        }).format(value)\r\n    }\r\n\r\n    const formatPercentage = (value: number) => {\r\n        return `${value.toFixed(2)}`\r\n    }\r\n\r\n    const processedData = useMemo(() => {\r\n        const safeDivide = (numerator: number, denominator: number) => \r\n            (denominator ? numerator / denominator : 0)\r\n\r\n        return metricsData.map((monthData: MonthlyAggregate) => {\r\n            const processedDailyMetrics = monthData.dailyMetrics.map((daily) => ({\r\n                ...daily,\r\n                metaSales: daily.metaSpend * (daily.metaROAS || 0),\r\n                googleSales: daily.googleSpend * (daily.googleROAS || 0),\r\n                adSales: (daily.totalSpend * daily.grossROI) || 0,\r\n                ROI: safeDivide(daily.totalSales, daily.totalSpend)\r\n            }))\r\n\r\n            const metaSales = processedDailyMetrics.reduce((sum, daily) => sum + daily.metaSales!, 0)\r\n            const googleSales = processedDailyMetrics.reduce((sum, daily) => sum + daily.googleSales!, 0)\r\n            const totalAdSales = (metaSales + googleSales) || 0\r\n\r\n            return {\r\n                ...monthData,\r\n                metaSales,\r\n                googleSales,\r\n                totalAdSales,\r\n                metaROAS: safeDivide(metaSales, monthData.metaSpend),\r\n                googleROAS: safeDivide(googleSales, monthData.googleSpend),\r\n                grossROI: safeDivide(totalAdSales, monthData.totalSpend),\r\n                netROI: safeDivide(monthData.shopifySales, monthData.totalSpend),\r\n                ROI: safeDivide(monthData.totalSales, monthData.totalSpend),\r\n                dailyMetrics: processedDailyMetrics,\r\n            }\r\n        })\r\n    }, [metricsData])\r\n\r\nreturn (\r\n    <div className=\"flex h-screen\">\r\n        <CollapsibleSidebar />\r\n        <div className=\"flex-1 h-screen overflow-hidden bg-gray-100\">\r\n            <Header title=\"Marketing Insights Tracker\" Icon={CalendarRange} showDatePicker={true} />\r\n\r\n            <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : 'm-6'}`}>\r\n                <CardContent>\r\n                    <div className=\"flex flex-row items-center justify-between mb-3\">\r\n                        <div className=\"flex flex-row items-center gap-4\">\r\n                            <h2 className=\"text-lg font-semibold text-gray-900 \">\r\n                                Key Performance Metrics by Month with Daily Drill-Down\r\n                            </h2>\r\n                            <div className=\"flex flex-row gap-2\">\r\n                                <FacebookLogo width={20} height={20} />\r\n                                <GoogleLogo width={20} height={20} />\r\n                                <ShopifyLogo width={20} height={20} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-row items-center gap-3\">\r\n                            {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                <DatePickerWithRange\r\n                                    defaultDate={{\r\n                                        from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                                        to: new Date()\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                                {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {loading ? (\r\n                        <div className=\"flex items-center justify-center h-[calc(100vh-300px)]\">\r\n                            <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-600\"></div>\r\n                        </div>\r\n                    ) : error ? (\r\n                        <div className=\"rounded-lg bg-red-50 p-4 text-red-600 border border-red-200\">{error}</div>\r\n                    ) : (\r\n                        <div className=\"border rounded-lg shadow-sm bg-white overflow-hidden\">\r\n                            <div className={`${getTableHeight()}  overflow-auto`}>\r\n                                <table className={`w-full border-collapse`}>\r\n                                    <thead className=\"sticky top-0 z-20 text-sm\">\r\n                                        <tr>\r\n                                            <th className=\"w-3 bg-gradient-to-r from-gray-100 to-gray-200 border-r border-gray-400 after:content-[''] after:absolute after:bottom-0 after:left-0 after:w-full after:h-0.5 after:bg-blue-500/20\" rowSpan={2} />\r\n                                            <TooltipHeader title=\"Date\" tooltip=\"Date\" rowSpan={2} />\r\n                                            <TooltipHeader title=\"Meta (Facebook & Instagram Ads)\" tooltip=\"Meta Metrics\" colSpan={3} />\r\n                                            <TooltipHeader title=\"Google Ads\" tooltip=\"Google Metrics\" colSpan={3} />\r\n                                            <TooltipHeader title=\"Marketing Performance (Platform-Reported)\" tooltip=\"Marketing Performance (Platform-Reported)\" colSpan={3} />\r\n                                            <TooltipHeader title=\"Shopify (Actual Sales Data)\" tooltip=\"Shopify Metrics\" colSpan={5} />\r\n                                        </tr>\r\n                                        <tr>\r\n\r\n                                            <TooltipHeader title=\"Spend\" tooltip=\"Meta Spent\" isSubHeader />\r\n                                            <TooltipHeader title=\"Sales\" tooltip=\"Meta Sales = Meta Spent * Meta ROAS\" isSubHeader />\r\n                                            <TooltipHeader title=\"ROAS\" tooltip=\"Meta ROAS\" isSubHeader />\r\n                                            <TooltipHeader title=\"Spend\" tooltip=\"Google Spent\" isSubHeader />\r\n                                            <TooltipHeader title=\"Sales\" tooltip=\"Google Sales = Google Spent * Google ROAS\" isSubHeader />\r\n                                            <TooltipHeader title=\"ROAS\" tooltip=\"Google ROAS\" isSubHeader />\r\n\r\n                                            <TooltipHeader\r\n                                                title=\"Spend\"\r\n                                                tooltip=\"Total Spent = Meta Spent + Google Spent\"\r\n                                                isSubHeader\r\n                                            />\r\n                                            <TooltipHeader\r\n                                                title=\"Sales\"\r\n                                                tooltip=\"ROI = (MetaSales + GoogleSales)\"\r\n                                                isSubHeader\r\n                                            />\r\n                                            <TooltipHeader\r\n                                                title=\"ROI\"\r\n                                                tooltip=\"ROI = (MetaSales + GoogleSales)/ Total Spent\"\r\n                                                isSubHeader\r\n                                            />\r\n                                            <TooltipHeader title=\"Net Sales\" tooltip=\"Net Sales = Gross Sales - Discount\" isSubHeader />\r\n                                            <TooltipHeader title=\"Net ROI\" tooltip=\"Total Sales / Total Spend\" isSubHeader />\r\n                                            <TooltipHeader title=\"Returns\" tooltip=\"Returns\" isSubHeader />\r\n                                            <TooltipHeader\r\n                                                title=\"Total Sales\"\r\n                                                tooltip=\"Total Sales = Net Sales - Returns\"\r\n                                                isSubHeader\r\n                                            />\r\n                                            <TooltipHeader title=\"Final ROI\" tooltip=\"Final ROI = Total Sales / Total Spend\" isSubHeader />\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {processedData.map((monthData: any) => {\r\n                                            const monthYear = `${monthData.year}-${monthData.month.toString().padStart(2, \"0\")}`\r\n                                            const isExpanded = expandedMonths.includes(monthYear)\r\n                                            return (\r\n                                                <React.Fragment key={monthYear}>\r\n                                                    <tr\r\n                                                        className={`\r\n                                                        ${isExpanded ? 'bg-blue-100/30 '\r\n                                                                : 'hover:bg-gradient-to-r hover:from-gray-50 hover:to-transparent'} \r\n                                                        border-b border-gray-200 cursor-pointer \r\n                                                        transition-colors text-sm \r\n                                                    `}\r\n                                                        onClick={() => toggleMonth(monthYear)}\r\n                                                    >\r\n                                                        <td className=\"w-3 px-4 py-2\">\r\n                                                            <div className={`\r\n                          w-6 h-6 rounded-full bg-blue-100 flex items-center justify-center\r\n                          transition-all duration-300 transform\r\n                          ${isExpanded ? 'rotate-180 bg-blue-500' : 'hover:bg-blue-200'}\r\n                        `}>\r\n                                                                <ChevronDown className={`w-4 h-4 ${isExpanded ? 'text-white' : 'text-blue-500'}`} />\r\n                                                            </div>\r\n\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-left font-medium whitespace-nowrap\">\r\n                                                            {format(new Date(monthData.year, monthData.month - 1), \"MMM yyyy\")}\r\n                                                        </td>\r\n\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatCurrency(monthData.metaSpend)}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatCurrency(monthData.metaSales)}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatPercentage(monthData.metaROAS)}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatCurrency(monthData.googleSpend)}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatCurrency(monthData.googleSales)}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatPercentage(monthData.googleROAS)}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatCurrency(monthData.totalSpend )}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatCurrency(monthData.totalSpend * monthData.grossROI) || 0}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatPercentage(monthData.grossROI)}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatCurrency(monthData.totalSales)}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatPercentage(monthData.ROI)}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatCurrency(monthData.refundAmount)}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatCurrency(monthData.shopifySales)}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-3 text-right font-medium text-gray-700\">\r\n                                                            {formatPercentage(monthData.netROI)}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    {isExpanded &&\r\n                                                        monthData.dailyMetrics.map((daily: any) => (\r\n                                                            <tr\r\n                                                                key={daily._id}\r\n                                                                className=\"border-b border-gray-100 hover:bg-gray-50 transition-colors\"\r\n                                                            >\r\n                                                                <td className=\"w-5 px-4 py-1.5\" />\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-left text-gray-600\">\r\n                                                                    {format(new Date(daily.date), \"dd/MM/yyyy\")}\r\n                                                                </td>\r\n\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right text-gray-700\">\r\n                                                                    {formatCurrency(daily.metaSpend)}\r\n                                                                </td>\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right text-gray-700\">\r\n                                                                    {formatCurrency(daily.metaSales)}\r\n                                                                </td>\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right  text-gray-700\">\r\n                                                                    {formatPercentage(daily.metaROAS)}\r\n                                                                </td>\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right  text-gray-700\">\r\n                                                                    {formatCurrency(daily.googleSpend)}\r\n                                                                </td>\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right  text-gray-700\">\r\n                                                                    {formatCurrency(daily.googleSales)}\r\n                                                                </td>\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right  text-gray-700\">\r\n                                                                    {formatPercentage(daily.googleROAS)}\r\n                                                                </td>\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right  text-gray-700\">\r\n                                                                    {formatCurrency(daily.totalSpend)}\r\n                                                                </td>\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right  text-gray-700\">\r\n                                                                    {formatCurrency(daily.adSales)}\r\n                                                                </td>\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right  text-gray-700\">\r\n                                                                    {formatPercentage(daily.grossROI)}\r\n                                                                </td>\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right text-gray-700\">\r\n                                                                    {formatCurrency(daily.totalSales)}\r\n                                                                </td>\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right text-gray-700\">\r\n                                                                    {formatPercentage(daily.ROI)}\r\n                                                                </td>\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right text-gray-700\">\r\n                                                                    {formatCurrency(daily.refundAmount)}\r\n                                                                </td>\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right text-gray-700\">\r\n                                                                    {formatCurrency(daily.shopifySales)}\r\n                                                                </td>\r\n                                                                <td className=\"px-4 py-1.5 text-xs text-right text-gray-700\">\r\n                                                                    {formatPercentage(daily.netROI)}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        ))}\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","import * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"@radix-ui/react-icons\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDownIcon className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUpIcon className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDownIcon className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <CheckIcon className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n","import { useState, useEffect, useCallback } from 'react'\r\nimport { PlusCircle, Edit2, X, Trash2 } from 'lucide-react'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\r\nimport { Calendar } from \"@/components/ui/calendar\"\r\nimport { format, endOfMonth } from \"date-fns\"\r\nimport { Bar, BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip } from 'recharts'\r\nimport { useBrand } from '@/context/BrandContext'\r\nimport { cn } from \"@/lib/utils\"\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function BrandPerformanceDashboard() {\r\n  const { brands } = useBrand()\r\n  const [selectedBrands, setSelectedBrands] = useState<Array<{\r\n    brandId: string,\r\n    name: string,\r\n    source: string,\r\n    targetAmount: number,\r\n    targetDate: Date\r\n  }>>([])\r\n  const [newBrand, setNewBrand] = useState({\r\n    brandId: '',\r\n    source: '',\r\n    targetAmount: 0,\r\n    targetDate: endOfMonth(new Date())\r\n  })\r\n  const [editingBrand, setEditingBrand] = useState<string | null>(null)\r\n  const [editData, setEditData] = useState<typeof newBrand | null>(null)\r\n  const [achievedSales, setAchievedSales] = useState<{ [key: string]: number }>({})\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const getAchievedSales = useCallback(async (brandId: string) => {\r\n    try {\r\n      const response = await axios.get(`${baseURL}/api/shopify/dailysales/${brandId}`, { withCredentials: true });\r\n      return response.data.totalSales;\r\n    } catch (error) {\r\n      console.error('Error fetching sales data:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n      return 0;\r\n    }\r\n  }, [navigate]);\r\n  \r\n  const fetchSalesData = useCallback(async () => {\r\n    setIsLoading(true); // Start the loader\r\n    try {\r\n      const salesData: { [key: string]: number } = {};\r\n      await Promise.all(\r\n        selectedBrands.map(async (brand) => {\r\n          salesData[brand.brandId] = await getAchievedSales(brand.brandId);\r\n        })\r\n      );\r\n      setAchievedSales(salesData); // Update state only after all API calls finish\r\n    } catch (error) {\r\n      console.error('Error fetching sales data:', error);\r\n    } finally {\r\n      setIsLoading(false); // Stop the loader\r\n    }\r\n  }, [selectedBrands, getAchievedSales]);\r\n  \r\n  useEffect(() => {\r\n    fetchSalesData();\r\n  }, [fetchSalesData]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setNewBrand(prev => ({ ...prev, [name]: name === 'brandId' ? value : Number(value) }))\r\n  }\r\n\r\n  const handleSourceChange = (value: string) => {\r\n    setNewBrand(prev => ({ ...prev, source: value }))\r\n  }\r\n\r\n  const handleAddBrand = async () => {\r\n\r\n    const brandToAdd = brands.find(b => String(b._id) === String(newBrand.brandId));\r\n\r\n    if (brandToAdd) {\r\n      try {\r\n        const newBrandTarget = {\r\n          brandId: brandToAdd._id,\r\n          name: brandToAdd.name,\r\n          source: newBrand.source,\r\n          targetAmount: newBrand.targetAmount,\r\n          targetDate: newBrand.targetDate,\r\n        };\r\n\r\n        const response = await axios.post(`${baseURL}/api/performance/addTarget`, newBrandTarget, { withCredentials: true });\r\n\r\n        setSelectedBrands(prev => [...prev, response.data]);\r\n        setNewBrand({ brandId: '', source: '', targetAmount: 0, targetDate: endOfMonth(new Date()) });\r\n\r\n      } catch (error) {\r\n        console.error('Error adding brand:', error);\r\n      }\r\n    } else {\r\n      console.log(\"Brand not found\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleEdit = (brandId: string) => {\r\n    const brandToEdit = selectedBrands.find(b => b.brandId === brandId)\r\n    if (brandToEdit) {\r\n      setEditingBrand(brandId)\r\n      setEditData({ ...brandToEdit })\r\n    }\r\n  }\r\n\r\n  const handleSaveEdit = async (brandId: string) => {\r\n    if (editData) {\r\n      try {\r\n        const response = await axios.patch(`${baseURL}/api/performance/updateTarget/${brandId}`, editData, { withCredentials: true });\r\n        setSelectedBrands(prev => prev.map(brand =>\r\n          brand.brandId === brandId ? { ...brand, ...response.data } : brand\r\n        ));\r\n\r\n        setEditingBrand(null);\r\n        setEditData(null);\r\n\r\n        alert('Brand updated successfully!');\r\n      } catch (error) {\r\n        console.error('Error saving brand edit:', error);\r\n        alert('Failed to update brand');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingBrand(null)\r\n    setEditData(null)\r\n  }\r\n\r\n  const handleDelete = async (brandId: string) => {\r\n    try {\r\n      // Make the API call to delete the brand from the database\r\n      await axios.delete(`${baseURL}/api/performance/deleteTarget/${brandId}`, { withCredentials: true });\r\n\r\n      // Remove the brand from the selected brands in state\r\n      setSelectedBrands(prev => prev.filter(brand => brand.brandId !== brandId));\r\n\r\n      console.log('Brand deleted successfully');\r\n    } catch (error) {\r\n      console.error('Error deleting brand:', error);\r\n    }\r\n  };\r\n  const Loader = () => (\r\n    <div className=\"animate-spin rounded-full h-5 w-5 border-t-2 border-blue-500\"></div>\r\n  )\r\n\r\n  const calculateMetrics = (brand: typeof selectedBrands[0]) => {\r\n    const achieved = achievedSales[brand.brandId] || 0\r\n    const remainingTarget = Math.max(brand.targetAmount - achieved, 0)\r\n    const today = new Date()\r\n    today.setHours(0, 0, 0, 0) // Set to start of day\r\n    const targetDate = new Date(brand.targetDate)\r\n    targetDate.setHours(0, 0, 0, 0) // Set to end of day\r\n    const remainingDays = Math.max(Math.ceil((targetDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24)), 0)\r\n    const requiredSalesPerDay = remainingDays > 0 ? remainingTarget / remainingDays : 0\r\n\r\n    return {\r\n      achievedSales: achieved,\r\n      remainingTarget: remainingTarget,\r\n      remainingDays,\r\n      requiredSalesPerDay: requiredSalesPerDay\r\n    }\r\n  }\r\n\r\n  const chartData = selectedBrands.map(brand => {\r\n    const { achievedSales: achieved, remainingTarget } = calculateMetrics(brand)\r\n    return {\r\n      name: brand.name,\r\n      Achieved: achieved,\r\n      Remaining: remainingTarget\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const fetchBranTargets = async () => {\r\n      try {\r\n        const response = await axios.get(`${baseURL}/api/performance/brandTarget`, { withCredentials: true });\r\n        setSelectedBrands(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching brands:', error);\r\n      }\r\n    };\r\n\r\n    fetchBranTargets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen\">\r\n      <nav className=\"bg-white border-b border-gray-200 px-4 py-4 md:px-6 lg:px-8\">\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n          <h1 className=\"text-2xl font-bold\">Brands Performance Metrics</h1>\r\n        </div>\r\n      </nav>\r\n      <div className='container mx-auto p-4'>\r\n        <Card className=\"mb-4\">\r\n          <CardHeader>\r\n            <CardTitle>Add New Brand Target</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n              <div>\r\n                <Label htmlFor=\"brandName\">Brand Name</Label>\r\n                <Select onValueChange={(value) => setNewBrand(prev => ({ ...prev, brandId: value }))}>\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select brand\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {brands.map(brand => (\r\n                      <SelectItem key={brand._id} value={brand._id}>\r\n                        {brand.name}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <Label htmlFor=\"source\">Source</Label>\r\n                <Select onValueChange={handleSourceChange} value={newBrand.source}>\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select source\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"Meta & Google\">Meta & Google</SelectItem>\r\n                    <SelectItem value=\"Meta\">Meta</SelectItem>\r\n                    <SelectItem value=\"Google\">Google</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <Label htmlFor=\"targetAmount\">Target Amount</Label>\r\n                <Input id=\"targetAmount\" name=\"targetAmount\" type=\"number\" value={newBrand.targetAmount} onChange={handleInputChange} placeholder=\"Enter target amount\" />\r\n              </div>\r\n              <div>\r\n                <Label>Target Date</Label>\r\n                <Popover>\r\n                  <PopoverTrigger asChild>\r\n                    <Button\r\n                      variant={\"outline\"}\r\n                      className={cn(\r\n                        \"w-full justify-start text-left font-normal\",\r\n                        !newBrand.targetDate && \"text-muted-foreground\"\r\n                      )}\r\n                    >\r\n                      {newBrand.targetDate ? format(newBrand.targetDate, \"PPP\") : <span>Pick a date</span>}\r\n                    </Button>\r\n                  </PopoverTrigger>\r\n                  <PopoverContent className=\"w-auto p-0\">\r\n                    <Calendar\r\n                      mode=\"single\"\r\n                      selected={newBrand.targetDate}\r\n                      onSelect={(date) => date && setNewBrand(prev => ({ ...prev, targetDate: date }))}\r\n                      initialFocus\r\n                    />\r\n                  </PopoverContent>\r\n                </Popover>\r\n              </div>\r\n              <div className=\"flex items-end\">\r\n                <Button onClick={handleAddBrand} className=\"w-full\">\r\n                  <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Brand Target\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className='mb-4'>\r\n          <CardHeader>\r\n            <CardTitle>Brand Performance Table</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <Table>\r\n              <TableHeader>\r\n                <TableRow>\r\n                  <TableHead>Brand</TableHead>\r\n                  <TableHead>Source</TableHead>\r\n                  <TableHead>Target Amount</TableHead>\r\n                  <TableHead>Target Date</TableHead>\r\n                  <TableHead>Achieved Sales</TableHead>\r\n                  <TableHead>Remaining Target</TableHead>\r\n                  <TableHead>Remaining Days</TableHead>\r\n                  <TableHead>Required Sales/Day</TableHead>\r\n                  <TableHead>Actions</TableHead>\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {selectedBrands.map(brand => {\r\n                  const { achievedSales: achieved, remainingTarget, remainingDays, requiredSalesPerDay } = calculateMetrics(brand)\r\n                  const isEditing = editingBrand === brand.brandId\r\n                  return (\r\n                    <TableRow key={brand.brandId}>\r\n                      <TableCell className=\"font-medium\">{brand.name}</TableCell>\r\n                      <TableCell>\r\n                        {isEditing ? (\r\n                          <Select\r\n                            onValueChange={(value) => setEditData(prev => prev ? { ...prev, source: value } : null)}\r\n                            defaultValue={editData?.source}\r\n                          >\r\n                            <SelectTrigger>\r\n                              <SelectValue placeholder={brand.source} />\r\n                            </SelectTrigger>\r\n                            <SelectContent>\r\n                              <SelectItem value=\"Meta & Google\">Meta & Google</SelectItem>\r\n                              <SelectItem value=\"Meta\">Meta</SelectItem>\r\n                              <SelectItem value=\"Google\">Google</SelectItem>\r\n                            </SelectContent>\r\n                          </Select>\r\n                        ) : (\r\n                          brand.source\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {isEditing ? (\r\n                          <Input\r\n                            type=\"number\"\r\n                            value={editData?.targetAmount}\r\n                            onChange={(e) => setEditData(prev => prev ? { ...prev, targetAmount: Number(e.target.value) } : null)}\r\n                          />\r\n                        ) : (\r\n                          `₹${brand.targetAmount.toLocaleString()}`\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {isEditing ? (\r\n                          <Popover>\r\n                            <PopoverTrigger asChild>\r\n                              <Button variant={\"outline\"}>\r\n                                {editData?.targetDate ? format(editData.targetDate, \"PPP\") : <span>Pick a date</span>}\r\n                              </Button>\r\n                            </PopoverTrigger>\r\n                            <PopoverContent className=\"w-auto p-0\">\r\n                              <Calendar\r\n                                mode=\"single\"\r\n                                selected={editData?.targetDate}\r\n                                onSelect={(date) => date && setEditData(prev => prev ? { ...prev, targetDate: date } : null)}\r\n                                initialFocus\r\n                              />\r\n                            </PopoverContent>\r\n                          </Popover>\r\n                        ) : (\r\n                          format(brand.targetDate, \"PPP\")\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell>{isLoading?<Loader />:`₹${achieved.toLocaleString()}`}</TableCell>\r\n                      <TableCell>{isLoading?<Loader />:`₹${remainingTarget.toLocaleString()}`}</TableCell>\r\n                      <TableCell>{remainingDays}</TableCell>\r\n                      <TableCell>₹{requiredSalesPerDay.toLocaleString()}</TableCell>\r\n                      <TableCell>\r\n                        {isEditing ? (\r\n                          <>\r\n                            <Button onClick={() => handleSaveEdit(brand.brandId)} className=\"mr-2\">Save</Button>\r\n                            <Button onClick={handleCancelEdit} variant=\"outline\"><X className=\"h-4 w-4\" /></Button>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <Button onClick={() => handleEdit(brand.brandId)} className=\"mr-2\"><Edit2 className=\"h-4 w-4\" /></Button>\r\n                            <Button onClick={() => handleDelete(brand.brandId)} variant=\"destructive\"><Trash2 className=\"h-4 w-4\" /></Button>\r\n                          </>\r\n                        )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Sales Progress</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <BarChart data={chartData}>\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Bar dataKey=\"Achieved\" stackId=\"a\" fill=\"#4ade80\" />\r\n                <Bar dataKey=\"Remaining\" stackId=\"a\" fill=\"#f87171\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport BrandPerformanceDashboard from \"./Dashboard\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\";\r\n const PerformanceDashboard : React.FC=()=>{\r\n    return (\r\n        <div className=\"flex h-screen\"> \r\n        <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n        <BrandPerformanceDashboard />\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\nexport default PerformanceDashboard;","import React, { useEffect, useRef, useState, useCallback, useMemo } from 'react'\r\nimport { ArrowUp, ArrowDown, ArrowUpDown, Filter, ChevronLeft, X, CheckCircle, AlertCircle, RefreshCw, BarChart2, Tag, Layers, Package, ChevronDown, ChevronRight } from 'lucide-react';\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Skeleton } from '@/components/ui/skeleton'\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@radix-ui/react-tooltip'\r\nimport { GoogleLogo } from '@/pages/AnalyticsDashboard/AdAccountsMetricsCard'\r\nimport { Button } from '@/components/ui/button'\r\nimport { format } from \"date-fns\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\n\r\ntype Metrics = {\r\n    products: number\r\n    totalCost: number\r\n    ROAS: number,\r\n    conversions: number,\r\n    ConversionValue: number,\r\n    ConversionRate: number,\r\n    totalClicks: number,\r\n    ctr: number,\r\n    AvgCPC: number,\r\n}\r\n\r\ntype Category = {\r\n    name: string\r\n    metrics: Metrics\r\n    subcategories: Category[]\r\n}\r\n\r\ntype ColumnDef = {\r\n    id: string\r\n    header: string\r\n    accessorKey: string\r\n    cell: (value: any) => React.ReactNode\r\n}\r\n\r\ntype TabConfig = {\r\n    id: string\r\n    label: string\r\n    apiEndpoint: string\r\n    columns: ColumnDef[]\r\n    data: any[]\r\n    lastUpdated: number | null,\r\n}\r\n\r\nexport default function ProductTab() {\r\n    const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n    const { brandId } = useParams()\r\n\r\n    const [tabs, setTabs] = useState<TabConfig[]>([\r\n        { id: 'products', label: 'Products', apiEndpoint: `${baseURL}/api/segment/productMetrics/${brandId}`, columns: [], data: [], lastUpdated: null },\r\n        { id: 'categories', label: 'Categories', apiEndpoint: `${baseURL}/api/segment/categoryMetrics/${brandId}`, columns: [], data: [], lastUpdated: null },\r\n        { id: 'brands', label: 'Brands', apiEndpoint: `${baseURL}/api/segment/brandMetrics/${brandId}`, columns: [], data: [], lastUpdated: null },\r\n        { id: 'productTypes', label: 'Product types', apiEndpoint: `${baseURL}/api/segment/typeMetrics/${brandId}`, columns: [], data: [], lastUpdated: null },\r\n    ])\r\n    const [activeTab, setActiveTab] = useState(tabs[0].id)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [expandedCategories, setExpandedCategories] = useState<Set<string>>(new Set())\r\n    const [loading, setLoading] = useState(false)\r\n    const [filterApplied, setFilterApplied] = useState(false);\r\n    const rowsPerPage = 100\r\n    const [filterData, setFilterData] = useState<any>({});\r\n    const cacheRef = useRef<{ [key: string]: { data: any; timestamp: number } }>({});\r\n    const POLL_INTERVAL = 5 * 60 * 1000;\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    // Sorting state\r\n    const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n    const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\r\n\r\n    const handleTabChange = (newTabId: string) => {\r\n        setActiveTab(newTabId);\r\n        setCurrentPage(1);\r\n        setExpandedCategories(new Set());\r\n    };\r\n\r\n    const fetchTabData = useCallback(\r\n        async (tabId: string, body: Record<string, any> = {}, isFilterApplied: boolean = false) => {\r\n            if (loading) return;\r\n\r\n            setLoading(true);\r\n\r\n            const tab = tabs.find(t => t.id === tabId);\r\n            if (!tab) {\r\n                console.warn(`Tab not found for ID: ${tabId}`);\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            const updatedBody = {\r\n                ...body,\r\n                ...(startDate && { startDate }),\r\n                ...(endDate && { endDate }),\r\n            };\r\n\r\n            const cacheKey = `${tabId}-${startDate || \"default\"}-${endDate || \"default\"}`;\r\n            const cachedData = cacheRef.current[cacheKey];\r\n            const now = Date.now();\r\n\r\n            if (!isFilterApplied && tabId === 'products') {\r\n                delete cacheRef.current[cacheKey];\r\n            }\r\n\r\n            if (!isFilterApplied && cachedData && now - cachedData.timestamp < POLL_INTERVAL) {\r\n                setTabs(prevTabs =>\r\n                    prevTabs.map(t =>\r\n                        t.id === tabId ? { ...t, data: cachedData.data, lastUpdated: cachedData.timestamp } : t\r\n                    )\r\n                );\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await axios.post(tab.apiEndpoint, updatedBody, { withCredentials: true });\r\n\r\n                if (response.data.success) {\r\n                    const result = response.data;\r\n                    const data = result[`${tabId}Data`] || [];\r\n                    console.log(\"New Data for Tab:\", tabId, data);\r\n\r\n                    const columns: ColumnDef[] = Object.keys(data[0] || {}).map(key => ({\r\n                        id: key,\r\n                        header: key.charAt(0).toUpperCase() + key.slice(1),\r\n                        accessorKey: key,\r\n                        cell: (value: any) => {\r\n                            if (key === 'issues' && Array.isArray(value)) {\r\n                                return value.length > 0 ? value[0].description : 'No issues';\r\n                            }\r\n                            return String(value);\r\n                        },\r\n                    }));\r\n\r\n                    console.log(\"Columns for Tab:\", columns);\r\n\r\n                    setTabs(prevTabs =>\r\n                        prevTabs.map(t =>\r\n                            t.id === tabId ? { ...t, columns, data, lastUpdated: now } : t\r\n                        )\r\n                    );\r\n\r\n                    cacheRef.current[cacheKey] = { data, timestamp: now };\r\n                } else {\r\n                    console.error(`Failed to fetch data for ${tabId}`);\r\n                }\r\n            } catch (error) {\r\n                console.error(`Error fetching data for ${tabId}:`, error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        },\r\n        [tabs, loading, cacheRef, startDate, endDate]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const requestBody = {\r\n            ...filterData,\r\n            ...(startDate && { startDate }),\r\n            ...(endDate && { endDate }),\r\n        };\r\n\r\n        fetchTabData(activeTab, filterApplied ? requestBody : {}, filterApplied ? true : false);\r\n    }, [activeTab, date, filterApplied, filterData]);\r\n\r\n    const handleRowClick = (currentTab: string, rowData: Record<string, any>) => {\r\n        const tabColumnMapping: Record<string, string> = {\r\n            brands: 'Brand', // Column name to fetch value when on Brand tab\r\n            productTypes: 'Type', // Column name to fetch value when on Product types tab\r\n            categories: 'name', // Column name to fetch value when on Categories tab\r\n            products: 'status'\r\n        };\r\n\r\n        const bodyKeyMapping: Record<string, string> = {\r\n            brands: 'brands', // Key to send in the API request body when on Brand tab\r\n            productTypes: 'productType', // Key to send in the API request body when on Product types tab\r\n            categories: 'categoryName', // Key to send in the API request body when on Categories tab\r\n            products: 'status'\r\n        };\r\n\r\n        const columnToFetch = tabColumnMapping[currentTab];\r\n        const bodyKey = bodyKeyMapping[currentTab];\r\n\r\n        if (columnToFetch && bodyKey) {\r\n            const valueToSend = rowData[columnToFetch]; // Get value from the row based on the column name\r\n\r\n            if (valueToSend) {\r\n                const filterPayload: Record<string, any> = {\r\n                    [bodyKey]: valueToSend, // Add the main key-value pair\r\n                };\r\n\r\n                // Add the additional key for the 'categories' tab\r\n                if (currentTab === 'categories' && rowData.level) {\r\n                    filterPayload['categoryLevel'] = rowData.level; // Add the additional key\r\n                }\r\n\r\n                // Set filter state\r\n                setFilterData(filterPayload); // Set custom filter data\r\n                setFilterApplied(true); // Mark filter as applied\r\n                setActiveTab('products'); // Switch to the Products tab\r\n            } else {\r\n                console.warn(`No value found for column \"${columnToFetch}\" in row`, rowData);\r\n            }\r\n        } else {\r\n            console.warn(`No column or body key mapping found for tab: ${currentTab}`);\r\n        }\r\n    };\r\n\r\n    const toggleCategory = (categoryPath: string) => {\r\n        setExpandedCategories(prev => {\r\n            const newSet = new Set(prev)\r\n            if (newSet.has(categoryPath)) {\r\n                newSet.delete(categoryPath)\r\n            } else {\r\n                newSet.add(categoryPath)\r\n            }\r\n            return newSet\r\n        })\r\n    }\r\n\r\n    const renderCategoryRow = (category: Category, depth: number = 0, path: string = '') => {\r\n        const currentPath = path ? `${path}.${category.name}` : category.name\r\n        const isExpanded = expandedCategories.has(currentPath)\r\n\r\n        return (\r\n            <React.Fragment key={currentPath}>\r\n                <tr className={`${isExpanded ? 'bg-gray-100' : 'bg-white'}`}>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm flex items-center\">\r\n                        <div style={{ marginLeft: `${depth * 20}px` }} onClick={() => toggleCategory(currentPath)} className=\"flex items-center cursor-pointer\">\r\n                            {category.subcategories.length > 0 && (\r\n                                <button className=\"mr-2\">\r\n                                    {isExpanded ? <ChevronDown className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\r\n                                </button>\r\n                            )}\r\n                            {category.name}\r\n                        </div>\r\n                    </td>\r\n                    <td\r\n                        className=\"px-4 py-2 whitespace-nowrap text-sm cursor-pointer text-blue-500 underline\"\r\n                        onClick={() => handleRowClick(activeTab, category)} // Adding handleRowClick to the Products column\r\n                    >\r\n                        {category.metrics.products}\r\n                    </td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.totalCost}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.ROAS}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.conversions}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.ConversionValue}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.ConversionRate}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.totalClicks}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.ctr}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.AvgCPC}</td>\r\n                </tr>\r\n                {isExpanded &&\r\n                    category.subcategories.map(subCategory =>\r\n                        renderCategoryRow(subCategory, depth + 1, currentPath)\r\n                    )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    const handleSort = (columnId: string) => {\r\n        if (sortColumn === columnId) {\r\n            setSortOrder(prevOrder => (prevOrder === 'asc' ? 'desc' : 'asc'));\r\n        } else {\r\n            setSortColumn(columnId);\r\n            setSortOrder('asc');\r\n        }\r\n    };\r\n    const getCurrentTabData = () => {\r\n        const currentTab = tabs.find(tab => tab.id === activeTab)\r\n        if (!currentTab || currentTab.id === 'categories') return { columns: [], data: [] }\r\n\r\n        let sortedData = currentTab.data;\r\n\r\n        if (sortColumn) {\r\n            sortedData = [...sortedData].sort((a, b) => {\r\n                const aValue = a[sortColumn];\r\n                const bValue = b[sortColumn];\r\n\r\n                if (typeof aValue === 'number' && typeof bValue === 'number') {\r\n                    return sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\r\n                }\r\n\r\n                const stringA = String(aValue || '').toLowerCase();\r\n                const stringB = String(bValue || '').toLowerCase();\r\n\r\n                if (stringA < stringB) return sortOrder === 'asc' ? -1 : 1;\r\n                if (stringA > stringB) return sortOrder === 'asc' ? 1 : -1;\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        const startIndex = (currentPage - 1) * rowsPerPage;\r\n        const endIndex = startIndex + rowsPerPage;\r\n        return {\r\n            columns: currentTab.columns,\r\n            data: sortedData.slice(startIndex, endIndex),\r\n        };\r\n    }\r\n\r\n    const { columns, data } = getCurrentTabData()\r\n    const totalPages = Math.ceil((tabs.find(tab => tab.id === activeTab)?.data.length || 0) / rowsPerPage)\r\n\r\n    const categoryColumns = [\r\n        { id: 'name', header: 'Name' },\r\n        { id: 'products', header: 'Products' },\r\n        { id: 'totalCost', header: 'Cost' },\r\n        { id: 'ROAS', header: 'ROAS' },\r\n        { id: 'conversions', header: 'Conversions' },\r\n        { id: 'ConversionValue', header: 'Conv. Value' },\r\n        { id: 'ConversionRate', header: 'Conv. Rate' },\r\n        { id: 'totalClicks', header: 'Clicks' },\r\n        { id: 'ctr', header: 'CTR' },\r\n        { id: 'AvgCPC', header: 'Avg CPC' },\r\n    ]\r\n\r\n    function TableSkeleton() {\r\n        return (\r\n            <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full table-auto border-collapse\">\r\n                    <thead>\r\n                        <tr>\r\n                            {['w-24', 'w-32', 'w-32', 'w-24', 'w-24', 'w-24'].map((width, index) => (\r\n                                <th key={index} className=\"px-4 py-2 border-b\">\r\n                                    <Skeleton className={`h-4 ${width}`} />\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Array.from({ length: 8 }).map((_, index) => (\r\n                            <tr key={index}>\r\n                                {['w-24', 'w-32', 'w-32', 'w-24', 'w-24', 'w-24'].map((width, idx) => (\r\n                                    <td key={idx} className=\"px-4 py-2 border-b\">\r\n                                        <Skeleton className={`h-4 ${width}`} />\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n    <div className='w-full'>\r\n        <div className='flex flex-row gap-2 items-center mb-4'>\r\n            <GoogleLogo />\r\n            <h1 className='text-xl font-bold text-gray-800'>Google Ads Product Insights</h1>\r\n        </div>\r\n        <div className='bg-white p-6 rounded-xl shadow-lg border border-gray-200'>\r\n            <div className=\"flex items-center justify-between border-b border-gray-200 pb-2 mb-2\">\r\n                <div className=\"flex space-x-2\" role=\"tablist\">\r\n                    {tabs.map(tab => (\r\n                        <Button\r\n                            key={tab.id}\r\n                            variant={activeTab === tab.id ? \"default\" : \"ghost\"}\r\n                            onClick={() => handleTabChange(tab.id)}\r\n                            className=\"relative\"\r\n                        >\r\n                            {tab.id === 'products' && <Package className=\"w-4 h-4 mr-2\" />}\r\n                            {tab.id === 'categories' && <Layers className=\"w-4 h-4 mr-2\" />}\r\n                            {tab.id === 'brands' && <Tag className=\"w-4 h-4 mr-2\" />}\r\n                            {tab.id === 'productTypes' && <BarChart2 className=\"w-4 h-4 mr-2\" />}\r\n                            {tab.label}\r\n                            {activeTab === tab.id && (\r\n                                <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-blue-600\" />\r\n                            )}\r\n                        </Button>\r\n                    ))}\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                    <DatePickerWithRange\r\n                      \r\n                    />\r\n                    <Button variant=\"outline\" size=\"icon\">\r\n                        <Filter className={`h-4 w-4 ${filterApplied ? 'text-blue-600' : 'text-gray-600'}`} />\r\n                    </Button>\r\n                    <TooltipProvider>\r\n                        <Tooltip>\r\n                            <TooltipTrigger asChild>\r\n                                <Button variant=\"outline\" size=\"icon\" onClick={() => fetchTabData(activeTab, {}, false)}>\r\n                                    <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                </Button>\r\n                            </TooltipTrigger>\r\n                            {tabs.find(t => t.id === activeTab)?.lastUpdated && (\r\n                                <TooltipContent>\r\n                                    <p>Last updated: {new Date(tabs.find(t => t.id === activeTab)?.lastUpdated || 0).toLocaleString()}</p>\r\n                                </TooltipContent>\r\n                            )}\r\n                        </Tooltip>\r\n                    </TooltipProvider>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='space-y-4'>\r\n                {filterApplied && (\r\n                    <div className=\"flex items-center gap-2 w-fit p-2 bg-blue-50 rounded-full\">\r\n                        <span className=\"text-xs font-medium text-blue-700\">{Object.entries(filterData).map(([key, value]) => `${key}: ${value}`).join(', ')}</span>\r\n                        <Button\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            onClick={() => {\r\n                                setFilterApplied(false);\r\n                                setFilterData({});\r\n                                setActiveTab('products');\r\n                                cacheRef.current['products'] = null as any;\r\n                                fetchTabData('products', {}, false);\r\n                            }}\r\n                            className=\"text-blue-700 hover:text-blue-800 hover:bg-blue-100 p-1 h-auto\"\r\n                        >\r\n                            <X className=\"h-3 w-3\" />\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n                <div className=\"rounded-md border border-gray-200 overflow-hidden\">\r\n                    <div className=\"max-h-[350px] overflow-auto\">\r\n                        {loading ? <TableSkeleton /> : (\r\n                            <table className=\"w-full\">\r\n                                <thead className=\"sticky top-0 z-10 bg-[#4A628A]\">\r\n                                    <tr>\r\n                                        {(activeTab === 'categories' ? categoryColumns : columns).map(column => (\r\n                                            <th key={column.id} className=\"px-4 py-3 text-left text-xs font-medium text-gray-50 uppercase tracking-wider min-w-[150px] cursor-pointer\" onClick={() => handleSort(column.id)}>\r\n                                            <div className=\"flex items-center gap-1\">\r\n                                                {column.header}\r\n                                                {sortColumn === column.id ? (\r\n                                                    sortOrder === 'asc' ? <ArrowUp className=\"h-4 w-4\" /> : <ArrowDown className=\"h-4 w-4\" />\r\n                                                ) : (\r\n                                                    <ArrowUpDown className=\"h-4 w-4\" />\r\n                                                )}\r\n                                            </div>\r\n                                        </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                    {activeTab === 'categories' ? (\r\n                                        tabs.find(tab => tab.id === 'categories')?.data.map((category: Category) =>\r\n                                            renderCategoryRow(category)\r\n                                        )\r\n                                    ) : (\r\n                                        data.map((row, i) => (\r\n                                            <tr key={i} className=\"hover:bg-gray-50\">\r\n                                                {columns.map((column) => {\r\n                                                    const value = column.cell(row[column.accessorKey]);\r\n                                                    const isIssuesColumn = column.id === 'issues';\r\n                                                    const isProductColumn = column.id === 'Products';\r\n                                                    const isStatusColumn = column.id === 'status';\r\n                                                    const isNoIssues = typeof value === 'string' && value.trim().toLowerCase() === 'no issues';\r\n\r\n                                                    const getStatusColor = (status: string) => {\r\n                                                        switch (status.trim().toUpperCase()) {\r\n                                                            case \"UNSPECIFIED\": return 'bg-gray-100 text-gray-800';\r\n                                                            case \"UNKNOWN\": return 'bg-yellow-100 text-yellow-800';\r\n                                                            case \"NOT_ELIGIBLE\": return 'bg-red-100 text-red-800';\r\n                                                            case \"ELIGIBLE_LIMITED\": return 'bg-orange-100 text-orange-800';\r\n                                                            case \"ELIGIBLE\": return 'bg-green-100 text-green-800';\r\n                                                            default: return 'bg-gray-100 text-gray-700';\r\n                                                        }\r\n                                                    };\r\n\r\n                                                    const renderCell = () => {\r\n                                                        if (isIssuesColumn) {\r\n                                                            return (\r\n                                                                <div className={`flex items-center ${isNoIssues ? 'text-green-600' : 'text-red-600'}`}>\r\n                                                                    {isNoIssues ? <CheckCircle className=\"w-4 h-4 mr-2\" /> : <AlertCircle className=\"w-4 h-4 mr-2\" />}\r\n                                                                    {value}\r\n                                                                </div>\r\n                                                            );\r\n                                                        }\r\n\r\n                                                        if (isStatusColumn) {\r\n                                                            const statusValue = value ? String(value) : '';\r\n                                                            const colorClass = getStatusColor(statusValue);\r\n                                                            return (\r\n                                                                <div className={`px-2 py-1.5 rounded-full text-xs font-medium w-full ${colorClass} cursor-pointer`} onClick={() => handleRowClick(activeTab, row)}>\r\n                                                                    {statusValue}\r\n                                                                </div>\r\n                                                            );\r\n                                                        }\r\n                                                        return column.cell ? column.cell(value) : value;\r\n                                                    };\r\n\r\n                                                    return (\r\n                                                        <td\r\n                                                            key={column.id}\r\n                                                            className={`px-4 py-2.5 text-sm whitespace-nowrap min-w-[150px] ${isProductColumn ? 'cursor-pointer text-blue-600 hover:text-blue-800' : ''}`}\r\n                                                            onClick={() => isProductColumn && handleRowClick(activeTab, row)}\r\n                                                        >\r\n                                                            {renderCell()}\r\n                                                        </td>\r\n                                                    );\r\n                                                })}\r\n                                            </tr>\r\n                                        ))\r\n                                    )}\r\n                                    {(activeTab === 'categories' ? tabs.find(tab => tab.id === 'categories')?.data.length === 0 : data.length === 0) && (\r\n                                        <tr>\r\n                                            <td\r\n                                                colSpan={(activeTab === 'categories' ? categoryColumns : columns).length}\r\n                                                className=\"px-4 py-2 text-sm text-gray-500 text-center\"\r\n                                            >\r\n                                                No data available\r\n                                            </td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between px-4 py-3 bg-gray-50 border-t border-gray-200\">\r\n                        <div className=\"text-sm text-gray-700\">\r\n                            Showing {((currentPage - 1) * rowsPerPage) + 1} to {Math.min(currentPage * rowsPerPage, tabs.find(t => t.id === activeTab)?.data.length || 0)} of {tabs.find(t => t.id === activeTab)?.data.length || 0} entries\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                            <Button\r\n                                variant=\"outline\"\r\n                                size=\"sm\"\r\n                                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\r\n                                disabled={currentPage === 1}\r\n                            >\r\n                                <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n                                Previous\r\n                            </Button>\r\n                            <div className=\"text-sm text-gray-700\">\r\n                                Page {currentPage} of {totalPages}\r\n                            </div>\r\n                            <Button\r\n                                variant=\"outline\"\r\n                                size=\"sm\"\r\n                                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\r\n                                disabled={currentPage === totalPages}\r\n                            >\r\n                                Next\r\n                                <ChevronRight className=\"h-4 w-4 ml-1\" />\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n};      ","import { Table, TableBody, TableCell, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Skeleton } from \"@/components/ui/skeleton\"\r\nexport const TableSkeleton = () => (\r\n    <Table className=\"text-center min-w-full\">\r\n      <TableHeader className=\"bg-gray-200 sticky top-0 z-10\">\r\n        <TableRow>\r\n          {Array(8).fill(0).map((_, index) => (\r\n            <TableCell key={index} className=\"font-bold px-4 text-black min-w-[150px]\">\r\n              <Skeleton className=\"h-6 w-full\" />\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHeader>\r\n      <TableBody>\r\n        {Array(10).fill(0).map((_, rowIndex) => (\r\n          <TableRow key={rowIndex}>\r\n            {Array(8).fill(0).map((_, cellIndex) => (\r\n              <TableCell key={cellIndex} className=\"px-4 py-2 max-w-[200px]\">\r\n                <Skeleton className=\"h-6 w-full\" />\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  )","import { GoogleLogo } from \"@/pages/AnalyticsDashboard/AdAccountsMetricsCard\";\r\nimport { useState, useEffect, useCallback, useMemo } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ChevronLeft, ChevronRight, Search, Filter, RefreshCw, Zap, DollarSign, Percent, MousePointer, CreditCard, TrendingUp, Target, Users, Megaphone, ArrowUp, ArrowDown, ArrowUpDown } from 'lucide-react';\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { format } from \"date-fns\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\n\r\ninterface SearchTerm {\r\n  id: string;\r\n  searchTerm: string\r\n  matchType: string\r\n  status: string\r\n  campaignName: string\r\n  adGroup: string\r\n  impressions: number\r\n  clicks: number\r\n  ctr: string\r\n  cost: string\r\n  performance: string\r\n}\r\n\r\ninterface CampaignAdGroupPair {\r\n  campaignName: string;\r\n  adGroups: string[];\r\n}\r\n\r\nexport default function SearchTermTable() {\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n  const { brandId } = useParams();\r\n  const [searchTerms, setSearchTerms] = useState<SearchTerm[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [hasMoreData, setHasMoreData] = useState(true);\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [campaignAdGroupPairs, setCampaignAdGroupPairs] = useState<CampaignAdGroupPair[]>([]);\r\n  const [selectedCampaign, setSelectedCampaign] = useState<string>('all');\r\n  const [statusOptions, setStatusOptions] = useState<[]>([]);\r\n  const [selectedAdGroup, setSelectedAdGroup] = useState<string>('all');\r\n  const [selectedStatus, setSelectedStatus] = useState<string>('all');\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const rowsPerPage = 100;\r\n\r\n  const columns = [\r\n    { id: 'searchTerm', header: 'Search Term', icon: <Search className=\"w-4 h-4\" /> },\r\n    { id: 'matchType', header: 'Match Type', icon: <Zap className=\"w-4 h-4\" /> },\r\n    { id: 'status', header: 'Status', icon: <Filter className=\"w-4 h-4\" /> },\r\n    { id: 'campaignName', header: 'Campaign Name', icon: <Megaphone className=\"w-4 h-4\" /> },\r\n    { id: 'adGroupName', header: 'Ad Group', icon: <Users className=\"w-4 h-4\" /> },\r\n    { id: 'cost', header: 'Cost', icon: <DollarSign className=\"w-4 h-4\" /> },\r\n    { id: 'conversions', header: 'Conversions', icon: <Target className=\"w-4 h-4\" /> },\r\n    { id: 'conversionsValue', header: 'Conv. Value', icon: <TrendingUp className=\"w-4 h-4\" /> },\r\n    { id: 'conversionsRate', header: 'Conv. Rate', icon: <Percent className=\"w-4 h-4\" /> },\r\n    { id: 'clicks', header: 'Clicks', icon: <MousePointer className=\"w-4 h-4\" /> },\r\n    { id: 'ctr', header: 'CTR', icon: <Percent className=\"w-4 h-4\" /> },\r\n    { id: 'avg_cpc', header: 'Avg. CPC', icon: <CreditCard className=\"w-4 h-4\" /> },\r\n  ]\r\n\r\n  const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\r\n\r\n  const handleSort = (column: string) => {\r\n    if (sortColumn === column) {\r\n      setSortOrder(prevOrder => prevOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortColumn(column);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  const sortedSearchTerms = useMemo(() => {\r\n    if (!sortColumn) return searchTerms;\r\n\r\n    return [...searchTerms].sort((a, b) => {\r\n      const aValue = a[sortColumn as keyof SearchTerm];\r\n      const bValue = b[sortColumn as keyof SearchTerm];\r\n\r\n      // Handle numeric comparisons\r\n      if (typeof aValue === 'number' && typeof bValue === 'number') {\r\n        return sortOrder === 'asc' \r\n          ? aValue - bValue \r\n          : bValue - aValue;\r\n      }\r\n\r\n      // String comparison (case-insensitive)\r\n      const stringA = String(aValue).toLowerCase();\r\n      const stringB = String(bValue).toLowerCase();\r\n\r\n      if (stringA < stringB) return sortOrder === 'asc' ? -1 : 1;\r\n      if (stringA > stringB) return sortOrder === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n  }, [searchTerms, sortColumn, sortOrder]);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Prepare request body\r\n      const requestBody = {\r\n        limit: rowsPerPage,\r\n        page: currentPage,\r\n        startDate,\r\n        endDate,\r\n        ...(selectedCampaign && selectedCampaign !== 'all' && { campaign: selectedCampaign }),\r\n        ...(selectedAdGroup && selectedAdGroup !== 'all' && { adGroup: selectedAdGroup }),\r\n        ...(selectedStatus && selectedStatus !== 'all' && { status: selectedStatus }),\r\n      };\r\n\r\n      // Make API request\r\n      const { data: response } = await axios.post(\r\n        `${baseURL}/api/segment/searchTermMetrics/${brandId}`,\r\n        requestBody,\r\n        { withCredentials: true }\r\n      );\r\n\r\n      if (response.success) {\r\n        // Set data in state\r\n        setSearchTerms(response.data);\r\n        setTotalRecords(response.totalRecords);\r\n        setTotalPages(response.totalPages);\r\n        setHasMoreData(currentPage * rowsPerPage < response.totalRecords);\r\n        setCampaignAdGroupPairs(response.campaignAdGroupPairs);\r\n        setStatusOptions(response.statusOptions)\r\n      } else {\r\n        console.error('Failed to fetch search term metrics:', response.message);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching search term metrics:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [\r\n    baseURL,\r\n    brandId,\r\n    currentPage,\r\n    rowsPerPage,\r\n    selectedCampaign,\r\n    selectedAdGroup,\r\n    selectedStatus,\r\n    startDate,\r\n    endDate\r\n  ]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 300000);\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  const handleCampaignChange = (value: string) => {\r\n    setSelectedCampaign(value);\r\n    setSelectedAdGroup('all');\r\n    setCurrentPage(1)\r\n  };\r\n\r\n  const handleAdGroupChange = (value: string) => {\r\n    setSelectedAdGroup(value);\r\n    setCurrentPage(1)\r\n  };\r\n\r\n  const handleStatusChange = (value: string) => {\r\n    setSelectedStatus(value);\r\n    setCurrentPage(1)\r\n  };\r\n\r\n  const filteredAdGroups = selectedCampaign !== 'all'\r\n    ? campaignAdGroupPairs?.find(pair => pair.campaignName === selectedCampaign)?.adGroups || []\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"flex flex-row gap-2 items-center mb-4\">\r\n        <GoogleLogo />\r\n        <h1 className=\"text-xl font-bold text-gray-800\">Google Ads Search Term Insights</h1>\r\n      </div>\r\n      <div className=\"bg-white rounded-xl overflow-hidden border border-gray-200 shadow-md\">\r\n        <div className=\"p-4\">\r\n          <div className=\"flex justify-between mb-4\">\r\n            <Popover>\r\n              <PopoverTrigger asChild>\r\n                <Button variant=\"outline\" className=\"bg-white border-gray-300 hover:bg-gray-50 transition-colors duration-200\">\r\n                  <Filter className=\"w-4 h-4 mr-2\" />\r\n                  Filter\r\n                </Button>\r\n              </PopoverTrigger>\r\n              <PopoverContent className=\"w-80\">\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <h3 className=\"font-medium mb-2\">Status</h3>\r\n                    <Select onValueChange={handleStatusChange} value={selectedStatus}>\r\n                      <SelectTrigger className=\"w-full\">\r\n                        <SelectValue placeholder=\"Select Status\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"all\">All Status</SelectItem>\r\n                        {statusOptions.map((status) => (\r\n                          <SelectItem key={status} value={status}>{status}</SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-medium mb-2\">Campaign</h3>\r\n                    <Select onValueChange={handleCampaignChange} value={selectedCampaign}>\r\n                      <SelectTrigger className=\"w-full\">\r\n                        <SelectValue placeholder=\"Select Campaign\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"all\">All Campaigns</SelectItem>\r\n                        {campaignAdGroupPairs.map((pair) => (\r\n                          <SelectItem key={pair.campaignName} value={pair.campaignName}>{pair.campaignName}</SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  {selectedCampaign !== 'all' && (\r\n                    <div>\r\n                      <h3 className=\"font-medium mb-2\">Ad Group</h3>\r\n                      <Select\r\n                        disabled={selectedCampaign === 'all'}\r\n                        onValueChange={handleAdGroupChange}\r\n                        value={selectedAdGroup}\r\n                      >\r\n                        <SelectTrigger className=\"w-full\">\r\n                          <SelectValue placeholder=\"Select Ad Group\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"all\">All Ad Groups</SelectItem>\r\n                          {filteredAdGroups.map((adGroup) => (\r\n                            <SelectItem key={adGroup} value={adGroup}>{adGroup}</SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </PopoverContent>\r\n            </Popover>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <DatePickerWithRange\r\n              \r\n              />\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"bg-gray-50 text-gray-600 border-gray-200 hover:bg-gray-100\"\r\n                onClick={fetchData}\r\n              >\r\n                <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n                Refresh\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"rounded-md border border-gray-200 overflow-hidden\">\r\n            <div className=\"max-h-[380px] overflow-auto rounded-lg\">\r\n              {loading ? (\r\n                <TableSkeleton />\r\n              ) : (\r\n                <table className=\"w-full text-center\">\r\n                  <thead className=\"sticky top-0 z-10 bg-[#4A628A] rounded-t-lg\">\r\n                    <tr>\r\n                      {columns.map((column) => (\r\n                        <th\r\n                          key={column.id}\r\n                          className=\"px-4 py-3 text-xs font-medium text-gray-50 uppercase tracking-wider min-w-[200px] cursor-pointer\"\r\n                          onClick={() => handleSort(column.id)}\r\n                        >\r\n                          <div className=\"flex items-center justify-center gap-1\">\r\n                            {column.icon}\r\n                            {column.header}\r\n                            {sortColumn === column.id ? (\r\n                              sortOrder === 'asc' ? <ArrowUp className=\"ml-1 w-4 h-6 text-[#ffffff]\" /> : <ArrowDown className=\"ml-1 w-4 h-6 text-[#ffffff]\" />\r\n                            ) : (\r\n                              <ArrowUpDown className=\"ml-1 w-4 h-6 text-gray-300\" />\r\n                            )}\r\n                          </div>\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {sortedSearchTerms.map((row, i) => (\r\n                      <tr key={i} className=\"hover:bg-gray-50 transition-colors duration-150\">\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id as keyof SearchTerm];\r\n                          const isStatusColumn = column.id === 'status';\r\n                          const isSearchTermColumn = column.id === 'searchTerm'\r\n\r\n                          const renderCell = () => {\r\n                            if (isStatusColumn) {\r\n                              const statusValue = value ? String(value) : '';\r\n                              const getStatusColor = (status: string) => {\r\n                                switch (status.trim().toUpperCase()) {\r\n                                  case 'ADDED':\r\n                                    return 'bg-green-100 text-green-800';\r\n                                  case 'NONE':\r\n                                    return 'bg-yellow-100 text-yellow-800';\r\n                                  default:\r\n                                    return 'bg-gray-100 text-gray-800';\r\n                                }\r\n                              };\r\n                              const colorClass = getStatusColor(statusValue);\r\n\r\n                              return (\r\n                                <div className={`px-2 py-1 rounded-full text-xs font-medium ${colorClass}`}>\r\n                                  {statusValue}\r\n                                </div>\r\n                              );\r\n                            }\r\n\r\n                            if (isSearchTermColumn) {\r\n                              const searchTermValue = value ? String(value) : '';\r\n                              const performance = row.performance;\r\n                              const isPerformingWell = performance === 'Best Performing Keyword';\r\n\r\n                              return (\r\n                                <div className=\"px-2 py-1 rounded-full font-medium flex flex-col items-center\">\r\n                                  <span className={`text-xs ${isPerformingWell ? 'text-green-600' : 'text-red-600'}`}>\r\n                                    {performance}\r\n                                  </span>\r\n                                  <span className=\"text-sm mt-1\">{searchTermValue}</span>\r\n                                </div>\r\n                              );\r\n                            }\r\n\r\n                            return value;\r\n                          };\r\n\r\n                          return (\r\n                            <td\r\n                              key={column.id}\r\n                              className=\"px-4 py-2.5 text-sm min-w-[200px]\"\r\n                            >\r\n                              {renderCell()}\r\n                            </td>\r\n                          );\r\n                        })}\r\n                      </tr>\r\n                    ))}\r\n                    {searchTerms.length === 0 && (\r\n                      <tr>\r\n                        <td\r\n                          colSpan={columns.length}\r\n                          className=\"px-4 py-2 text-sm text-gray-500 text-center\"\r\n                        >\r\n                          No data available\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              )}\r\n            </div>\r\n            <div className=\"flex items-center justify-between px-4 py-3 bg-gray-50\">\r\n              <div className=\"text-sm text-gray-600\">\r\n                Showing {((currentPage - 1) * rowsPerPage) + 1} to{' '}\r\n                {Math.min(currentPage * rowsPerPage, totalRecords || 0)} of{' '}\r\n                {totalRecords || 0} entries\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n                  disabled={currentPage === 1}\r\n                  className=\"text-gray-600 border-gray-200 hover:bg-gray-50\"\r\n                >\r\n                  <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n                  Previous\r\n                </Button>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Page {currentPage} of {totalPages}\r\n                </div>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  onClick={() => setCurrentPage((prev) => prev + 1)}\r\n                  disabled={!hasMoreData}\r\n                  className=\"text-gray-600 border-gray-200 hover:bg-gray-50\"\r\n                >\r\n                  Next\r\n                  <ChevronRight className=\"h-4 w-4 ml-1\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { ChevronLeft, ChevronRight, RefreshCw, Package, Layers, ArrowUp, ArrowDown, ArrowUpDown, Filter } from 'lucide-react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Button } from '@/components/ui/button';\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, Legend } from 'recharts';\r\nimport { format } from \"date-fns\";\r\nimport { GoogleLogo } from '@/pages/AnalyticsDashboard/AdAccountsMetricsCard';\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\n\r\ntype TabConfig = {\r\n    id: string;\r\n    label: string;\r\n    apiEndpoint: string;\r\n    columns: ColumnDef[];\r\n    data: any[];\r\n    lastUpdated: number | null;\r\n    totalPages?: number;\r\n    currentPage?: number;\r\n    campaignAdGroupPairs?: CampaignAdGroupPair[];\r\n};\r\n\r\ntype CampaignAdGroupPair = {\r\n    campaignName: string;\r\n    adGroups: string[];\r\n};\r\n\r\ntype ColumnDef = {  \r\n    id: string;\r\n    header: string;\r\n    accessorKey: string;\r\n    cell: (value: any) => React.ReactNode;\r\n};\r\n\r\ntype MetricKey = keyof typeof metricLabels;\r\n\r\ntype FilterState = {\r\n    status: string;\r\n    campaign: string;\r\n    adGroup: string;\r\n    ageRange?: string;\r\n    gender?: string;\r\n    campaignStatus: string;\r\n};\r\n\r\nconst metricLabels = {\r\n    totalConversions: 'Total Conversions',\r\n    totalClicks: 'Total Clicks',\r\n    totalCost: 'Total Cost',\r\n    totalCTR: 'Total C T R'\r\n};\r\n\r\n// Define rows per page constant\r\nconst ROWS_PER_PAGE = 100;\r\n\r\nexport default function AgeAndGenderMetrics() {\r\n    const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n    const { brandId } = useParams();\r\n\r\n    if (!brandId) {\r\n        return <div>Error: Brand ID is missing</div>;\r\n    }\r\n\r\n    // State for filters\r\n    const [filters, setFilters] = useState<FilterState>({\r\n        campaign: 'all',\r\n        adGroup: 'all',\r\n        ageRange: 'all',\r\n        gender: 'all',\r\n        status: 'all', \r\n        campaignStatus: 'all' \r\n    });\r\n\r\n\r\n    const [filterOptions, setFilterOptions] = useState<{\r\n        campaigns: string[];\r\n        adGroups: string[];\r\n        ageRanges: string[];\r\n        genders: string[];\r\n        campaignAdGroupMap?: Record<string, string[]>;\r\n        statusOptions: string[]; \r\n    }>({\r\n        campaigns: [],\r\n        adGroups: [],\r\n        ageRanges: [],\r\n        genders: [],\r\n        campaignAdGroupMap: {},\r\n        statusOptions: ['REMOVED', 'PAUSED', 'ENABLED'], \r\n    });\r\n\r\n    const [data, setData] = useState<any[]>([]);\r\n    const [tabs, setTabs] = useState<TabConfig[]>([\r\n        { \r\n            id: 'age', \r\n            label: 'Age', \r\n            apiEndpoint: `${baseURL}/api/segment/ageMetrics/${brandId}`, \r\n            columns: [], \r\n            data: [], \r\n            lastUpdated: null,\r\n            totalPages: 1,\r\n            currentPage: 1\r\n        },\r\n        { \r\n            id: 'gender', \r\n            label: 'Gender', \r\n            apiEndpoint: `${baseURL}/api/segment/genderMetrics/${brandId}`, \r\n            columns: [], \r\n            data: [], \r\n            lastUpdated: null,\r\n            totalPages: 1,\r\n            currentPage: 1\r\n        },\r\n    ]);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [hasMoreData, setHasMoreData] = useState(true);\r\n    const [activeTab, setActiveTab] = useState(tabs[0].id);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [showGraph, setShowGraph] = useState(false);\r\n    const [graphData, setGraphData] = useState<any>(null);\r\n    const [selectedMetrics, setSelectedMetrics] = useState<MetricKey[]>(['totalClicks', 'totalCost']);\r\n\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n\r\n    // Add handleMetricChange function\r\n    const handleMetricChange = (metric: MetricKey) => {\r\n        setSelectedMetrics(prev => \r\n            prev.includes(metric) \r\n                ? prev.filter(m => m !== metric)\r\n                : [...prev, metric]\r\n        );\r\n    };\r\n\r\n    // State variables for caching filter options\r\n    const [cachedAgeRanges, setCachedAgeRanges] = useState<string[]>([]);\r\n    const [cachedGenders, setCachedGenders] = useState<string[]>([]);\r\n    \r\n    const fetchData = async (\r\n        tabId: string, \r\n        requestData?: {\r\n            startDate: string;\r\n            endDate: string;\r\n            page: number;\r\n            limit: number;\r\n            status?: string; // Ensure status is included here\r\n            campaign?: string;\r\n            adGroup?: string;\r\n            agerange?: string;\r\n            gender?: string;\r\n        }, \r\n        _forceRefresh?: boolean\r\n    ) => {\r\n        try {\r\n            setLoading(true);\r\n            const apiEndpoint = tabId === 'gender' \r\n                ? `${baseURL}/api/segment/genderMetrics/${brandId}`\r\n                : `${baseURL}/api/segment/ageMetrics/${brandId}`;\r\n    \r\n            // Prepare the request body with all possible filters\r\n            const requestBody = {\r\n                startDate: requestData?.startDate || (date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\"),\r\n                endDate: requestData?.endDate || (date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\"),\r\n                page: requestData?.page || currentPage,\r\n                limit: requestData?.limit || ROWS_PER_PAGE,\r\n                ...(requestData?.status && { status: requestData.status }), // Ensure this line is present\r\n                ...(requestData?.campaign && requestData.campaign !== 'all' && { campaign: requestData.campaign }),\r\n                ...(requestData?.adGroup && requestData.adGroup !== 'all' && { adGroup: requestData.adGroup }),\r\n                ...(activeTab === 'age' && requestData?.agerange && requestData.agerange !== 'all' && { agerange: requestData.agerange }),\r\n                ...(activeTab === 'gender' && requestData?.gender && requestData.gender !== 'all' && { gender: requestData.gender })\r\n            };\r\n    \r\n            console.log(\"Fetch Request Body:\", requestBody); // Debug logging\r\n    \r\n            const response = await axios.post(apiEndpoint, requestBody, { withCredentials: true });\r\n            const genderCampaignNames: string[] = response.data.genderCampaignAdGroupPairs?.map((pair: { campaignName: string }) => pair.campaignName) || [];\r\n            if (response.data.success) {\r\n                // Combine campaign names and ad groups from both age and gender metrics\r\n                const campaignNames: string[] = [\r\n                    ...(response.data.campaignAdGroupPairs?.map((pair: { campaignName: string }) => pair.campaignName) || []),\r\n                    ...(response.data.campaignAdGroupPairs?.map((pair: { campaignName: string }) => pair.campaignName) || []),\r\n                    ...genderCampaignNames\r\n                ];\r\n                \r\n                // Initialize and update campaignAdGroupMap\r\n                const campaignAdGroupMap: Record<string, string[]> = {};\r\n                const campaignAdGroupPairs = [\r\n                    ...(response.data.campaignAdGroupPairs || []),\r\n                    ...(response.data.genderCampaignAdGroupPairs || [])\r\n                ];\r\n            \r\n                campaignAdGroupPairs.forEach((pair: CampaignAdGroupPair) => {\r\n                    campaignAdGroupMap[pair.campaignName] = pair.adGroups || [];\r\n                });\r\n            \r\n                // Get unique ad groups\r\n                const adGroups = Array.from(new Set(\r\n                    campaignAdGroupPairs.flatMap((pair: CampaignAdGroupPair) => pair.adGroups || [])\r\n                ));\r\n            \r\n                setFilterOptions(prevOptions => ({\r\n                    ...prevOptions,\r\n                    campaigns: Array.from(new Set(campaignNames)),\r\n                    adGroups: adGroups,\r\n                    campaignAdGroupMap: campaignAdGroupMap\r\n                }));\r\n            \r\n            \r\n                const data = tabId === 'gender' ? response.data.genderData || [] : response.data.ageData || [];\r\n            \r\n                if (tabId === 'age') {\r\n                    const ageRanges = new Set(data.map((item: any) => item.ageRange));\r\n            \r\n                    if (cachedAgeRanges.length === 0) {\r\n                        setCachedAgeRanges(Array.from(ageRanges) as string[]);\r\n                    }\r\n            \r\n                    setFilterOptions(prevOptions => ({\r\n                        ...prevOptions,\r\n                        ageRanges: cachedAgeRanges.length > 0 ? cachedAgeRanges : Array.from(ageRanges) as string[],\r\n                        genders: prevOptions.genders\r\n                    }));\r\n                } else {\r\n                    const genders = new Set(data.map((item: any) => \r\n                        item.gender === 'MALE' ? 'MALE' : \r\n                        item.gender === 'FEMALE' ? 'FEMALE' : \r\n                        item.gender\r\n                    ));\r\n            \r\n                    if (cachedGenders.length === 0) {\r\n                        setCachedGenders(Array.from(genders) as string[]);\r\n                    }\r\n            \r\n                    setFilterOptions(prevOptions => ({\r\n                        ...prevOptions,\r\n                        campaigns: [...new Set([...campaignNames, ...genderCampaignNames])], // Combine both sets of campaign names\r\n                        genders: cachedGenders.length > 0 ? cachedGenders : Array.from(genders) as string[]\r\n                    }));\r\n                }\r\n            \r\n                setData(data);\r\n    \r\n                const columns: ColumnDef[] = data.length > 0\r\n                    ? Object.keys(data[0] || {})\r\n                        .filter(key => key !== 'adGroupStatus')\r\n                        .map(key => ({\r\n                            id: key,\r\n                            header: key === 'campaignStatus' \r\n                                ? 'Campaign Status' \r\n                                : key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()),\r\n                            accessorKey: key,\r\n                            cell: (value: any) => {\r\n                                if (key === 'cost') {\r\n                                    return `$${Number(value).toFixed(2)}`;\r\n                                }\r\n                                if (['roas', 'conversionsRate', 'ctr'].includes(key)) {\r\n                                    return `${(Number(value) * 100).toFixed(2)}%`;\r\n                                }\r\n                                if (key === 'campaignStatus') {\r\n                                    // Capitalize and style campaign status\r\n                                    const statusColor = {\r\n                                        'REMOVED': 'text-red-600',\r\n                                        'PAUSED': 'text-yellow-600',\r\n                                        'ENABLED': 'text-green-600'\r\n                                    }[value as string] || '';\r\n                                    return (\r\n                                        <span className={`font-medium ${statusColor}`}>\r\n                                            {value === 'REMOVED' ? 'Removed' : \r\n                                             value === 'PAUSED' ? 'Paused' : \r\n                                             value === 'ENABLED' ? 'Enabled' : value}\r\n                                        </span>\r\n                                    );\r\n                                }\r\n                                return String(value);\r\n                            }\r\n                        }))\r\n                    : [];\r\n                \r\n                setTabs(prevTabs =>\r\n                    prevTabs.map(t =>\r\n                        t.id === tabId\r\n                            ? { ...t, columns, data, lastUpdated: Date.now() }\r\n                            : t\r\n                    )\r\n                );\r\n                \r\n                const aggregatedData = tabId === 'gender' \r\n                    ? response.data.aggregatedRecords \r\n                    : response.data.ageRangeAggregatedMetrics;\r\n                console.log(\"Aggregated Data:\", aggregatedData);\r\n                console.log(\"Response Data afterfilter test:\", response.data);\r\n                const processedGraphData = Object.entries(aggregatedData || {}).map(([key, metrics]) => {\r\n                    const displayKey = tabId === 'gender' \r\n                        ? (key === 'MALE' ? 'Male' : key === 'FEMALE' ? 'Female' : key)\r\n                        : key;\r\n                        \r\n                    const baseEntry = {\r\n                        [tabId === 'gender' ? 'gender' : 'ageRange']: displayKey\r\n                    };\r\n                    \r\n                    if (metrics && typeof metrics === 'object' && !Array.isArray(metrics)) {\r\n                        const typedMetrics = metrics as Record<string, number>;\r\n                        return {\r\n                            ...baseEntry,\r\n                            totalConversions: typedMetrics.totalConversions || 0,\r\n                            totalClicks: typedMetrics.totalClicks || 0,\r\n                            totalCost: typedMetrics.totalCost || 0,\r\n                            totalCTR: typedMetrics.totalCTR || 0\r\n                        };\r\n                    }\r\n                    return baseEntry;\r\n                });\r\n                console.log(\"Processed Graph Data:\", processedGraphData);\r\n                setGraphData(processedGraphData);\r\n                setTotalRecords(response.data.totalRecords || 0);\r\n                setTotalPages(response.data.totalPages || 1);\r\n                setHasMoreData(currentPage * ROWS_PER_PAGE < response.data.totalRecords);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.error(`Error fetching data:`, error);\r\n            setGraphData(null);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleFilterChange = (filterKey: keyof FilterState, value: string) => {\r\n        setFilters(prev => {\r\n            const updatedFilters = {\r\n                ...prev,\r\n                [filterKey]: value\r\n            };\r\n    \r\n            // Reset dependent filters when certain filters change\r\n            if (filterKey === 'campaign') {\r\n                updatedFilters.adGroup = 'all';\r\n            }\r\n    \r\n            return updatedFilters;\r\n        });\r\n    \r\n        // Prepare request body with updated filters\r\n        const requestBody = {\r\n            startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n            endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n            page: 1,\r\n            limit: ROWS_PER_PAGE,\r\n            status: filters.status === 'all' ? undefined : filters.status,\r\n            campaign: filters.campaign === 'all' ? undefined : filters.campaign,\r\n            adGroup: filters.adGroup === 'all' ? undefined : filters.adGroup,\r\n            ...(activeTab === 'age' && filters.ageRange !== 'all' && { agerange: filters.ageRange }),\r\n            ...(activeTab === 'gender' && filters.gender !== 'all' && { gender: filters.gender })\r\n        };\r\n    \r\n        // Reset graph data before fetching\r\n        setGraphData(null);\r\n    \r\n        // Force data refresh with new filters\r\n        fetchData(activeTab, requestBody, true);\r\n    };\r\n    useEffect(() => {\r\n        const requestBody = {\r\n            startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n            endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n            page: currentPage,\r\n            limit: ROWS_PER_PAGE,\r\n            status: filters.status === 'all' ? undefined : filters.status,\r\n            campaign: filters.campaign === 'all' ? undefined : filters.campaign,\r\n            adGroup: filters.adGroup === 'all' ? undefined : filters.adGroup,\r\n            \r\n            // Conditional filters based on active tab\r\n            ...(activeTab === 'age' && filters.ageRange !== 'all' && { \r\n                agerange: filters.ageRange \r\n            }),\r\n            ...(activeTab === 'gender' && filters.gender !== 'all' && { \r\n                gender: filters.gender \r\n            })\r\n        };\r\n    \r\n        // Reset graph data before fetching\r\n        setGraphData(null);\r\n        \r\n        console.log('UseEffect Fetch Request:', { \r\n            activeTab, \r\n            filters, \r\n            requestBody \r\n        });\r\n        \r\n        fetchData(activeTab, requestBody);\r\n    \r\n        const intervalId = setInterval(() => {\r\n            fetchData(activeTab, requestBody);\r\n        }, 300000); // 5 minutes\r\n    \r\n        return () => clearInterval(intervalId);\r\n    }, [\r\n        activeTab, \r\n        date, \r\n        currentPage, \r\n        filters.campaign,\r\n        filters.adGroup,\r\n        filters.ageRange,\r\n        filters.gender,\r\n        filters.status\r\n    ]);\r\n    const handleTabChange = (newTabId: string) => {\r\n        setActiveTab(newTabId);\r\n        setCurrentPage(1);\r\n        const requestBody = {\r\n            startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n            endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n            page: 1,\r\n            limit: ROWS_PER_PAGE\r\n        };\r\n        fetchData(newTabId, requestBody);\r\n    };\r\n\r\n    const sortableColumns = [\r\n        'campaignName',\r\n        'adGroupName',\r\n        'campaignStatus',\r\n        'ageRange',\r\n        'conversionsValue',\r\n        'conversionsRate',\r\n        'avg_cpc', \r\n        'cost',\r\n        'roas',\r\n        'conversions',\r\n        'clicks',\r\n        'ctr'\r\n    ];\r\n\r\n    const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n    const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\r\n\r\n    const handleSort = (column: string) => {\r\n        if (sortColumn === column) {\r\n            setSortOrder(prevOrder => prevOrder === 'asc' ? 'desc' : 'asc');\r\n        } else {\r\n            setSortColumn(column);\r\n            setSortOrder('asc');\r\n        }\r\n    };\r\n\r\n    const { columns } = (() => {\r\n        const currentTab = tabs.find(tab => tab.id === activeTab);\r\n        if (!currentTab) return { columns: [] };\r\n        return {\r\n            columns: currentTab.columns,\r\n        };\r\n    })();\r\n\r\n    const sortedData = useMemo(() => {\r\n        if (!sortColumn) return data;\r\n\r\n        return [...data].sort((a, b) => {\r\n            const aValue = a[sortColumn];\r\n            const bValue = b[sortColumn];\r\n\r\n            if (typeof aValue === 'number' && typeof bValue === 'number') {\r\n                return sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\r\n            }\r\n\r\n            const stringA = String(aValue || '').toLowerCase();\r\n            const stringB = String(bValue || '').toLowerCase();\r\n\r\n            if (stringA < stringB) return sortOrder === 'asc' ? -1 : 1;\r\n            if (stringA > stringB) return sortOrder === 'asc' ? 1 : -1;\r\n            return 0;\r\n        });\r\n    }, [data, sortColumn, sortOrder]);\r\n\r\n   // Handle page change\r\n    const handlePageChange = (newPage: number) => {\r\n        const validPage = Math.min(Math.max(1, newPage), totalPages);\r\n        setCurrentPage(validPage);\r\n        // Fetch data for the new page\r\n        const requestBody = {\r\n            startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n            endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n            page: validPage,\r\n            limit: ROWS_PER_PAGE\r\n        };\r\n        fetchData(activeTab, requestBody);\r\n    };\r\n\r\n    const colorPalette = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300'];\r\n\r\n    return (\r\n        <div className='w-full'>\r\n            <div className='flex flex-row gap-2 items-center mb-4'>\r\n                <GoogleLogo />\r\n                <h1 className='text-xl font-bold text-gray-800'>Age and Gender Metrics</h1>\r\n            </div>\r\n            <div className='bg-white p-6 rounded-xl shadow-lg border border-gray-200'>\r\n                <div className=\"flex items-center justify-between border-b border-gray-200 pb-2 mb-2\">\r\n                    <div className=\"flex space-x-2\" role=\"tablist\">\r\n                        {tabs.map(tab => (\r\n                            <Button\r\n                                key={tab.id}\r\n                                variant={activeTab === tab.id ? \"default\" : \"ghost\"}\r\n                                onClick={() => handleTabChange(tab.id)}\r\n                                className=\"relative\"\r\n                            >\r\n                                {tab.id === 'age' ? <Package className=\"w-4 h-4 mr-2\" /> : <Layers className=\"w-4 h-4 mr-2\" />}\r\n                                {tab.label}\r\n                                {activeTab === tab.id && (\r\n                                    <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-blue-600\" />\r\n                                )}\r\n                            </Button>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <DatePickerWithRange\r\n                            \r\n                        />\r\n                        {showGraph && (\r\n                            <div className=\"flex gap-2\">\r\n                                {Object.keys(metricLabels).map(metric => (\r\n                                    <label key={metric} className=\"flex items-center space-x-2\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={selectedMetrics.includes(metric as MetricKey)}\r\n                                            onChange={() => handleMetricChange(metric as MetricKey)}\r\n                                        />\r\n                                        <span className=\"text-sm text-gray-700\">{metricLabels[metric as MetricKey]}</span>\r\n                                    </label>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        <Button \r\n                            variant=\"outline\" \r\n                            size=\"icon\" \r\n                            onClick={() => {\r\n                                const requestBody = {\r\n                                    startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n                                    endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n                                    page: 1,\r\n                                    limit: 1000\r\n                                };\r\n                                fetchData(activeTab, requestBody, true);\r\n                            }}\r\n                            disabled={loading}\r\n                        >\r\n                            <RefreshCw className={`h-4 w-4 ${loading ? '' : ''}`} />\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"outline\" \r\n                            onClick={() => setShowGraph(!showGraph)}\r\n                        >\r\n                            {showGraph ? \"Show Table\" : \"Show Graph\"}\r\n                        </Button>\r\n                        <Popover>\r\n                            <PopoverTrigger asChild>\r\n                                <Button variant=\"outline\" className=\"bg-white border-gray-300 hover:bg-gray-50 transition-colors duration-200\">\r\n                                    <Filter className=\"w-4 h-4 mr-2\" />\r\n                                    Filter\r\n                                </Button>\r\n                            </PopoverTrigger>\r\n                            <PopoverContent className=\"w-80\">\r\n                                <div className=\"space-y-4\">\r\n                                    <div>\r\n                                        <h3 className=\"font-medium mb-2\">Campaign</h3>\r\n                                        <Select \r\n                                            onValueChange={(value) => handleFilterChange('campaign', value)} \r\n                                            value={filters.campaign}\r\n                                        >\r\n                                            <SelectTrigger>\r\n                                                <SelectValue placeholder=\"Select campaign\" />\r\n                                            </SelectTrigger>\r\n                                            <SelectContent>\r\n                                                <SelectItem value=\"all\">All</SelectItem>\r\n                                                {filterOptions.campaigns.map(campaign => (\r\n                                                    <SelectItem key={campaign} value={campaign}>\r\n                                                        {campaign}\r\n                                                    </SelectItem>\r\n                                                ))}\r\n                                            </SelectContent>\r\n                                        </Select>\r\n                                    </div>\r\n                                    {filters.campaign !== 'all' && (\r\n                                        <div>\r\n                                            <h3 className=\"font-medium mb-2\">Ad Group</h3>\r\n                                            <Select \r\n                                                onValueChange={(value) => handleFilterChange('adGroup', value)} \r\n                                                value={filters.adGroup}\r\n                                            >\r\n                                                <SelectTrigger>\r\n                                                    <SelectValue placeholder=\"Select ad group\" />\r\n                                                </SelectTrigger>\r\n                                                <SelectContent>\r\n                                                    <SelectItem value=\"all\">All Ad Groups</SelectItem>\r\n                                                    {(\r\n                                                        filterOptions.campaignAdGroupMap?.[filters.campaign] || \r\n                                                        (activeTab === 'gender' \r\n                                                            ? filterOptions.adGroups.filter(() => {\r\n                                                                if (filterOptions && filterOptions.campaignAdGroupMap) {\r\n                                                                    const campaign = Object.keys(filterOptions.campaignAdGroupMap).find(() => \r\n                                                                        filterOptions.campaignAdGroupMap?.[filters.campaign]?.some(ag => \r\n                                                                            filterOptions.campaignAdGroupMap?.[filters.campaign]?.includes(ag)\r\n                                                                        )\r\n                                                                    );\r\n                                                                    return campaign && filterOptions.campaigns.includes(campaign);\r\n                                                                }\r\n                                                                return false;\r\n                                                            })\r\n                                                            : filterOptions.adGroups)\r\n                                                    )?.map(adGroup => (\r\n                                                        <SelectItem key={adGroup} value={adGroup}>\r\n                                                            {adGroup}\r\n                                                        </SelectItem>\r\n                                                    ))}\r\n                                                </SelectContent>\r\n                                            </Select>\r\n                                        </div>\r\n                                    )}\r\n                                    <div>\r\n                                        <h3 className=\"font-medium mb-2\">Status</h3>\r\n                                        <Select \r\n                                            onValueChange={(value) => handleFilterChange('status', value)} \r\n                                            value={filters.status}\r\n                                        >\r\n                                            <SelectTrigger>\r\n                                                <SelectValue placeholder=\"Select status\" />\r\n                                            </SelectTrigger>\r\n                                            <SelectContent>\r\n                                                <SelectItem value=\"all\">All</SelectItem>\r\n                                                {filterOptions.statusOptions.map((status) => (\r\n                                                    <SelectItem key={status} value={status}>\r\n                                                        {status}\r\n                                                    </SelectItem>\r\n                                                ))}\r\n                                            </SelectContent>\r\n                                        </Select>\r\n                                    </div>\r\n                                    {activeTab === 'age' && (\r\n                                        <div>\r\n                                            <h3 className=\"font-medium mb-2\">Age Range</h3>\r\n                                            <Select \r\n                                                onValueChange={(value) => handleFilterChange('ageRange', value)} \r\n                                                value={filters.ageRange}\r\n                                            >\r\n                                                <SelectTrigger>\r\n                                                    <SelectValue placeholder=\"Select age range\" />\r\n                                                </SelectTrigger>\r\n                                                <SelectContent>\r\n                                                    <SelectItem value=\"all\">All</SelectItem>\r\n                                                    {filterOptions.ageRanges.map((range) => (\r\n                                                        <SelectItem key={range} value={range}>\r\n                                                            {range.replace('AGE_RANGE_', '').replace(/_/g, '-')}\r\n                                                        </SelectItem>\r\n                                                    ))}\r\n                                                </SelectContent>\r\n                                            </Select>\r\n                                        </div>\r\n                                    )}\r\n                                    {activeTab === 'gender' && (\r\n                                        <div>\r\n                                            <h3 className=\"font-medium mb-2\">Gender</h3>\r\n                                            <Select \r\n                                                onValueChange={(value) => handleFilterChange('gender', value)} \r\n                                                value={filters.gender}\r\n                                            >\r\n                                                <SelectTrigger>\r\n                                                    <SelectValue placeholder=\"Select gender\" />\r\n                                                </SelectTrigger>\r\n                                                <SelectContent>\r\n                                                    <SelectItem value=\"all\">All</SelectItem>\r\n                                                    {filterOptions.genders.map((gender) => (\r\n                                                        <SelectItem key={gender} value={gender}>\r\n                                                            {gender === 'MALE' ? 'Male' : gender === 'FEMALE' ? 'Female' : gender}\r\n                                                        </SelectItem>\r\n                                                    ))}\r\n                                                </SelectContent>\r\n                                            </Select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </PopoverContent>\r\n                        </Popover>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                    {loading ? (\r\n                        <div className=\"flex justify-center items-center h-64\">\r\n                            <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-blue-500\"></div>\r\n                        </div>\r\n                    ) : showGraph ? (\r\n                        activeTab === 'age' && graphData ? (\r\n                            <ResponsiveContainer width=\"100%\" height={300}>\r\n                                <BarChart data={graphData}>\r\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"ageRange\" />\r\n                                    <YAxis />\r\n                                    <RechartsTooltip />\r\n                                    <Legend />\r\n                                    {selectedMetrics.map((metric, index) => (\r\n                                        <Bar key={metric} dataKey={metric} fill={colorPalette[index % colorPalette.length]} name={metricLabels[metric as MetricKey]} />\r\n                                    ))}\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        ) : (\r\n                            activeTab === 'gender' && graphData ? (\r\n                                <ResponsiveContainer width=\"100%\" height={300}>\r\n                                    <BarChart data={graphData}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"gender\" />\r\n                                        <YAxis />\r\n                                        <RechartsTooltip />\r\n                                        <Legend />\r\n                                        {selectedMetrics.map((metric, index) => (\r\n                                            <Bar key={metric} dataKey={metric} fill={colorPalette[index % colorPalette.length]} name={metricLabels[metric as MetricKey]} />\r\n                                        ))}\r\n                                    </BarChart>\r\n                                </ResponsiveContainer>\r\n                            ) : null\r\n                        )\r\n                    ) : (\r\n                        <div className=\"rounded-md border border-gray-200 overflow-hidden\">\r\n                            <div className=\"max-h-[350px] overflow-auto\">\r\n                                <table className=\"w-full\">\r\n                                    <thead className=\"sticky top-0 z-10 bg-[#4A628A]\">\r\n                                        <tr>\r\n                                            {columns.map(column => (\r\n                                                <th \r\n                                                    key={column.id} \r\n                                                    className=\"px-4 py-3 text-left text-xs font-medium text-gray-50 uppercase tracking-wider min-w-[150px] cursor-pointer\"\r\n                                                    onClick={() => sortableColumns.includes(column.id) && handleSort(column.id)}\r\n                                                >\r\n                                                    <div className=\"flex items-center gap-1\">\r\n                                                        {column.header}\r\n                                                        {sortableColumns.includes(column.id) && (\r\n                                                            sortColumn === column.id ? (\r\n                                                                sortOrder === 'asc' ? <ArrowUp className=\"ml-1 w-4 h-6 text-[#ffffff]\" /> : <ArrowDown className=\"ml-1 w-4 h-6 text-[#ffffff]\" />\r\n                                                            ) : (\r\n                                                                <ArrowUpDown className=\"ml-1 w-4 h-6 text-gray-300\" />\r\n                                                            )\r\n                                                        )}\r\n                                                    </div>\r\n                                                </th>\r\n                                            ))}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                        {sortedData.map((row, rowIndex) => (\r\n                                            <tr \r\n                                                key={rowIndex} \r\n                                                className=\"hover:bg-gray-50\"\r\n                                            >\r\n                                                {columns.map((column) => (\r\n                                                    <td \r\n                                                        key={column.id} \r\n                                                        className=\"px-4 py-2.5 text-sm whitespace-nowrap min-w-[150px]\"\r\n                                                    >\r\n                                                        {column.cell(row[column.accessorKey])}\r\n                                                    </td>\r\n                                                ))}\r\n                                            </tr>\r\n                                        ))}\r\n                                        {sortedData.length === 0 && (\r\n                                            <tr>\r\n                                                <td \r\n                                                    colSpan={columns.length} \r\n                                                    className=\"px-4 py-4 text-center text-gray-500\"\r\n                                                >\r\n                                                    No data available\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <div className=\"flex items-center justify-between px-4 py-3 bg-white border-t border-gray-200\">\r\n                                <div className=\"text-sm text-gray-700\">\r\n                                    {sortedData.length > 0 ? (\r\n                                        `Showing ${((currentPage - 1) * ROWS_PER_PAGE) + 1} to ${Math.min(currentPage * ROWS_PER_PAGE, totalRecords)} of ${totalRecords} entries`\r\n                                    ) : (\r\n                                        'Showing 0 entries'\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"flex items-center space-x-2\">\r\n                                    <Button\r\n                                        variant=\"outline\"\r\n                                        size=\"sm\"\r\n                                        onClick={() => handlePageChange(currentPage - 1)}\r\n                                        disabled={currentPage === 1}\r\n                                    >\r\n                                        <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n                                        Previous\r\n                                    </Button>\r\n                                    <div className=\"text-sm text-gray-700\">\r\n                                        Page {currentPage} of {totalPages}\r\n                                    </div>\r\n                                    <Button\r\n                                        variant=\"outline\"\r\n                                        size=\"sm\"\r\n                                        onClick={() => handlePageChange(currentPage + 1)}\r\n                                        disabled={!hasMoreData}\r\n                                    >\r\n                                        Next\r\n                                        <ChevronRight className=\"h-4 w-4 ml-1\" />\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { cn } from \"@/lib/utils\"\nimport { CheckIcon } from \"@radix-ui/react-icons\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <CheckIcon className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import * as React from \"react\"\r\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { CheckIcon, ChevronRightIcon, DotFilledIcon } from \"@radix-ui/react-icons\"\r\n\r\nconst DropdownMenu = DropdownMenuPrimitive.Root\r\n\r\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\r\n\r\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\r\n\r\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\r\n\r\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\r\n\r\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\r\n\r\nconst DropdownMenuSubTrigger = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRightIcon className=\"ml-auto\" />\r\n  </DropdownMenuPrimitive.SubTrigger>\r\n))\r\nDropdownMenuSubTrigger.displayName =\r\n  DropdownMenuPrimitive.SubTrigger.displayName\r\n\r\nconst DropdownMenuSubContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuSubContent.displayName =\r\n  DropdownMenuPrimitive.SubContent.displayName\r\n\r\nconst DropdownMenuContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Portal>\r\n    <DropdownMenuPrimitive.Content\r\n      ref={ref}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </DropdownMenuPrimitive.Portal>\r\n))\r\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\r\n\r\nconst DropdownMenuItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\r\n\r\nconst DropdownMenuCheckboxItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <CheckIcon className=\"h-4 w-4\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.CheckboxItem>\r\n))\r\nDropdownMenuCheckboxItem.displayName =\r\n  DropdownMenuPrimitive.CheckboxItem.displayName\r\n\r\nconst DropdownMenuRadioItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <DotFilledIcon className=\"h-2 w-2 fill-current\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.RadioItem>\r\n))\r\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\r\n\r\nconst DropdownMenuLabel = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\r\n\r\nconst DropdownMenuSeparator = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\r\n\r\nconst DropdownMenuShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\r\n\r\nexport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuRadioItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuShortcut,\r\n  DropdownMenuGroup,\r\n  DropdownMenuPortal,\r\n  DropdownMenuSub,\r\n  DropdownMenuSubContent,\r\n  DropdownMenuSubTrigger,\r\n  DropdownMenuRadioGroup,\r\n}\r\n","import React, { useState, useMemo, useRef, useEffect } from 'react';\r\nimport { ArrowUp, ArrowDown, ArrowUpDown, ThumbsDown, Award, ChevronsLeft, ChevronRight, ChevronsRight, ChevronLeft } from 'lucide-react';\r\nimport { PageMetric } from '@/pages/ReportPage/component/LandingPageSession';\r\nimport { Button } from '@/components/ui/button';\r\n\r\ninterface TableProps {\r\n  columns: string[];\r\n  data: any[];\r\n  allTimeData?: PageMetric[];\r\n  isFullScreen?: boolean;\r\n}\r\n\r\nconst getConditionalColors = (value: number, average: number) => {\r\n  const epsilon = 0.0001; // Small tolerance for floating-point comparisons\r\n\r\n  if (value > average) return 'bg-green-100 text-green-800';\r\n  if (value < average) return 'bg-red-50 text-red-800';\r\n  if (Math.abs(value - average) < epsilon) return 'bg-yellow-100 text-yellow-700'; // Handles approximate equality\r\n\r\n  return 'bg-yellow-100 text-yellow-700';\r\n};\r\n\r\n\r\nconst ReportTable: React.FC<TableProps> = ({\r\n  columns = [],\r\n  data = [],\r\n  allTimeData = [],\r\n  isFullScreen,\r\n}) => {\r\n  const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\r\n  const [filterLabel, setFilterLabel] = useState<string | null>(null);\r\n  const [filterType, setFilterType] = useState<string | null>(null);\r\n  const [columnWidths, setColumnWidths] = useState<number[]>([]);\r\n  const [isResizing, setIsResizing] = useState<number | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [loadedRows, setLoadedRows] = useState<any[]>([]);\r\n  const rowsPerChunk = 30;\r\n  const rowsPerPage = 10;\r\n  const isDateTable = columns[0] === 'Date';\r\n\r\n  const tableRef = useRef<HTMLTableElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const initializationRef = useRef(false);\r\n  const dataRef = useRef(data);\r\n  const filteredDataRef = useRef<any[]>([]);\r\n\r\n  const comparisonColumns = ['Add To Cart Rate', 'Checkout Rate', 'Purchase Rate', 'Sessions'];\r\n\r\n  const parsePercentage = (value: string): number => {\r\n    return parseFloat(value?.replace('%', '').trim()) || 0;\r\n  };\r\n\r\n  // Initialize column widths only once after initial render\r\n  useEffect(() => {\r\n    if (!initializationRef.current && tableRef.current && containerRef.current) {\r\n      const headerCells = tableRef.current.querySelectorAll('thead th');\r\n      const widths = Array.from(headerCells).map(cell => {\r\n        return Math.max(100, cell.clientWidth);\r\n      });\r\n      setColumnWidths(widths);\r\n      initializationRef.current = true;\r\n    }\r\n  }, []);\r\n\r\n  // Handle window resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (tableRef.current && containerRef.current && initializationRef.current) {\r\n        const headerCells = tableRef.current.querySelectorAll('thead th');\r\n        const widths = Array.from(headerCells).map((cell, index) => {\r\n          return Math.max(100, columnWidths[index] || cell.clientWidth);\r\n        });\r\n        setColumnWidths(widths);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [columnWidths]);\r\n\r\n  const averageValues = useMemo(() => {\r\n    const averages: Record<string, number> = {};\r\n    comparisonColumns.forEach((key) => {\r\n      const validData = data.filter(item => item[key] !== undefined && !isNaN(parsePercentage(item[key] || '0')));\r\n      const average = validData.length > 0\r\n        ? validData.reduce((sum, item) => sum + parsePercentage(item[key] || '0'), 0) / validData.length\r\n        : 0;\r\n\r\n      // Convert \"Sessions\" to an integer, others remain as decimals\r\n      averages[key] = key === 'Sessions' ? Math.round(average) : parseFloat(average.toFixed(2));\r\n    });\r\n    return averages;\r\n  }, [data]);\r\n\r\n\r\n\r\n  const allTimeAverageValues = useMemo(() => {\r\n    const averages: Record<string, number> = {};\r\n    comparisonColumns.forEach((key) => {\r\n      if (allTimeData) {\r\n        const validAllTimeData = allTimeData.filter(item => item[key] !== undefined && !isNaN(parsePercentage(item[key] || '0')));\r\n        averages[key] = validAllTimeData.length > 0 ?\r\n          validAllTimeData.reduce((sum, item) => sum + parsePercentage(item[key] || '0'), 0) / validAllTimeData.length : 0;\r\n      } else {\r\n        averages[key] = 0;\r\n      }\r\n    });\r\n    return averages;\r\n  }, [allTimeData]);\r\n\r\n  const rowPerformanceLabels = useMemo(() => {\r\n    if (columns[0] === 'Date') return data.map(() => ({ currentLabel: null, allTimeLabel: null }));\r\n\r\n    return data.map((item) => {\r\n      if (!item || !comparisonColumns.every(column => item[column] !== undefined)) {\r\n        return { currentLabel: null, allTimeLabel: null };\r\n      }\r\n\r\n      const currentPerformance = comparisonColumns.some((column) => {\r\n        const value = parsePercentage(item[column] || '0');\r\n        const average = averageValues[column];\r\n        return value > average;\r\n      });\r\n\r\n      const isWorstPerformingCurrent = comparisonColumns.every((column) => {\r\n        const value = parsePercentage(item[column] || '0');\r\n        const average = averageValues[column];\r\n        return value < average;\r\n      });\r\n\r\n      const currentLabel = currentPerformance ? 'Current Top' : isWorstPerformingCurrent ? 'Current Worst' : '';\r\n\r\n      const allTimePerformance = comparisonColumns.some((column) => {\r\n        const value = parsePercentage(item[column] || '0');\r\n        const allTimeAverage = allTimeAverageValues[column];\r\n        return value > allTimeAverage;\r\n      });\r\n\r\n      const isWorstPerformingAllTime = comparisonColumns.every((column) => {\r\n        const value = parsePercentage(item[column] || '0');\r\n        const allTimeAverage = allTimeAverageValues[column];\r\n        return value < allTimeAverage;\r\n      });\r\n\r\n      const allTimeLabel = allTimePerformance ? 'All Time Top' : isWorstPerformingAllTime ? 'All Time Worst' : '';\r\n\r\n      return {\r\n        currentLabel,\r\n        allTimeLabel,\r\n      };\r\n    });\r\n  }, [data, allTimeData, averageValues, allTimeAverageValues, columns]);\r\n\r\n  const handleMouseDown = (index: number, event: React.MouseEvent) => {\r\n    setIsResizing(index);\r\n    const startX = event.pageX;\r\n    const startWidth = columnWidths[index];\r\n\r\n    const handleMouseMove = (moveEvent: MouseEvent) => {\r\n      const delta = moveEvent.pageX - startX;\r\n      const newWidth = Math.max(100, startWidth + delta);\r\n      const newWidths = [...columnWidths];\r\n      newWidths[index] = newWidth;\r\n      setColumnWidths(newWidths);\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      setIsResizing(null);\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n  };\r\n\r\n  const parsedData = useMemo(() =>\r\n    data.map((item, index) => ({\r\n      ...item,\r\n      currentPerformanceLabel: !isDateTable ? rowPerformanceLabels[index]?.currentLabel || null : null,\r\n      allTimePerformanceLabel: !isDateTable ? rowPerformanceLabels[index]?.allTimeLabel || null : null,\r\n      Sessions: Number(item?.Sessions || 0),\r\n      'Add To Cart Rate': parsePercentage(item?.['Add To Cart Rate'] || '0'),\r\n      'Checkout Rate': parsePercentage(item?.['Checkout Rate'] || '0'),\r\n      'Purchase Rate': parsePercentage(item?.['Purchase Rate'] || '0'),\r\n    })), [data, rowPerformanceLabels, isDateTable]);\r\n\r\n    const sortedData = useMemo(() => {\r\n      if (!sortColumn) return parsedData;\r\n    \r\n      return [...parsedData].sort((a, b) => {\r\n        const aValue = a[sortColumn];\r\n        const bValue = b[sortColumn];\r\n    \r\n        // Handle Date sorting\r\n        if (sortColumn === 'Date') {\r\n          return sortDirection === 'asc'\r\n            ? new Date(aValue).getTime() - new Date(bValue).getTime()\r\n            : new Date(bValue).getTime() - new Date(aValue).getTime();\r\n        }\r\n    \r\n        // Handle Numeric sorting\r\n        const aNum = typeof aValue === 'number'\r\n          ? aValue\r\n          : parseFloat((aValue || '0').toString().replace('%', '').trim());\r\n        const bNum = typeof bValue === 'number'\r\n          ? bValue\r\n          : parseFloat((bValue || '0').toString().replace('%', '').trim());\r\n    \r\n        if (aNum < bNum) return sortDirection === 'asc' ? -1 : 1;\r\n        if (aNum > bNum) return sortDirection === 'asc' ? 1 : -1;\r\n        return 0;\r\n      });\r\n    }, [parsedData, sortColumn, sortDirection]);\r\n    \r\n\r\n\r\n  const isNumericColumn = (column: string) => {\r\n    return [\r\n      'Date',\r\n      'Add To Cart',\r\n      'Checkouts',\r\n      'Sessions',\r\n      'Purchases',\r\n      'Visitors',\r\n      ...comparisonColumns,\r\n    ].includes(column);\r\n  };\r\n  const handleSort = (column: string) => {\r\n    if (!isNumericColumn(column)) return;\r\n  \r\n    if (sortColumn === column) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortColumn(column);\r\n      setSortDirection('asc');\r\n    } \r\n  };\r\n\r\n  const handleClickLabel = (label: string, type: string) => {\r\n    if (filterLabel === label && filterType === type) {\r\n      setFilterLabel(null);\r\n      setFilterType(null);\r\n    } else {\r\n      setFilterLabel(label);\r\n      setFilterType(type);\r\n    }\r\n  };\r\n\r\n  const filteredData = useMemo(() => {\r\n    const result = isDateTable\r\n      ? sortedData\r\n      : filterLabel\r\n        ? sortedData.filter((item) => {\r\n          if (filterType === 'current') {\r\n            return item.currentPerformanceLabel === filterLabel;\r\n          }\r\n          if (filterType === 'allTime') {\r\n            return item.allTimePerformanceLabel === filterLabel;\r\n          }\r\n          return false;\r\n        })\r\n        : sortedData;\r\n\r\n    filteredDataRef.current = result;\r\n    return result;\r\n  }, [sortedData, filterLabel, filterType, isDateTable]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (isFullScreen) {\r\n      setLoadedRows(filteredDataRef.current.slice(0, rowsPerChunk));\r\n    }\r\n  }, [isFullScreen]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isFullScreen &&\r\n      (dataRef.current !== data ||\r\n        filterLabel !== null ||\r\n        sortColumn !== null ||\r\n        sortDirection)  // Add sortDirection to trigger updates\r\n    ) {\r\n      setLoadedRows(filteredDataRef.current.slice(0, rowsPerChunk));\r\n      dataRef.current = data;\r\n    }\r\n  }, [data, filterLabel, sortColumn, sortDirection, isFullScreen]);\r\n\r\n  const loadMoreRows = () => {\r\n    if (isFullScreen && loadedRows.length < filteredDataRef.current.length) {\r\n      const nextChunk = filteredDataRef.current.slice(\r\n        loadedRows.length,\r\n        loadedRows.length + rowsPerChunk\r\n      );\r\n      setLoadedRows(prev => [...prev, ...nextChunk]);\r\n    }\r\n  };\r\n\r\n  const handleScroll = (event: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n    const target = event.currentTarget;\r\n    if (\r\n      target.scrollHeight - target.scrollTop <= target.clientHeight + 100\r\n    ) {\r\n      loadMoreRows();\r\n    }\r\n  };\r\n\r\n  const displayRows = useMemo(() => {\r\n    if (isFullScreen) {\r\n      return loadedRows;\r\n    }\r\n    return filteredData.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage);\r\n  }, [isFullScreen, loadedRows, filteredData, currentPage, rowsPerPage]);\r\n\r\n  const pageCount = Math.ceil(filteredData.length / rowsPerPage);\r\n\r\n  const goToPage = (page: number) => {\r\n    const pageNumber = Math.max(1, Math.min(page, pageCount));\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const columnPairs = {\r\n    'Add To Cart': 'Add To Cart Rate',\r\n    'Checkouts': 'Checkout Rate',\r\n    'Purchases': 'Purchase Rate'\r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={containerRef}\r\n        className=\"rounded-md overflow-x-auto relative border\"\r\n        style={{\r\n          width: '100%',\r\n          maxHeight: isFullScreen ? 'calc(100vh - 105px)' : 'calc(100vh - 200px)',\r\n          overflowX: 'auto',\r\n        }}\r\n        onScroll={isFullScreen ? handleScroll : undefined}\r\n      >\r\n        <table\r\n          ref={tableRef}\r\n          className=\"w-full text-center shadow-lg rounded-lg border border-gray-200\"\r\n          style={{\r\n            tableLayout: 'fixed',\r\n            width: '100%',\r\n            borderCollapse: 'collapse',\r\n          }}\r\n        >\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              {columns[0] !== 'Date' && allTimeData && (\r\n                <th\r\n                  className=\"font-bold p-1 text-gray-800 text-sm border-b-2 sticky left-0 bg-gray-100 z-30 border-r border-gray-300\"\r\n                  style={{\r\n                    width: `${columnWidths[0]}px`,\r\n                    minWidth: '200px',\r\n                    position: 'sticky',\r\n                    left: 0,\r\n                    top: 0,\r\n                  }}\r\n                >\r\n                  Performance Label\r\n                  <div\r\n                    onMouseDown={(e) => handleMouseDown(0, e)}\r\n                    className={`absolute right-0 top-0 bottom-0 w-2 cursor-col-resize hover:bg-blue-200 ${isResizing === 0 ? 'bg-blue-300' : ''}`}\r\n                  />\r\n                </th>\r\n              )}\r\n              {columns.map((column, colIndex) => {\r\n                const isFirstColumn = colIndex === 0;\r\n                const needsLeftSticky = isFirstColumn && columns[0] === 'Date';\r\n                const isComparisonCol = comparisonColumns.includes(column);\r\n\r\n                return (\r\n                  <th\r\n                    key={column}\r\n                    className={`\r\n            font-bold p-1 text-gray-800 text-sm border-b-2 \r\n            capitalize sticky top-0 bg-gray-100 \r\n            border-r border-gray-300 \r\n            ${isNumericColumn(column) ? 'cursor-pointer' : ''}\r\n            ${needsLeftSticky ? 'sticky left-0 z-30' : 'z-20'}\r\n            ${isFirstColumn && columns[0] !== 'Date' && allTimeData ? 'sticky left-[150px]' : ''}\r\n          `}\r\n                    style={{\r\n                      width: `${columnWidths[colIndex] + 1}px`,\r\n                      minWidth: '200px',\r\n                      ...(isFirstColumn && {\r\n                        left: needsLeftSticky\r\n                          ? 0\r\n                          : (columns[0] !== 'Date' && allTimeData ? columnWidths[0] : 0)\r\n                      }),\r\n                      ...(needsLeftSticky && {\r\n                        backgroundColor: 'rgb(243 244 246)', // bg-gray-100\r\n                        zIndex: 30,\r\n                      })\r\n                    }}\r\n                    onClick={() => handleSort(column)}\r\n                  >\r\n                    <div className=\"flex flex-col items-center\">\r\n                      <div className=\"flex items-center justify-center mb-1\">\r\n                        <span>{column}</span>\r\n                        {isNumericColumn(column) && (\r\n                          <span className=\"ml-2\">\r\n                            {sortColumn === column ? (\r\n                              sortDirection === 'asc' ? (\r\n                                <ArrowUp className=\"w-4 h-4 text-blue-600\" />\r\n                              ) : (\r\n                                <ArrowDown className=\"w-4 h-4 text-blue-600\" />\r\n                              )\r\n                            ) : (\r\n                              <ArrowUpDown className=\"w-4 h-4 text-gray-500\" />\r\n                            )}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      {isComparisonCol && averageValues[column] !== undefined && (\r\n                        <span className=\"text-xs text-gray-500\">\r\n                          avg: {column === 'Sessions'\r\n                            ? Math.round(averageValues[column])\r\n                            : averageValues[column]?.toFixed(2)}\r\n                          {column !== 'Sessions' ? '%' : ''}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      onMouseDown={(e) => handleMouseDown(colIndex, e)}\r\n                      className={`absolute right-0 top-0 bottom-0 w-2 cursor-col-resize hover:bg-blue-200 ${isResizing === colIndex ? 'bg-blue-300' : ''\r\n                        }`}\r\n                    />\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {displayRows.map((item, index) => (\r\n              <tr\r\n                key={index}\r\n                className={`${index % 2 === 0 ? 'bg-gray-50' : 'bg-white'\r\n                  } hover:bg-gray-100 transition-colors duration-200 rounded-md`}\r\n              >\r\n                {columns[0] !== 'Date' && allTimeData && (\r\n                  <td\r\n                    className=\"p-3 text-sm font-normal sticky left-0 bg-white z-20 shadow-[2px_0_0_0_rgba(0,0,0,0.1)] border-r border-gray-300\"\r\n                    style={{\r\n                      overflow: 'hidden',\r\n                      textOverflow: 'ellipsis',\r\n                      whiteSpace: 'nowrap',\r\n                    }}\r\n                  >\r\n                    <div className=\"flex items-center gap-1 min-w-[150px]\">\r\n                      {item.currentPerformanceLabel && (\r\n                        <span\r\n                          onClick={() => handleClickLabel(item.currentPerformanceLabel, 'current')}\r\n                          className={`inline-flex items-center px-2 py-1 rounded-md text-xs font-medium ${item.currentPerformanceLabel === 'Current Top'\r\n                            ? 'bg-green-100 text-green-800'\r\n                            : 'bg-red-100 text-red-800'\r\n                            } ${filterLabel === item.currentPerformanceLabel && filterType === 'current'\r\n                              ? 'ring-2 ring-offset-1 ring-opacity-60'\r\n                              : ''\r\n                            } cursor-pointer`}\r\n                        >\r\n                          {item.currentPerformanceLabel === 'Current Top' ? (\r\n                            <ArrowUp size={12} className=\"mr-1\" />\r\n                          ) : (\r\n                            <ArrowDown size={12} className=\"mr-1\" />\r\n                          )}\r\n                          {item.currentPerformanceLabel.split(' ')[1]}\r\n                        </span>\r\n                      )}\r\n                      {item.allTimePerformanceLabel && (\r\n                        <span\r\n                          onClick={() => handleClickLabel(item.allTimePerformanceLabel, 'allTime')}\r\n                          className={`inline-flex items-center px-2 py-1 rounded-md text-xs font-medium ${item.allTimePerformanceLabel === 'All Time Top'\r\n                            ? 'bg-blue-100 text-blue-800'\r\n                            : 'bg-orange-100 text-orange-800'\r\n                            } ${filterLabel === item.allTimePerformanceLabel && filterType === 'allTime'\r\n                              ? 'ring-2 ring-offset-1 ring-opacity-60'\r\n                              : ''\r\n                            } cursor-pointer`}\r\n                        >\r\n                          {item.allTimePerformanceLabel === 'All Time Top' ? (\r\n                            <Award size={12} className=\"mr-1\" />\r\n                          ) : (\r\n                            <ThumbsDown size={12} className=\"mr-1\" />\r\n                          )}\r\n                          All-time\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                )}\r\n                <td\r\n                  className=\"p-3 text-sm font-normal sticky left-[150px] bg-white z-20 shadow-[2px_0_0_0_rgba(0,0,0,0.1)] border-r border-gray-300\"\r\n                  style={{\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    whiteSpace: 'nowrap',\r\n                    left: `${columns[0] !== 'Date' ? columnWidths[0] : 0}px`,\r\n                  }}\r\n                >\r\n                  {item[columns[0]]}\r\n                </td>\r\n                {columns.slice(1).map((column) => {\r\n                  const cellValue = item[column as keyof typeof item];\r\n                  const isComparisonColumn = comparisonColumns.includes(column);\r\n                  const isPairedColumn = column in columnPairs;\r\n\r\n                  let colorClass = 'text-gray-800';\r\n                  if (isComparisonColumn) {\r\n                    colorClass = getConditionalColors(cellValue as number, averageValues[column]);\r\n                  } else if (isPairedColumn) {\r\n                    const rateColumn = columnPairs[column as keyof typeof columnPairs];\r\n                    const rateValue = item[rateColumn] as number;\r\n                    colorClass = getConditionalColors(rateValue, averageValues[rateColumn]);\r\n                  }\r\n                  return (\r\n                    <td\r\n                      key={column}\r\n                      className={`p-3 text-sm font-normal border-r border-gray-300 ${colorClass}`}\r\n                      style={{\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis',\r\n                        whiteSpace: 'nowrap',\r\n                      }}\r\n                    >\r\n                      <div className=\"flex items-center justify-center gap-2\">\r\n                        {column.includes('Rate')\r\n                          ? `${(cellValue as number).toFixed(2)}%`\r\n                          : cellValue}\r\n                      </div>\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {!isFullScreen && (\r\n        <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between gap-4\">\r\n          <div className=\"text-sm text-muted-foreground\">\r\n            Showing {((currentPage - 1) * rowsPerPage) + 1} to {Math.min(currentPage * rowsPerPage, filteredData.length)} of {filteredData.length} entries\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n              onClick={() => goToPage(1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <ChevronsLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"h-8 w-8 p-0\"\r\n              onClick={() => goToPage(currentPage - 1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <div className=\"flex items-center justify-center text-sm font-medium\">\r\n              Page {currentPage} of {pageCount}\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"h-8 w-8 p-0\"\r\n              onClick={() => goToPage(currentPage + 1)}\r\n              disabled={currentPage === pageCount}\r\n            >\r\n              <ChevronRight className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n              onClick={() => goToPage(pageCount)}\r\n              disabled={currentPage === pageCount}\r\n            >\r\n              <ChevronsRight className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ReportTable);","import { useState, useEffect } from 'react'\r\nimport { Filter } from 'lucide-react'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\n\r\nexport interface FilterItem {\r\n  column: string\r\n  operator: '>' | '<' | '=' \r\n  value: string\r\n}\r\n\r\ninterface FilterComponentProps {\r\n  columns: string[],\r\n  filters: FilterItem[];\r\n  setFilters: (filters: FilterItem[]) => void;\r\n  onFiltersChange: (filters: FilterItem[]) => void\r\n}\r\n\r\nexport function FilterComponent({ columns, onFiltersChange,filters,setFilters }: FilterComponentProps) {\r\n  const [filterColumn, setFilterColumn] = useState<string>('')\r\n  const [filterOperator, setFilterOperator] = useState<FilterItem['operator']>('>')\r\n  const [filterValue, setFilterValue] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    onFiltersChange(filters)\r\n  }, [filters, onFiltersChange])\r\n\r\n  const addFilter = () => {\r\n    if (filterColumn && filterValue) {\r\n      setFilters([...filters, { column: filterColumn, operator: filterOperator, value: filterValue }])\r\n      setFilterColumn('')\r\n      setFilterValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DropdownMenu>\r\n        <DropdownMenuTrigger asChild>\r\n          <Button variant=\"outline\" size={\"icon\"}>\r\n            <Filter className=\"h-4 w-4\" />\r\n          </Button>\r\n        </DropdownMenuTrigger>\r\n        <DropdownMenuContent className=\"w-80 p-4\">\r\n          <div className=\"flex flex-col gap-4\">\r\n            <Select value={filterColumn} onValueChange={(value) => {\r\n              setFilterColumn(value)\r\n            }}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select column\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {columns.map((column) => (\r\n                  <SelectItem key={column} value={column}>{column}</SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n            <Select value={filterOperator} onValueChange={(value) => setFilterOperator(value as FilterItem['operator'])}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select operator\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n\r\n                    <SelectItem value=\">\">Greater than</SelectItem>\r\n                    <SelectItem value=\"<\">Less than</SelectItem>\r\n                    <SelectItem value=\"=\">Equal to</SelectItem>\r\n            \r\n            \r\n              </SelectContent>\r\n            </Select>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Enter filter value\"\r\n              value={filterValue}\r\n              onChange={(e) => setFilterValue(e.target.value)}\r\n            />\r\n            <Button onClick={addFilter}>Add Filter</Button>\r\n          </div>\r\n        </DropdownMenuContent>\r\n      </DropdownMenu>\r\n    </div>\r\n  )\r\n}","import React, { createContext, useContext, useState } from \"react\";\r\n\r\ninterface TokenErrorContextType {\r\n  tokenError: boolean;\r\n  setTokenError: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst TokenErrorContext = createContext<TokenErrorContextType>({\r\n  tokenError: false,\r\n  setTokenError: () => {}\r\n});\r\n\r\nexport const TokenErrorProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [tokenError, setTokenError] = useState(false);\r\n\r\n  return (\r\n    <TokenErrorContext.Provider value={{ tokenError, setTokenError }}>\r\n      {children}\r\n    </TokenErrorContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTokenError = () => useContext(TokenErrorContext);\r\n","import axios, { AxiosInstance, AxiosError} from 'axios';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTokenError } from \"@/context/TokenErrorContext\";\r\n\r\n/**\r\n * Creates a custom Axios instance with cancelable requests.\r\n * @returns {AxiosInstance} Configured Axios instance.\r\n */\r\nconst createAxiosInstance = (): AxiosInstance => {\r\n\r\n    const navigate = useNavigate();\r\n    const { setTokenError } = useTokenError();\r\n\r\n  const axiosInstance: AxiosInstance = axios.create({\r\n    baseURL: import.meta.env.PROD\r\n      ? import.meta.env.VITE_API_URL as string\r\n      : import.meta.env.VITE_LOCAL_API_URL as string,\r\n    withCredentials: true, \r\n  });\r\n\r\n\r\n  // Add a response interceptor\r\n  axiosInstance.interceptors.response.use(\r\n    (response) => response,\r\n    (error: AxiosError) => {\r\n      if (error.response?.status === 401) {\r\n    \r\n          localStorage.removeItem('user');\r\n          navigate('/');\r\n        \r\n      }else if (error.response?.status === 403) {\r\n        setTokenError(true);\r\n      }\r\n      return Promise.reject(error); \r\n    }\r\n  );\r\n\r\n  return axiosInstance;\r\n};\r\n\r\nexport default createAxiosInstance;","import { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { format } from \"date-fns\";\r\nimport { ChevronDown, Columns, RefreshCw, X, Maximize, Minimize } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport ReportTable from \"@/pages/ReportPage/component/ReportTable\";\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\";\r\nimport { Ga4Logo } from \"../../GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { useUser } from \"@/context/UserContext\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\n\r\n\r\ninterface CityMetric {\r\n  \"city\": string;\r\n  \"country\": string;\r\n  \"region\": string;\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\ninterface CitySessionProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst CitySessionPage: React.FC<CitySessionProps> = ({ dateRange: propDateRange }) => {\r\n  const [date, setDate] = useState<DateRange | undefined>(propDateRange);\r\n  const [allTimeData, setAllTimeData]= useState<CityMetric[]>([]);\r\n  const [filteredData, setFilteredData] = useState<CityMetric[]>([]);\r\n  const [data, setData] = useState<CityMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  \r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState<string>('50');\r\n  const [filters, setFilters] = useState<FilterItem[]>([]);\r\n  const [removedColumns, setRemovedColumns] = useState<string[]>([]);\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n  const {user} = useUser();\r\n\r\n\r\n  const allColumns = ['city', 'country', 'region', 'Visitors', 'Sessions', 'Add To Cart', 'Add To Cart Rate', 'Checkouts', 'Checkout Rate', 'Purchases', 'Purchase Rate'];\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column) // Remove column from selected\r\n        : [...prev, column]; // Add column to selected\r\n\r\n      setRemovedColumns(prevRemoved => {\r\n        // Add or remove from removedColumns only if column is 'city', 'region', or 'country'\r\n        if (['city', 'region', 'country'].includes(column)) {\r\n          if (newColumns.includes(column)) {\r\n            // If re-selected, remove from removedColumns\r\n            return prevRemoved.filter(col => col !== column);\r\n          } else {\r\n            // If deselected, add to removedColumns\r\n            return [...prevRemoved, column];\r\n          }\r\n        }\r\n        // For other columns, keep removedColumns unchanged\r\n        return prevRemoved;\r\n      });\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelectedColumns(allColumns);\r\n  }, []);\r\n\r\n  // Update date state when prop changes\r\n  useEffect(() => {\r\n    setDate(propDateRange);\r\n  }, [propDateRange]);\r\n\r\n  const fetchMetrics = useCallback(async () => { \r\n    setIsLoading(true);\r\n    try {\r\n      // Ensure startDate and endDate are derived from the date state\r\n      const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n      const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n      // Fetch all-time and date-specific metrics in parallel\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axiosInstance.post(\r\n          `/api/analytics/locationReport/${brandId}`,\r\n          {\r\n            startDate: startDate || \"\",\r\n            endDate: endDate || \"\",\r\n            userId:user?.id,limit: rowsToShow,\r\n            ...(removedColumns.length > 0\r\n              ? { filters: { location: removedColumns } }\r\n              : {}),\r\n          },\r\n          { withCredentials: true }\r\n        ),\r\n        axiosInstance.post(\r\n          `/api/analytics/locationReport/${brandId}`,\r\n          { startDate: \"\", endDate: \"\",userId:user?.id,limit: rowsToShow, ...(removedColumns.length > 0\r\n            ? { filters: { location: removedColumns } }\r\n            : {}) },\r\n          { withCredentials: true }\r\n        ),\r\n      ]);\r\n\r\n      // Process the responses\r\n      const fetchedData = analyticsResponse.data.data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data.data || [];\r\n\r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n\r\n      // Ensure selected columns match fetched data\r\n      if (fetchedData.length > 0) {\r\n        const newColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? newColumns\r\n            : prevSelected.filter((col) => newColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching metrics:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, removedColumns, date,rowsToShow]);\r\n\r\n  // Use fetchMetrics in useEffect\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n    const intervalId = setInterval(fetchMetrics, 5 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchMetrics]);\r\n\r\n  // Manual refresh handler\r\n  const handleManualRefresh = () => {\r\n    fetchMetrics();\r\n  };\r\n\r\n  \r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const sortedSelectedColumns = useMemo(() => {\r\n    return allColumns.filter((col) => selectedColumns.includes(col));\r\n  }, [allColumns, selectedColumns]);\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n    \r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof CityMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate'];\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n    <CardContent className=\"mt-4\">\r\n      <div className=\"space-y-4\">\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Location Analytics</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n            <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button variant=\"outline\" size={\"icon\"}>\r\n                  <Columns className=\"h-4 w-4\" />\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent className=\"w-56\">\r\n                {allColumns.map((column) => (\r\n                  <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                    <Checkbox\r\n                      id={`column-${column}`}\r\n                      checked={selectedColumns.includes(column)}\r\n                      onCheckedChange={() => toggleColumnSelection(column)}\r\n                    />\r\n                    <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                      {column}\r\n                    </label>\r\n                  </DropdownMenuItem>\r\n                ))}\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n            <FilterComponent\r\n              columns={numericColumns}\r\n              onFiltersChange={applyFilters}\r\n              filters={filters}\r\n              setFilters={setFilters}\r\n            />\r\n             <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n             <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button variant=\"outline\">\r\n                  Show {rowsToShow === '10000' ? 'all' : rowsToShow} rows\r\n                  <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent>\r\n                <DropdownMenuItem onSelect={() => setRowsToShow('50')}>Show 50 rows</DropdownMenuItem>\r\n                <DropdownMenuItem onSelect={() => setRowsToShow('100')}>Show 100 rows</DropdownMenuItem>\r\n                <DropdownMenuItem onSelect={() => setRowsToShow('10000')}>Show all rows</DropdownMenuItem>\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n          </div>\r\n        </div>\r\n\r\n        {filters.length > 0 && (\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {filters.map((filter, index) => (\r\n              <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                  <X className=\"h-3 w-3\" />\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {isLoading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData}  allTimeData={allTimeData} isFullScreen={isFullScreen} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  </Card>\r\n  );\r\n};\r\n\r\nexport default CitySessionPage;","import { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { format } from \"date-fns\";\r\nimport { ChevronDown, Columns, RefreshCw, X, Maximize, Minimize } from 'lucide-react';\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport ReportTable from \"@/pages/ReportPage/component/ReportTable\";\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\";\r\nimport { Ga4Logo } from \"../../GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { useUser } from \"@/context/UserContext\";\r\nimport { Card, CardContent} from \"@/components/ui/card\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\n\r\nexport interface PageMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\ninterface LandingPageSessionProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst LandingPageSession: React.FC<LandingPageSessionProps> = ({ dateRange: propDateRange }) => {\r\n  const [date, setDate] = useState<DateRange | undefined>(propDateRange);\r\n  const [allTimeData, setAllTimeData] = useState<PageMetric[]>([]);\r\n  const [filteredData, setFilteredData] = useState<PageMetric[]>([]);\r\n  const [filters, setFilters] = useState<FilterItem[]>([]); \r\n  const [data, setData] = useState<PageMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState<string>('50');\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n\r\n  const { user } = useUser();\r\n\r\n\r\n  useEffect(() => {\r\n    setDate(propDateRange);\r\n  }, [propDateRange]);\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n\r\n      // Fetch all-time and date-specific metrics\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axiosInstance.post(`/api/analytics/landingpageReport/${brandId}`, {\r\n          startDate: startDate || \"\",\r\n          endDate: endDate || \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true }),\r\n        axiosInstance.post(`/api/analytics/landingpageReport/${brandId}`, {\r\n          startDate: \"\",\r\n          endDate: \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true })\r\n      ]);\r\n\r\n      const fetchedData = analyticsResponse.data.data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data.data || [];\r\n\r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n\r\n      if (fetchedData.length > 0) {\r\n        const allColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? allColumns\r\n            : prevSelected.filter((col) => allColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    \r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, rowsToShow]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof PageMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate'];\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index)); // Fixed filter reference\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen); // Toggle full-screen state\r\n  };\r\n\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent className=\"mt-4\">\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <h2 className=\"text-lg font-medium\">Landing Page Analytics</h2>\r\n              <Ga4Logo />\r\n            </div>\r\n            <div className=\"flex flex-wrap items-center gap-3\">\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" size={\"icon\"}>\r\n                    <Columns className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent className=\"w-56\">\r\n                  {allColumns.map((column) => (\r\n                    <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        id={`column-${column}`}\r\n                        checked={selectedColumns.includes(column)}\r\n                        onCheckedChange={() => toggleColumnSelection(column)}\r\n                      />\r\n                      <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                        {column}\r\n                      </label>\r\n                    </DropdownMenuItem>\r\n                  ))}\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n              <FilterComponent\r\n                columns={numericColumns}\r\n                onFiltersChange={applyFilters}\r\n                filters={filters}\r\n                setFilters={setFilters}\r\n              />\r\n               <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n              </Button>\r\n               <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\">\r\n                    Show {rowsToShow === '10000' ? 'all' : rowsToShow} rows\r\n                    <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('50')}>Show 50 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('100')}>Show 100 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('10000')}>Show all rows</DropdownMenuItem>\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n            </div>\r\n          </div>\r\n\r\n          {filters.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {filters.map((filter, index) => (\r\n                <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                  <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                  <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                    <X className=\"h-3 w-3\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"rounded-md overflow-hidden\">\r\n            {isLoading ? (\r\n              <TableSkeleton />\r\n            ) : (\r\n              <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData}  allTimeData={allTimeData} isFullScreen={isFullScreen} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LandingPageSession;","import { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { format } from \"date-fns\";\r\nimport { ChevronDown, Columns, RefreshCw, X, Maximize, Minimize } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport ReportTable from \"@/pages/ReportPage/component/ReportTable\";\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { useUser } from \"@/context/UserContext\"\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\n\r\ninterface AgeMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\ninterface AgeBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst AgeReportPage: React.FC<AgeBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const [date, setDate] = useState<DateRange | undefined>(propDateRange);\r\n  const [filteredData, setFilteredData] = useState<AgeMetric[]>([]);\r\n  const [allTimeData, setAllTimeData] = useState<AgeMetric[]>([]);\r\n  const [filters, setFilters] = useState<FilterItem[]>([]);\r\n  const [data, setData] = useState<AgeMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  // Use optional chaining to safely access date properties\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [isFullScreen, setIsFullScreen]= useState<boolean>(false);\r\n  const [rowsToShow, setRowsToShow] = useState<string>('50')\r\n  const {user} = useUser();\r\n\r\n  // Update date state when prop changes\r\n  useEffect(() => {\r\n    setDate(propDateRange);\r\n  }, [propDateRange]);\r\n\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n\r\n      // Fetch all-time and date-specific metrics\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axiosInstance.post(`/api/analytics/agereport/${brandId}`, {\r\n          startDate: startDate || \"\",\r\n          endDate: endDate || \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true }),\r\n        axiosInstance.post(`/api/analytics/agereport/${brandId}`, {\r\n          startDate: \"\",\r\n          endDate: \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true })\r\n      ]);\r\n\r\n      const fetchedData = analyticsResponse.data.data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data.data || [];\r\n\r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n\r\n      if (fetchedData.length > 0) {\r\n        const allColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? allColumns\r\n            : prevSelected.filter((col) => allColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      \r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, rowsToShow]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof AgeMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate'];\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent className=\"mt-4\">\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <h2 className=\"text-lg font-medium\">Age Analytics</h2>\r\n              <Ga4Logo />\r\n            </div>\r\n            <div className=\"flex flex-wrap items-center gap-3\">\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" size={\"icon\"}>\r\n                    <Columns className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent className=\"w-56\">\r\n                  {allColumns.map((column) => (\r\n                    <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        id={`column-${column}`}\r\n                        checked={selectedColumns.includes(column)}\r\n                        onCheckedChange={() => toggleColumnSelection(column)}\r\n                      />\r\n                      <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                        {column}\r\n                      </label>\r\n                    </DropdownMenuItem>\r\n                  ))}\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n              <FilterComponent\r\n                columns={numericColumns}\r\n                onFiltersChange={applyFilters}\r\n                filters={filters}\r\n                setFilters={setFilters}\r\n              />\r\n              <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n              </Button>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\">\r\n                    Show {rowsToShow === '10000' ? 'all' : rowsToShow} rows\r\n                    <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('50')}>Show 50 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('100')}>Show 100 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('10000')}>Show all rows</DropdownMenuItem>\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n            </div>\r\n          </div>\r\n\r\n          {filters.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {filters.map((filter, index) => (\r\n                <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                  <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                  <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                    <X className=\"h-3 w-3\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"rounded-md overflow-hidden\">\r\n            {isLoading ? (\r\n              <TableSkeleton />\r\n            ) : (\r\n              <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData} allTimeData={allTimeData} isFullScreen={isFullScreen} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AgeReportPage;","import { useState, useCallback, useEffect, useMemo } from \"react\"\r\nimport { useParams } from 'react-router-dom'\r\nimport { format } from \"date-fns\"\r\nimport { ChevronDown, Columns, RefreshCw, X, Maximize, Minimize } from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport ReportTable from \"@/pages/ReportPage/component/ReportTable\"\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\"\r\nimport { Ga4Logo } from \"../../GeneralisedDashboard/components/OtherPlatformModalContent\"\r\nimport { useUser } from \"@/context/UserContext\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\"\r\n\r\n\r\ninterface GenderMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\ninterface GenderBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst GenderReportPage: React.FC<GenderBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const [date, setDate] = useState<DateRange | undefined>(propDateRange);\r\n  const [filteredData, setFilteredData] = useState<GenderMetric[]>([])\r\n  const [allTimeData, setAllTimeData] = useState<GenderMetric[]>([])\r\n  const [filters, setFilters] = useState<FilterItem[]>([])\r\n  const [data, setData] = useState<GenderMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n  const {user} = useUser();\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  \r\n  // Use optional chaining to safely access date properties\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  \r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState<string>('50')\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n\r\n  // Update date state when prop changes\r\n  useEffect(() => {\r\n    setDate(propDateRange);\r\n  }, [propDateRange]);\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n\r\n      // Fetch all-time and date-specific metrics\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axiosInstance.post(`/api/analytics/genderReport/${brandId}`, {\r\n          startDate: startDate || \"\",\r\n          endDate: endDate || \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true }),\r\n        axiosInstance.post(`/api/analytics/genderReport/${brandId}`, {\r\n          startDate: \"\",\r\n          endDate: \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true })\r\n      ]);\r\n  \r\n      const fetchedData = analyticsResponse.data.data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data.data || [];\r\n  \r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n  \r\n      if (fetchedData.length > 0) {\r\n        const allColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? allColumns\r\n            : prevSelected.filter((col) => allColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, rowsToShow]);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n  \r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof GenderMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index))\r\n  }\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate']\r\n  \r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n    <CardContent className=\"mt-4\">\r\n      <div className=\"space-y-4\">\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Gender Analytics</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n            <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button variant=\"outline\" size={\"icon\"}>\r\n                  <Columns className=\"h-4 w-4\" />\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent className=\"w-56\">\r\n                {allColumns.map((column) => (\r\n                  <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                    <Checkbox\r\n                      id={`column-${column}`}\r\n                      checked={selectedColumns.includes(column)}\r\n                      onCheckedChange={() => toggleColumnSelection(column)}\r\n                    />\r\n                    <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                      {column}\r\n                    </label>\r\n                  </DropdownMenuItem>\r\n                ))}\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n            <FilterComponent\r\n              columns={numericColumns}\r\n              onFiltersChange={applyFilters}\r\n              filters={filters}\r\n              setFilters={setFilters}\r\n            />\r\n             <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n             <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button variant=\"outline\">\r\n                  Show {rowsToShow === '10000' ? 'all' : rowsToShow} rows\r\n                  <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent>\r\n                <DropdownMenuItem onSelect={() => setRowsToShow('50')}>Show 50 rows</DropdownMenuItem>\r\n                <DropdownMenuItem onSelect={() => setRowsToShow('100')}>Show 100 rows</DropdownMenuItem>\r\n                <DropdownMenuItem onSelect={() => setRowsToShow('10000')}>Show all rows</DropdownMenuItem>\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n          </div>\r\n        </div>\r\n\r\n        {filters.length > 0 && (\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {filters.map((filter, index) => (\r\n              <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                  <X className=\"h-3 w-3\" />\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {isLoading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData} allTimeData={allTimeData} isFullScreen={isFullScreen} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  </Card>\r\n  )\r\n}\r\n\r\nexport default GenderReportPage;","import { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { format } from \"date-fns\";\r\nimport { ChevronDown, Columns, RefreshCw, X, Maximize, Minimize } from 'lucide-react';\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport ReportTable from \"@/pages/ReportPage/component/ReportTable\";\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { useUser } from \"@/context/UserContext\";\r\nimport { Card, CardContent} from \"@/components/ui/card\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\n\r\ninterface ChannelMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\nconst ChannelSessionPage: React.FC<{ dateRange?: DateRange }> = ({ dateRange }) => {\r\n  const [date, setDate] = useState<DateRange | undefined>(dateRange);\r\n  const [filteredData, setFilteredData] = useState<ChannelMetric[]>([]);\r\n  const [allTimeData, setAllTimeData] = useState<ChannelMetric[]>([]);\r\n  const [filters, setFilters] = useState<FilterItem[]>([]);\r\n  const [data, setData] = useState<ChannelMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState<string>('50');\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n  const { user } = useUser();\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  // Update date state when dateRange changes\r\n  useEffect(() => {\r\n    setDate(dateRange);\r\n  }, [dateRange]);\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axiosInstance.post(`/api/analytics/channelReport/${brandId}`, {\r\n          startDate: startDate || \"\",\r\n          endDate: endDate || \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true }),\r\n        axiosInstance.post(`/api/analytics/channelReport/${brandId}`, {\r\n          startDate: \"\",\r\n          endDate: \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true })\r\n      ]);\r\n\r\n      const fetchedData = analyticsResponse.data.data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data.data || [];\r\n\r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n\r\n      if (fetchedData.length > 0) {\r\n        const allColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? allColumns\r\n            : prevSelected.filter((col) => allColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      \r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, rowsToShow]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof ChannelMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate'];\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    if (!isFullScreen) {\r\n      document.documentElement.requestFullscreen();\r\n    } else {\r\n      document.exitFullscreen();\r\n    }\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fullScreenChangeHandler = () => {\r\n      setIsFullScreen(!!document.fullscreenElement);\r\n    };\r\n\r\n    document.addEventListener('fullscreenchange', fullScreenChangeHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener('fullscreenchange', fullScreenChangeHandler);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent className=\"mt-4\">\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <h2 className=\"text-lg font-medium\">Referring Channel Analytics</h2>\r\n              <Ga4Logo />\r\n            </div>\r\n            <div className=\"flex flex-wrap items-center gap-3\">\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" size={\"icon\"}>\r\n                    <Columns className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent className=\"w-56\">\r\n                  {allColumns.map((column) => (\r\n                    <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        id={`column-${column}`}\r\n                        checked={selectedColumns.includes(column)}\r\n                        onCheckedChange={() => toggleColumnSelection(column)}\r\n                      />\r\n                      <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                        {column}\r\n                      </label>\r\n                    </DropdownMenuItem>\r\n                  ))}\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n              <FilterComponent\r\n                columns={numericColumns}\r\n                onFiltersChange={applyFilters}\r\n                filters={filters}\r\n                setFilters={setFilters}\r\n              />\r\n              <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n              </Button>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\">\r\n                    Show {rowsToShow === '10000' ? 'all' : rowsToShow} rows\r\n                    <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('50')}>Show 50 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('100')}>Show 100 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('10000')}>Show all rows</DropdownMenuItem>\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n            </div>\r\n          </div>\r\n\r\n          {filters.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {filters.map((filter, index) => (\r\n                <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                  <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                  <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                    <X className=\"h-3 w-3\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"rounded-md overflow-hidden\">\r\n            {isLoading ? (\r\n              <TableSkeleton />\r\n            ) : (\r\n              <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData}  allTimeData={allTimeData} isFullScreen={isFullScreen} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChannelSessionPage;\r\n\r\n","import ProductTab from \"./component/ProductTab\";\r\nimport SearchTermTable from \"./component/SearchTermTable\";\r\nimport { useParams } from 'react-router-dom'\r\nimport AgeGenderMetrics from \"./component/AgeGenderMetrics\";\r\nimport CityBasedReports from '@/pages/ReportPage/component/CitySessionPage';\r\nimport LandingPageSession from \"../ReportPage/component/LandingPageSession\";\r\nimport AgeReportPage from \"../ReportPage/component/AgeReportPage\";\r\nimport GenderBasedReports from '@/pages/ReportPage/component/GenderReportPage';\r\nimport ChannelSessionPage from \"../ReportPage/component/RefferingChannelPage\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\n\r\nexport default function Dashboard() {\r\n  const { brandId } = useParams()\r\n    if (!brandId) {\r\n        console.error(\"Brand ID is not defined\");\r\n        return <div>Error: Brand ID is missing</div>;\r\n    }\r\n\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n\r\n    const dateRange={\r\n      from: date.from ? new Date(date.from) : undefined,\r\n      to: date.to ? new Date(date.to) : undefined \r\n    }\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen overflow-hidden\">\r\n       <nav className=\"sticky top-0 z-10 bg-white border-b border-gray-200 px-4 py-4 md:px-6 lg:px-8\">\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n          <h1 className=\"text-2xl font-bold\">Segment Dashboard</h1>\r\n      \r\n        <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                  \r\n                    \r\n                  />\r\n                </div>\r\n                </div>\r\n      </nav>\r\n      <div className=\"flex flex-col p-6 gap-6 overflow-auto\">\r\n      <ProductTab />\r\n      <SearchTermTable />\r\n      <AgeGenderMetrics />\r\n      <section className=\"mb-6\">\r\n                  <CityBasedReports dateRange={dateRange} />\r\n                </section>\r\n                <section className=\"mb-6\">\r\n                  <LandingPageSession dateRange={dateRange} />\r\n                </section>\r\n                <section className=\"mb-6\">\r\n                  <ChannelSessionPage dateRange={dateRange} />\r\n                </section>\r\n                <section className=\"mb-6\">\r\n                  <AgeReportPage dateRange={dateRange} />\r\n                </section>\r\n                <section className=\"mb-6\">\r\n                  <GenderBasedReports dateRange={dateRange} />\r\n                </section>\r\n      </div>\r\n  \r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\";\r\n const SegmentDashboard : React.FC=()=>{\r\n    return (\r\n        <div className=\"flex h-screen\"> \r\n        <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n       <Dashboard />\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\nexport default SegmentDashboard;","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useToast } from '../hooks/use-toast';\r\nimport { useDispatch} from 'react-redux';\r\nimport { setUser } from '@/store/slices/UserSlice'\r\n\r\n\r\nconst GoogleCallback = () => {\r\n    const navigate = useNavigate();\r\n    const { toast } = useToast();\r\n    const dispatch = useDispatch();\r\n    const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n        useEffect(() => {\r\n            const handleOauthCallback = async () => {\r\n                try {\r\n                    const queryParams = new URLSearchParams(window.location.search);\r\n                    const googletoken = queryParams.get('token');\r\n                    const fbToken = queryParams.get('fbToken');\r\n                    const googleRefreshToken = queryParams.get('googleRefreshToken');\r\n        \r\n                    // Helper function for token update\r\n                    const updateToken = async (url: string, token: string, type: string) => {\r\n                        const response = await axios.get(`${baseURL}${url}?${type}=${token}`, { withCredentials: true });\r\n                        if (response.data.success) {\r\n                            console.log(`${type} token updated successfully, redirecting to /dashboard`);\r\n                            navigate('/dashboard');\r\n                            return true;\r\n                        } else {\r\n                            console.error(`Failed to update ${type} token`);\r\n                            toast({\r\n                                title: 'Update Failed',\r\n                                description: `Unable to update ${type} token.`,\r\n                                variant: 'destructive',\r\n                            });\r\n                            navigate('/');\r\n                            return false;\r\n                        }\r\n                    };\r\n        \r\n                    if (googletoken) {\r\n                        console.log('Token found, proceeding with login');\r\n                        const login = await axios.post(`${baseURL}/api/auth/login/oauth?auth_token=${googletoken}`, { email: null, password: null });\r\n        \r\n                        if (login.data.success) {\r\n                            console.log('Login successful, redirecting to /dashboard');\r\n                            dispatch(setUser(login.data.user));\r\n                            navigate('/dashboard');\r\n                            return;\r\n                        } else {\r\n                            console.log('Login failed, redirecting to /');\r\n                            toast({\r\n                                title: 'Login Failed',\r\n                                description: 'Unable to authenticate with Google.',\r\n                                variant: 'destructive',\r\n                            });\r\n                            navigate('/');\r\n                            return;\r\n                        }\r\n                    }\r\n        \r\n                    if (fbToken) {\r\n                        await updateToken('/api/auth/updateTokens/facebook', fbToken, 'fbToken');\r\n                        return;\r\n                    }\r\n        \r\n                    if (googleRefreshToken) {\r\n                        await updateToken('/api/auth/updateTokens/google', googleRefreshToken, 'googleRefreshToken');\r\n                        return;\r\n                    }\r\n        \r\n                    console.log('No token present, redirecting to /');\r\n                    navigate('/');\r\n        \r\n                } catch (error) {\r\n                    console.error('Error during OAuth callback:', error);\r\n                    toast({\r\n                        title: 'Error',\r\n                        description: 'An error occurred while handling the login callback.',\r\n                        variant: 'destructive',\r\n                    });\r\n                    navigate('/');\r\n                }\r\n            };\r\n        \r\n            handleOauthCallback();\r\n        }, [navigate, setUser, toast, baseURL]);\r\n        \r\n\r\n    return null;\r\n};\r\n\r\nexport default GoogleCallback;","import React, { useState, useMemo, useRef, useEffect } from 'react';\r\nimport { ArrowUp, ArrowDown, ChevronsLeft, ChevronRight, ChevronsRight, ChevronLeft, GripVertical } from 'lucide-react';\r\nimport { PageMetric } from '@/pages/ReportPage/component/LandingPageSession';\r\nimport { Button } from '@/components/ui/button';\r\n\r\ninterface TableProps {\r\n  columns: string[];\r\n  data: any[];\r\n  allTimeData?: PageMetric[];\r\n  isFullScreen?: boolean;\r\n}\r\n\r\nconst getConditionalColors = (value: number, average: number) => {\r\n  const epsilon = 0.0001;\r\n\r\n  if (value > average) return 'bg-green-100 text-green-800';\r\n  if (value < average) return 'bg-red-50 text-red-800';\r\n  if (Math.abs(value - average) < epsilon) return 'bg-yellow-100 text-yellow-700';\r\n\r\n  return 'bg-yellow-100 text-yellow-700';\r\n};\r\n\r\nconst NewReportTable: React.FC<TableProps> = ({\r\n  columns = [],\r\n  data = [],\r\n  isFullScreen,\r\n}) => {\r\n    const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n    const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\r\n    const [columnWidths, setColumnWidths] = useState<number[]>([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [loadedRows, setLoadedRows] = useState<any[]>([]);\r\n    const [columnOrder, setColumnOrder] = useState<string[]>(columns);\r\n    const [draggedColumn, setDraggedColumn] = useState<string | null>(null);\r\n    \r\n  \r\n    const rowsPerChunk = 30;\r\n    const rowsPerPage = 9;\r\n    const minColumnWidth = isFullScreen ? 100 : 150;\r\n  \r\n    const tableRef = useRef<HTMLTableElement>(null);\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const widthsRef = useRef<number[]>([]);\r\n  \r\n    const comparisonColumns = ['Add To Cart Rate', 'Checkout Rate', 'Purchase Rate', 'Sessions'];\r\n\r\n    useEffect(() => {\r\n      setColumnOrder(columns);\r\n    }, [columns]);\r\n  \r\n    const handleDragStart = (e: React.DragEvent, column: string) => {\r\n      setDraggedColumn(column);\r\n      e.dataTransfer.effectAllowed = 'move';\r\n    };\r\n  \r\n    const handleDragOver = (e: React.DragEvent) => {\r\n      e.preventDefault();\r\n      e.dataTransfer.dropEffect = 'move';\r\n    };\r\n  \r\n    const handleDrop = (e: React.DragEvent, targetColumn: string) => {\r\n      e.preventDefault();\r\n      if (!draggedColumn || draggedColumn === targetColumn) return;\r\n  \r\n      const newOrder = [...columnOrder];\r\n      const draggedIdx = newOrder.indexOf(draggedColumn);\r\n      const targetIdx = newOrder.indexOf(targetColumn);\r\n  \r\n      newOrder.splice(draggedIdx, 1);\r\n      newOrder.splice(targetIdx, 0, draggedColumn);\r\n  \r\n      setColumnOrder(newOrder);\r\n      setDraggedColumn(null);\r\n    };\r\n\r\n    const parsePercentage = (value: string | number): number => {\r\n        // If value is already a number, return it\r\n        if (typeof value === 'number') return value;\r\n        \r\n        // If value is undefined or null, return 0\r\n        if (!value) return 0;\r\n        \r\n        // If value is string, remove % and convert to number\r\n        return parseFloat(value.replace('%', '').trim()) || 0;\r\n      };\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const containerWidth = containerRef.current.clientWidth;\r\n      const totalColumns = columns.length;\r\n      \r\n      let initialWidths: number[];\r\n      if (isFullScreen) {\r\n        const equalWidth = Math.max(minColumnWidth, Math.floor(containerWidth / totalColumns));\r\n        initialWidths = columns.map(() => equalWidth);\r\n      } else {\r\n        initialWidths = columns.map((_, index) => \r\n          index === 0 ? 160 : 150\r\n        );\r\n      }\r\n      \r\n      setColumnWidths(initialWidths);\r\n      widthsRef.current = initialWidths;\r\n    }\r\n  }, [columns.length, isFullScreen]);\r\n\r\n \r\n\r\n\r\n\r\n  const averageValues = useMemo(() => {\r\n    const averages: Record<string, number> = {};\r\n    comparisonColumns.forEach((key) => {\r\n      const validData = data.filter(item => item[key] !== undefined && !isNaN(parsePercentage(item[key] || '0')));\r\n      const average = validData.length > 0\r\n        ? validData.reduce((sum, item) => sum + parsePercentage(item[key] || '0'), 0) / validData.length\r\n        : 0;\r\n\r\n      averages[key] = key === 'Sessions' ? Math.round(average) : parseFloat(average.toFixed(2));\r\n    });\r\n    return averages;\r\n  }, [data]);\r\n\r\n\r\n\r\n  const parsedData = useMemo(() =>\r\n    data.map((item) => ({\r\n      ...item,\r\n      Sessions: Number(item?.Sessions || 0),\r\n      'Add To Cart Rate': parsePercentage(item?.['Add To Cart Rate'] || '0'),\r\n      'Checkout Rate': parsePercentage(item?.['Checkout Rate'] || '0'),\r\n      'Purchase Rate': parsePercentage(item?.['Purchase Rate'] || '0'),\r\n    })), [data]);\r\n\r\n    const sortedData = useMemo(() => {\r\n        if (!sortColumn) return parsedData;\r\n      \r\n        return [...parsedData].sort((a, b) => {\r\n          const aValue = a[sortColumn];\r\n          const bValue = b[sortColumn];\r\n      \r\n          if (sortColumn === 'Date') {\r\n            const parseDateString = (dateStr: string) => {\r\n              const [day, month, year] = dateStr.split('-');\r\n              return new Date(`${year}-${month}-${day}`);\r\n            };\r\n      \r\n            const aDate = parseDateString(aValue);\r\n            const bDate = parseDateString(bValue);\r\n      \r\n            return sortDirection === 'asc'\r\n              ? aDate.getTime() - bDate.getTime()\r\n              : bDate.getTime() - aDate.getTime();\r\n          }\r\n      \r\n          // Handle numeric sorting for other columns\r\n          const aNum = typeof aValue === 'number'\r\n            ? aValue\r\n            : parseFloat((aValue || '0').toString().replace('%', '').trim());\r\n          const bNum = typeof bValue === 'number'\r\n            ? bValue\r\n            : parseFloat((bValue || '0').toString().replace('%', '').trim());\r\n      \r\n          if (aNum < bNum) return sortDirection === 'asc' ? -1 : 1;\r\n          if (aNum > bNum) return sortDirection === 'asc' ? 1 : -1;\r\n          return 0;\r\n        });\r\n      }, [parsedData, sortColumn, sortDirection]);\r\n\r\n  const isNumericColumn = (column: string) => {\r\n    return [\r\n      'Date',\r\n      'Add To Cart',\r\n      'Checkouts',\r\n      'Sessions',\r\n      'Purchases',\r\n      'Visitors',\r\n      ...comparisonColumns,\r\n    ].includes(column);\r\n  };\r\n\r\n  const handleSort = (column: string) => {\r\n    if (!isNumericColumn(column)) return;\r\n  \r\n    if (sortColumn === column) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortColumn(column);\r\n      setSortDirection('asc');\r\n    } \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFullScreen) {\r\n      setLoadedRows(sortedData.slice(0, rowsPerChunk));\r\n    }\r\n  }, [isFullScreen, sortedData, rowsPerChunk]);\r\n\r\n  const loadMoreRows = () => {\r\n    if (isFullScreen && loadedRows.length < sortedData.length) {\r\n      const nextChunk = sortedData.slice(\r\n        loadedRows.length,\r\n        loadedRows.length + rowsPerChunk\r\n      );\r\n      setLoadedRows(prev => [...prev, ...nextChunk]);\r\n    }\r\n  };\r\n\r\n  const handleScroll = (event: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n    const target = event.currentTarget;\r\n    if (target.scrollHeight - target.scrollTop <= target.clientHeight + 100) {\r\n      loadMoreRows();\r\n    }\r\n  };\r\n\r\n  const displayRows = useMemo(() => {\r\n    if (isFullScreen) {\r\n      return loadedRows;\r\n    }\r\n    return sortedData.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage);\r\n  }, [isFullScreen, loadedRows, sortedData, currentPage, rowsPerPage]);\r\n\r\n  const pageCount = Math.ceil(sortedData.length / rowsPerPage);\r\n\r\n  const goToPage = (page: number) => {\r\n    const pageNumber = Math.max(1, Math.min(page, pageCount));\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const columnPairs = {\r\n    'Add To Cart': 'Add To Cart Rate',\r\n    'Checkouts': 'Checkout Rate',\r\n    'Purchases': 'Purchase Rate'\r\n  };\r\n  const renderHeader = (column: string, colIndex: number) => {\r\n    const isComparisonCol = comparisonColumns.includes(column);\r\n\r\n    return (\r\n      <th\r\n        key={column}\r\n        className={`\r\n          relative font-bold p-1 text-gray-800 text-sm border-b-2\r\n          capitalize border-r border-gray-300\r\n          ${isNumericColumn(column) ? 'cursor-pointer' : ''}\r\n          ${colIndex === 0 && !isFullScreen ? 'sticky left-0 z-30 bg-gray-100' : ''}\r\n          ${draggedColumn === column ? 'opacity-50' : ''}\r\n          hover:bg-gray-200 transition-colors duration-200\r\n        `}\r\n        style={{\r\n          width: colIndex === 0 ? '180px' : `${columnWidths[colIndex]}px`,\r\n        }}\r\n        draggable\r\n        onDragStart={(e) => handleDragStart(e, column)}\r\n        onDragOver={handleDragOver}\r\n        onDrop={(e) => handleDrop(e, column)}\r\n      >\r\n        <div onClick={() => handleSort(column)} className=\"flex flex-col items-center\">\r\n          <div  className=\"flex items-center justify-center gap-2 mb-1\">\r\n            <GripVertical className=\"w-4 h-4 text-gray-400 cursor-grab\" />\r\n            <span >{column}</span>\r\n            {isNumericColumn(column) && (\r\n              <span className=\"ml-2\">\r\n                {sortColumn === column ? (\r\n                  sortDirection === 'asc' ? (\r\n                    <ArrowUp className=\"w-4 h-4 text-blue-600\" />\r\n                  ) : (\r\n                    <ArrowDown className=\"w-4 h-4 text-blue-600\" />\r\n                  )\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </span>\r\n            )}\r\n          </div>\r\n          {isComparisonCol && averageValues[column] !== undefined && (\r\n            <span className=\"text-xs text-gray-500\">\r\n              avg: {column === 'Sessions'\r\n                ? Math.round(averageValues[column])\r\n                : averageValues[column]?.toFixed(2)}\r\n              {column !== 'Sessions' ? '%' : ''}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </th>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={containerRef}\r\n        className=\"rounded-md overflow-x-auto relative border\"\r\n        style={{\r\n          width: '100%',\r\n          maxHeight: isFullScreen ? 'calc(100vh - 105px)' : 'calc(100vh - 200px)',\r\n          overflowX: isFullScreen ? 'hidden' : 'auto',\r\n        }}\r\n        onScroll={isFullScreen ? handleScroll : undefined}\r\n      >\r\n        <table\r\n          ref={tableRef}\r\n          className=\"w-full text-center shadow-lg rounded-lg border border-gray-200\"\r\n          style={{\r\n            tableLayout: 'fixed',\r\n            width: isFullScreen ? '100%' : 'auto',\r\n            borderCollapse: 'separate',\r\n            borderSpacing: 0,\r\n          }}\r\n        >\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              {columnOrder.map((column, index) => renderHeader(column, index))}\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {displayRows.map((item, rowIndex) => (\r\n              <tr\r\n                key={rowIndex}\r\n                className={`${\r\n                  rowIndex % 2 === 0 ? 'bg-gray-50' : 'bg-white'\r\n                } hover:bg-gray-100 transition-colors duration-200`}\r\n              >\r\n                {columnOrder.map((column, colIndex) => {\r\n                  const cellValue = item[column];\r\n                  const isComparisonColumn = comparisonColumns.includes(column);\r\n                  const isPairedColumn = column in columnPairs;\r\n\r\n                  let colorClass = 'text-gray-800';\r\n                  if (isComparisonColumn) {\r\n                    colorClass = getConditionalColors(cellValue as number, averageValues[column]);\r\n                  } else if (isPairedColumn) {\r\n                    const rateColumn = columnPairs[column as keyof typeof columnPairs];\r\n                    const rateValue = item[rateColumn] as number;\r\n                    colorClass = getConditionalColors(rateValue, averageValues[rateColumn]);\r\n                  }\r\n\r\n                  return (\r\n                    <td\r\n                      key={`${rowIndex}-${column}`}\r\n                      className={`p-3 text-sm font-normal border-r border-gray-300 ${colorClass} ${\r\n                        colIndex === 0 && !isFullScreen\r\n                          ? 'sticky left-0 z-20 bg-inherit'\r\n                          : ''\r\n                      }`}\r\n                      style={{\r\n                        width: colIndex === 0 ? '150px' : `${columnWidths[colIndex]}px`,\r\n                      }}\r\n                    >\r\n                      <div className=\"flex items-center justify-center gap-2\">\r\n                        {column.includes('Rate')\r\n                          ? `${(cellValue as number).toFixed(2)}%`\r\n                          : cellValue}\r\n                      </div>\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n      {!isFullScreen && (\r\n        <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between gap-4\">\r\n          <div className=\"text-sm text-muted-foreground\">\r\n          Showing {((currentPage - 1) * rowsPerPage) + 1} to {Math.min(currentPage * rowsPerPage, sortedData.length)} of {sortedData.length} entries\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n              onClick={() => goToPage(1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <ChevronsLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"h-8 w-8 p-0\"\r\n              onClick={() => goToPage(currentPage - 1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <div className=\"flex items-center justify-center text-sm font-medium\">\r\n              Page {currentPage} of {pageCount}\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"h-8 w-8 p-0\"\r\n              onClick={() => goToPage(currentPage + 1)}\r\n              disabled={currentPage === pageCount}\r\n            >\r\n              <ChevronRight className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n              onClick={() => goToPage(pageCount)}\r\n              disabled={currentPage === pageCount}\r\n            >\r\n              <ChevronsRight className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(NewReportTable);","import * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n      {children}\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","import { useState } from 'react';\r\nimport { Sheet, SheetContent, SheetHeader, SheetTitle, SheetDescription, SheetTrigger } from \"@/components/ui/sheet\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Search, Settings2, GripVertical } from \"lucide-react\";\r\n\r\ninterface ColumnManagementSheetProps {\r\n  visibleColumns: string[];\r\n  columnOrder: string[];\r\n  onVisibilityChange: (columns: string[]) => void;\r\n  onOrderChange: (order: string[]) => void;\r\n}\r\n\r\nconst ColumnManagementSheet: React.FC<ColumnManagementSheetProps> = ({ \r\n  visibleColumns, \r\n  columnOrder,\r\n  onVisibilityChange,\r\n  onOrderChange \r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [draggedColumn, setDraggedColumn] = useState<string | null>(null);\r\n  const [dropTargetColumn, setDropTargetColumn] = useState<string | null>(null);\r\n\r\n  const filteredColumns = columnOrder.filter(column =>\r\n    column.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleDragStart = (column: string) => {\r\n    setDraggedColumn(column);\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent, column: string) => {\r\n    e.preventDefault();\r\n    if (column !== draggedColumn) {\r\n      setDropTargetColumn(column);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (targetColumn: string) => {\r\n    if (!draggedColumn || draggedColumn === targetColumn) return;\r\n\r\n    const newOrder = [...columnOrder];\r\n    const draggedIdx = newOrder.indexOf(draggedColumn);\r\n    const targetIdx = newOrder.indexOf(targetColumn);\r\n\r\n    newOrder.splice(draggedIdx, 1);\r\n    newOrder.splice(targetIdx, 0, draggedColumn);\r\n\r\n    onOrderChange(newOrder);\r\n    setDraggedColumn(null);\r\n    setDropTargetColumn(null);\r\n  };\r\n\r\n  const toggleColumnVisibility = (column: string) => {\r\n    const newVisibleColumns = visibleColumns.includes(column)\r\n      ? visibleColumns.filter(col => col !== column)\r\n      : [...visibleColumns, column];\r\n    onVisibilityChange(newVisibleColumns);\r\n  };\r\n\r\n  return (\r\n    <Sheet>\r\n      <SheetTrigger asChild>\r\n        <Button variant=\"outline\" size=\"sm\" className=\"ml-2\">\r\n          <Settings2 className=\"w-4 h-4 mr-2\" />\r\n          Manage Columns\r\n        </Button>\r\n      </SheetTrigger>\r\n      <SheetContent className=\"w-[400px] sm:w-[540px]\">\r\n        <SheetHeader>\r\n          <SheetTitle>Column Management</SheetTitle>\r\n          <SheetDescription>\r\n            Select columns to display and drag to reorder\r\n          </SheetDescription>\r\n        </SheetHeader>\r\n        \r\n        <div className=\"mt-4 space-y-4\">\r\n          <div className=\"flex items-center space-x-2 px-1\">\r\n            <Search className=\"w-4 h-4 text-slate-400\" />\r\n            <Input\r\n              placeholder=\"Search columns...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"h-8\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"max-h-[calc(100vh-200px)] overflow-y-auto\">\r\n            {filteredColumns.map(column => (\r\n              <div\r\n                key={column}\r\n                draggable\r\n                onDragStart={() => handleDragStart(column)}\r\n                onDragOver={(e) => handleDragOver(e, column)}\r\n                onDrop={() => handleDrop(column)}\r\n                className={`flex items-center space-x-3 p-3 border-b border-slate-200 hover:bg-slate-50 cursor-move\r\n                  ${dropTargetColumn === column ? 'bg-slate-100' : ''}`}\r\n              >\r\n                <GripVertical className=\"w-4 h-4 text-slate-400\" />\r\n                <Checkbox\r\n                  id={`col-${column}`}\r\n                  checked={visibleColumns.includes(column)}\r\n                  onCheckedChange={() => toggleColumnVisibility(column)}\r\n                />\r\n                <label\r\n                  htmlFor={`col-${column}`}\r\n                  className=\"flex-1 text-sm font-medium leading-none cursor-pointer\"\r\n                >\r\n                  {column}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </SheetContent>\r\n    </Sheet>\r\n  );\r\n};\r\n\r\nexport default ColumnManagementSheet;","import { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { format } from \"date-fns\";\r\nimport { RefreshCw, X, Maximize, Minimize } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\"\r\nimport { Ga4Logo } from \"../../GeneralisedDashboard/components/OtherPlatformModalContent\"\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport NewReportTable from \"./NewReportTable\";\r\nimport ColumnManagementSheet from \"@/pages/META/Campaign/ColumnManagementSheet\";\r\n\r\ninterface EcommerceMetric {\r\n  \"Date\": string\r\n  \"Add To Carts\": string\r\n  \"Checkout\": string\r\n  \"Sessions\": string\r\n  \"Purchases\": string\r\n  \"Purchase Rate\": string\r\n  \"Add To Cart Rate\": string\r\n  \"Checkout Rate\": string\r\n}\r\n\r\n\r\ninterface EcommerceMetricsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\n\r\nconst EcommerceMetricsPage: React.FC<EcommerceMetricsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const [filteredData, setFilteredData] = useState<EcommerceMetric[]>([]);\r\n  const [data, setData] = useState<EcommerceMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n\r\n\r\n\r\n\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [filters, setFilters] = useState<FilterItem[]>([]);\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n  const user = useSelector((state: RootState) => state.user.user)\r\n  const dispatch = useDispatch();\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n        dispatch(setDate({\r\n          from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n          to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n        }));\r\n      }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n\r\n\r\n\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n\r\n\r\n  const fetchMetrics = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n\r\n      const DailyAnalyticsResponse = await axiosInstance.post(\r\n        `/api/analytics/atcreport/${brandId}`,\r\n        {\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n          userId: user?.id,\r\n        },\r\n        { withCredentials: true }\r\n      );\r\n\r\n      const fetchedData = DailyAnalyticsResponse.data.data || [];\r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n\r\n      if (fetchedData.length > 0) {\r\n        if (selectedColumns.length === 0) {\r\n          const allColumns = Object.keys(fetchedData[0]);\r\n          setSelectedColumns(allColumns);\r\n        } else {\r\n          const newColumns = Object.keys(fetchedData[0]);\r\n          setSelectedColumns((prevSelected) =>\r\n            prevSelected.filter((col) => newColumns.includes(col))\r\n          );\r\n        }\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching e-commerce metrics data:', error);\r\n\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [startDate, endDate, brandId]);\r\n\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n    const intervalId = setInterval(fetchMetrics, 15 * 60 * 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchMetrics]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchMetrics();\r\n  };\r\n\r\n\r\n  const [visibleColumns, setVisibleColumns] = useState<string[]>(selectedColumns);\r\n  const [columnOrder, setColumnOrder] = useState<string[]>(selectedColumns);\r\n\r\n  const handleVisibilityChange = (columns: string[]) => {\r\n    setVisibleColumns(columns);\r\n  };\r\n  \r\n  const handleOrderChange = (newOrder: string[]) => {\r\n    setColumnOrder(newOrder);\r\n    setVisibleColumns(newOrder); // Ensure visibleColumns is also updated\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setVisibleColumns(selectedColumns);\r\n    setColumnOrder(selectedColumns);\r\n  }, [selectedColumns]);\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof EcommerceMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate'];\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent >\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <h2 className=\"text-lg font-medium\">Daily E-Commerce Analytics</h2>\r\n              <Ga4Logo />\r\n            </div>\r\n            <div className=\"flex flex-wrap items-center gap-3\">\r\n\r\n              {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                <DatePickerWithRange\r\n\r\n                />\r\n              </div>}\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <ColumnManagementSheet\r\n                visibleColumns={visibleColumns}\r\n                columnOrder={columnOrder}\r\n                onVisibilityChange={handleVisibilityChange}\r\n                onOrderChange={handleOrderChange}\r\n              />\r\n              <FilterComponent\r\n                columns={numericColumns}\r\n                onFiltersChange={applyFilters}\r\n                filters={filters}\r\n                setFilters={setFilters}\r\n              />\r\n              <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n              </Button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          {filters.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {filters.map((filter, index) => (\r\n                <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                  <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                  <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                    <X className=\"h-3 w-3\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"rounded-md overflow-hidden\">\r\n            {isLoading ? (\r\n              <TableSkeleton />\r\n            ) : (\r\n              <NewReportTable columns={columnOrder} data={memoizedFilteredData} isFullScreen={isFullScreen} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EcommerceMetricsPage;","\r\nimport { AlertCircle, Mail, ArrowRight } from 'lucide-react';\r\nimport { useUser } from '@/context/UserContext';\r\nimport axios from 'axios';\r\nfunction NoGA4AcessPage() {\r\n    const { user } = useUser();\r\n    const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n    const handleGoogleLogin = async () => {\r\n        try {\r\n    \r\n          const response = await axios.get(`${baseURL}/api/auth/google?context=userLogin`, { withCredentials: true });\r\n          const { authUrl } = response.data;\r\n    \r\n          window.location.href = authUrl;\r\n        } catch (error) {\r\n          console.error('Error getting Google Auth URL:', error);\r\n        }\r\n      }\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center p-4\">\r\n      <div className=\"max-w-md w-full bg-white rounded-2xl shadow-xl p-8\">\r\n        {/* Header Section */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"bg-red-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <Mail className=\"w-8 h-8 text-red-600\" />\r\n          </div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">\r\n            No GA4 Access Found\r\n          </h1>\r\n          <p className=\"text-gray-600\">\r\n            The current Google account doesn't have access to any GA4 properties\r\n          </p>\r\n        </div>\r\n\r\n        {/* Current Account Info */}\r\n        <div className=\"bg-gray-50 rounded-lg p-4 mb-6\">\r\n          <div className=\"flex items-start gap-3\">\r\n            <AlertCircle className=\"w-5 h-5 text-amber-500 mt-0.5\" />\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Currently signed in as:</p>\r\n              <p className=\"font-medium text-gray-900\">{user?.email}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Action Section */}\r\n        <div className=\"space-y-4\">\r\n          <p className=\"text-sm text-gray-600\">\r\n            Please sign in with a Google account that has access to GA4 properties to continue.\r\n          </p>\r\n          \r\n          <button \r\n            className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-lg transition-colors flex items-center justify-center gap-2 group\"\r\n            onClick={handleGoogleLogin}\r\n          >\r\n            Sign in with a different account\r\n            <ArrowRight className=\"w-4 h-4 group-hover:translate-x-1 transition-transform\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoGA4AcessPage;","import { useState, useEffect } from 'react';\r\nimport axios, { AxiosError } from 'axios';\r\nimport { Search, Check } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { FacebookLogo, GoogleLogo } from '@/pages/AnalyticsDashboard/AdAccountsMetricsCard';\r\nimport { Ga4Logo } from '@/pages/GeneralisedDashboard/components/OtherPlatformModalContent';\r\n\r\n\r\ninterface PlatformModalProps {\r\n  platform: string;\r\n  open: boolean;\r\n  onOpenChange: (open: boolean) => void;\r\n  brandId: string;\r\n  onSuccess?: (platform: string, accountName: string, accountId: string) => void;\r\n}\r\n\r\ninterface GoogleAdsAccount {\r\n  name: string;\r\n  clientId: string;\r\n  hidden?: boolean;\r\n}\r\n\r\ninterface GoogleAnalyticsAccount {\r\n  propertyName: string;\r\n  propertyId: string;\r\n}\r\n\r\ninterface FacebookAdsAccount {\r\n  adname: string;\r\n  id: string;\r\n}\r\n\r\nexport default function PlatformModal({\r\n  platform,\r\n  open,\r\n  onOpenChange,\r\n  brandId,\r\n  onSuccess\r\n}: PlatformModalProps) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [googleAdsAccounts, setGoogleAdsAccounts] = useState<GoogleAdsAccount[]>([]);\r\n  const [googleAnalyticsAccounts, setGoogleAnalyticsAccounts] = useState<GoogleAnalyticsAccount[]>([]);\r\n  const [facebookAdsAccounts, setFacebookAdsAccounts] = useState<FacebookAdsAccount[]>([]);\r\n  const [showLoginButton, setShowLoginButton] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [connectedAccounts, setConnectedAccounts] = useState<string[]>([]);\r\n\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const userId = user?.id;\r\n  console.log(userId);\r\n\r\n  useEffect(() => {\r\n    const fetchConnectedAccounts = async () => {\r\n      try {\r\n        const response = await axios.get(`${baseURL}/api/brands/${brandId}`, {\r\n          withCredentials: true,\r\n        });\r\n        const brand = response.data;\r\n        \r\n        const connectedIds: string[] = [];\r\n        if (brand.fbAdAccounts?.length) connectedIds.push(...brand.fbAdAccounts);\r\n        if (brand.googleAdAccount) connectedIds.push(brand.googleAdAccount);\r\n        if (brand.ga4Account?.PropertyID) connectedIds.push(brand.ga4Account.PropertyID);\r\n     \r\n        setConnectedAccounts(connectedIds);\r\n      } catch (error) {\r\n        console.error('Error fetching connected accounts:', error);\r\n      }\r\n    };\r\n\r\n    if (open && brandId) {\r\n      fetchConnectedAccounts();\r\n    }\r\n  }, [brandId, open]);\r\n\r\n  useEffect(() => {\r\n    const fetchAccounts = async () => {\r\n      if (!open) return;\r\n      \r\n      setLoading(true);\r\n      try {\r\n        let endpoint = '';\r\n        let accountsSetter: any = null;\r\n\r\n        switch (platform.toLowerCase()) {\r\n          case 'google ads':\r\n            endpoint = '/api/setup/google-accounts';\r\n            accountsSetter = setGoogleAdsAccounts;\r\n            break;\r\n          case 'google analytics':\r\n            endpoint = '/api/setup/ga4-propertyIds';\r\n            accountsSetter = setGoogleAnalyticsAccounts;\r\n            break;\r\n          case 'facebook':\r\n            endpoint = '/api/setup/fb-ad-accounts';\r\n            accountsSetter = setFacebookAdsAccounts;\r\n            break;\r\n        }\r\n        console.log(`Calling API: ${baseURL}${endpoint} with userId: ${userId}`);\r\n\r\n        if (!endpoint) {\r\n          throw new Error('Invalid platform');\r\n        }\r\n        const response = await axios.post(\r\n          `${baseURL}${endpoint}`,\r\n          { userId },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          setShowLoginButton(false);\r\n          if (platform.toLowerCase() === 'google ads') {\r\n            accountsSetter(response.data?.clientAccounts.filter((account: GoogleAdsAccount) => !account.hidden));\r\n          } else if (platform.toLowerCase() === 'google analytics') {\r\n            accountsSetter(response.data.propertiesList || []);\r\n          } else if (platform.toLowerCase() === 'facebook') {\r\n            accountsSetter(response.data.adAccounts || []);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        handleError(error as AxiosError, setShowLoginButton);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAccounts();\r\n  }, [platform, userId, open]);\r\n\r\n  const handleError = (error: unknown, setShowLoginButton: (value: boolean) => void) => {\r\n    const axiosError = error as AxiosError;\r\n\r\n    if (axiosError.response) {\r\n      const { status, data } = axiosError.response;\r\n      const code = axiosError.code;\r\n      if (status === 400) {\r\n        setShowLoginButton(true);\r\n      } else if (status === 403) {\r\n        setShowLoginButton(true);\r\n      } else if (status === 401 || code === 'TOKEN_EXPIRED') {\r\n        alert('Your Google session has expired. Please log in again.');\r\n        setShowLoginButton(true);\r\n      } else {\r\n        console.error('Unhandled Error Status:', status);\r\n        console.error('Error Message:', data);\r\n      }\r\n    } else if (axiosError.request) {\r\n      console.error('No response received:', axiosError.request);\r\n    } else {\r\n      console.error('Unexpected Error:', axiosError.message);\r\n    }\r\n  };\r\n\r\n  const updateBrandWithAccount = async (accountId: string, accountName: string) => {\r\n    try {\r\n      let updateData = {};\r\n      \r\n      switch (platform.toLowerCase()) {\r\n        case 'facebook':\r\n          updateData = { fbAdAccounts: [accountId] };\r\n          break;\r\n        case 'google ads':\r\n          updateData = { googleAdAccount: accountId };\r\n          break;\r\n        case 'google analytics':\r\n          updateData = { ga4Account: { PropertyID: accountId } };\r\n          break;\r\n      }\r\n\r\n      const response = await axios.patch(\r\n        `${baseURL}/api/brands/update/${brandId}`,\r\n        updateData,\r\n        { withCredentials: true }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        onSuccess?.(platform, accountName, accountId);\r\n        onOpenChange(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating brand:', error);\r\n    }\r\n  };\r\n\r\n  const handleConnect = async (account: GoogleAdsAccount | GoogleAnalyticsAccount | FacebookAdsAccount) => {\r\n    let accountId: string;\r\n    let displayName: string;\r\n\r\n    if ('clientId' in account) {\r\n      accountId = account.clientId;\r\n      displayName = `${account.name} (${accountId})`;\r\n    } else if ('propertyId' in account) {\r\n      accountId = account.propertyId;\r\n      displayName = `${account.propertyName} (${accountId})`;\r\n    } else if ('id' in account) {\r\n      accountId = account.id;\r\n      displayName = `${account.adname}`;\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    await updateBrandWithAccount(accountId, displayName);\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      const response = await axios.get(`${baseURL}/api/auth/google?context=brandSetup`, { withCredentials: true });\r\n      const { authUrl } = response.data;\r\n      window.location.href = authUrl;\r\n    } catch (error) {\r\n      console.error('Error getting Google Auth URL:', error);\r\n    }\r\n  };\r\n\r\n  const handleFbLogin = async () => {\r\n    try {\r\n      const response = await axios.get(`${baseURL}/api/auth/facebook`, { withCredentials: true });\r\n      if (response.data.success) {\r\n        window.location.href = response.data.authURL;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting Facebook Auth URL:', error);\r\n    }\r\n  };\r\n\r\n  const filteredAccounts = () => {\r\n    let accounts: any[] = [];\r\n    \r\n    switch (platform.toLowerCase()) {\r\n      case 'google ads':\r\n        accounts = googleAdsAccounts;\r\n        break;\r\n      case 'google analytics':\r\n        accounts = googleAnalyticsAccounts;\r\n        break;\r\n      case 'facebook':\r\n        accounts = facebookAdsAccounts;\r\n        break;\r\n    }\r\n\r\n    return accounts.filter((account) => {\r\n      const searchField = 'clientId' in account ? account.name \r\n        : 'propertyName' in account ? account.propertyName \r\n        : account.adname;\r\n      return searchField.toLowerCase().includes(searchTerm.toLowerCase());\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogContent className=\"sm:max-w-[600px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Connect {platform} Account</DialogTitle>\r\n        </DialogHeader>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {loading ? (\r\n            <div className=\"flex justify-center py-4\">Loading...</div>\r\n          ) : showLoginButton ? (\r\n            <Button\r\n              size=\"sm\"\r\n              onClick={platform.toLowerCase() === 'facebook' ? handleFbLogin : handleGoogleLogin}\r\n              className=\"flex items-center gap-2 bg-white text-black border border-green-800 hover:bg-green-50\"\r\n            >\r\n              {platform.toLowerCase() === 'google ads' && (\r\n                <>\r\n                  <GoogleLogo height=\"1rem\" width=\"1rem\" />\r\n                  Connect to your Google Ads account\r\n                </>\r\n              )}\r\n              {platform.toLowerCase() === 'google analytics' && (\r\n                <>\r\n                  <Ga4Logo height=\"1rem\" width=\"1rem\" />\r\n                  Connect to your GA4 account\r\n                </>\r\n              )}\r\n              {platform.toLowerCase() === 'facebook' && (\r\n                <>\r\n                  <FacebookLogo height=\"1rem\" width=\"1rem\" />\r\n                  Connect to your Facebook account\r\n                </>\r\n              )}\r\n            </Button>\r\n          ) : (\r\n            <>\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Search accounts...\"\r\n                  className=\"pl-10\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"max-h-[50vh] overflow-auto\">\r\n                {filteredAccounts()?.map((account) => {\r\n                  const isGoogleAds = platform.toLowerCase() === 'google ads';\r\n                  const isFacebook = platform.toLowerCase() === 'facebook';\r\n\r\n                  const accountId = isGoogleAds\r\n                    ? (account as GoogleAdsAccount).clientId\r\n                    : isFacebook\r\n                      ? (account as FacebookAdsAccount).id\r\n                      : (account as GoogleAnalyticsAccount).propertyId;\r\n\r\n                  const accountName = isGoogleAds\r\n                    ? (account as GoogleAdsAccount).name\r\n                    : isFacebook\r\n                      ? (account as FacebookAdsAccount).adname\r\n                      : (account as GoogleAnalyticsAccount).propertyName;\r\n\r\n                  const platformLogo = isGoogleAds ? (\r\n                    <GoogleLogo height=\"1rem\" width=\"1rem\" />\r\n                  ) : isFacebook ? (\r\n                    <FacebookLogo height=\"1rem\" width=\"1rem\" />\r\n                  ) : (\r\n                    <Ga4Logo height=\"1rem\" width=\"1rem\" />\r\n                  );\r\n\r\n                  const isConnected = connectedAccounts.includes(accountId);\r\n\r\n                  return (\r\n                    <div\r\n                      key={accountId}\r\n                      className=\"flex items-center justify-between p-2 rounded hover:bg-gray-50\"\r\n                    >\r\n                      <span>\r\n                        <div className=\"flex flex-row items-center gap-3\">\r\n                          {platformLogo}\r\n                          {isFacebook\r\n                            ? `${accountName}`\r\n                            : `${accountName} (${accountId})`}\r\n                        </div>\r\n                      </span>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => handleConnect(account)}\r\n                        disabled={isConnected}\r\n                        className={isConnected ? \"bg-gray-400\" : \"bg-blue-600\"}\r\n                      >\r\n                        {isConnected && <Check className=\"h-4 w-4 mr-2\" />}\r\n                        {isConnected ? 'Connected' : 'Connect'}\r\n                      </Button>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}","import { useState } from 'react';\r\nimport { AlertTriangle, BarChart3, LineChart, TrendingUp, ArrowRight, Facebook, PieChart } from 'lucide-react';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card } from \"@/components/ui/card\";\r\nimport PlatformModal from '@/components/dashboard_component/PlatformModal';\r\n\r\nconst platformConfigs = {\r\n  'google analytics': {\r\n    title: \"Google analytics\",\r\n    description: \"Unlock powerful insights for your store\",\r\n    icon: <PieChart className=\"h-16 w-16 text-blue-500 animate-bounce\" />,\r\n    benefits: [\r\n      {\r\n        icon: <BarChart3 className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Real-time Analytics\",\r\n        description: \"Track visitor behavior as it happens\"\r\n      },\r\n      {\r\n        icon: <LineChart className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Performance Metrics\",\r\n        description: \"Monitor your store's key metrics\"\r\n      },\r\n      {\r\n        icon: <TrendingUp className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Growth Insights\",\r\n        description: \"Make data-driven decisions\"\r\n      }\r\n    ],\r\n    buttonText: \"Connect GA4 Now\",\r\n    guideText: \"Need help setting up GA4?\"\r\n  },\r\n  'google ads': {\r\n    title: \"Google Ads\",\r\n    description: \"Supercharge your advertising performance\",\r\n    icon: <AlertTriangle className=\"h-16 w-16 text-red-500 animate-bounce\" />,\r\n    benefits: [\r\n      {\r\n        icon: <BarChart3 className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Campaign Tracking\",\r\n        description: \"Monitor ad performance in real-time\"\r\n      },\r\n      {\r\n        icon: <LineChart className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Conversion Analytics\",\r\n        description: \"Track ROI and conversions\"\r\n      },\r\n      {\r\n        icon: <TrendingUp className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Budget Optimization\",\r\n        description: \"Optimize spending across campaigns\"\r\n      }\r\n    ],\r\n    buttonText: \"Connect Google Ads\",\r\n    guideText: \"New to Google Ads?\"\r\n  },\r\n  facebook: {\r\n    title: \"Facebook Ads\",\r\n    description: \"Scale your social media advertising\",\r\n    icon: <Facebook className=\"h-16 w-16 text-blue-600 animate-bounce\" />,\r\n    benefits: [\r\n      {\r\n        icon: <BarChart3 className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Audience Insights\",\r\n        description: \"Understand your target audience\"\r\n      },\r\n      {\r\n        icon: <LineChart className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Ad Performance\",\r\n        description: \"Track engagement and reach\"\r\n      },\r\n      {\r\n        icon: <TrendingUp className=\"h-8 w-8 text-primary\" />,\r\n        title: \"ROAS Tracking\",\r\n        description: \"Measure advertising return\"\r\n      }\r\n    ],\r\n    buttonText: \"Connect Facebook Ads\",\r\n    guideText: \"First time with Facebook Ads?\"\r\n  }\r\n};\r\n\r\ntype PlatformKeys = 'google analytics' | 'google ads' | 'facebook';\r\n\r\ninterface ConnectPlatformProps {\r\n  platform?: PlatformKeys;\r\n  brandId: string;\r\n  onSuccess?: (platform: string, accountName: string, accountId: string) => void;\r\n}\r\n\r\nconst ConnectPlatform: React.FC<ConnectPlatformProps> = ({ \r\n  platform = 'google analytics',\r\n  brandId,\r\n  onSuccess \r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const config = platformConfigs[platform];\r\n\r\n  const handleConnect = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"min-h-screen bg-gradient-to-b from-background to-secondary/20 flex items-center justify-center p-4\">\r\n        <div className=\"max-w-3xl mx-auto w-full space-y-8\">\r\n          {/* Header Section */}\r\n          <div className=\"text-center space-y-4\">\r\n            <div className=\"flex justify-center\">\r\n              {config.icon}\r\n            </div>\r\n            <h1 className=\"text-4xl font-bold tracking-tight\">Connect {config.title}</h1>\r\n            <p className=\"text-xl text-muted-foreground\">\r\n              {config.description}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Main Content */}\r\n          <Card className=\"p-6 bg-card/50 backdrop-blur-sm\">\r\n            <div className=\"space-y-6\">\r\n              <p className=\"text-lg text-center\">\r\n                You haven't connected {config.title} yet. You're missing out on valuable insights about your store's performance!\r\n              </p>\r\n\r\n              {/* Benefits Grid */}\r\n              <div className=\"grid md:grid-cols-3 gap-4 my-8\">\r\n                {config.benefits.map((benefit, index) => (\r\n                  <div key={index} className=\"flex flex-col items-center text-center p-4 space-y-2\">\r\n                    {benefit.icon}\r\n                    <h3 className=\"font-semibold\">{benefit.title}</h3>\r\n                    <p className=\"text-sm text-muted-foreground\">{benefit.description}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* CTA Button */}\r\n              <div className=\"flex justify-center\">\r\n                <Button \r\n                  size=\"lg\" \r\n                  className=\"group\"\r\n                  onClick={handleConnect}\r\n                >\r\n                  {config.buttonText}\r\n                  <ArrowRight className=\"ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n\r\n          {/* Footer Note */}\r\n          <p className=\"text-center text-sm text-muted-foreground\">\r\n            {config.guideText}{\" \"}\r\n            <a href=\"#\" className=\"text-primary hover:underline\">\r\n              Check out our guide\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <PlatformModal\r\n        platform={config.title}\r\n        open={isModalOpen}\r\n        onOpenChange={setIsModalOpen}\r\n        brandId={brandId}\r\n        onSuccess={onSuccess}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConnectPlatform;","import { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { format } from \"date-fns\";\r\nimport {  RefreshCw, X, Maximize, Minimize } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\"\r\nimport { Ga4Logo } from \"../../GeneralisedDashboard/components/OtherPlatformModalContent\"\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport NewReportTable from \"./NewReportTable\";\r\nimport ColumnManagementSheet from \"@/pages/META/Campaign/ColumnManagementSheet\";\r\n\r\ninterface DaywiseMetric {\r\n  \"Day\": string\r\n  \"Add To Carts\": string\r\n  \"Checkout\": string\r\n  \"Sessions\": string\r\n  \"Purchases\": string\r\n  \"Purchase Rate\": string\r\n  \"Add To Cart Rate\": string\r\n  \"Checkout Rate\": string\r\n}\r\n\r\n  \r\ninterface DaywiseMetricProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst DaywiseMetricsPage: React.FC<DaywiseMetricProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const [filteredData, setFilteredData] = useState<DaywiseMetric[]>([]);\r\n  const [data, setData] = useState<DaywiseMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n\r\n  \r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [filters, setFilters] = useState<FilterItem[]>([]);\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n  const user = useSelector((state: RootState) => state.user.user)\r\n  const dispatch = useDispatch();\r\n  const axiosInstance = createAxiosInstance();\r\n \r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const [visibleColumns, setVisibleColumns] = useState<string[]>(selectedColumns);\r\n  const [columnOrder, setColumnOrder] = useState<string[]>(selectedColumns);\r\n\r\n  const handleVisibilityChange = (columns: string[]) => {\r\n    setVisibleColumns(columns);\r\n  };\r\n  \r\n  const handleOrderChange = (newOrder: string[]) => {\r\n    setColumnOrder(newOrder);\r\n    setVisibleColumns(newOrder); // Ensure visibleColumns is also updated\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setVisibleColumns(selectedColumns);\r\n    setColumnOrder(selectedColumns);\r\n  }, [selectedColumns]);\r\n\r\n  const fetchMetrics = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n\r\n      const DailyAnalyticsResponse = await axiosInstance.post(\r\n        `/api/analytics/dayAtcReport/${brandId}`,\r\n        {\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n          userId: user?.id,\r\n        },\r\n        { withCredentials: true }\r\n      );\r\n\r\n      const fetchedData = DailyAnalyticsResponse.data.data || [];\r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n\r\n      if (fetchedData.length > 0) {\r\n        if (selectedColumns.length === 0) {\r\n          const allColumns = Object.keys(fetchedData[0]);\r\n          setSelectedColumns(allColumns);\r\n        } else {\r\n          const newColumns = Object.keys(fetchedData[0]);\r\n          setSelectedColumns((prevSelected) =>\r\n            prevSelected.filter((col) => newColumns.includes(col))\r\n          );\r\n        }\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching day wise metrics data:', error);\r\n     \r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [startDate, endDate, brandId]);\r\n\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n    const intervalId = setInterval(fetchMetrics, 15 * 60 * 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchMetrics]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchMetrics();\r\n  };\r\n\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n    \r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof DaywiseMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate'];\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n    <CardContent >\r\n      <div className=\"space-y-4\">\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Day wise E-Commerce Analytics</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n            \r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                   \r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <ColumnManagementSheet\r\n                visibleColumns={visibleColumns}\r\n                columnOrder={columnOrder}\r\n                onVisibilityChange={handleVisibilityChange}\r\n                onOrderChange={handleOrderChange}\r\n              />\r\n            <FilterComponent\r\n              columns={numericColumns}\r\n              onFiltersChange={applyFilters}\r\n              filters={filters}\r\n              setFilters={setFilters}\r\n            />\r\n             <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        {filters.length > 0 && (\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {filters.map((filter, index) => (\r\n              <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                  <X className=\"h-3 w-3\" />\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {isLoading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <NewReportTable columns={columnOrder} data={memoizedFilteredData} isFullScreen={isFullScreen} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  </Card>\r\n  );\r\n};\r\n\r\nexport default DaywiseMetricsPage;","import React, { useMemo, useState } from 'react';\r\nimport DailyEcommerceMetrics from '@/pages/ReportPage/component/EcommerceMetricsPage';\r\nimport CollapsibleSidebar from '../Dashboard/CollapsibleSidebar';\r\nimport { TableSkeleton } from '@/components/dashboard_component/TableSkeleton';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ShoppingCart } from 'lucide-react';\r\nimport { useTokenError } from '@/context/TokenErrorContext';\r\nimport NoGA4AcessPage from './NoGA4AccessPage.';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport ConnectPlatform from './ConnectPlatformPage';\r\nimport Header from '@/components/dashboard_component/Header';\r\nimport DaywiseMetricsPage from './component/DaywiseMetricsPage';\r\nimport { CustomTabs } from '../ConversionReportPage/components/CustomTabs';\r\n\r\nconst ReportsPage: React.FC = () => {\r\n\r\n  const isLoading = false;\r\n  const { brandId } = useParams<{ brandId: string }>();\r\n  const brands = useSelector((state: RootState) => state.brand.brands);\r\n  const selectedBrand = brands.find((brand) => brand._id === brandId);\r\n  const hasGA4Account = selectedBrand?.ga4Account ?? false;\r\n  const { tokenError } = useTokenError();\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n\r\n  const dateRange = {\r\n    from: date.from ? new Date(date.from) : undefined,\r\n    to: date.to ? new Date(date.to) : undefined\r\n  }\r\n  const [activeTab, setActiveTab] = useState('daily');\r\n\r\n  const tabs = [\r\n    { label: 'Daily Metrics', value: 'daily' },\r\n    { label: 'Day wise Metrics', value: 'day wise' },\r\n  ];\r\n\r\n\r\n  const handleTabChange = (value: string) => {\r\n    setActiveTab(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n        {tokenError ? (\r\n          <NoGA4AcessPage />\r\n        ) : !hasGA4Account ? (\r\n          <>\r\n            <ConnectPlatform\r\n              platform=\"google analytics\"\r\n              brandId={brandId ?? ''}\r\n              onSuccess={(platform, accountName, accountId) => {\r\n                console.log(`Successfully connected ${platform} account: ${accountName} (${accountId})`);\r\n              }} /> </>\r\n        ) : (\r\n          <>\r\n            {/* Existing page content */}\r\n            <Header title='E-Commerce Insighhts' Icon={ShoppingCart} showDatePicker={true} />\r\n            <div className=\"bg-white px-6 sticky top-0 z-10\">\r\n              <CustomTabs tabs={tabs} activeTab={activeTab} onTabChange={handleTabChange} />\r\n            </div>\r\n            {isLoading ? (\r\n              <TableSkeleton />\r\n            ) : (\r\n              <section className=\"my-3\">\r\n                {activeTab === 'daily' && (\r\n                  <DailyEcommerceMetrics dateRange={dateRange} />\r\n                )}\r\n                {activeTab === 'day wise' && (\r\n                  <DaywiseMetricsPage dateRange={dateRange} />\r\n                )}\r\n              </section>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportsPage;","import { Button } from '@/components/ui/button';\r\nimport { ChevronLeft, ChevronRight, ChevronsLeft, ChevronsRight } from 'lucide-react';\r\nimport { useMemo, useState, useEffect } from 'react';\r\n\r\nexport interface MonthlyData {\r\n  Month: string;\r\n  [key: string]: number | string;\r\n}\r\n\r\nexport interface RowData {\r\n  [key: string]: number | string | MonthlyData[];\r\n}\r\n\r\ninterface ConversionTableProps {\r\n  data: RowData[];\r\n  primaryColumn: string;\r\n  secondaryColumns?: string[];\r\n  monthlyDataKey: string;\r\n  monthlyMetrics: string[];\r\n  isFullScreen: boolean;\r\n  rows?: number;\r\n  isAdsTable?: boolean;\r\n}\r\n\r\nexport default function ConversionTable({\r\n  data,\r\n  primaryColumn,\r\n  secondaryColumns,\r\n  monthlyDataKey,\r\n  monthlyMetrics,\r\n  isFullScreen,\r\n  rows,\r\n  isAdsTable\r\n}: ConversionTableProps) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [loadedRows, setLoadedRows] = useState<Array<{ dataIndex: number; metricIndex: number }>>([]);\r\n  const rowsPerPage = rows ? rows : 8;\r\n  const rowsPerChunk = 30;\r\n\r\n  const getTableHeight = () => {\r\n    if (isFullScreen) {\r\n      if (isAdsTable) {\r\n        return 'max-h-[calc(100vh-90px)]';\r\n      }\r\n      return 'max-h-[calc(100vh-130px)]';\r\n    }\r\n    return 'max-h-[400px]';\r\n  };\r\n\r\n  const months = useMemo(() => {\r\n    if (!Array.isArray(data)) {\r\n      console.error(\"Data is not an array:\", data);\r\n      return [];\r\n    }\r\n\r\n    const getMonthName = (monthNumber: string): string => {\r\n      const months = [\r\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\r\n        'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\r\n      ];\r\n      return months[parseInt(monthNumber) - 1];\r\n    };\r\n\r\n\r\n    const allMonths = new Set<string>();\r\n    data.forEach((row) => {\r\n      const monthlyData = row[monthlyDataKey] as MonthlyData[] | undefined;\r\n      if (Array.isArray(monthlyData)) {\r\n        monthlyData.forEach((month) => {\r\n          if (month?.Month) {\r\n            const year = month.Month.slice(0, 4);\r\n            const monthNum = month.Month.slice(4);\r\n            allMonths.add(`${getMonthName(monthNum)}-${year}`);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return Array.from(allMonths).reverse();\r\n  }, [data, monthlyDataKey]);\r\n\r\n  const allRows = useMemo(() => {\r\n    const rows: Array<{ dataIndex: number; metricIndex: number }> = [];\r\n    data.forEach((_, dataIndex) => {\r\n      monthlyMetrics.forEach((_, metricIndex) => {\r\n        rows.push({ dataIndex, metricIndex });\r\n      });\r\n    });\r\n    return rows;\r\n  }, [data, monthlyMetrics]);\r\n\r\n  const loadMoreRows = () => {\r\n    setLoadedRows((prevRows) => [\r\n      ...prevRows,\r\n      ...allRows.slice(prevRows.length, prevRows.length + rowsPerChunk)\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFullScreen) {\r\n      setLoadedRows(allRows.slice(0, rowsPerChunk));\r\n    }\r\n  }, [isFullScreen, allRows]);\r\n\r\n  const handleScroll = (event: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n    const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\r\n    if (scrollHeight - scrollTop <= clientHeight + 100) {\r\n      loadMoreRows();\r\n    }\r\n  };\r\n\r\n  const displayRows = useMemo(() => {\r\n    if (isFullScreen) {\r\n      return loadedRows;\r\n    }\r\n    return allRows.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage);\r\n  }, [isFullScreen, allRows, loadedRows, currentPage]);\r\n\r\n  const thresholds = useMemo(() => {\r\n    let totalSessions = 0, totalConvRate = 0, sessionCount = 0;\r\n    let totalSpend = 0, totalPurchaseROAS = 0, spendCount = 0;\r\n    let totalCost = 0, totalConvValuePerCost = 0, costCount = 0;\r\n\r\n    data.forEach(row => {\r\n      if (typeof row['Total Sessions'] === 'number' && typeof row['Avg Conv. Rate'] === 'number') {\r\n        totalSessions += Number(row['Total Sessions']);\r\n        totalConvRate += Number(row['Avg Conv. Rate']);\r\n        sessionCount++;\r\n      }\r\n\r\n      if (typeof row['Total Spend'] === 'number' && typeof row['Total Purchase ROAS'] === 'number') {\r\n        totalSpend += Number(row['Total Spend']);\r\n        totalPurchaseROAS += Number(row['Total Purchase ROAS']);\r\n        spendCount++;\r\n      }\r\n\r\n      if (typeof row['Total Cost'] === 'number' && typeof row['Conv. Value / Cost'] === 'number') {\r\n        totalCost += Number(row['Total Cost']);\r\n        totalConvValuePerCost += Number(row['Conv. Value / Cost']);\r\n        costCount++;\r\n      }\r\n    });\r\n\r\n    return {\r\n      avgSessions: sessionCount > 0 ? totalSessions / sessionCount : 0,\r\n      avgConvRate: sessionCount > 0 ? totalConvRate / sessionCount : 0,\r\n      avgSpend: spendCount > 0 ? totalSpend / spendCount : 0,\r\n      avgPurchaseROAS: spendCount > 0 ? totalPurchaseROAS / spendCount : 0,\r\n      avgCost: costCount > 0 ? totalCost / costCount : 0,\r\n      avgConvValuePerCost: costCount > 0 ? totalConvValuePerCost / costCount : 0,\r\n    };\r\n  }, [data]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      setCurrentPage(1);\r\n    }\r\n  }, [isFullScreen]);\r\n\r\n  const getMetricColor = ({\r\n    sessions,\r\n    convRate,\r\n    spend,\r\n    purchaseROAS,\r\n    cost,\r\n    convValuePerCost\r\n  }: {\r\n    sessions?: number;\r\n    convRate?: number;\r\n    spend?: number;\r\n    purchaseROAS?: number;\r\n    cost?: number;\r\n    convValuePerCost?: number\r\n  }) => {\r\n    const isHighSessions = sessions !== undefined && sessions >= thresholds.avgSessions;\r\n    const isGoodConversion = convRate !== undefined && convRate >= thresholds.avgConvRate;\r\n    const isHighSpent = spend !== undefined && spend >= thresholds.avgSpend;\r\n    const isGoodROAS = purchaseROAS !== undefined && purchaseROAS >= thresholds.avgPurchaseROAS;\r\n    const isHighCost = cost !== undefined && cost >= thresholds.avgCost;\r\n    const isGoodConvValuePerCost = convValuePerCost !== undefined && convValuePerCost >= thresholds.avgConvValuePerCost;\r\n\r\n    // Prioritizing Sessions & Conversion Rate\r\n    if (isHighSessions && isGoodConversion) return 'bg-green-100'; // Best case (high traffic & conversions)\r\n    if (isHighSessions && !isGoodConversion) return 'bg-[#E0F4FF]'; // High traffic, poor conversion\r\n    if (!isHighSessions && isGoodConversion) return 'bg-yellow-100'; // Low traffic, good conversion\r\n\r\n    // Prioritizing Spend & Purchase ROAS\r\n    if (isHighSpent && isGoodROAS) return 'bg-green-100'; // Profitable with high spend\r\n    if (isHighSpent && !isGoodROAS) return 'bg-[#E0F4FF]'; // High spend, poor ROAS\r\n    if (!isHighSpent && isGoodROAS) return 'bg-yellow-100'; // Low spend, good ROAS\r\n\r\n    // Prioritizing Spend & Purchase ROAS\r\n    if (isHighCost && isGoodConvValuePerCost) return 'bg-green-100'; // Profitable with high cost\r\n    if (isHighCost && !isGoodConvValuePerCost) return 'bg-[#E0F4FF]'; // High cost, poor ROAS\r\n    if (!isHighCost && isGoodConvValuePerCost) return 'bg-yellow-100'; // Low cost, good ROAS\r\n\r\n    return 'bg-red-50'; // Default case (poor metrics)\r\n  };\r\n\r\n\r\n\r\n  const renderCell = (value: number | string, type?: 'spend' | 'percentage' | 'default') => {\r\n    if (typeof value === \"number\") {\r\n      switch (type) {\r\n        case 'spend':\r\n          return Math.round(value).toLocaleString();\r\n        case 'percentage':\r\n          return `${value.toFixed(2)} %`;\r\n        default:\r\n          return value.toFixed(2);\r\n      }\r\n    }\r\n    return value;\r\n  };\r\n\r\n  const renderMonthCell = (monthData: MonthlyData | undefined, metric: string) => {\r\n    if (!monthData) {\r\n      return (\r\n        <td className=\"w-[100px] text-right whitespace-nowrap p-2 text-xs border-r border-slate-300 bg-background\">\r\n          -\r\n        </td>\r\n      );\r\n    }\r\n\r\n    const value = monthData[metric];\r\n    let bgColor = 'bg-background';\r\n\r\n    if (\r\n      (metric === 'Sessions' || metric === 'Conv. Rate') &&\r\n      typeof monthData['Sessions'] === 'number' &&\r\n      typeof monthData['Conv. Rate'] === 'number'\r\n    ) {\r\n      bgColor = getMetricColor({\r\n        sessions: Number(monthData['Sessions']),\r\n        convRate: Number(monthData['Conv. Rate']),\r\n      });\r\n    }\r\n\r\n    if (\r\n      (metric === 'Spend' || metric === 'Purchase ROAS') &&\r\n      typeof monthData['Spend'] === 'number' &&\r\n      typeof monthData['Purchase ROAS'] === 'number'\r\n    ) {\r\n      bgColor = getMetricColor({\r\n        spend: Number(monthData['Spend']),\r\n        purchaseROAS: Number(monthData['Purchase ROAS'])\r\n      });\r\n    }\r\n\r\n    if (\r\n      (metric === 'Cost' || metric === 'Conv. Value/ Cost') &&\r\n      typeof monthData['Cost'] === 'number' &&\r\n      typeof monthData['Conv. Value/ Cost'] === 'number'\r\n    ) {\r\n      bgColor = getMetricColor({\r\n        cost: Number(monthData['Cost']),\r\n        convValuePerCost: Number(monthData['Conv. Value/ Cost'])\r\n      });\r\n    }\r\n\r\n\r\n    return (\r\n      <td className={`w-[100px]  text-right whitespace-nowrap p-2 text-xs border-r border-slate-300 ${bgColor}`}>\r\n        {renderCell(\r\n          value,\r\n          metric.toLowerCase().includes('rate')\r\n            ? 'percentage'\r\n            : metric.toLowerCase().includes('spend') || metric.toLowerCase().includes('cost')\r\n              ? 'spend'\r\n              : 'default'\r\n        )}\r\n        {metric === 'Conv. Rate' && (\r\n          <div className=\"text-xs text-muted-foreground\">{`Purchases: ${monthData['Purchases'] ?? 0}`}</div>\r\n        )}\r\n        {metric === 'Cost' && (\r\n          <div className=\"text-xs text-muted-foreground\">{`clicks: ${monthData['Clicks'] ?? 0}`}</div>\r\n        )}\r\n        {metric === 'Conv. Value/ Cost' && (\r\n          <div className=\"text-xs text-muted-foreground\">{`conv. rate: ${Number(monthData['Conversion Rate']).toFixed(2) ?? 0} %`}</div>\r\n        )}\r\n        {metric === 'Purchase ROAS' && (\r\n          <div className=\"text-xs text-muted-foreground\">{`PCV: ${Number(monthData['Purchase Conversion Value']).toFixed(2) ?? 0}`}</div>\r\n        )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  const renderMetricValue = (\r\n    row: RowData,\r\n    column: string,\r\n    currentMetric: string,\r\n    columnIndex: number\r\n  ) => {\r\n    const value = row[column];\r\n\r\n    if (typeof value !== \"number\") {\r\n      return (\r\n        <td\r\n          className=\"sticky top-0 min-w-[130px] p-2 text-xs border-r border-slate-300 bg-background\"\r\n          style={{ left: `${130 + 100 + columnIndex * 130}px` }}\r\n        >\r\n          {\"\"}\r\n        </td>\r\n      );\r\n    }\r\n\r\n    let bgColor = \"bg-background\";\r\n\r\n    // Check if the current metric and column match specific conditions for color\r\n    if (currentMetric && column) {\r\n      if (column.includes(\"Sessions\") || column.includes(\"Rate\")) {\r\n        const sessions = row[\"Total Sessions\"] as number;\r\n        const convRate = row[\"Avg Conv. Rate\"] as number;\r\n        bgColor = getMetricColor({ sessions, convRate });\r\n      }\r\n    }\r\n\r\n    if (currentMetric && column) {\r\n      if (column.includes(\"Spend\") || column.includes(\"ROAS\")) {\r\n        const spend = row[\"Total Spend\"] as number;\r\n        const purchaseROAS = row[\"Total Purchase ROAS\"] as number;\r\n        bgColor = getMetricColor({ spend, purchaseROAS });\r\n      }\r\n    }\r\n\r\n    if (currentMetric && column) {\r\n      if (column.includes(\"Cost\") || column.includes(\"Conv. Value / Cost\")) {\r\n        const cost = row[\"Total Cost\"] as number;\r\n        const convValuePerCost = row[\"Conv. Value / Cost\"] as number;\r\n        bgColor = getMetricColor({ cost, convValuePerCost });\r\n      }\r\n    }\r\n\r\n    const totalPurchases = typeof row[\"Total Purchases\"] === \"number\"\r\n      ? row[\"Total Purchases\"].toLocaleString()\r\n      : null;\r\n    const totalConvValue = typeof row[\"Total Conv. Value\"] === \"number\"\r\n      ? row[\"Total Conv. Value\"].toFixed(2)\r\n      : null;\r\n    const totalPCV = typeof row[\"Total PCV\"] === \"number\"\r\n      ? row[\"Total PCV\"].toFixed(2)\r\n      : null;\r\n    return (\r\n      <td\r\n        className={`sticky top-0 min-w-[130px] p-2 text-xs border-r border-slate-300 ${bgColor}`}\r\n        style={{ left: `${130 + 100 + columnIndex * 130}px` }}\r\n      >\r\n        {/* Only show cost when currentMetric is \"Cost\" */}\r\n        {currentMetric.toLowerCase() === \"cost\" && column === \"Total Cost\" ? (\r\n          <div className=\"flex flex-col\">\r\n            <span>{renderCell(value, 'spend')}</span>\r\n          </div>\r\n        ) :\r\n          /* Only show conv value/cost when currentMetric is \"Conv. Value/Cost\" */\r\n          currentMetric.toLowerCase() === \"conv. value/ cost\" && column === \"Conv. Value / Cost\" ? (\r\n            <div className=\"flex flex-col\">\r\n              <span>{renderCell(value)}</span>\r\n              {totalConvValue && (\r\n                <span className=\"text-xs text-gray-500 mt-1\">\r\n                  Total Conv. Value: {totalConvValue}\r\n                </span>\r\n              )}\r\n            </div>\r\n          ) :\r\n            currentMetric.toLowerCase() === \"sessions\" && column.includes(\"Sessions\") ? (\r\n              renderCell(value)\r\n            ) :\r\n              currentMetric.toLowerCase() === \"conv. rate\" && column.includes(\"Rate\") ? (\r\n                <div className=\"flex flex-col\">\r\n                  <span>{renderCell(value, 'percentage')}</span>\r\n                  {totalPurchases && (\r\n                    <span className=\"text-xs text-gray-500 mt-1\">\r\n                      Total Purchases: {totalPurchases}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              ) : currentMetric.toLowerCase() === \"spend\" && column.includes(\"Total Spend\") ? (\r\n                renderCell(value, 'spend')\r\n              ) : currentMetric.toLowerCase() == \"purchase roas\" && column.includes(\"Total Purchase ROAS\") ? (\r\n                <div className=\"flex flex-col\">\r\n                  <span>{renderCell(value)}</span>\r\n                  {totalPCV && (\r\n                    <span className=\"text-xs text-gray-500 mt-1\">\r\n                      Total PCV: {totalPCV}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  const renderMetricRow = (row: RowData, metricIndex: number) => {\r\n    const metric = monthlyMetrics[metricIndex];\r\n    \r\n    // Determine the background color for both primary and metric columns\r\n    let bgColor = 'bg-background';\r\n    \r\n    if (secondaryColumns) {\r\n      const sessions = row[\"Total Sessions\"] as number;\r\n      const convRate = row[\"Avg Conv. Rate\"] as number;\r\n      const spend = row[\"Total Spend\"] as number;\r\n      const purchaseROAS = row[\"Total Purchase ROAS\"] as number;\r\n      const cost = row[\"Total Cost\"] as number;\r\n      const convValuePerCost = row[\"Conv. Value / Cost\"] as number;\r\n\r\n      if (metric === 'Sessions' || metric === 'Conv. Rate') {\r\n        bgColor = getMetricColor({ sessions, convRate });\r\n      } else if (metric === 'Spend' || metric === 'Purchase ROAS') {\r\n        bgColor = getMetricColor({ spend, purchaseROAS });\r\n      } else if (metric === 'Cost' || metric === 'Conv. Value/ Cost') {\r\n        bgColor = getMetricColor({ cost, convValuePerCost });\r\n      }\r\n    }\r\n\r\n    return (\r\n      <tr key={`${row[primaryColumn]}-${metric}`}>\r\n        <td className={`sticky left-0 min-w-[130px] max-w-[200px] p-2 text-xs border-r border-slate-300 ${bgColor}`}>\r\n          {metricIndex === 0\r\n            ? (typeof row[primaryColumn] === \"string\" || typeof row[primaryColumn] === \"number\"\r\n              ? renderCell(row[primaryColumn])\r\n              : \"\")\r\n            : \"\"}\r\n        </td>\r\n        <td className={`sticky left-[130px] min-w-[100px] whitespace-nowrap p-2 text-xs border-r border-slate-300 ${bgColor}`}>\r\n          {metric}\r\n        </td>\r\n        {secondaryColumns?.map((column, index) => renderMetricValue(row, column, metric, index))}\r\n        {months.map((month) => {\r\n          const getMonthNumber = (monthName: string): number => {\r\n            const months = [\r\n              'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\r\n              'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\r\n            ];\r\n            return months.indexOf(monthName) + 1;\r\n          };\r\n          const [monthName, year] = month.split('-'); \r\n          const monthNum = getMonthNumber(monthName); \r\n          const monthFormat = `${year}${monthNum.toString().padStart(2, '0')}`; \r\n\r\n          const monthData = (row[monthlyDataKey] as MonthlyData[]).find(\r\n            (m) => m.Month === monthFormat\r\n          );\r\n          return renderMonthCell(monthData, metric);\r\n        })}\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  const totalRows = allRows.length;\r\n  const totalPages = Math.ceil(totalRows / rowsPerPage);\r\n  const goToPage = (page: number) => {\r\n    const pageNumber = Math.max(1, Math.min(page, totalPages));\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  const renderColumnHeader = (column: string, index: number) => {\r\n    let thresholdValue = '';\r\n    if (column === 'Total Sessions') {\r\n      thresholdValue = `(avg: ${Math.round(thresholds.avgSessions).toLocaleString()})`;\r\n    } else if (column === 'Avg Conv. Rate') {\r\n      thresholdValue = `(avg: ${thresholds.avgConvRate.toFixed(2)}%)`;\r\n    } else if (column === 'Total Spend') {\r\n      thresholdValue = `(avg: ${Math.round(thresholds.avgSpend).toLocaleString()})`;\r\n    } else if (column === 'Total Purchase ROAS') {\r\n      thresholdValue = `(avg: ${(thresholds.avgPurchaseROAS).toFixed(2)})`;\r\n    } else if (column === 'Total Cost') {\r\n      thresholdValue = `(avg: ${Math.round(thresholds.avgCost).toLocaleString()})`;\r\n    } else if (column === 'Conv. Value / Cost') {\r\n      thresholdValue = `(avg: ${Math.round(thresholds.avgConvValuePerCost).toFixed(2)})`;\r\n    }\r\n\r\n    return (\r\n      <th\r\n        key={column}\r\n        className=\"sticky top-0 min-w-[130px] w-[150px] z-20 px-2 py-2.5 text-left text-sm font-semibold text-black/70 border-r border-b border-slate-300 bg-slate-100\"\r\n        style={{ left: `${130 + 100 + index * 130}px` }}\r\n      >\r\n        <div className=\"flex flex-col\">\r\n          <span>{column}</span>\r\n          {thresholdValue && (\r\n            <span className=\"text-xs text-muted-foreground font-normal\">\r\n              {thresholdValue}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </th>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full rounded-lg border flex flex-col\">\r\n      <div className={`relative overflow-x-auto ${getTableHeight()}`} onScroll={isFullScreen ? handleScroll : undefined}>\r\n        <table className=\"w-full\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"sticky left-0 top-0 min-w-[130px]  w-[150px] z-20 px-2 py-2.5 text-left text-sm font-semibold text-black/70 border-r border-b border-slate-300 bg-slate-100\">\r\n                {primaryColumn}\r\n              </th>\r\n              <th className=\"sticky left-[130px] top-0 min-w-[100px] w-[150px] z-20 px-2 py-2.5 text-left text-sm font-semibold text-black/70 border-r border-b border-slate-300 bg-slate-100\">\r\n                Metric\r\n              </th>\r\n              {secondaryColumns?.map((column, index) => renderColumnHeader(column, index))}\r\n              {months.map((month) => (\r\n                <th\r\n                  key={month}\r\n                  className=\"sticky top-0 min-w-[100px] z-10 px-2 py-2.5 text-right text-sm font-semibold text-black/70 whitespace-nowrap border-r border-b border-slate-300  bg-zinc-50\"\r\n                >\r\n                  {month}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"divide-y divide-slate-300\">\r\n          {displayRows.map(({ dataIndex, metricIndex }) => \r\n              renderMetricRow(data[dataIndex], metricIndex)\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {!isFullScreen && (\r\n        <div className=\"border-t border-slate-300 p-2.5 flex items-center justify-between bg-background\">\r\n          <div className=\"text-sm text-muted-foreground\">\r\n            Showing {(currentPage - 1) * rowsPerPage + 1}-{Math.min(currentPage * rowsPerPage, totalRows)} of {totalRows} rows\r\n          </div>\r\n          <div className=\"flex gap-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n              onClick={() => goToPage(1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <ChevronsLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"h-8 w-8 p-0\"\r\n              onClick={() => goToPage(currentPage - 1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <div className=\"flex items-center justify-center text-sm\">\r\n              Page {currentPage} of {totalPages}\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"h-8 w-8 p-0\"\r\n              onClick={() => goToPage(currentPage + 1)}\r\n              disabled={currentPage === totalPages}\r\n            >\r\n              <ChevronRight className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n              onClick={() => goToPage(totalPages)}\r\n              disabled={currentPage === totalPages}\r\n            >\r\n              <ChevronsRight className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}","// PerformanceSummary.tsx\r\n\r\nimport React, { useMemo, useState } from 'react';\r\nimport {\r\n  Tooltip,\r\n  TooltipContent,\r\n  TooltipProvider,\r\n  TooltipTrigger,\r\n} from \"@/components/ui/tooltip\";\r\n\r\ninterface RowData {\r\n  [key: string]: any;\r\n}\r\n\r\ninterface MetricConfig {\r\n  primary: {\r\n    key: string;\r\n    name: string;\r\n  };\r\n  secondary: {\r\n    key: string;\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface CategoryData {\r\n  name: string;\r\n  color: string;\r\n  bgColor: string;\r\n  count: number;\r\n  items: (string | number)[];\r\n  description: string;\r\n}\r\n\r\ninterface PerformanceSummaryProps {\r\n  data: RowData[];\r\n  primaryColumn: string;\r\n  metricConfig: MetricConfig;\r\n}\r\n\r\nconst PerformanceSummary: React.FC<PerformanceSummaryProps> = ({\r\n  data,\r\n  primaryColumn,\r\n  metricConfig\r\n}) => {\r\n  const [expandedCategory, setExpandedCategory] = useState<string | null>(null);\r\n\r\n  const thresholds = useMemo(() => {\r\n    const metrics: Record<string, number> = {\r\n      [metricConfig.primary.key]: 0,\r\n      [metricConfig.secondary.key]: 0\r\n    };\r\n    let count = 0;\r\n\r\n    data.forEach(row => {\r\n      const primaryMetric = row[metricConfig.primary.key];\r\n      const secondaryMetric = row[metricConfig.secondary.key];\r\n\r\n      if (\r\n        typeof primaryMetric === 'number' &&\r\n        typeof secondaryMetric === 'number'\r\n      ) {\r\n        metrics[metricConfig.primary.key] += Number(primaryMetric);\r\n        metrics[metricConfig.secondary.key] += Number(secondaryMetric);\r\n        count++;\r\n      }\r\n    });\r\n\r\n    return {\r\n      [metricConfig.primary.key]: metrics[metricConfig.primary.key] / count,\r\n      [metricConfig.secondary.key]: metrics[metricConfig.secondary.key] / count\r\n    };\r\n  }, [data, metricConfig]);\r\n\r\n  const categories: CategoryData[] = useMemo(() => {\r\n    const categorizedItems: Record<string, (string | number)[]> = {\r\n      'Top Performers': [],\r\n      [`High ${metricConfig.primary.name}`]: [],\r\n      [`High ${metricConfig.secondary.name}`]: [],\r\n      'Underperformers': []\r\n    };\r\n\r\n    data.forEach(row => {\r\n      const primaryMetric = Number(row[metricConfig.primary.key]);\r\n      const secondaryMetric = Number(row[metricConfig.secondary.key]);\r\n      const primaryValue = String(row[primaryColumn]);\r\n\r\n      const isHighPrimary = primaryMetric >= thresholds[metricConfig.primary.key];\r\n      const isHighSecondary = secondaryMetric >= thresholds[metricConfig.secondary.key];\r\n\r\n      if (isHighPrimary && isHighSecondary) {\r\n        categorizedItems['Top Performers'].push(primaryValue);\r\n      } else if (isHighPrimary && !isHighSecondary) {\r\n        categorizedItems[`High ${metricConfig.primary.name}`].push(primaryValue);\r\n      } else if (!isHighPrimary && isHighSecondary) {\r\n        categorizedItems[`High ${metricConfig.secondary.name}`].push(primaryValue);\r\n      } else {\r\n        categorizedItems['Underperformers'].push(primaryValue);\r\n      }\r\n    });\r\n\r\n    return [\r\n      {\r\n        name: 'Top Performers',\r\n        color: 'text-green-700',\r\n        bgColor: 'bg-green-100',\r\n        count: categorizedItems['Top Performers'].length,\r\n        items: categorizedItems['Top Performers'],\r\n        description: `Above average in both ${metricConfig.primary.name} (>${thresholds[metricConfig.primary.key].toFixed(2)}) and ${metricConfig.secondary.name} (>${thresholds[metricConfig.secondary.key].toFixed(2)})`\r\n      },\r\n      {\r\n        name: `High ${metricConfig.primary.name}`,\r\n        color: 'text-blue-700',\r\n        bgColor: 'bg-[#E0F4FF]',\r\n        count: categorizedItems[`High ${metricConfig.primary.name}`].length,\r\n        items: categorizedItems[`High ${metricConfig.primary.name}`],\r\n        description: `High ${metricConfig.primary.name} (>${thresholds[metricConfig.primary.key].toFixed(2)}) but below average ${metricConfig.secondary.name} (<${thresholds[metricConfig.secondary.key].toFixed(2)})`\r\n      },\r\n      {\r\n        name: `High ${metricConfig.secondary.name}`,\r\n        color: 'text-yellow-700',\r\n        bgColor: 'bg-yellow-100',\r\n        count: categorizedItems[`High ${metricConfig.secondary.name}`].length,\r\n        items: categorizedItems[`High ${metricConfig.secondary.name}`],\r\n        description: `High ${metricConfig.secondary.name} (>${thresholds[metricConfig.secondary.key].toFixed(2)}) but below average ${metricConfig.primary.name} (<${thresholds[metricConfig.primary.key].toFixed(2)})`\r\n      },\r\n      {\r\n        name: 'Underperformers',\r\n        color: 'text-red-700',\r\n        bgColor: 'bg-red-50',\r\n        count: categorizedItems['Underperformers'].length,\r\n        items: categorizedItems['Underperformers'],\r\n        description: `Below average in both ${metricConfig.primary.name} (<${thresholds[metricConfig.primary.key].toFixed(2)}) and ${metricConfig.secondary.name} (<${thresholds[metricConfig.secondary.key].toFixed(2)})`\r\n      }\r\n    ];\r\n  }, [data, thresholds, primaryColumn, metricConfig]);\r\n\r\n  return (\r\n    <TooltipProvider>\r\n      <div className=\"space-y-4 py-2.5\">\r\n        <div className=\"border border-gray-300 rounded-lg overflow-hidden\">\r\n          <div className=\"flex items-stretch h-9\">\r\n            {categories.map((category) => (\r\n              <Tooltip key={category.name}>\r\n                <TooltipTrigger asChild>\r\n                  <div\r\n                    className={`relative flex-grow ${category.bgColor} border-r last:border-r-0 border-gray-300 cursor-pointer transition-all duration-300 ease-in-out hover:opacity-90`}\r\n                    onClick={() => setExpandedCategory(expandedCategory === category.name ? null : category.name)}\r\n                  >\r\n                    <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                      <span className={`text-xs font-medium ${category.color} ${expandedCategory === category.name ? 'underline' : ''}`}>\r\n                        {category.name} ({category.count})\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent className=\"max-w-xs p-4 bg-gray-900 text-white border-0 shadow-lg\">\r\n                  <div>\r\n                    \r\n                    {/* Category name and larger color sample */}\r\n                    <div className=\"flex items-center gap-3 mb-3\">\r\n                      <div className={`w-8 h-8 rounded-lg ${category.bgColor} border border-white/20 flex items-center justify-center`}>\r\n                        <div className={`w-4 h-4 rounded-md ${category.color.replace('text-', 'bg-')}`} />\r\n                      </div>\r\n                      <p className=\"font-medium text-lg text-white\">\r\n                        {category.name}\r\n                      </p>\r\n                    </div>\r\n\r\n                    {/* Description */}\r\n                    <p className=\"text-sm text-gray-200\">{category.description}</p>\r\n                  </div>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            ))}\r\n          </div>\r\n          {expandedCategory && (\r\n            <div className=\"p-4 bg-white border-t border-gray-200\">\r\n              <h3 className={`text-lg font-semibold mb-2 flex items-center gap-2 ${categories.find(c => c.name === expandedCategory)?.color}`}>\r\n                {expandedCategory}\r\n                <span className={`w-3 h-3 rounded-lg ${categories.find(c => c.name === expandedCategory)?.bgColor} border border-gray-200`} />\r\n              </h3>\r\n              <ul className=\"grid grid-cols-4 list-disc pl-5 max-h-40 overflow-y-auto gap-4\">\r\n                {categories.find(c => c.name === expandedCategory)?.items.map((item, index) => (\r\n                  <li key={index} className=\"text-sm mb-1 break-words w-full\">\r\n                    {item}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </TooltipProvider>\r\n  );\r\n};\r\n\r\n// Example metric configurations\r\nexport const metricConfigs = {\r\n  sessionsAndConversion: {\r\n    primary: {\r\n      key: 'Total Sessions',\r\n      name: 'Sessions'\r\n    },\r\n    secondary: {\r\n      key: 'Avg Conv. Rate',\r\n      name: 'Conversion'\r\n    }\r\n  },\r\n  spendAndRoas: {\r\n    primary: {\r\n      key: 'Total Spend',\r\n      name: 'Spend'\r\n    },\r\n    secondary: {\r\n      key: 'Total Purchase ROAS',\r\n      name: 'Purchase ROAS'\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport default PerformanceSummary;","// ExcelDownload.tsx\r\nimport * as XLSX from 'xlsx-js-style';\r\nimport { Button } from '@/components/ui/button';\r\nimport { FileDown } from 'lucide-react';\r\n\r\nexport interface ExcelStyle {\r\n  patternType: string;\r\n  fgColor: { rgb: string };\r\n}\r\n\r\nexport interface ExcelStyles {\r\n  green: ExcelStyle;\r\n  blue: ExcelStyle;\r\n  yellow: ExcelStyle;\r\n  red: ExcelStyle;\r\n  header: ExcelStyle;\r\n}\r\n\r\nexport interface ExcelThresholds {\r\n  avgSessions: number;\r\n  avgConvRate: number;\r\n}\r\n\r\nexport interface MonthlyData {\r\n  Month: string;\r\n  [key: string]: number | string;\r\n}\r\n\r\nexport interface RowData {\r\n  [key: string]: number | string | MonthlyData[];\r\n}\r\n\r\ninterface ExcelDownloadProps {\r\n  data: RowData[];\r\n  fileName: string;\r\n  primaryColumn: string;\r\n  secondaryColumns: string[];\r\n  monthlyDataKey: string;\r\n  monthlyMetrics: string[];\r\n  buttonClassName?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst defaultStyles: ExcelStyles = {\r\n  green: { patternType: 'solid', fgColor: { rgb: \"DCFCE7\" } },\r\n  blue: { patternType: 'solid', fgColor: { rgb: \"DBEAFE\" } },\r\n  yellow: { patternType: 'solid', fgColor: { rgb: \"FEF9C3\" } },\r\n  red: { patternType: 'solid', fgColor: { rgb: \"FEF2F2\" } },\r\n  header: { patternType: 'solid', fgColor: { rgb: \"F1F5F9\" } }\r\n};\r\n\r\nexport const calculateThresholds = (data: RowData[]): ExcelThresholds => {\r\n  let totalSessions = 0;\r\n  let totalConvRate = 0;\r\n  let count = 0;\r\n\r\n  data.forEach(row => {\r\n    if (typeof row['Total Sessions'] === 'number' && typeof row['Avg Conv. Rate'] === 'number') {\r\n      totalSessions += Number(row['Total Sessions']);\r\n      totalConvRate += Number(row['Avg Conv. Rate']);\r\n      count++;\r\n    }\r\n  });\r\n\r\n  return {\r\n    avgSessions: totalSessions / count,\r\n    avgConvRate: totalConvRate / count\r\n  };\r\n};\r\n\r\nconst getCellStyle = (\r\n  metric: string,\r\n  sessions: number | undefined,\r\n  convRate: number | undefined,\r\n  thresholds: ExcelThresholds,\r\n  styles: ExcelStyles\r\n) => {\r\n  if (\r\n    (metric === 'Sessions' || metric === 'Conv. Rate') &&\r\n    typeof sessions === 'number' &&\r\n    typeof convRate === 'number'\r\n  ) {\r\n    const isHighSessions = sessions >= thresholds.avgSessions;\r\n    const isGoodConversion = convRate >= thresholds.avgConvRate;\r\n\r\n    if (isHighSessions && isGoodConversion) return styles.green;\r\n    if (isHighSessions && !isGoodConversion) return styles.blue;\r\n    if (!isHighSessions && isGoodConversion) return styles.yellow;\r\n    return styles.red;\r\n  }\r\n  return undefined;\r\n};\r\n\r\nconst applyExcelStyles = (\r\n  worksheet: XLSX.WorkSheet,\r\n  data: RowData[],\r\n  months: string[],\r\n  secondaryColumns: string[],\r\n  monthlyDataKey: string,\r\n  monthlyMetrics: string[],\r\n  styles: ExcelStyles,\r\n  thresholds: ExcelThresholds\r\n) => {\r\n  const range = XLSX.utils.decode_range(worksheet['!ref'] || 'A1');\r\n\r\n  // Style header row\r\n  for (let C = range.s.c; C <= range.e.c; C++) {\r\n    const headerCell = XLSX.utils.encode_cell({ r: 0, c: C });\r\n    if (!worksheet[headerCell]) worksheet[headerCell] = { v: '' };\r\n    worksheet[headerCell].s = {\r\n      fill: styles.header,\r\n      font: { bold: true, color: { rgb: \"64748B\" } },\r\n      alignment: { horizontal: 'left' }\r\n    };\r\n  }\r\n\r\n  // Style data cells\r\n  data.forEach((row, dataIndex) => {\r\n    monthlyMetrics.forEach((metric, metricIndex) => {\r\n      const actualRow = dataIndex * monthlyMetrics.length + metricIndex + 2;\r\n\r\n      // Apply styles for each cell\r\n      const startCol = 2;\r\n      const endCol = months.length + secondaryColumns.length + 1;\r\n\r\n      for (let col = startCol; col <= endCol; col++) {\r\n        const cellRef = XLSX.utils.encode_cell({\r\n          r: actualRow - 1,\r\n          c: col\r\n        });\r\n\r\n        if (!worksheet[cellRef]) worksheet[cellRef] = { v: '' };\r\n\r\n        let cellStyle: any = {\r\n          font: { color: { rgb: \"000000\" } },\r\n          alignment: { horizontal: 'right' },\r\n          format: metric === 'Conv. Rate' ? '0.00%' : '#,##0'\r\n        };\r\n\r\n        let sessions: number | undefined;\r\n        let convRate: number | undefined;\r\n\r\n        if (col < startCol + secondaryColumns.length) {\r\n          sessions = row['Total Sessions'] as number;\r\n          convRate = row['Avg Conv. Rate'] as number;\r\n        } else {\r\n          const monthIndex = col - (startCol + secondaryColumns.length);\r\n          const monthKey = months[monthIndex];\r\n          const monthlyData = (row[monthlyDataKey] as MonthlyData[]).find(\r\n            m => `${m.Month.slice(0, 4)}-${m.Month.slice(4)}` === monthKey\r\n          );\r\n\r\n          if (monthlyData) {\r\n            sessions = monthlyData['Sessions'] as number;\r\n            convRate = monthlyData['Conv. Rate'] as number;\r\n          }\r\n        }\r\n\r\n        const fillStyle = getCellStyle(metric, sessions, convRate, thresholds, styles);\r\n        if (fillStyle) {\r\n          cellStyle.fill = fillStyle;\r\n        }\r\n\r\n        worksheet[cellRef].s = cellStyle;\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst ExcelDownload: React.FC<ExcelDownloadProps> = ({\r\n  data,\r\n  fileName,\r\n  primaryColumn,\r\n  secondaryColumns,\r\n  monthlyDataKey,\r\n  monthlyMetrics,\r\n  buttonClassName = '',\r\n  disabled = false,\r\n}) => {\r\n  const handleDownload = () => {\r\n    const workbook = XLSX.utils.book_new();\r\n    const sheetData: Array<Array<string | number | null>> = [];\r\n    const thresholds = calculateThresholds(data);\r\n\r\n    // Get all months\r\n    const months = Array.from(new Set(\r\n      data.flatMap(row => \r\n        (row[monthlyDataKey] as MonthlyData[]).map(m => \r\n          `${m.Month.slice(0, 4)}-${m.Month.slice(4)}`\r\n        )\r\n      )\r\n    )).sort().reverse();\r\n\r\n    // Create header row\r\n    const headerRow = [\r\n      primaryColumn,\r\n      'Metric',\r\n      ...secondaryColumns,\r\n      ...months,\r\n    ];\r\n    sheetData.push(headerRow);\r\n\r\n    // Create rows\r\n    data.forEach(row => {\r\n      monthlyMetrics.forEach(metric => {\r\n        const rowData: Array<string | number | null> = [];\r\n        \r\n        rowData.push(metric === monthlyMetrics[0] ? (row[primaryColumn] as string | number) : '');\r\n        rowData.push(metric);\r\n\r\n        secondaryColumns.forEach(column => {\r\n          const value = row[column] as number | string | undefined;\r\n          rowData.push(typeof value === 'number' ? Number(value.toFixed(2)) : null);\r\n        });\r\n\r\n        months.forEach(month => {\r\n          const monthData = (row[monthlyDataKey] as MonthlyData[]).find(\r\n            m => `${m.Month.slice(0, 4)}-${m.Month.slice(4)}` === month\r\n          );\r\n          const value = monthData ? monthData[metric] : null;\r\n          rowData.push(typeof value === 'number' ? Number(value.toFixed(2)) : null);\r\n        });\r\n\r\n        sheetData.push(rowData);\r\n      });\r\n    });\r\n\r\n    const worksheet = XLSX.utils.aoa_to_sheet(sheetData);\r\n    \r\n    // Apply styles\r\n    applyExcelStyles(\r\n      worksheet,\r\n      data,\r\n      months,\r\n      secondaryColumns,\r\n      monthlyDataKey,\r\n      monthlyMetrics,\r\n      defaultStyles,\r\n      thresholds\r\n    );\r\n\r\n    // Set column widths\r\n    const colWidths = [\r\n      { wch: 20 },\r\n      { wch: 12 },\r\n      ...secondaryColumns.map(() => ({ wch: 15 })),\r\n      ...months.map(() => ({ wch: 12 }))\r\n    ];\r\n    worksheet['!cols'] = colWidths;\r\n\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Conversion Data');\r\n    XLSX.writeFile(workbook, `${fileName}.xlsx`);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      onClick={handleDownload}\r\n      size=\"icon\"\r\n      variant=\"outline\"\r\n      className={buttonClassName}\r\n      disabled={disabled}\r\n    >\r\n      <FileDown className=\"h-4 w-4\" />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ExcelDownload;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface FilterValue {\r\n  value: number;\r\n  operator: string;\r\n}\r\n\r\ninterface ConversionFiltersState {\r\n  [componentId: string]: {\r\n    [key: string]: FilterValue | null;\r\n  };\r\n}\r\n\r\nconst initialState: ConversionFiltersState = {};\r\n\r\nconst conversionFiltersSlice = createSlice({\r\n  name: 'conversionFilters',\r\n  initialState,\r\n  reducers: {\r\n    setFilter: (\r\n      state,\r\n      action: PayloadAction<{\r\n        componentId: string;\r\n        column: string;\r\n        filter: FilterValue | null;\r\n      }>\r\n    ) => {\r\n      const { componentId, column, filter } = action.payload;\r\n      \r\n      // Only create new reference if needed\r\n      if (!state[componentId]) {\r\n        state[componentId] = {};\r\n      }\r\n      \r\n      // Only update if value actually changed\r\n      if (JSON.stringify(state[componentId][column]) !== JSON.stringify(filter)) {\r\n        state[componentId][column] = filter;\r\n      }\r\n    },\r\n    \r\n    clearFilters: (state, action: PayloadAction<string>) => {\r\n      const componentId = action.payload;\r\n      // Only delete if filters exist\r\n      if (Object.keys(state[componentId] || {}).length > 0) {\r\n        state[componentId] = {};\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setFilter, clearFilters } = conversionFiltersSlice.actions;\r\nexport default conversionFiltersSlice.reducer;","import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { useState } from \"react\";\r\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\r\nimport { Filter } from \"lucide-react\";\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport { clearFilters, setFilter } from \"@/store/slices/ConversionFilterSlice\";\r\n// Define all possible filterable columns\r\nconst FILTERABLE_COLUMNS = [\r\n  \"Total Sessions\", \r\n  \"Avg Conv Rate\", \r\n  \"Total Cost\", \r\n  \"Conv. Value / Cost\"\r\n] as const;\r\n\r\ntype FilterableColumn = typeof FILTERABLE_COLUMNS[number];\r\n\r\ninterface FilterValue {\r\n  value: number;\r\n  operator: string;\r\n}\r\n\r\ninterface FilterConversionsProps {\r\n  componentId: string;\r\n  availableColumns?: readonly FilterableColumn[];\r\n}\r\n\r\nexport default function FilterConversions({ \r\n  componentId, \r\n  availableColumns = FILTERABLE_COLUMNS \r\n}: FilterConversionsProps) {\r\n  const dispatch = useDispatch();\r\n  \r\n  // Dynamic filter retrieval\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {}\r\n  );\r\n\r\n  const [selectedColumn, setSelectedColumn] = useState<FilterableColumn>(availableColumns[0]);\r\n  const [operator, setOperator] = useState<string>(\">\");\r\n  const [value, setValue] = useState<number | undefined>(undefined);\r\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\r\n\r\n  const handleAddFilter = () => {\r\n    if (value === undefined || isNaN(value)) {\r\n      alert(\"Please enter a valid value\");\r\n      return;\r\n    }\r\n\r\n    const filterValue = { value, operator };\r\n\r\n    // Dispatch a generic filter action\r\n    dispatch(setFilter({ \r\n      componentId, \r\n      column: selectedColumn, \r\n      filter: filterValue \r\n    }));\r\n\r\n    setDropdownOpen(false);\r\n  };\r\n\r\n  const handleClearFilters = () => {\r\n    dispatch(clearFilters(componentId));\r\n    setSelectedColumn(availableColumns[0]);\r\n    setOperator(\">\");\r\n    setValue(undefined);\r\n    setDropdownOpen(false);\r\n  };\r\n\r\n  // Check if any filter is applied\r\n  const isFilterApplied = Object.values(filters).some(filter => filter !== null);\r\n\r\n  // Generate tooltip text for applied filters\r\n  const filterTooltip = Object.entries(filters)\r\n    .filter(([_, filter]) => filter !== null)\r\n    .map(([column, filter]) => \r\n      `${column}: ${filter?.operator} ${filter?.value}`\r\n    )\r\n    .join(\", \");\r\n\r\n  return (\r\n    <TooltipProvider>\r\n      <Tooltip open={isFilterApplied}>\r\n        <DropdownMenu open={dropdownOpen} onOpenChange={setDropdownOpen}>\r\n          <DropdownMenuTrigger asChild>\r\n            <TooltipTrigger>\r\n              <Button variant=\"outline\" size=\"icon\">\r\n                <Filter className={`h-4 w-4 ${isFilterApplied ? 'text-blue-500' : ''}`} />\r\n              </Button>\r\n            </TooltipTrigger>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent className=\"w-80 p-4 flex flex-col gap-4\">\r\n            <Select \r\n              onValueChange={(value) => setSelectedColumn(value as FilterableColumn)} \r\n              value={selectedColumn}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select Column\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {availableColumns.map(column => (\r\n                  <SelectItem key={column} value={column}>\r\n                    {column}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n\r\n            <Select onValueChange={setOperator} value={operator}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select Operator\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\">\">{'Greater Than ( > )'}</SelectItem>\r\n                <SelectItem value=\">=\">{'Greater Than or Equal To ( >= )'}</SelectItem>\r\n                <SelectItem value=\"<\">{'Less Than ( < )'}</SelectItem>\r\n                <SelectItem value=\"<=\">{'Less Than or Equal To ( <= )'}</SelectItem>\r\n                <SelectItem value=\"==\">{'Equal To ( == )'}</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"Enter Value\"\r\n              value={value === undefined ? \"\" : value}\r\n              onChange={(e) => setValue(parseFloat(e.target.value))}\r\n              className=\"w-full\"\r\n            />\r\n\r\n            <div className=\"flex flex-row gap-2 items-center justify-center w-full\">\r\n              <Button onClick={handleAddFilter} className=\"w-full\">\r\n                Add Filter\r\n              </Button>\r\n              <Button variant=\"destructive\" className=\"w-full\" onClick={handleClearFilters}>\r\n                Clear\r\n              </Button>\r\n            </div>\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n\r\n        <TooltipContent>\r\n          {filterTooltip}\r\n        </TooltipContent>\r\n      </Tooltip>\r\n    </TooltipProvider>\r\n  );\r\n}\r\n\r\n// Export the types for potential use in other components\r\nexport type { FilterableColumn, FilterValue };","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary, { metricConfigs } from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;// eslint-disable-line\r\n    [key: string]: any;\r\n  }>;// eslint-disable-line\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst DeviceTypeConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'device-conversion'\r\n\r\n  const user = useSelector((state: RootState) => state.user.user, shallowEqual);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const axiosInstance = createAxiosInstance();\r\n  // Use optional chaining to safely access date properties\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n        const response = await axiosInstance.post(`/api/analytics/deviceTypeConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  \r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Device\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Device based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                    defaultDate={{\r\n                      from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                      to: new Date()\r\n                    }}\r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {loading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DeviceTypeConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary, { metricConfigs } from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\n\r\nconst GenderConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'gender-conversion'\r\n\r\n  const user = useSelector((state: RootState)=>state.user.user , shallowEqual)\r\n  const { brandId } = useParams();\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n        const response = await axiosInstance.post(`/api/analytics/genderConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);;\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Gender\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Gender based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                    defaultDate={{\r\n                      from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                      to: new Date()\r\n                    }}\r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {loading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GenderConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"./PerformanceSummary\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst AgeConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  const componentId = 'age-conversion';\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {}, shallowEqual\r\n  );\r\n  \r\n  const user = useSelector((state: RootState) => state.user.user, shallowEqual);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n   \r\n      const response = await axiosInstance.post(`/api/analytics/ageConversionReport/${brandId}`, {\r\n        userId: user?.id, \r\n        startDate: startDate, \r\n        endDate: endDate, \r\n        ...transformedFilters  \r\n      }, { withCredentials: true });\r\n\r\n      const fetchedData = response.data || [];\r\n\r\n      setApiResponse(fetchedData);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Age\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Age based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                    defaultDate={{\r\n                      from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                      to: new Date()\r\n                    }}\r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} /> \r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {loading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AgeConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary, { metricConfigs } from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst InterestConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'interest-conversion'\r\n\r\n  const user = useSelector((state: RootState) =>state.user.user , shallowEqual);\r\n  const { brandId } = useParams();\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n    \r\n        const response = await axiosInstance.post(`/api/analytics/interestConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Interest\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Interest based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                    defaultDate={{\r\n                      from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                      to: new Date()\r\n                    }}\r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId}/>\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {loading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InterestConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary, { metricConfigs } from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\n\r\ntype ApiResponse = {\r\n    reportType: string;\r\n    data: Array<{\r\n        DeviceType: string;\r\n        MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n        [key: string]: any;\r\n    }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst OperatingSystemConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n    const componentId = 'operatingSystem-conversion'\r\n\r\n    const user = useSelector((state: RootState) => state.user.user , shallowEqual);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = () => {\r\n        setIsFullScreen(!isFullScreen);\r\n    };\r\n\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const filters = useSelector((state: RootState) => \r\n        state.conversionFilters[componentId] || {} , shallowEqual\r\n      );\r\n\r\n      const transformedFilters = useMemo(() => {\r\n        return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n          if (filter) {\r\n            const apiColumnName = {\r\n              \"Total Sessions\": \"sessionsFilter\",\r\n              \"Avg Conv Rate\": \"convRateFilter\",\r\n            }[column] || column;\r\n    \r\n            acc[apiColumnName] = filter;\r\n          }\r\n          return acc;\r\n        }, {});\r\n      }, [filters]);\r\n\r\n      \r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axiosInstance.post(`/api/analytics/operatingSystemConversionReport/${brandId}`, {\r\n                userId: user?.id,\r\n                startDate,\r\n                endDate,  ...transformedFilters  // Spread the transformed filters\r\n            });\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n    \r\n      useEffect(() => {\r\n        if (!isFullScreen) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [isFullScreen, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Operating System\";\r\n    const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n    return (\r\n        <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''} overflow-auto`}>\r\n            <CardContent>\r\n                <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                        <h2 className=\"text-lg font-medium\">Operating System based Conversion</h2>\r\n                        <Ga4Logo />\r\n                    </div>\r\n                    <div className=\"flex flex-wrap items-center gap-3\">\r\n                        {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                            <DatePickerWithRange\r\n                                defaultDate={{\r\n                                    from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                                    to: new Date()\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                        <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                        </Button>\r\n                        <FilterConversions componentId={componentId} />\r\n                        <ExcelDownload\r\n                            data={apiResponse?.data || []}\r\n                            fileName={`${primaryColumn}_Conversion_Report`}\r\n                            primaryColumn={primaryColumn}\r\n                            secondaryColumns={secondaryColumns}\r\n                            monthlyDataKey={monthlyDataKey}\r\n                            monthlyMetrics={monthlyMetrics}\r\n                            disabled={loading}\r\n                        />\r\n                        <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                            {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"rounded-md overflow-hidden\">\r\n                    {loading ? (\r\n                        <TableSkeleton />\r\n                    ) : (\r\n                        <div>\r\n                            <PerformanceSummary\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n                            />\r\n                            <ConversionTable\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                secondaryColumns={secondaryColumns}\r\n                                monthlyDataKey={monthlyDataKey}\r\n                                monthlyMetrics={monthlyMetrics}\r\n                                isFullScreen={isFullScreen}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default OperatingSystemConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"./PerformanceSummary\";\r\n\r\n\r\ntype ApiResponse = {\r\n    reportType: string;\r\n    data: Array<{\r\n        DeviceType: string;\r\n        MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n        [key: string]: any;\r\n    }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\n\r\nconst BrowserConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n  \r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n    const componentId = 'browser-conversion';\r\n    const user = useSelector((state:RootState) => state.user.user);\r\n    const { brandId } = useParams();\r\n\r\n    const toggleFullScreen = () => {\r\n        setIsFullScreen(!isFullScreen);\r\n    };\r\n\r\n    const { sessionsFilter, convRateFilter } = useSelector((state: RootState) =>\r\n        state.conversionFilters[componentId] || { sessionsFilter: null, convRateFilter: null }\r\n    );\r\n\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const filters = useSelector((state: RootState) => \r\n        state.conversionFilters[componentId] || {} ,shallowEqual\r\n      );\r\n      const transformedFilters = useMemo(() => {\r\n        return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n          if (filter) {\r\n            const apiColumnName = {\r\n              \"Total Sessions\": \"sessionsFilter\",\r\n              \"Avg Conv Rate\": \"convRateFilter\",\r\n            }[column] || column;\r\n    \r\n            acc[apiColumnName] = filter;\r\n          }\r\n          return acc;\r\n        }, {});\r\n      }, [filters]);\r\n      \r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axiosInstance.post(`/api/analytics/browserConversionReport/${brandId}`, {\r\n                userId: user?.id,\r\n                startDate,\r\n                endDate, sessionsFilter, convRateFilter\r\n            });\r\n            const fetchedData = response.data || [];\r\n            setApiResponse(fetchedData);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n    \r\n      useEffect(() => {\r\n        if (!isFullScreen) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [isFullScreen, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Browser\";\r\n    const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n    return (\r\n        <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n            <CardContent>\r\n\r\n                <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                        <h2 className=\"text-lg font-medium\">Browser based Conversion</h2>\r\n                        <Ga4Logo />\r\n                    </div>\r\n                    <div className=\"flex flex-wrap items-center gap-3\">\r\n                        {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                            <DatePickerWithRange\r\n                                defaultDate={{\r\n                                    from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                                    to: new Date()\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                        <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                        </Button>\r\n                        <FilterConversions componentId={componentId} />\r\n                        <ExcelDownload\r\n                            data={apiResponse?.data || []}\r\n                            fileName={`${primaryColumn}_Conversion_Report`}\r\n                            primaryColumn={primaryColumn}\r\n                            secondaryColumns={secondaryColumns}\r\n                            monthlyDataKey={monthlyDataKey}\r\n                            monthlyMetrics={monthlyMetrics}\r\n                            disabled={loading}\r\n                        />\r\n                        <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                            {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"rounded-md overflow-hidden\">\r\n                    {loading ? (\r\n                        <TableSkeleton />\r\n                    ) : (\r\n                        <div>\r\n                            <PerformanceSummary data={apiResponse?.data || []} primaryColumn={primaryColumn} metricConfig={metricConfigs.sessionsAndConversion || {}} />\r\n                            <ConversionTable\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                secondaryColumns={secondaryColumns}\r\n                                monthlyDataKey={monthlyDataKey}\r\n                                monthlyMetrics={monthlyMetrics}\r\n                                isFullScreen={isFullScreen}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default BrowserConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary, { metricConfigs } from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\n\r\ntype ApiResponse = {\r\n    reportType: string;\r\n    data: Array<{\r\n        DeviceType: string;\r\n        MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n        [key: string]: any;\r\n    }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\n\r\nconst SourceConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n    const componentId = 'source-conversion'\r\n\r\n    const user = useSelector((state: RootState)=> state.user.user , shallowEqual)\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = () => {\r\n        setIsFullScreen(!isFullScreen);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const filters = useSelector((state: RootState) => \r\n        state.conversionFilters[componentId] || {} , shallowEqual\r\n      );\r\n\r\n      const transformedFilters = useMemo(() => {\r\n        return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n          if (filter) {\r\n            const apiColumnName = {\r\n              \"Total Sessions\": \"sessionsFilter\",\r\n              \"Avg Conv Rate\": \"convRateFilter\",\r\n            }[column] || column;\r\n    \r\n            acc[apiColumnName] = filter;\r\n          }\r\n          return acc;\r\n        }, {});\r\n      }, [filters]);\r\n      \r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axiosInstance.post(`/api/analytics/sourceConversionReport/${brandId}`, {\r\n                userId: user?.id,\r\n                startDate,\r\n                endDate, ...transformedFilters\r\n            });\r\n            const fetchedData = response.data || [];\r\n            setApiResponse(fetchedData);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n    \r\n      useEffect(() => {\r\n        if (!isFullScreen) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [isFullScreen, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Source\";\r\n    const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n    return (\r\n        <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n            <CardContent>\r\n\r\n                <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                        <h2 className=\"text-lg font-medium\">Source based Conversion</h2>\r\n                        <Ga4Logo />\r\n                    </div>\r\n                    <div className=\"flex flex-wrap items-center gap-3\">\r\n                        {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                            <DatePickerWithRange\r\n                                defaultDate={{\r\n                                    from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                                    to: new Date()\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                        <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                        </Button>\r\n                        <FilterConversions componentId={componentId} />\r\n                        <ExcelDownload\r\n                            data={apiResponse?.data || []}\r\n                            fileName={`${primaryColumn}_Conversion_Report`}\r\n                            primaryColumn={primaryColumn}\r\n                            secondaryColumns={secondaryColumns}\r\n                            monthlyDataKey={monthlyDataKey}\r\n                            monthlyMetrics={monthlyMetrics}\r\n                            disabled={loading}\r\n                        />\r\n                        <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                            {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"rounded-md overflow-hidden\">\r\n                    {loading ? (\r\n                        <TableSkeleton />\r\n                    ) : (\r\n                        <div>\r\n                            <PerformanceSummary data={apiResponse?.data || []} primaryColumn={primaryColumn} metricConfig={metricConfigs.sessionsAndConversion || {}} />\r\n                            <ConversionTable\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                secondaryColumns={secondaryColumns}\r\n                                monthlyDataKey={monthlyDataKey}\r\n                                monthlyMetrics={monthlyMetrics}\r\n                                isFullScreen={isFullScreen}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SourceConversion;\r\n","import React, { useState, useRef, useEffect, useMemo } from 'react';\r\nimport CollapsibleSidebar from '../Dashboard/CollapsibleSidebar';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Radar } from 'lucide-react';\r\nimport { useTokenError } from '@/context/TokenErrorContext';\r\nimport NoGA4AcessPage from '../ReportPage/NoGA4AccessPage.';\r\nimport DeviceTypeConversion from './components/DeviceConversion';\r\nimport GenderConversion from './components/GenderConversion';\r\nimport AgeConversion from './components/AgeConversion';\r\nimport { CustomTabs } from './components/CustomTabs';\r\nimport InterestConversion from './components/InterestConversion';\r\nimport OperatingSystemConversion from './components/OperatingSystemConversion';\r\nimport BrowserConversion from './components/BrowserConversion';\r\nimport SourceConversion from './components/SourceConversion';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from \"@/store/index.ts\";\r\nimport Header from '@/components/dashboard_component/Header';\r\nimport ConnectPlatform from '../ReportPage/ConnectPlatformPage';\r\n\r\nconst AudienceConversionReportPage: React.FC = () => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const { brandId } = useParams<{ brandId: string }>();\r\n  const brands = useSelector((state: RootState) => state.brand.brands);\r\n  const selectedBrand = brands.find((brand) => brand._id === brandId);\r\n  const hasGA4Account = selectedBrand?.ga4Account ?? false;\r\n  const { tokenError } = useTokenError();\r\n\r\n  const [activeTab, setActiveTab] = useState('age');\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const colorInfo = [\r\n    { color: 'bg-green-100', condition: 'High Traffic, High Conversion' },\r\n    { color: 'bg-blue-100', condition: 'High Traffic, Low Conversion' },\r\n    { color: 'bg-yellow-100', condition: 'Low Traffic, High Conversion' },\r\n    { color: 'bg-red-50', condition: 'Low Traffic, Low Conversion' },\r\n  ];\r\n\r\n  const tabs = [\r\n    { label: 'Age', value: 'age' },\r\n    { label: 'Gender', value: 'gender' },\r\n    { label: 'Interest', value: 'interest' },\r\n    { label: 'Device', value: 'device' },\r\n    { label: 'Operating System', value: 'operatingSystem' },\r\n    { label: 'Browser', value: 'browser' },\r\n    { label: 'Source', value: 'source' },\r\n  ];\r\n\r\n  const refs = {\r\n    age: useRef<HTMLDivElement>(null),\r\n    gender: useRef<HTMLDivElement>(null),\r\n    interest: useRef<HTMLDivElement>(null),\r\n    device: useRef<HTMLDivElement>(null),\r\n    operatingSystem: useRef<HTMLDivElement>(null),\r\n    browser: useRef<HTMLDivElement>(null),\r\n    source: useRef<HTMLDivElement>(null),\r\n  };\r\n\r\n  // Observer to highlight active tab based on scroll position\r\n  useEffect(() => {\r\n    if (!containerRef.current) return;\r\n\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            const id = entry.target.id;\r\n            setActiveTab(id);\r\n          }\r\n        });\r\n      },\r\n      {\r\n        root: containerRef.current,\r\n        threshold: 0.7,\r\n        rootMargin: '0px 0px 0px 0px'\r\n      }\r\n    );\r\n\r\n    Object.keys(refs).forEach((key) => {\r\n      const element = refs[key as keyof typeof refs].current;\r\n      if (element) {\r\n        observer.observe(element);\r\n      }\r\n    });\r\n\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  const handleTabChange = (value: string) => {\r\n    setActiveTab(value);\r\n    const targetRef = refs[value as keyof typeof refs];\r\n\r\n    if (targetRef.current && containerRef.current) {\r\n      const headerHeight = 140; // Height of header + tabs\r\n      const elementTop = targetRef.current.getBoundingClientRect().top;\r\n      const offset = elementTop - headerHeight;\r\n\r\n      containerRef.current.scrollBy({\r\n        top: offset,\r\n        behavior: 'smooth'\r\n      });\r\n    }\r\n  };\r\n\r\n  if (tokenError) {\r\n    return <NoGA4AcessPage />;\r\n  }\r\n\r\n  if (!hasGA4Account) {\r\n    if (!hasGA4Account) {\r\n      return <ConnectPlatform\r\n        platform=\"google analytics\"\r\n        brandId={brandId ?? ''}\r\n        onSuccess={(platform, accountName, accountId) => {\r\n          console.log(`Successfully connected ${platform} account: ${accountName} (${accountId})`);\r\n        }} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n        {/* Header */}\r\n        <div className=\"flex-none\">\r\n          <Header\r\n            title=\"Audience & Traffic sources\"\r\n            Icon={Radar}\r\n            showDatePicker={true}\r\n            showColorPalette={true}\r\n            colorInfo={colorInfo}\r\n           />\r\n\r\n          {/* Tabs */}\r\n          <div className=\"bg-white px-6 sticky top-0 z-10\">\r\n            <CustomTabs tabs={tabs} activeTab={activeTab} onTabChange={handleTabChange} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Scrollable Content */}\r\n        <div ref={containerRef} className=\"flex-1 overflow-auto\">\r\n          <div className=\"px-6 py-4 space-y-6\">\r\n            <div id=\"age\" ref={refs.age}>\r\n              <AgeConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"gender\" ref={refs.gender}>\r\n              <GenderConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"interest\" ref={refs.interest} >\r\n              <InterestConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"device\" ref={refs.device} >\r\n              <DeviceTypeConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"operatingSystem\" ref={refs.operatingSystem} >\r\n              <OperatingSystemConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"browser\" ref={refs.browser} >\r\n              <BrowserConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"source\" ref={refs.source} >\r\n              <SourceConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudienceConversionReportPage;","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary, { metricConfigs } from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst CityTypeConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'city-conversion';\r\n  \r\n  const user  = useSelector((state:RootState) =>state.user.user, shallowEqual);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n        const response = await axiosInstance.post(`/api/analytics/cityConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n     \r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"City\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''} overflow-auto`}>\r\n      <CardContent>\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">City based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                    defaultDate={{\r\n                      from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                      to: new Date()\r\n                    }}\r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n             <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {loading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CityTypeConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary, { metricConfigs } from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst ChannelConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'channel-conversion'\r\n\r\n  const user = useSelector((state: RootState) => state.user.user , shallowEqual) ;\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n    \r\n        const response = await axiosInstance.post(`/api/analytics/channelConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Channel\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Channel based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                    defaultDate={{\r\n                      from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                      to: new Date()\r\n                    }}\r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n              <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {loading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <div>\r\n              <PerformanceSummary data={apiResponse?.data || []} primaryColumn={primaryColumn} metricConfig={metricConfigs.sessionsAndConversion || {}} />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChannelConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary, { metricConfigs } from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\n\r\nconst RegionConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'region-conversion'\r\n  \r\n  const user = useSelector((state: RootState)=> state.user.user, shallowEqual);\r\n  const { brandId } = useParams();\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n  \r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n        const response = await axiosInstance.post(`/api/analytics/regionConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Region\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Region based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                    defaultDate={{\r\n                      from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                      to: new Date()\r\n                    }}\r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {loading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <div>\r\n              <PerformanceSummary data={apiResponse?.data || []} primaryColumn={primaryColumn} metricConfig={metricConfigs.sessionsAndConversion || {}}/>\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RegionConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary, { metricConfigs } from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst LandingPageConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'landingPage-conversion'\r\n\r\n\r\n  const user = useSelector((state: RootState)=>state.user.user , shallowEqual);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\n  \r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n        const response = await axiosInstance.post(`/api/analytics/pageConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Landing Page\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''} overflow-auto`}>\r\n      <CardContent>\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Landing Page based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                    defaultDate={{\r\n                      from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                      to: new Date()\r\n                    }}\r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {loading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LandingPageConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from '@/store';\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"./PerformanceSummary\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\n\r\nconst CampaignConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'campaign-conversion';\r\n\r\n  const user = useSelector((state: RootState)=> state.user.user , shallowEqual);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n        const response = await axiosInstance.post(`/api/analytics/campaignConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Campaign\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Campaign based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n            {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n              <DatePickerWithRange\r\n                defaultDate={{\r\n                  from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                  to: new Date()\r\n                }}\r\n              />\r\n            </div>}\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {loading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <div>\r\n              <PerformanceSummary data={apiResponse?.data || []} primaryColumn={primaryColumn} metricConfig={metricConfigs.sessionsAndConversion || {}} />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CampaignConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary, { metricConfigs } from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\n\r\ntype ApiResponse = {\r\n    reportType: string;\r\n    data: Array<{\r\n        DeviceType: string;\r\n        MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n        [key: string]: any;\r\n    }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst PagePathConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n      const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n    const componentId = 'pagePath-conversion'\r\n\r\n    const user  = useSelector((state: RootState) => state.user.user , shallowEqual);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = () => {\r\n        setIsFullScreen(!isFullScreen);\r\n    };\r\n\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const filters = useSelector((state: RootState) => \r\n        state.conversionFilters[componentId] || {} , shallowEqual\r\n      );\r\n\r\n      const transformedFilters = useMemo(() => {\r\n        return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n          if (filter) {\r\n            const apiColumnName = {\r\n              \"Total Sessions\": \"sessionsFilter\",\r\n              \"Avg Conv Rate\": \"convRateFilter\",\r\n            }[column] || column;\r\n    \r\n            acc[apiColumnName] = filter;\r\n          }\r\n          return acc;\r\n        }, {});\r\n      }, [filters]);\r\n      \r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axiosInstance.post(`/api/analytics/pagePathConversionReport/${brandId}`, {\r\n                userId: user?.id,\r\n                startDate,\r\n                endDate,  ...transformedFilters \r\n            });\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 5 * 60 * 1000); // Refresh every 5 minutes\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n    \r\n      useEffect(() => {\r\n        if (!isFullScreen) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [isFullScreen, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Page Path\";\r\n    const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n    return (\r\n        <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''} overflow-auto`}>\r\n            <CardContent>\r\n                <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                        <h2 className=\"text-lg font-medium\">Page path based Conversion</h2>\r\n                        <Ga4Logo />\r\n                    </div>\r\n                    <div className=\"flex flex-wrap items-center gap-3\">\r\n                        {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                            <DatePickerWithRange\r\n                                defaultDate={{\r\n                                    from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                                    to: new Date()\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                        <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                        </Button>\r\n                        <FilterConversions componentId={componentId} />\r\n                        <ExcelDownload\r\n                            data={apiResponse?.data || []}\r\n                            fileName={`${primaryColumn}_Conversion_Report`}\r\n                            primaryColumn={primaryColumn}\r\n                            secondaryColumns={secondaryColumns}\r\n                            monthlyDataKey={monthlyDataKey}\r\n                            monthlyMetrics={monthlyMetrics}\r\n                            disabled={loading}\r\n                        />\r\n                        <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                            {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"rounded-md overflow-hidden\">\r\n                    {loading ? (\r\n                        <TableSkeleton />\r\n                    ) : (\r\n                        <div>\r\n                            <PerformanceSummary\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n                            />\r\n                            <ConversionTable\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                secondaryColumns={secondaryColumns}\r\n                                monthlyDataKey={monthlyDataKey}\r\n                                monthlyMetrics={monthlyMetrics}\r\n                                isFullScreen={isFullScreen}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PagePathConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary, { metricConfigs } from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\n\r\ntype ApiResponse = {\r\n    reportType: string;\r\n    data: Array<{\r\n        DeviceType: string;\r\n        MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n        [key: string]: any;\r\n    }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst PageTitleConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n    const componentId = 'pageTitle-conversion'\r\n\r\n    const user = useSelector((state: RootState) => state.user.user , shallowEqual);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = () => {\r\n        setIsFullScreen(!isFullScreen);\r\n    };\r\n\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const filters = useSelector((state: RootState) => \r\n        state.conversionFilters[componentId] || {} , shallowEqual\r\n      );\r\n\r\n      const transformedFilters = useMemo(() => {\r\n        return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n          if (filter) {\r\n            const apiColumnName = {\r\n              \"Total Sessions\": \"sessionsFilter\",\r\n              \"Avg Conv Rate\": \"convRateFilter\",\r\n            }[column] || column;\r\n    \r\n            acc[apiColumnName] = filter;\r\n          }\r\n          return acc;\r\n        }, {});\r\n      }, [filters]);\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n        \r\n            const response = await axiosInstance.post(`/api/analytics/pageTitleConversionReport/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate, ...transformedFilters\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 10 minutes\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n    \r\n      useEffect(() => {\r\n        if (!isFullScreen) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [isFullScreen, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Page Title\";\r\n    const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n    return (\r\n        <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''} overflow-auto`}>\r\n            <CardContent>\r\n                <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                        <h2 className=\"text-lg font-medium\">Page Title based Conversion</h2>\r\n                        <Ga4Logo />\r\n                    </div>\r\n                    <div className=\"flex flex-wrap items-center gap-3\">\r\n                        {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                            <DatePickerWithRange\r\n                                defaultDate={{\r\n                                    from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                                    to: new Date()\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                        <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                        </Button>\r\n                        <FilterConversions componentId={componentId} />\r\n                        <ExcelDownload\r\n                            data={apiResponse?.data || []}\r\n                            fileName={`${primaryColumn}_Conversion_Report`}\r\n                            primaryColumn={primaryColumn}\r\n                            secondaryColumns={secondaryColumns}\r\n                            monthlyDataKey={monthlyDataKey}\r\n                            monthlyMetrics={monthlyMetrics}\r\n                            disabled={loading}\r\n                        />\r\n                        <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                            {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"rounded-md overflow-hidden\">\r\n                    {loading ? (\r\n                        <TableSkeleton />\r\n                    ) : (\r\n                        <div>\r\n                            <PerformanceSummary\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n                            />\r\n                            <ConversionTable\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                secondaryColumns={secondaryColumns}\r\n                                monthlyDataKey={monthlyDataKey}\r\n                                monthlyMetrics={monthlyMetrics}\r\n                                isFullScreen={isFullScreen}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PageTitleConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/pages/GeneralisedDashboard/components/OtherPlatformModalContent\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary, { metricConfigs } from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst CountryConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'country-conversion';\r\n\r\n  const user = useSelector((state: RootState)=> state.user.user , shallowEqual);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n        const response = await axiosInstance.post(`/api/analytics/countryConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const primaryColumn = \"Country\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Country based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                    defaultDate={{\r\n                      from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                      to: new Date()\r\n                    }}\r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {loading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CountryConversion;\r\n","import React, { useState, useRef, useEffect, useMemo } from 'react';\r\nimport CollapsibleSidebar from '../Dashboard/CollapsibleSidebar';\r\nimport { useParams } from 'react-router-dom';\r\nimport {  Radar } from 'lucide-react';\r\nimport { useTokenError } from '@/context/TokenErrorContext';\r\nimport NoGA4AcessPage from '../ReportPage/NoGA4AccessPage.';\r\nimport CityTypeConversion from './components/CityConversion';\r\nimport ChannelConversion from './components/ChannelConversion';\r\nimport RegionConversion from './components/RegionConversion';\r\nimport LandingPageConversion from './components/LandingPageConversion';\r\nimport { CustomTabs } from './components/CustomTabs';\r\nimport CampaignConversion from './components/CampaignConversion';\r\nimport PagePathConversion from './components/PagePathConversion';\r\nimport PageTitleConversion from './components/PageTitleConversion';\r\nimport CountryConversion from './components/CountryConversion';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from \"@/store/index.ts\";\r\nimport Header from '@/components/dashboard_component/Header';\r\nimport ConnectPlatform from '../ReportPage/ConnectPlatformPage';\r\n\r\nconst WebsiteConversionReportPage: React.FC = () => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const { brandId } = useParams<{ brandId: string }>();\r\n  const brands = useSelector((state: RootState) => state.brand.brands);\r\n  const selectedBrand = brands.find((brand) => brand._id === brandId);\r\n  const hasGA4Account = selectedBrand?.ga4Account ?? false;\r\n  const { tokenError } = useTokenError();\r\n\r\n  const [activeTab, setActiveTab] = useState('channel');\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const colorInfo = [\r\n    { color: 'bg-green-100', condition: 'High Traffic, High Conversion' },\r\n    { color: 'bg-blue-100', condition: 'High Traffic, Low Conversion' },\r\n    { color: 'bg-yellow-100', condition: 'Low Traffic, High Conversion' },\r\n    { color: 'bg-red-50', condition: 'Low Traffic, Low Conversion' },\r\n  ];\r\n\r\n  const tabs = [\r\n    { label: 'Channel', value: 'channel' },\r\n    { label: 'Campaign', value: 'campaign' },\r\n    { label: 'Country', value: 'country' },\r\n    { label: 'City', value: 'city' },\r\n    { label: 'Region', value: 'region' },\r\n    { label: 'Landing Page', value: 'landingPage' },\r\n    { label: 'Page Path', value: 'pagePath' },\r\n    { label: 'Page Title', value: 'pageTitle' }\r\n  ];\r\n\r\n  const refs = {\r\n    country: useRef<HTMLDivElement>(null),\r\n    city: useRef<HTMLDivElement>(null),\r\n    region: useRef<HTMLDivElement>(null),\r\n    channel: useRef<HTMLDivElement>(null),\r\n    campaign: useRef<HTMLDivElement>(null),\r\n    landingPage: useRef<HTMLDivElement>(null),\r\n    pagePath: useRef<HTMLDivElement>(null),\r\n    pageTitle: useRef<HTMLDivElement>(null),\r\n  };\r\n\r\n  // Observer to highlight active tab based on scroll position\r\n  useEffect(() => {\r\n    if (!containerRef.current) return;\r\n\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            const id = entry.target.id;\r\n            setActiveTab(id);\r\n          }\r\n        });\r\n      },\r\n      {\r\n        root: containerRef.current,\r\n        threshold: 0.7,\r\n        rootMargin: '0px 0px 0px 0px'\r\n      }\r\n    );\r\n\r\n    Object.keys(refs).forEach((key) => {\r\n      const element = refs[key as keyof typeof refs].current;\r\n      if (element) {\r\n        observer.observe(element);\r\n      }\r\n    });\r\n\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  const handleTabChange = (value: string) => {\r\n    setActiveTab(value);\r\n    const targetRef = refs[value as keyof typeof refs];\r\n\r\n    if (targetRef.current && containerRef.current) {\r\n      const headerHeight = 140; // Height of header + tabs\r\n      const elementTop = targetRef.current.getBoundingClientRect().top;\r\n      const offset = elementTop - headerHeight;\r\n\r\n      containerRef.current.scrollBy({\r\n        top: offset,\r\n        behavior: 'smooth'\r\n      });\r\n    }\r\n  };\r\n\r\n  if (tokenError) {\r\n    return <NoGA4AcessPage />;\r\n  }\r\n\r\n  if (!hasGA4Account) {\r\n    if (!hasGA4Account) {\r\n      return <ConnectPlatform\r\n        platform=\"google analytics\"\r\n        brandId={brandId ?? ''}\r\n        onSuccess={(platform, accountName, accountId) => {\r\n          console.log(`Successfully connected ${platform} account: ${accountName} (${accountId})`);\r\n        }} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n        {/* Header */}\r\n        <div className=\"flex-none\">\r\n        <Header\r\n            title=\"Campaign and Website Performance\"\r\n            Icon={Radar}\r\n            showDatePicker={true}\r\n            showColorPalette={true}\r\n            colorInfo={colorInfo}\r\n           />\r\n\r\n          {/* Tabs */}\r\n          <div className=\"bg-white px-6 sticky top-0 z-10\">\r\n            <CustomTabs tabs={tabs} activeTab={activeTab} onTabChange={handleTabChange} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Scrollable Content */}\r\n        <div ref={containerRef} className=\"flex-1 overflow-auto\">\r\n          <div className=\"px-6 py-4 space-y-6\">\r\n            <div id=\"channel\" ref={refs.channel} >\r\n              <ChannelConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"campaign\" ref={refs.campaign} >\r\n              <CampaignConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"country\" ref={refs.country} >\r\n              <CountryConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"city\" ref={refs.city} >\r\n              <CityTypeConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"region\" ref={refs.region} >\r\n              <RegionConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"landingPage\" ref={refs.landingPage}>\r\n              <LandingPageConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"pagePath\" ref={refs.pagePath}>\r\n              <PagePathConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"pageTitle\" ref={refs.pageTitle}>\r\n              <PageTitleConversion dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebsiteConversionReportPage;","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { GoogleLogo } from \"@/pages/AnalyticsDashboard/AdAccountsMetricsCard\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport FilterConversions from \"@/pages/ConversionReportPage/components/Filter\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\n\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst SearchTerm: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n\r\n\r\n  const user = useSelector((state: RootState) => state.user.user ,shallowEqual);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const componentId = 'google-ads-search-term'; // Add a unique component identifier\r\n\r\n  // Get filters from Redux\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Cost\": \"costFilter\",\r\n          \"Conv. Value / Cost\": \"convValuePerCostFilter\",\r\n        }[column] || column;\r\n  \r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]); // Only re-compute when filters change\r\n  \r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axiosInstance.post(`/api/segment/searchTerm/${brandId}`, {\r\n        userId: user?.id,\r\n        startDate,\r\n        endDate,\r\n        ...transformedFilters, // Use the memoized filters\r\n      });\r\n  \r\n      const fetchedData = response.data?.data || [];\r\n      setApiResponse({\r\n        reportType: \"Search Term\",\r\n        data: fetchedData,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, user?.id, transformedFilters]); // Now filters are tracked properly\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 10 minutes\r\n    return () => clearInterval(intervalId);\r\n}, [fetchData]);\r\n\r\nuseEffect(() => {\r\n  if (propDateRange) {\r\n    dispatch(setDate({\r\n      from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n      to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n    }));\r\n  }\r\n}, [propDateRange]);\r\n\r\nuseEffect(() => {\r\n  if (!isFullScreen) {\r\n    if (propDateRange) {\r\n    dispatch(setDate({\r\n      from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n      to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n    }));\r\n  }\r\n  }\r\n}, [isFullScreen, propDateRange]);\r\n\r\n\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Search Term\";\r\n  const secondaryColumns = [\"Total Cost\", \"Conv. Value / Cost\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Cost\", \"Conv. Value/ Cost\"];\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-2\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Search Term Insights</h2>\r\n            <GoogleLogo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                   \r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions \r\n              componentId={componentId}\r\n              availableColumns={[\"Total Cost\", \"Conv. Value / Cost\"]}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {loading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <div>\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n                isAdsTable={true}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SearchTerm;","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { GoogleLogo } from \"@/pages/AnalyticsDashboard/AdAccountsMetricsCard\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport FilterConversions from \"@/pages/ConversionReportPage/components/Filter\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\n\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst Age: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  \r\n  \r\n  const user = useSelector((state: RootState)=>state.user.user , shallowEqual)\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const componentId = 'google-ads-age';\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Cost\": \"costFilter\",\r\n          \"Conv. Value / Cost\": \"convValuePerCostFilter\",\r\n        }[column] || column;\r\n  \r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]); // Only re-compute when filters change\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n\r\n      const response = await axiosInstance.post(`/api/segment/age/${brandId}`, {\r\n        userId: user?.id, startDate: startDate, endDate: endDate, ...transformedFilters\r\n      }, { withCredentials: true })\r\n\r\n      const fetchedData = response.data || [];\r\n\r\n      setApiResponse(fetchedData);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate,transformedFilters, user?.id]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Age Range\";\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const secondaryColumns = [\"Total Cost\", \"Conv. Value / Cost\"];\r\n  const monthlyMetrics = [\"Cost\",\"Conv. Value/ Cost\"];\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-2\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Age Insights</h2>\r\n            <GoogleLogo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions \r\n              componentId={componentId}\r\n              availableColumns={[\"Total Cost\", \"Conv. Value / Cost\"]}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {loading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <div>\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n                isAdsTable={true}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Age;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { GoogleLogo } from \"@/pages/AnalyticsDashboard/AdAccountsMetricsCard\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport FilterConversions from \"@/pages/ConversionReportPage/components/Filter\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\n\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst Gender: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  \r\n  \r\n  const user = useSelector((state: RootState)=>state.user.user);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const componentId = \"google-ads-gender\";\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Cost\": \"costFilter\",\r\n          \"Conv. Value / Cost\": \"convValuePerCostFilter\",\r\n        }[column] || column;\r\n  \r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]); // Only re-compute when filters change\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n\r\n      const response = await axiosInstance.post(`/api/segment/gender/${brandId}`, {\r\n        userId: user?.id, startDate: startDate, endDate: endDate, ...transformedFilters\r\n      }, { withCredentials: true })\r\n\r\n      const fetchedData = response.data || [];\r\n\r\n      setApiResponse(fetchedData);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, transformedFilters , user?.id]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Gender\";\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const secondaryColumns = [\"Total Cost\", \"Conv. Value / Cost\"];\r\n  const monthlyMetrics = [\"Cost\",\"Conv. Value/ Cost\"];\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-2\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Gender Insights</h2>\r\n            <GoogleLogo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                    \r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions \r\n              componentId={componentId}\r\n              availableColumns={[\"Total Cost\", \"Conv. Value / Cost\"]}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {loading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <div>\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n                isAdsTable={true}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Gender;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport CollapsibleSidebar from '../Dashboard/CollapsibleSidebar';\r\nimport { SquareChartGantt } from 'lucide-react';\r\nimport SearchTerm from './components/SearchTerm';\r\nimport { CustomTabs } from '../ConversionReportPage/components/CustomTabs';\r\nimport Age from './components/Age';\r\nimport Gender from './components/Gender';\r\nimport { useSelector } from 'react-redux';\r\nimport { useMemo } from 'react';\r\nimport { RootState } from '@/store';\r\nimport Header from '@/components/dashboard_component/Header';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTokenError } from '@/context/TokenErrorContext';\r\nimport NoGA4AcessPage from '../ReportPage/NoGA4AccessPage.';\r\nimport ConnectPlatform from '../ReportPage/ConnectPlatformPage';\r\n// import Product from './components/Product';\r\n// import Brand from './components/Brand';\r\n\r\n\r\nconst GoogleAdsDashboard: React.FC = () => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const [activeTab, setActiveTab] = useState('searchterm');\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const brands = useSelector((state: RootState) => state.brand.brands);\r\n  const { brandId } = useParams<{ brandId: string }>();\r\n  const selectedBrand = brands.find((brand) => brand._id === brandId);\r\n  const hasGoogleAdAccount = selectedBrand?.googleAdAccount ? selectedBrand.googleAdAccount.length > 0 : false;\r\n  const { tokenError } = useTokenError();\r\n\r\n  const tabs = [\r\n    { label: 'Search Term', value: 'searchterm' },\r\n    { label: 'Age', value: 'age' },\r\n    { label: 'Gender', value: 'gender' },\r\n    // { label: 'Product', value: 'product'},\r\n    // { label: 'Brand', value: 'brand'}\r\n  ];\r\n\r\n  const refs = {\r\n    searchterm: useRef<HTMLDivElement>(null),\r\n    age: useRef<HTMLDivElement>(null),\r\n    gender: useRef<HTMLDivElement>(null),\r\n    // product: useRef<HTMLDivElement>(null),\r\n    // brand: useRef<HTMLDivElement>(null)\r\n  };\r\n\r\n  // Observer to highlight active tab based on scroll position\r\n  useEffect(() => {\r\n    if (!containerRef.current) return;\r\n\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            const id = entry.target.id;\r\n            setActiveTab(id);\r\n          }\r\n        });\r\n      },\r\n      {\r\n        root: containerRef.current,\r\n        threshold: 0.7,\r\n        rootMargin: '0px 0px 0px 0px'\r\n      }\r\n    );\r\n\r\n    Object.keys(refs).forEach((key) => {\r\n      const element = refs[key as keyof typeof refs].current;\r\n      if (element) {\r\n        observer.observe(element);\r\n      }\r\n    });\r\n\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  const handleTabChange = (value: string) => {\r\n    setActiveTab(value);\r\n    const targetRef = refs[value as keyof typeof refs];\r\n\r\n    if (targetRef.current && containerRef.current) {\r\n      const headerHeight = 140; // Height of header + tabs\r\n      const elementTop = targetRef.current.getBoundingClientRect().top;\r\n      const offset = elementTop - headerHeight;\r\n\r\n      containerRef.current.scrollBy({\r\n        top: offset,\r\n        behavior: 'smooth'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n      {tokenError ? (\r\n          <NoGA4AcessPage />\r\n        ) : !hasGoogleAdAccount ? (\r\n          <>\r\n            <ConnectPlatform\r\n              platform=\"google ads\"\r\n              brandId={brandId ?? ''}\r\n              onSuccess={(platform, accountName, accountId) => {\r\n                console.log(`Successfully connected ${platform} account: ${accountName} (${accountId})`);\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n        {/* Header */}\r\n        <div className=\"flex-none\">\r\n        <Header showDatePicker={true} Icon={SquareChartGantt} title='Google Ads Reports' />\r\n          {/* Tabs */}\r\n          <div className=\"bg-white px-6 sticky top-0 z-10\">\r\n            <CustomTabs tabs={tabs} activeTab={activeTab} onTabChange={handleTabChange} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Scrollable Content */}\r\n        <div ref={containerRef} className=\"flex-1 overflow-auto\">\r\n          <div className=\"px-6 py-4 space-y-6\">\r\n            <div id=\"searchterm\" ref={refs.searchterm}>\r\n              <SearchTerm dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"age\" ref={refs.age}>\r\n              <Age dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            <div id=\"gender\" ref={refs.gender}>\r\n              <Gender dateRange={{ \r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined \r\n              }} />\r\n            </div>\r\n            {/* <div id=\"product\" ref={refs.product}>\r\n              <Product dateRange={date} />\r\n            </div>\r\n            <div id=\"brand\" ref={refs.brand}>\r\n              <Brand dateRange={date} />\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleAdsDashboard;","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/pages/AnalyticsDashboard/AdAccountsMetricsCard\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { RootState } from \"@/store\";\r\nimport PerformanceSummary, { metricConfigs } from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        audienceData: Array<{\r\n            \"Audience Segments\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\":number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedAudienceData: Array<{\r\n        \"Audience Segments\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst AudienceFbReport : React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const user = useSelector((state : RootState) =>state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId:string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/fbReport/audience/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 15 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n      \r\n      useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [fullScreenAccount, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    const blendedAudienceData = apiResponse?.blendedAudienceData;\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Audience Segments\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Audience Segments Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Account Cards Grid */}\r\n            {loading ? (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    <TableSkeleton />\r\n                </div>\r\n            ) : (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    {(blendedAudienceData && blendedAudienceData.length > 0)&&(\r\n                         <Card\r\n   \r\n                         className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                     >\r\n                         <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                             <div className=\"flex items-center justify-between\">\r\n                                 <div className=\"flex items-center gap-2\">\r\n                                     <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                     <div className=\"text-lg font-medium\">\r\n                                         Blended Summary\r\n                                     </div>\r\n                                 </div>\r\n                                 <div className=\"flex items-center space-x-2\">\r\n                                     {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                         <DatePickerWithRange\r\n                                             \r\n                                         />\r\n                                     </div>}\r\n                                     <Button\r\n                                         onClick={handleManualRefresh}\r\n                                         disabled={loading}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                     </Button>\r\n                                     <Button\r\n                                         onClick={() => toggleFullScreen('blended-summary')}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         {fullScreenAccount === 'blended-summary' ? (\r\n                                             <Minimize className=\"h-4 w-4\" />\r\n                                         ) : (\r\n                                             <Maximize className=\"h-4 w-4\" />\r\n                                         )}\r\n                                     </Button>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                         <CardContent className=\"p-0\">\r\n                             <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                             <PerformanceSummary\r\n                                        data={blendedAudienceData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                 <ConversionTable\r\n                                     data={Array.isArray(blendedAudienceData) ? blendedAudienceData : [blendedAudienceData]}\r\n                                     primaryColumn={primaryColumn}\r\n                                     secondaryColumns={secondaryColumns}\r\n                                     monthlyDataKey={monthlyDataKey}\r\n                                     monthlyMetrics={monthlyMetrics}\r\n                                     isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                     \r\n                                 />\r\n                             </div>\r\n                         </CardContent>\r\n                     </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                    {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n                                               \r\n                                            />\r\n                                        </div>}\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                <PerformanceSummary\r\n                                        data={account.audienceData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={account.audienceData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                       \r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default AudienceFbReport;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent} from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/pages/AnalyticsDashboard/AdAccountsMetricsCard\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport PerformanceSummary, { metricConfigs } from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        placementData: Array<{\r\n            \"Placements\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\": number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedPlacementData: Array<{\r\n        \"Placements\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst PlacementFbReport: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state : RootState) =>state.date.from)\r\n    const dateTo = useSelector((state : RootState)=>state.date.to)\r\n    const date = useMemo(() => ({\r\n        from: dateFrom,\r\n        to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n\r\n\r\n    const user = useSelector((state : RootState)=>state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId: string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/fbReport/placement/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 15 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n      \r\n      useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [fullScreenAccount, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    const blendedPlacementData = apiResponse?.blendedPlacementData;    \r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Placements\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Placements Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Account Cards Grid */}\r\n            {loading ? (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    <TableSkeleton />\r\n                </div>\r\n            ) : (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    {(blendedPlacementData && blendedPlacementData.length > 0)&&(\r\n                         <Card\r\n                         className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                     >\r\n                         <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                             <div className=\"flex items-center justify-between\">\r\n                                 <div className=\"flex items-center gap-2\">\r\n                                     <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                     <div className=\"text-lg font-medium\">\r\n                                         Blended Summary\r\n                                     </div>\r\n                                 </div>\r\n                                 <div className=\"flex items-center space-x-2\">\r\n                                     {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                         <DatePickerWithRange\r\n                                             \r\n                                         />\r\n                                     </div>}\r\n                                     <Button\r\n                                         onClick={handleManualRefresh}\r\n                                         disabled={loading}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                     </Button>\r\n                                     <Button\r\n                                         onClick={() => toggleFullScreen('blended-summary')}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         {fullScreenAccount === 'blended-summary' ? (\r\n                                             <Minimize className=\"h-4 w-4\" />\r\n                                         ) : (\r\n                                             <Maximize className=\"h-4 w-4\" />\r\n                                         )}\r\n                                     </Button>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                         <CardContent className=\"p-0\">\r\n                             <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                             <PerformanceSummary\r\n                                        data={blendedPlacementData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                 <ConversionTable\r\n                                     data={Array.isArray(blendedPlacementData) ? blendedPlacementData : [blendedPlacementData]}\r\n                                     primaryColumn={primaryColumn}\r\n                                     secondaryColumns={secondaryColumns}\r\n                                     monthlyDataKey={monthlyDataKey}\r\n                                     monthlyMetrics={monthlyMetrics}\r\n                                     isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                     \r\n                                 />\r\n                             </div>\r\n                         </CardContent>\r\n                     </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n                                               \r\n                                            />\r\n                                        </div>}\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                <PerformanceSummary\r\n                                        data={account.placementData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={account.placementData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                        \r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default PlacementFbReport;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent} from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/pages/AnalyticsDashboard/AdAccountsMetricsCard\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport PerformanceSummary, { metricConfigs } from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        platformData: Array<{\r\n            \"Platforms\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\":number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedPlatformData: Array<{\r\n        \"Platforms\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst PlatformFbReport : React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n        from: dateFrom,\r\n        to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const user  = useSelector((state : RootState)=>state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId:string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/fbReport/platform/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 15 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n      \r\n      useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [fullScreenAccount, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    const blendedPlatformData = apiResponse?.blendedPlatformData;\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Platforms\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Platform Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Account Cards Grid */}\r\n            {loading ? (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    <TableSkeleton />\r\n                </div>\r\n            ) : (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                     {(blendedPlatformData && blendedPlatformData.length > 0)&&(\r\n                         <Card\r\n                         className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                     >\r\n                         <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                             <div className=\"flex items-center justify-between\">\r\n                                 <div className=\"flex items-center gap-2\">\r\n                                     <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                     <div className=\"text-lg font-medium\">\r\n                                         Blended Summary\r\n                                     </div>\r\n                                 </div>\r\n                                 <div className=\"flex items-center space-x-2\">\r\n                                     {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                         <DatePickerWithRange\r\n                                             \r\n                                         />\r\n                                     </div>}\r\n                                     <Button\r\n                                         onClick={handleManualRefresh}\r\n                                         disabled={loading}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                     </Button>\r\n                                     <Button\r\n                                         onClick={() => toggleFullScreen('blended-summary')}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         {fullScreenAccount === 'blended-summary' ? (\r\n                                             <Minimize className=\"h-4 w-4\" />\r\n                                         ) : (\r\n                                             <Maximize className=\"h-4 w-4\" />\r\n                                         )}\r\n                                     </Button>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                         <CardContent className=\"p-0\">\r\n                             <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                             <PerformanceSummary\r\n                                        data={blendedPlatformData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                 <ConversionTable\r\n                                     data={Array.isArray(blendedPlatformData) ? blendedPlatformData : [blendedPlatformData]}\r\n                                     primaryColumn={primaryColumn}\r\n                                     secondaryColumns={secondaryColumns}\r\n                                     monthlyDataKey={monthlyDataKey}\r\n                                     monthlyMetrics={monthlyMetrics}\r\n                                     isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                     \r\n                                 />\r\n                             </div>\r\n                         </CardContent>\r\n                     </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md px-3 pt-2\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                    {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n                                                \r\n                                            />\r\n                                        </div>}\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                     <PerformanceSummary\r\n                                        data={account.platformData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    /> \r\n                                    <ConversionTable\r\n                                        data={account.platformData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                        \r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default PlatformFbReport;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent} from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/pages/AnalyticsDashboard/AdAccountsMetricsCard\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport PerformanceSummary, { metricConfigs } from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        countryData: Array<{\r\n            \"Country\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\":number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedCountryData: Array<{\r\n        \"Country\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst CountryFbReport : React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n\r\n\r\n    const user = useSelector((state : RootState) => state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId:string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/fbReport/country/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 15 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n      \r\n      useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [fullScreenAccount, propDateRange]);\r\n\r\n    const blendedCountryData = apiResponse?.blendedCountryData;\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Country\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Country Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Account Cards Grid */}\r\n            {loading ? (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    <TableSkeleton />\r\n                </div>\r\n            ) : (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    {(blendedCountryData && blendedCountryData.length > 0)&&(\r\n                         <Card\r\n   \r\n                         className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                     >\r\n                         <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                             <div className=\"flex items-center justify-between\">\r\n                                 <div className=\"flex items-center gap-2\">\r\n                                     <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                     <div className=\"text-lg font-medium\">\r\n                                         Blended Summary\r\n                                     </div>\r\n                                 </div>\r\n                                 <div className=\"flex items-center space-x-2\">\r\n                                     {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                         <DatePickerWithRange\r\n                                             \r\n                                         />\r\n                                     </div>}\r\n                                     <Button\r\n                                         onClick={handleManualRefresh}\r\n                                         disabled={loading}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                     </Button>\r\n                                     <Button\r\n                                         onClick={() => toggleFullScreen('blended-summary')}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         {fullScreenAccount === 'blended-summary' ? (\r\n                                             <Minimize className=\"h-4 w-4\" />\r\n                                         ) : (\r\n                                             <Maximize className=\"h-4 w-4\" />\r\n                                         )}\r\n                                     </Button>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                         <CardContent className=\"p-0\">\r\n                             <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                             <PerformanceSummary\r\n                                        data={blendedCountryData|| []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                 <ConversionTable\r\n                                     data={Array.isArray(blendedCountryData) ? blendedCountryData : [blendedCountryData]}\r\n                                     primaryColumn={primaryColumn}\r\n                                     secondaryColumns={secondaryColumns}\r\n                                     monthlyDataKey={monthlyDataKey}\r\n                                     monthlyMetrics={monthlyMetrics}\r\n                                     isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                 />\r\n                             </div>\r\n                         </CardContent>\r\n                     </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                    {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n                                               \r\n                                            />\r\n                                        </div>}\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                     <PerformanceSummary\r\n                                        data={account.countryData|| []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={account.countryData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default CountryFbReport;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/pages/AnalyticsDashboard/AdAccountsMetricsCard\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport PerformanceSummary, { metricConfigs } from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        deviceData: Array<{\r\n            \"Device\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\":number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedDeviceData: Array<{\r\n        \"Device\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst DeviceFbReport : React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateForm = useSelector((state : RootState)=> state.date.from)\r\n    const dateTo = useSelector((state : RootState)=> state.date.to)\r\n    const date = useMemo(() => ({\r\n        from: dateForm,\r\n        to: dateTo\r\n    }), [dateForm, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n    const user  = useSelector((state :RootState) =>state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId:string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/fbReport/device/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 15 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n      \r\n      useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [fullScreenAccount, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    const blendedDeviceData = apiResponse?.blendedDeviceData\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Device\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Device Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Account Cards Grid */}\r\n            {loading ? (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    <TableSkeleton />\r\n                </div>\r\n            ) : (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    {(blendedDeviceData && blendedDeviceData.length > 0)&&(\r\n                         <Card\r\n   \r\n                         className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                     >\r\n                         <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                             <div className=\"flex items-center justify-between\">\r\n                                 <div className=\"flex items-center gap-2\">\r\n                                     <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                     <div className=\"text-lg font-medium\">\r\n                                         Blended Summary\r\n                                     </div>\r\n                                 </div>\r\n                                 <div className=\"flex items-center space-x-2\">\r\n                                     {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                         <DatePickerWithRange\r\n                                             \r\n                                         />\r\n                                     </div>}\r\n                                     <Button\r\n                                         onClick={handleManualRefresh}\r\n                                         disabled={loading}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                     </Button>\r\n                                     <Button\r\n                                         onClick={() => toggleFullScreen('blended-summary')}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         {fullScreenAccount === 'blended-summary' ? (\r\n                                             <Minimize className=\"h-4 w-4\" />\r\n                                         ) : (\r\n                                             <Maximize className=\"h-4 w-4\" />\r\n                                         )}\r\n                                     </Button>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                         <CardContent className=\"p-0\">\r\n                             <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                             <PerformanceSummary\r\n                                        data={blendedDeviceData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                 <ConversionTable\r\n                                     data={Array.isArray(blendedDeviceData) ? blendedDeviceData : [blendedDeviceData]}\r\n                                     primaryColumn={primaryColumn}\r\n                                     secondaryColumns={secondaryColumns}\r\n                                     monthlyDataKey={monthlyDataKey}\r\n                                     monthlyMetrics={monthlyMetrics}\r\n                                     isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                     \r\n                                 />\r\n                             </div>\r\n                         </CardContent>\r\n                     </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                    {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange />\r\n                                        </div>}\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                     <PerformanceSummary\r\n                                        data={account.deviceData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={account.deviceData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                        \r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default DeviceFbReport;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/pages/AnalyticsDashboard/AdAccountsMetricsCard\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport PerformanceSummary, { metricConfigs } from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        genderData: Array<{\r\n            \"Gender\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\": number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedGenderData: Array<{\r\n        \"Gender\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst GenderFbReport : React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateForm = useSelector((state : RootState) => state.date.from);\r\n    const dateTo = useSelector((state : RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n        from: dateForm,\r\n        to: dateTo\r\n    }), [dateForm, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n\r\n\r\n    const user  = useSelector((state : RootState) => state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId:string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/fbReport/gender/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 15 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n      \r\n      useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [fullScreenAccount, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    const blendedGenderData = apiResponse?.blendedGenderData;\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Gender\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Gender Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Account Cards Grid */}\r\n            {loading ? (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    <TableSkeleton />\r\n                </div>\r\n            ) : (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    {(blendedGenderData && blendedGenderData.length >0) &&(\r\n                         <Card\r\n   \r\n                         className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                     >\r\n                         <div className=\"bg-white rounded-md px-3 pt-2\">\r\n                             <div className=\"flex items-center justify-between\">\r\n                                 <div className=\"flex items-center gap-2\">\r\n                                     <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                     <div className=\"text-lg font-medium\">\r\n                                         Blended Summary\r\n                                     </div>\r\n                                 </div>\r\n                                 <div className=\"flex items-center space-x-2\">\r\n                                     {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                         <DatePickerWithRange\r\n                                             \r\n                                         />\r\n                                     </div>}\r\n                                     <Button\r\n                                         onClick={handleManualRefresh}\r\n                                         disabled={loading}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                     </Button>\r\n                                     <Button\r\n                                         onClick={() => toggleFullScreen('blended-summary')}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         {fullScreenAccount === 'blended-summary' ? (\r\n                                             <Minimize className=\"h-4 w-4\" />\r\n                                         ) : (\r\n                                             <Maximize className=\"h-4 w-4\" />\r\n                                         )}\r\n                                     </Button>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                         <CardContent className=\"p-0\">\r\n                             <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                             <PerformanceSummary\r\n                                        data={blendedGenderData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                 <ConversionTable\r\n                                     data={Array.isArray(blendedGenderData) ? blendedGenderData : [blendedGenderData]}\r\n                                     primaryColumn={primaryColumn}\r\n                                     secondaryColumns={secondaryColumns}\r\n                                     monthlyDataKey={monthlyDataKey}\r\n                                     monthlyMetrics={monthlyMetrics}\r\n                                     isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                     \r\n                                 />\r\n                             </div>\r\n                         </CardContent>\r\n                     </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                    {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n                                               \r\n                                            />\r\n                                        </div>}\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                     <PerformanceSummary\r\n                                        data={account.genderData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={account.genderData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                        isAdsTable={true}\r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default GenderFbReport;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent} from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/pages/AnalyticsDashboard/AdAccountsMetricsCard\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport PerformanceSummary, { metricConfigs } from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        ageData: Array<{\r\n            \"Age\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\": number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedAgeData: Array<{\r\n        \"Age\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst AgeFbReport: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n        from: dateFrom,\r\n        to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const user = useSelector((state: RootState) => state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId: string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/fbReport/age/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 15 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n            dispatch(setDate({\r\n                from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n                to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n            }));\r\n        }\r\n    }, [propDateRange]);\r\n\r\n    useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n            if (propDateRange) {\r\n                dispatch(setDate({\r\n                    from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n                    to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n                }));\r\n            }\r\n        }\r\n    }, [fullScreenAccount, propDateRange]);\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Age\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n    const blendedAgeData = apiResponse?.blendedAgeData;\r\n\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Age Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Account Cards Grid */}\r\n            {loading ? (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    <TableSkeleton />\r\n                </div>\r\n            ) : (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    {(blendedAgeData && blendedAgeData.length > 0) && (\r\n                        <Card\r\n\r\n                            className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            Blended Summary\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n\r\n                                            />\r\n                                        </div>}\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen('blended-summary')}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === 'blended-summary' ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                    <PerformanceSummary\r\n                                        data={blendedAgeData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={Array.isArray(blendedAgeData) ? blendedAgeData : [blendedAgeData]}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                        \r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md px-3 pt-2\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n\r\n                                            />\r\n                                        </div>}\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                    <PerformanceSummary\r\n                                        data={account.ageData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={Array.isArray(account.ageData) ? account.ageData : [account.ageData]}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default AgeFbReport;\r\n","import React, { useMemo, useState } from 'react';\r\nimport CollapsibleSidebar from '../Dashboard/CollapsibleSidebar';\r\nimport { CustomTabs } from '../ConversionReportPage/components/CustomTabs';\r\nimport { FaMeta } from \"react-icons/fa6\";\r\nimport AudienceFbReport from './component/AudienceFbReport';\r\nimport PlacementFbReport from './component/PlacementFbReport';\r\nimport PlatformFbReport from './component/PlatformFbReport';\r\nimport CountryFbReport from './component/CountryFbReport';\r\nimport DeviceFbReport from './component/DeviceFbReport';\r\nimport GenderFbReport from './component/GenderFbReport';\r\nimport AgeFbReport from './component/AgeFbReport';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport Header from '@/components/dashboard_component/Header';\r\n\r\n\r\n\r\n\r\nconst FbReportPage: React.FC = () => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const [activeTab, setActiveTab] = useState('age');\r\n\r\n    const dateRange={ \r\n        from: date.from ? new Date(date.from) : undefined,\r\n        to: date.to ? new Date(date.to) : undefined \r\n      }\r\n\r\n    const tabs = [\r\n        { label: 'Age', value: 'age' },\r\n        { label: 'Gender', value: 'gender' },\r\n        { label: 'Country', value: 'country' },\r\n        { label: 'Platform', value: 'platform' },\r\n        { label: 'Placement', value: 'placement' },\r\n        { label: 'Impression Device', value: 'impressionDevice' },\r\n        { label: 'Audience Segments', value: 'audienceSegments' }\r\n    ];\r\n\r\n\r\n    const handleTabChange = (value: string) => {\r\n        setActiveTab(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex h-screen bg-gray-100\">\r\n            <CollapsibleSidebar />\r\n            <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n                {/* Header */}\r\n                <div className=\"flex-none\">\r\n                   <Header title='Meta Reports' Icon={FaMeta} showDatePicker={true}/>\r\n\r\n                    {/* Tabs */}\r\n                    <div className=\"bg-white px-6 sticky top-0 z-10\">\r\n                        <CustomTabs tabs={tabs} activeTab={activeTab} onTabChange={handleTabChange} />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Scrollable Content */}\r\n                <div className=\"flex-1 overflow-auto\">\r\n                    <div className=\"px-6 py-4 space-y-6\">\r\n                        {activeTab === 'audienceSegments' && (\r\n                            <div id=\"audienceSegments\">\r\n                                <AudienceFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                        {activeTab === 'placement' && (\r\n                            <div id=\"placement\">\r\n                                <PlacementFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                        {activeTab === 'platform' && (\r\n                            <div id=\"platform\">\r\n                                <PlatformFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                         {activeTab === 'country' && (\r\n                            <div id=\"country\">\r\n                                <CountryFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                         {activeTab === 'impressionDevice' && (\r\n                            <div id=\"impressionDevice\">\r\n                                <DeviceFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                        {activeTab === 'gender' && (\r\n                            <div id=\"gender\">\r\n                                <GenderFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                         {activeTab === 'age' && (\r\n                            <div id=\"age\">\r\n                                <AgeFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default FbReportPage;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface CampaignGroup {\r\n  id: string;\r\n  name: string;\r\n  campaigns: string[];\r\n  color: string;\r\n}\r\n\r\ninterface CampaignGroupsState {\r\n  groups: CampaignGroup[];\r\n  selectedCampaigns: string[];\r\n  editingGroupId: string | null;\r\n  expandedGroups: string[];\r\n  isCreatingGroup: boolean;\r\n}\r\n\r\n// Load initial state from localStorage if available\r\nconst loadState = (): CampaignGroupsState => {\r\n  try {\r\n    const serializedState = localStorage.getItem('campaignGroups');\r\n    if (serializedState === null) {\r\n      return {\r\n        groups: [],\r\n        selectedCampaigns: [],\r\n        editingGroupId: null,\r\n        expandedGroups: [],\r\n        isCreatingGroup: false\r\n      };\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    console.error('Error loading state:', err);\r\n    return {\r\n      groups: [],\r\n      selectedCampaigns: [],\r\n      editingGroupId: null,\r\n      expandedGroups: [],\r\n      isCreatingGroup: false\r\n    };\r\n  }\r\n};\r\n\r\n// Save state to localStorage\r\nconst saveState = (state: CampaignGroupsState) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('campaignGroups', serializedState);\r\n  } catch (err) {\r\n    console.error('Error saving state:', err);\r\n  }\r\n};\r\n\r\nconst campaignGroupsSlice = createSlice({\r\n  name: 'campaignGroups',\r\n  initialState: loadState(),\r\n  reducers: {\r\n    createGroup: (state, action: PayloadAction<{ name: string; campaigns: string[]; color: string }>) => {\r\n      const newGroup: CampaignGroup = {\r\n        id: Date.now().toString(),\r\n        name: action.payload.name,\r\n        campaigns: action.payload.campaigns,\r\n        color: action.payload.color\r\n      };\r\n      state.groups.push(newGroup);\r\n      state.selectedCampaigns = [];\r\n      state.isCreatingGroup = false;\r\n      saveState(state);\r\n    },\r\n    deleteGroup: (state, action: PayloadAction<string>) => {\r\n      state.groups = state.groups.filter(group => group.id !== action.payload);\r\n      if (state.editingGroupId === action.payload) {\r\n        state.editingGroupId = null;\r\n      }\r\n      saveState(state);\r\n    },\r\n    addCampaignToGroup: (state, action: PayloadAction<{ groupId: string; campaignName: string }>) => {\r\n      const group = state.groups.find(g => g.id === action.payload.groupId);\r\n      if (group && !group.campaigns.includes(action.payload.campaignName)) {\r\n        group.campaigns.push(action.payload.campaignName);\r\n      }\r\n      saveState(state);\r\n    },\r\n    removeCampaignFromGroup: (state, action: PayloadAction<{ groupId: string; campaignName: string }>) => {\r\n      const group = state.groups.find(g => g.id === action.payload.groupId);\r\n      if (group) {\r\n        group.campaigns = group.campaigns.filter(c => c !== action.payload.campaignName);\r\n      }\r\n      saveState(state);\r\n    },\r\n    setSelectedCampaigns: (state, action: PayloadAction<string[]>) => {\r\n      state.selectedCampaigns = action.payload;\r\n      saveState(state);\r\n    },\r\n    toggleEditingGroup: (state, action: PayloadAction<string | null>) => {\r\n      state.editingGroupId = action.payload;\r\n      saveState(state);\r\n    },\r\n    toggleGroupExpansion: (state, action: PayloadAction<string>) => {\r\n      const groupId = action.payload;\r\n      if (state.expandedGroups.includes(groupId)) {\r\n        state.expandedGroups = state.expandedGroups.filter(id => id !== groupId);\r\n      } else {\r\n        state.expandedGroups.push(groupId);\r\n      }\r\n      saveState(state);\r\n    },\r\n    setIsCreatingGroup: (state, action: PayloadAction<boolean>) => {\r\n      state.isCreatingGroup = action.payload;\r\n      if (!action.payload) {\r\n        state.selectedCampaigns = [];\r\n      }\r\n      saveState(state);\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  createGroup,\r\n  deleteGroup,\r\n  addCampaignToGroup,\r\n  removeCampaignFromGroup,\r\n  setSelectedCampaigns,\r\n  toggleEditingGroup,\r\n  toggleGroupExpansion,\r\n  setIsCreatingGroup\r\n} = campaignGroupsSlice.actions;\r\n\r\nexport default campaignGroupsSlice.reducer;","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport conversionFiltersReducer from \"./slices/ConversionFilterSlice\";\r\nimport brandReducer from \"./slices/BrandSlice.ts\"\r\nimport userReducer from \"./slices/UserSlice.ts\"\r\nimport dateReducer from \"./slices/DateSlice.ts\"\r\nimport campaignGroupsReducer from './slices/CampaignGroupSlice.ts';\r\n\r\n// Combine all reducers\r\nconst rootReducer = combineReducers({\r\n  conversionFilters: conversionFiltersReducer,\r\n  brand: brandReducer, \r\n  user: userReducer, \r\n  date: dateReducer,\r\n  campaignGroups: campaignGroupsReducer,\r\n});\r\n\r\n// Persist config - specify which slices to persist\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"conversionFilters\", \"brand\", \"user\", \"date\" , \"campaignGroups\"], // Persist both conversionFilters & brand\r\n};\r\n\r\n// Apply persistReducer to the rootReducer\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// Configure Redux store\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        // Explicitly ignore Redux Persist actions to avoid warnings\r\n        ignoredActions: [\"persist/PERSIST\", \"persist/REHYDRATE\", \"persist/REGISTER\"],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// Define types for Redux state & dispatch\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import { useState, useEffect, useCallback, useMemo } from 'react'\r\nimport { format } from \"date-fns\"\r\nimport { Blend} from \"lucide-react\"\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from \"axios\"\r\nimport AdAccountMetricsCard from '@/pages/AnalyticsDashboard/AdAccountsMetricsCard';\r\nimport { AdAccountData } from '@/pages/Dashboard/interfaces.ts'\r\nimport Header from '@/components/dashboard_component/Header.tsx';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store/index.ts';\r\nimport CollapsibleSidebar from '@/pages/Dashboard/CollapsibleSidebar';\r\nimport { FaMeta } from 'react-icons/fa6';\r\n\r\n\r\n\r\nexport default function MetaDashboard() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [fbAdAccountsMetrics, setFbAdAccountsMetrics] = useState<AdAccountData[]>([]);\r\n    const [locale, setLocale] = useState<\"en-IN\" | \"en-US\">(\"en-IN\");\r\n    const [rawMetrics, setRawMetrics] = useState({\r\n        totalSpent: 0,\r\n        totalRevenue: 0,\r\n        totalROAS: 0,\r\n        totalPurchases: 0,\r\n        totalCTR: 0,\r\n        totalCPC: 0,\r\n        totalCPM: 0,\r\n        totalCPP: 0,\r\n    });\r\n    const { brandId } = useParams();\r\n    const navigate = useNavigate();\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n        from: dateFrom,\r\n        to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n\r\n\r\n    const user = useSelector((state: RootState) => state.user.user);\r\n\r\n    const userId = user?.id;\r\n\r\n\r\n    const fetchAdData = useCallback(async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const baseURL =\r\n                import.meta.env.PROD\r\n                    ? import.meta.env.VITE_API_URL\r\n                    : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n            const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n            const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n            const fbAdResponse = await axios.post(\r\n                `${baseURL}/api/metrics/fbAd/${brandId}`,\r\n                { startDate, endDate, userId },\r\n                { withCredentials: true }\r\n            );\r\n            const fbData = fbAdResponse.data.data;\r\n            setFbAdAccountsMetrics(fbData);\r\n            calculateAggregatedMetrics(fbData);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching ad data:', error);\r\n            if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n                alert('Your session has expired. Please log in again.');\r\n                navigate('/');\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [navigate, date, brandId, userId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchAdData();\r\n    }, [fetchAdData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchAdData();\r\n\r\n        const intervalId = setInterval(fetchAdData, 5 * 60 * 1000);\r\n\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchAdData]);\r\n\r\n\r\n    const calculateAggregatedMetrics = useCallback((fbData: AdAccountData[]) => {\r\n        let totalSpent = 0;\r\n        let totalRevenue = 0;\r\n        let totalPurchases = 0;\r\n        let totalClicks = 0;\r\n        let totalImpressions = 0;\r\n\r\n        if (fbData?.length) {\r\n            fbData.forEach(account => {\r\n                totalSpent += parseFloat(account.spend || '0');\r\n                totalRevenue += parseFloat(account.Revenue?.value || '0');\r\n                totalPurchases += parseFloat(account.purchases?.value || '0');\r\n                totalClicks += parseFloat(account.clicks || '0');\r\n                totalImpressions += parseFloat(account.impressions || '0');\r\n            });\r\n        }\r\n\r\n        setRawMetrics({\r\n            totalSpent,\r\n            totalRevenue,\r\n            totalROAS: totalRevenue / totalSpent || 0,\r\n            totalPurchases,\r\n            totalCTR: (totalClicks / totalImpressions) * 100 || 0,\r\n            totalCPC: totalSpent / totalClicks || 0,\r\n            totalCPM: (totalSpent * 1000) / totalImpressions || 0,\r\n            totalCPP: totalPurchases > 0 ? (totalSpent / totalPurchases) : 0,\r\n        });\r\n    }, []);\r\n\r\n\r\n    const formattedMetrics = useMemo(() => {\r\n        return {\r\n            totalSpent: `₹ ${rawMetrics.totalSpent.toLocaleString(locale)}`,\r\n            totalRevenue: `₹ ${rawMetrics.totalRevenue.toLocaleString(locale)}`,\r\n            totalROAS: Number((rawMetrics.totalROAS).toFixed(2)).toLocaleString(locale),\r\n            totalPurchases: rawMetrics.totalPurchases.toLocaleString(locale),\r\n            totalCTR: `${Number((rawMetrics.totalCTR).toFixed(2)).toLocaleString(locale)} %`,\r\n            totalCPC: Number((rawMetrics.totalCPC).toFixed(2)).toLocaleString(locale),\r\n            totalCPM: Number((rawMetrics.totalCPM).toFixed(2)).toLocaleString(locale),\r\n            totalCPP: Number((rawMetrics.totalCPP).toFixed(2)).toLocaleString(locale),\r\n        };\r\n    }, [rawMetrics, locale]);\r\n\r\n\r\n    // Use formattedMetrics for rendering\r\n    const metrics = [\r\n        {\r\n            label: 'Amount Spent',\r\n            value: formattedMetrics.totalSpent,\r\n            tooltipContent: 'The sum of ad spends for all advertising platforms',\r\n        },\r\n        {\r\n            label: 'Revenue',\r\n            value: formattedMetrics.totalRevenue,\r\n            tooltipContent: 'Revenue from Ads Purchases',\r\n        },\r\n        {\r\n            label: 'ROAS (Ads only)',\r\n            value: formattedMetrics.totalROAS,\r\n            tooltipContent: 'Blended ROAS = Ads Purchases value / Blended Ad Spend',\r\n        },\r\n        {\r\n            label: 'Ads Purchases',\r\n            value: formattedMetrics.totalPurchases,\r\n            tooltipContent: 'Ads Purchases = Fb Ads Purchase + Google Conversions',\r\n        },\r\n        {\r\n            label: 'CTR',\r\n            value: formattedMetrics.totalCTR,\r\n            tooltipContent:\r\n                'Average CTR from all advertising platforms = (Blended Clicks / Blended Impressions)*100',\r\n        },\r\n        {\r\n            label: 'CPC',\r\n            value: formattedMetrics.totalCPC,\r\n            tooltipContent:\r\n                'Average CPC from all advertising platforms = (Blended Ad Spend / Blended Clicks)',\r\n        },\r\n        {\r\n            label: 'CPM',\r\n            value: formattedMetrics.totalCPM,\r\n            tooltipContent:\r\n                'Average CPM from all advertising platforms = (Blended Ad Spend * 1000 / Blended Impressions)',\r\n        },\r\n        {\r\n            label: 'CPP',\r\n            value: formattedMetrics.totalCPP,\r\n            tooltipContent:\r\n                'Average CPP from all advertising platforms = (Blended Ad Spend / Blended Purchases)',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"flex h-screen\"> \r\n            <CollapsibleSidebar />\r\n            <div className=\"flex-1 h-screen overflow-auto\">\r\n                <div className=\"min-h-screen bg-gray-100\">\r\n                    <Header\r\n                        title=\"Adaccount summary\"\r\n                        Icon={FaMeta}\r\n                        showDatePicker={true}\r\n                        showSettings={true}\r\n                        showRefresh={true}\r\n                        isLoading={false}\r\n                        handleManualRefresh={() => {\r\n                            fetchAdData();\r\n                        }}\r\n                        locale={locale}\r\n                        setLocale={setLocale} />\r\n\r\n\r\n                    {/* Main content */}\r\n                    <main className=\"p-4 md:p-6 lg:px-8\">\r\n                        <div className=\"space-y-2\">\r\n                            {/* Blended summary */}\r\n                            <section>\r\n                                <h2 className=\"text-xl font-semibold flex flex-row items-center justify-between\">\r\n                                    <div className='flex flex-row items-center space-x-2'>\r\n                                        <Blend className=\"h-5 w-5\" />\r\n                                        <span>Blended summary</span>\r\n\r\n                                        <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n                                            <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n                                        </svg>\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n                                </h2>\r\n                                <AdAccountMetricsCard\r\n                                    metrics={metrics}\r\n                                    date={{\r\n                                        from: date.from ? new Date(date.from) : undefined,\r\n                                        to: date.to ? new Date(date.to) : undefined\r\n                                    }}\r\n                                    isLoading={isLoading}\r\n                                    icon={'Facebook'}\r\n                                />\r\n                            </section>\r\n                        </div>\r\n\r\n\r\n                        {fbAdAccountsMetrics?.length > 0 && fbAdAccountsMetrics.map((accountMetrics, index) => {\r\n                            const fbmetrics = [\r\n                                { label: 'Amount Spent', value: `₹ ${parseFloat(accountMetrics.spend || '0').toLocaleString(locale)}` },\r\n                                {\r\n                                    label: 'Revenue',\r\n                                    value: `₹ ${parseFloat(accountMetrics.Revenue?.value || '0').toLocaleString(locale)}`\r\n                                },\r\n                                {\r\n                                    label: 'ROAS (Ads only)',\r\n                                    value: accountMetrics.purchase_roas && accountMetrics.purchase_roas.length > 0\r\n                                        ? parseFloat(accountMetrics.purchase_roas[0].value).toFixed(2)\r\n                                        : '0'\r\n                                },\r\n                                { label: 'Ads Purchases', value: accountMetrics.purchases?.value || '0' },\r\n                                { label: 'CPC (All clicks)', value: `₹ ${new Intl.NumberFormat(locale).format(parseFloat(accountMetrics.cpc || '0'))}` },\r\n                                { label: 'CPM', value: `₹ ${new Intl.NumberFormat(locale, { minimumFractionDigits: 2 }).format(parseFloat(accountMetrics.cpm || '0'))}` },\r\n                                { label: 'CTR', value: `${parseFloat(accountMetrics.ctr || '0').toFixed(2)} %` },\r\n                                { label: 'Cost per Purchase (All)', value: `₹ ${new Intl.NumberFormat(locale).format(parseFloat(accountMetrics.cpp || '0'))}` },\r\n                            ];\r\n\r\n                            return (\r\n                                <>\r\n                                    <AdAccountMetricsCard\r\n                                        key={index}\r\n                                        icon=\"Facebook\"\r\n                                        title={`Facebook - ${accountMetrics.account_name}`}\r\n                                        metrics={fbmetrics}  // Pass fbmetrics for the current account\r\n                                        date={{\r\n                                            from: date.from ? new Date(date.from) : undefined,\r\n                                            to: date.to ? new Date(date.to) : undefined\r\n                                        }}\r\n                                        isLoading={isLoading}\r\n                                        errorMessage={accountMetrics.message}\r\n                                    />\r\n                                </>\r\n                            );\r\n                        })}\r\n                    </main>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","import React, { useRef, useEffect, useState } from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { FacebookLogo } from \"@/pages/AnalyticsDashboard/AdAccountsMetricsCard\"\r\nimport { MdOutlineCampaign } from \"react-icons/md\"\r\nimport {\r\n  Minimize2,\r\n  Maximize2,\r\n  ChevronUp,\r\n  ChevronDown,\r\n  Edit2,\r\n  Save,\r\n  X,\r\n  Search,\r\n  MinusCircle,\r\n  GripHorizontal\r\n} from \"lucide-react\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\"\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from \"@/store\"\r\nimport {\r\n  createGroup,\r\n  deleteGroup,\r\n  addCampaignToGroup,\r\n  removeCampaignFromGroup,\r\n  setSelectedCampaigns,\r\n  toggleEditingGroup,\r\n  toggleGroupExpansion,\r\n  setIsCreatingGroup\r\n} from \"@/store/slices/CampaignGroupSlice\"\r\n\r\nimport ColumnManagementSheet from \"./ColumnManagementSheet\"\r\n\r\ninterface Campaign {\r\n  [key: string]: string | number\r\n}\r\n\r\ninterface MetaReportTableProps {\r\n  data: {\r\n    account_name: string\r\n    campaigns: Campaign[]\r\n  }\r\n  height?: string\r\n}\r\n\r\nconst GROUP_COLORS = [\r\n  \"bg-red-100\",\r\n  \"bg-emerald-100\",\r\n  \"bg-orange-100\",\r\n  \"bg-indigo-100\",\r\n  \"bg-lime-100\",\r\n  \"bg-pink-100\",\r\n  \"bg-purple-100\",\r\n  \"bg-teal-100\",\r\n  \"bg-fuchsia-100\",\r\n  \"bg-cyan-100\"\r\n]\r\n\r\nconst GROUP_DEEP_COLORS: Record<string, string> = {\r\n  \"bg-red-100\": \"bg-red-600\",\r\n  \"bg-emerald-100\": \"bg-emerald-600\",\r\n  \"bg-orange-100\": \"bg-orange-600\",\r\n  \"bg-indigo-100\": \"bg-indigo-600\",\r\n  \"bg-lime-100\": \"bg-lime-600\",\r\n  \"bg-pink-100\": \"bg-pink-600\",\r\n  \"bg-purple-100\": \"bg-purple-600\",\r\n  \"bg-teal-100\": \"bg-teal-600\",\r\n  \"bg-fuchsia-100\": \"bg-fuchsia-600\",\r\n  \"bg-cyan-100\": \"bg-cyan-600\"\r\n}\r\n\r\nconst MetaCampaignTable: React.FC<MetaReportTableProps> = ({ data, height = \"max-h-[600px]\" }) => {\r\n  const dispatch = useDispatch()\r\n  const {\r\n    groups,\r\n    selectedCampaigns,\r\n    editingGroupId,\r\n    expandedGroups,\r\n    isCreatingGroup\r\n  } = useSelector((state: RootState) => state.campaignGroups)\r\n\r\n  const [isFullScreen, setIsFullScreen] = useState(false)\r\n  const [sortColumn, setSortColumn] = useState(\"\")\r\n  const [sortDirection, setSortDirection] = useState<\"asc\" | \"desc\">(\"desc\")\r\n  const [isScrolled, setIsScrolled] = useState(false)\r\n  const [newGroupName, setNewGroupName] = useState(\"\")\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false)\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const tableRef = useRef<HTMLDivElement>(null)\r\n\r\n  const headers = data.campaigns.length > 0 ? Object.keys(data.campaigns[0]) : []\r\n  const [visibleColumns, setVisibleColumns] = useState<string[]>(headers)\r\n  const [columnOrder, setColumnOrder] = useState<string[]>(headers)\r\n  const [draggedColumn, setDraggedColumn] = useState<string | null>(null)\r\n  const [dropTargetColumn, setDropTargetColumn] = useState<string | null>(null)\r\n\r\n  const handleDragStart = (column: string) => {\r\n    setDraggedColumn(column)\r\n  }\r\n\r\n  const handleDragOver = (e: React.DragEvent, column: string) => {\r\n    e.preventDefault()\r\n    setDropTargetColumn(column)\r\n  }\r\n\r\n  const handleDrop = (targetColumn: string) => {\r\n    if (!draggedColumn) return\r\n\r\n    const newOrder = [...columnOrder]\r\n    const draggedIdx = newOrder.indexOf(draggedColumn)\r\n    const targetIdx = newOrder.indexOf(targetColumn)\r\n\r\n    newOrder.splice(draggedIdx, 1)\r\n    newOrder.splice(targetIdx, 0, draggedColumn)\r\n\r\n    setColumnOrder(newOrder)\r\n    setDraggedColumn(null)\r\n    setDropTargetColumn(null)\r\n  }\r\n\r\n  const handleCreateGroup = () => {\r\n    if (newGroupName && selectedCampaigns.length > 0) {\r\n      const color = GROUP_COLORS[groups.length % GROUP_COLORS.length]\r\n      dispatch(createGroup({ name: newGroupName, campaigns: selectedCampaigns, color }))\r\n      setNewGroupName(\"\")\r\n      dispatch(setSelectedCampaigns([]))\r\n      dispatch(setIsCreatingGroup(false))\r\n    }\r\n  }\r\n\r\n  const handleAddToGroup = (groupId: string, campaignName: string) => {\r\n    dispatch(addCampaignToGroup({ groupId, campaignName }))\r\n  }\r\n\r\n  const handleRemoveFromGroup = (groupId: string, campaignName: string) => {\r\n    dispatch(removeCampaignFromGroup({ groupId, campaignName }))\r\n  }\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleScroll = (e: Event) => {\r\n      const target = e.target as HTMLDivElement\r\n      setIsScrolled(target.scrollLeft > 0)\r\n    }\r\n\r\n    const tableContainer = tableRef.current\r\n    if (tableContainer) {\r\n      tableContainer.addEventListener(\"scroll\", handleScroll)\r\n    }\r\n\r\n    return () => {\r\n      if (tableContainer) {\r\n        tableContainer.removeEventListener(\"scroll\", handleScroll)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const formatNumber = (num: number) => {\r\n    return num.toLocaleString(\"en-US\", {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n  }\r\n\r\n  const formatCellValue = (value: string | number, header: string) => {\r\n    if (typeof value === \"number\") {\r\n      if (header === \"Amount spent\" || header.toLowerCase().includes(\"cost\") || header === \"CPM\") {\r\n        return `₹${formatNumber(value)}`\r\n      } else if (header.includes(\"Rate\") || header === \"ROAS\") {\r\n        return `${formatNumber(value)}%`\r\n      } else if (header === \"Frequency\") {\r\n        return formatNumber(value)\r\n      } else {\r\n        return Math.round(value).toLocaleString()\r\n      }\r\n    }\r\n    return value\r\n  }\r\n\r\n  const calculateGroupMetrics = (campaigns: string[]) => {\r\n    const metrics: { [key: string]: string | number } = {}\r\n    const campaignData = data.campaigns.filter((c) => campaigns.includes(c.Campaign as string))\r\n\r\n    headers.forEach((header) => {\r\n      if (header !== \"Campaign\") {\r\n        metrics[header] = campaignData.reduce((sum, campaign) => {\r\n          const value = campaign[header]\r\n          if (typeof value === \"number\") {\r\n            if (header.includes(\"Rate\") || header === \"ROAS\" || header === \"Frequency\") {\r\n              return sum + value / campaignData.length\r\n            } else {\r\n              return sum + value\r\n            }\r\n          }\r\n          return sum\r\n        }, 0)\r\n      }\r\n      if (header === \"Status\") {\r\n        metrics[\"Status\"] = \"-\"\r\n      }\r\n    })\r\n\r\n    return metrics\r\n  }\r\n\r\n  const filteredCampaigns = data.campaigns.filter(campaign =>\r\n    (campaign.Campaign as string).toLowerCase().includes(searchTerm.toLowerCase())\r\n  )\r\n\r\n  const sortedCampaigns = [...filteredCampaigns].sort((a, b) => {\r\n    if (sortColumn) {\r\n      const aValue = a[sortColumn]\r\n      const bValue = b[sortColumn]\r\n      if (typeof aValue === \"number\" && typeof bValue === \"number\") {\r\n        return sortDirection === \"asc\" ? aValue - bValue : bValue - aValue\r\n      } else {\r\n        return sortDirection === \"asc\"\r\n          ? String(aValue).localeCompare(String(bValue))\r\n          : String(bValue).localeCompare(String(aValue))\r\n      }\r\n    }\r\n    return 0\r\n  })\r\n\r\n  const handleSort = (column: string) => {\r\n    if (column === sortColumn) {\r\n      setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\")\r\n    } else {\r\n      setSortColumn(column)\r\n      setSortDirection(\"desc\")\r\n    }\r\n  }\r\n\r\n  const stickyColumnClass = isScrolled\r\n    ? \"after:absolute after:top-0 after:right-0 after:bottom-0 after:w-2 after:shadow-[4px_0_8px_-2px_rgba(0,0,0,0.2)] after:-mr-0.5 border-r-2 border-r-slate-300\"\r\n    : \"\"\r\n\r\n  const getTableHeight = () => {\r\n    if (isFullScreen) {\r\n      return \"max-h-[calc(100vh-100px)]\"\r\n    }\r\n    return height\r\n  }\r\n\r\n  const groupedCampaigns = groups.flatMap((group) => group.campaigns)\r\n  const ungroupedCampaigns = sortedCampaigns.filter(\r\n    (campaign) => !groupedCampaigns.includes(campaign.Campaign as string)\r\n  )\r\n\r\n  const renderTableHeader = () => (\r\n    <thead className=\"bg-slate-100 sticky top-0 z-30\">\r\n      <tr>\r\n        {columnOrder\r\n          .filter(header => visibleColumns.includes(header))\r\n          .map((header, index) => (\r\n            <th\r\n              key={header}\r\n              className={`px-4 py-2 text-left text-sm font-bold text-slate-700 border-b border-slate-200 cursor-pointer hover:bg-slate-200 transition-colors whitespace-nowrap ${index === 0\r\n                  ? `sticky left-0 z-40 bg-slate-100 ${stickyColumnClass} border-r`\r\n                  : \"border-r border-slate-200\"\r\n                }`}\r\n              onClick={() => handleSort(header)}\r\n              draggable\r\n              onDragStart={() => handleDragStart(header)}\r\n              onDragOver={(e) => handleDragOver(e, header)}\r\n              onDrop={() => handleDrop(header)}\r\n              style={{\r\n                minWidth: header === \"Campaign\" ? \"190px\" : \"110px\",\r\n                position: index === 0 ? \"sticky\" : \"static\",\r\n                left: index === 0 ? 0 : \"auto\",\r\n                background: dropTargetColumn === header ? \"rgb(226 232 240)\" : \"\",\r\n              }}\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center\">\r\n                  <GripHorizontal className=\"w-4 h-4 mr-2 text-slate-400\" />\r\n                  <span>{header}</span>\r\n                </div>\r\n                {sortColumn === header && (\r\n                  sortDirection === \"asc\" ? <ChevronUp size={16} /> : <ChevronDown size={16} />\r\n                )}\r\n              </div>\r\n            </th>\r\n          ))}\r\n      </tr>\r\n    </thead>\r\n  )\r\n\r\n  const renderTableBody = () => (\r\n    <tbody>\r\n      {groups.map((group) => {\r\n        const isExpanded = expandedGroups.includes(group.id)\r\n        const groupMetrics = calculateGroupMetrics(group.campaigns)\r\n        const deepColor = GROUP_DEEP_COLORS[group.color] || group.color\r\n\r\n        return (\r\n          <React.Fragment key={group.id}>\r\n            <tr\r\n              onClick={() => dispatch(toggleGroupExpansion(group.id))}\r\n              className={`group transition-colors cursor-pointer ${group.color} ${isExpanded ? 'border-2 border-gray-400' : ''}`}\r\n            >\r\n              {columnOrder\r\n                .filter(header => visibleColumns.includes(header))\r\n                .map((header, index) => (\r\n                  <td\r\n                    key={header}\r\n                    className={`relative py-2 text-xs border-b border-slate-200 ${index === 0 ? `sticky left-0 z-20 bg-inherit ${stickyColumnClass}` : \"\"\r\n                      }`}\r\n                    style={{\r\n                      position: index === 0 ? \"sticky\" : \"static\",\r\n                      left: index === 0 ? 0 : \"auto\",\r\n                    }}\r\n                  >\r\n                    {index === 0 ? (\r\n                      <>\r\n                        <div\r\n                          className={`absolute left-0 top-0 bottom-0 w-1 ${deepColor}`}\r\n                        />\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"flex items-center space-x-3\">\r\n                            <div\r\n                              className=\"flex items-center gap-2 cursor-pointer pl-3\"\r\n                              onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                dispatch(toggleGroupExpansion(group.id))\r\n                              }}\r\n                            >\r\n                              {isExpanded ? (\r\n                                <ChevronDown size={16} className=\"text-slate-500\" />\r\n                              ) : (\r\n                                <ChevronUp size={16} className=\"text-slate-500\" />\r\n                              )}\r\n                              <span className=\"font-semibold text-sm\">{group.name}</span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <Badge variant=\"secondary\" className=\"text-xs\">\r\n                              <span className=\"flex flex-row items-center gap-2\">\r\n                                {group.campaigns.length} <MdOutlineCampaign className=\"h-4 w-4\" />\r\n                              </span>\r\n                            </Badge>\r\n                            <Button\r\n                              variant=\"ghost\"\r\n                              size=\"sm\"\r\n                              className=\"h-6 px-1\"\r\n                              onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                dispatch(toggleEditingGroup(editingGroupId === group.id ? null : group.id))\r\n                              }}\r\n                            >\r\n                              {editingGroupId === group.id ? <Save size={12} /> : <Edit2 size={12} />}\r\n                            </Button>\r\n                            <Button\r\n                              variant=\"ghost\"\r\n                              size=\"sm\"\r\n                              className=\"h-6 px-1\"\r\n                              onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                dispatch(deleteGroup(group.id))\r\n                              }}\r\n                            >\r\n                              <X size={12} />\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <div className=\"text-xs font-medium px-4\">\r\n                        {formatCellValue(groupMetrics[header], header)}\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                ))}\r\n            </tr>\r\n\r\n            {isExpanded && (\r\n              <>\r\n                {editingGroupId === group.id && (\r\n                  <tr>\r\n                    <td colSpan={visibleColumns.length} className=\"px-4 py-2 border-b border-slate-200 bg-slate-50\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Select\r\n                          onValueChange={(value) => handleAddToGroup(group.id, value)}\r\n                        >\r\n                          <SelectTrigger className=\"w-[300px]\">\r\n                            <SelectValue placeholder=\"Add campaign to group\" />\r\n                          </SelectTrigger>\r\n                          <SelectContent>\r\n                            {ungroupedCampaigns\r\n                              .filter((c) => !group.campaigns.includes(c.Campaign as string))\r\n                              .map((campaign) => (\r\n                                <SelectItem\r\n                                  key={campaign.Campaign as string}\r\n                                  value={campaign.Campaign as string}\r\n                                >\r\n                                  {campaign.Campaign as string}\r\n                                </SelectItem>\r\n                              ))}\r\n                          </SelectContent>\r\n                        </Select>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n\r\n                {group.campaigns.map((campaignName) => {\r\n                  const campaign = data.campaigns.find((c) => c.Campaign === campaignName)\r\n                  if (!campaign) return null\r\n\r\n                  return (\r\n                    <tr key={campaignName} className=\"group bg-zinc-100 transition-colors\">\r\n                      {columnOrder\r\n                        .filter(header => visibleColumns.includes(header))\r\n                        .map((header, colIndex) => (\r\n                          <td\r\n                            key={`${campaignName}-${header}`}\r\n                            className={`px-4 py-1 text-xs border-b border-slate-200 whitespace-nowrap ${colIndex === 0\r\n                                ? `sticky left-0 z-20 bg-zinc-100 font-semibold group-hover:text-blue-600 border-r ${stickyColumnClass}`\r\n                                : \"border-r border-slate-200\"\r\n                              }`}\r\n                            style={{\r\n                              position: colIndex === 0 ? \"sticky\" : \"static\",\r\n                              left: colIndex === 0 ? 0 : \"auto\",\r\n                            }}\r\n                          >\r\n                            {colIndex === 0 ? (\r\n                              <div className=\"flex items-center gap-2\">\r\n                                <span>{formatCellValue(campaign[header], header)}</span>\r\n                                <Button\r\n                                  variant=\"ghost\"\r\n                                  size=\"sm\"\r\n                                  className=\"h-6 px-2 opacity-0 group-hover:opacity-100\"\r\n                                  onClick={() => handleRemoveFromGroup(group.id, campaignName)}\r\n                                >\r\n                                  <MinusCircle size={14} className=\"text-red-500\" />\r\n                                </Button>\r\n                              </div>\r\n                            ) : (\r\n                              formatCellValue(campaign[header], header)\r\n                            )}\r\n                          </td>\r\n                        ))}\r\n                    </tr>\r\n                  )\r\n                })}\r\n              </>\r\n            )}\r\n          </React.Fragment>\r\n        )\r\n      })}\r\n\r\n      {/* Ungrouped Campaigns */}\r\n      {ungroupedCampaigns.map((campaign) => (\r\n        <tr key={campaign.Campaign as string} className=\"group hover:bg-slate-50 transition-colors\">\r\n          {columnOrder\r\n            .filter(header => visibleColumns.includes(header))\r\n            .map((header, colIndex) => (\r\n              <td\r\n                key={`${campaign.Campaign}-${header}`}\r\n                className={`px-4 py-2 text-xs border-b border-slate-200 whitespace-nowrap ${colIndex === 0\r\n                    ? `sticky left-0 z-20 bg-white group-hover:bg-slate-50 font-semibold group-hover:text-blue-600 border-r ${stickyColumnClass}`\r\n                    : \"border-r border-slate-200\"\r\n                  }`}\r\n                style={{\r\n                  position: colIndex === 0 ? \"sticky\" : \"static\",\r\n                  left: colIndex === 0 ? 0 : \"auto\",\r\n                }}\r\n              >\r\n                {formatCellValue(campaign[header], header)}\r\n              </td>\r\n            ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  )\r\n\r\n  return (\r\n    <Card className={`overflow-hidden ${isFullScreen ? \"fixed inset-0 z-50\" : \"\"}`}>\r\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 border-b border-slate-200\">\r\n        <CardTitle className=\"flex flex-row gap-3 items-center\">\r\n          <div className=\"text-xl font-bold text-slate-800\">{data.account_name}</div>\r\n          <FacebookLogo width=\"1.3rem\" height=\"1.3rem\" />\r\n        </CardTitle>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <ColumnManagementSheet\r\n            visibleColumns={visibleColumns}\r\n            columnOrder={columnOrder}\r\n            onVisibilityChange={setVisibleColumns}\r\n            onOrderChange={setColumnOrder}\r\n          />\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => dispatch(setIsCreatingGroup(!isCreatingGroup))}\r\n          >\r\n            {isCreatingGroup ? \"Cancel\" : \"Create Group\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={toggleFullScreen}\r\n            title={isFullScreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\"}\r\n          >\r\n            {isFullScreen ? <Minimize2 size={16} /> : <Maximize2 size={16} />}\r\n          </Button>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent className=\"p-4\">\r\n        {isCreatingGroup && (\r\n          <div className=\"mb-4 p-4 bg-slate-50 rounded-lg\">\r\n            <div className=\"flex items-center gap-4 mb-4\">\r\n              <Input\r\n                type=\"text\"\r\n                value={newGroupName}\r\n                onChange={(e) => setNewGroupName(e.target.value)}\r\n                placeholder=\"Enter group name\"\r\n                className=\"px-3 py-2 border rounded-md\"\r\n              />\r\n              <Popover open={isDropdownOpen} onOpenChange={setIsDropdownOpen}>\r\n                <PopoverTrigger asChild>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    className=\"w-full justify-between\"\r\n                    role=\"combobox\"\r\n                  >\r\n                    {selectedCampaigns.length === 0\r\n                      ? \"Select campaigns\"\r\n                      : `${selectedCampaigns.length} campaign${selectedCampaigns.length === 1 ? '' : 's'} selected`\r\n                    }\r\n                    <ChevronDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\r\n                  </Button>\r\n                </PopoverTrigger>\r\n                <PopoverContent className=\"w-[400px] p-0\" align=\"start\">\r\n                  <div className=\"flex items-center space-x-2 p-3 border-b\">\r\n                    <Search className=\"h-4 w-4 opacity-50\" />\r\n                    <Input\r\n                      placeholder=\"Search campaigns...\"\r\n                      value={searchTerm}\r\n                      onChange={(e) => setSearchTerm(e.target.value)}\r\n                      className=\"border-0 focus-visible:ring-0 focus-visible:ring-offset-0\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"max-h-[300px] overflow-y-auto\">\r\n                    {filteredCampaigns.length === 0 ? (\r\n                      <div className=\"text-sm text-center py-4 text-slate-500\">\r\n                        No campaigns found\r\n                      </div>\r\n                    ) : (\r\n                      filteredCampaigns.map((campaign) => (\r\n                        <div\r\n                          key={campaign.Campaign as string}\r\n                          className=\"flex items-center space-x-2 p-3 hover:bg-slate-100 cursor-pointer\"\r\n                          onClick={() => {\r\n                            const campaignName = campaign.Campaign as string\r\n                            const newSelected = selectedCampaigns.includes(campaignName)\r\n                              ? selectedCampaigns.filter(c => c !== campaignName)\r\n                              : [...selectedCampaigns, campaignName]\r\n                            dispatch(setSelectedCampaigns(newSelected))\r\n                          }}\r\n                        >\r\n                          <Checkbox\r\n                            id={`campaign-${campaign.Campaign}`}\r\n                            checked={selectedCampaigns.includes(campaign.Campaign as string)}\r\n                            onCheckedChange={(checked) => {\r\n                              const campaignName = campaign.Campaign as string\r\n                              const newSelected = checked\r\n                                ? [...selectedCampaigns, campaignName]\r\n                                : selectedCampaigns.filter(c => c !== campaignName)\r\n                              dispatch(setSelectedCampaigns(newSelected))\r\n                            }}\r\n                          />\r\n                          <label\r\n                            htmlFor={`campaign-${campaign.Campaign}`}\r\n                            className=\"flex-1 text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n                          >\r\n                            {campaign.Campaign as string}\r\n                          </label>\r\n                        </div>\r\n                      ))\r\n                    )}\r\n                  </div>\r\n                </PopoverContent>\r\n              </Popover>\r\n              <Button\r\n                variant=\"default\"\r\n                size=\"sm\"\r\n                onClick={handleCreateGroup}\r\n                disabled={!newGroupName || selectedCampaigns.length === 0}\r\n              >\r\n                Create Group\r\n              </Button>\r\n            </div>\r\n            {selectedCampaigns.length > 0 && (\r\n              <div className=\"mt-4\">\r\n                <div className=\"text-sm text-slate-600 mb-2\">Selected campaigns:</div>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {selectedCampaigns.map(campaign => (\r\n                    <Badge\r\n                      key={campaign}\r\n                      variant=\"secondary\"\r\n                      className=\"flex items-center gap-1\"\r\n                    >\r\n                      {campaign}\r\n                      <X\r\n                        className=\"h-3 w-3 cursor-pointer hover:text-red-500\"\r\n                        onClick={() => dispatch(setSelectedCampaigns(\r\n                          selectedCampaigns.filter(c => c !== campaign)\r\n                        ))}\r\n                      />\r\n                    </Badge>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <div ref={tableRef} className={`overflow-auto ${getTableHeight()}`} style={{ position: \"relative\" }}>\r\n          <table className=\"w-full border-collapse rounded-lg\">\r\n            {renderTableHeader()}\r\n            {renderTableBody()}\r\n          </table>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MetaCampaignTable","import { useState, useEffect, useCallback, useMemo } from 'react'\r\nimport { format } from \"date-fns\"\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from \"axios\"\r\nimport Header from '@/components/dashboard_component/Header.tsx';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store/index.ts';\r\nimport CollapsibleSidebar from '@/pages/Dashboard/CollapsibleSidebar';\r\nimport { FaMeta } from 'react-icons/fa6';\r\nimport MetaCampaignTable from './MetaCampaignTable';\r\n\r\n\r\nexport interface MetaCampaign {\r\n    [key: string]: number | string;\r\n}\r\n\r\nexport interface AccountData {\r\n    account_name: string;\r\n    campaigns: MetaCampaign[];\r\n}\r\n\r\nexport interface MetaCampaignResponse {\r\n    success: boolean;\r\n    data: AccountData[];\r\n}\r\n\r\nexport default function CampaignDashboard() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [fbCampaignMetrics, setFbCampaignMetrics] = useState<MetaCampaignResponse | null>(null);\r\n    const [locale, setLocale] = useState<\"en-IN\" | \"en-US\">(\"en-IN\");\r\n    const { brandId } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n        from: dateFrom,\r\n        to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n\r\n    const user = useSelector((state: RootState) => state.user.user);\r\n    const userId = user?.id;\r\n\r\n    const fetchAdData = useCallback(async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const baseURL = import.meta.env.PROD\r\n                ? import.meta.env.VITE_API_URL\r\n                : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n            const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n            const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n            const fbAdResponse = await axios.post(\r\n                `${baseURL}/api/metrics/fbCampaign/${brandId}`,\r\n                { startDate, endDate, userId },\r\n                { withCredentials: true }\r\n            );\r\n\r\n            setFbCampaignMetrics(fbAdResponse.data);\r\n        } catch (error) {\r\n            console.error('Error fetching ad data:', error);\r\n            if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n                alert('Your session has expired. Please log in again.');\r\n                navigate('/');\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [navigate, date, brandId, userId]);\r\n\r\n    useEffect(() => {\r\n        fetchAdData();\r\n\r\n        const intervalId = setInterval(fetchAdData, 15 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchAdData]);\r\n\r\n    let height = '';\r\n    if (fbCampaignMetrics?.data && fbCampaignMetrics.data.length > 1) {\r\n        height = 'max-h-[calc(100vh-400px)]';\r\n    } else {\r\n        height = 'max-h-[calc(100vh-210px)]'\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex h-screen\">\r\n            <CollapsibleSidebar />\r\n            <div className=\"flex-1 h-screen overflow-auto\">\r\n                <div className=\"min-h-screen bg-gray-100\">\r\n                    <Header\r\n                        title=\"Campaign Report\"\r\n                        Icon={FaMeta}\r\n                        showDatePicker={true}\r\n                        showSettings={true}\r\n                        showRefresh={true}\r\n                        isLoading={isLoading}\r\n                        handleManualRefresh={fetchAdData}\r\n                        locale={locale}\r\n                        setLocale={setLocale}\r\n                    />\r\n\r\n                    <main className=\"p-4 md:p-6 lg:px-8\">\r\n                        {isLoading ? (\r\n                            <div className=\"flex items-center justify-center h-64\">\r\n                                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\" />\r\n                            </div>\r\n                        ) : fbCampaignMetrics?.data && fbCampaignMetrics.data.length > 0 ? (\r\n                            fbCampaignMetrics.data.map((account, index) => (\r\n                                <div key={index} className=\"mb-6\">\r\n                                    <MetaCampaignTable data={account} height={height} />\r\n                                </div>\r\n                            ))\r\n                        ) : (\r\n                            <div className=\"text-center py-8 text-gray-500\">\r\n                                No campaign data available\r\n                            </div>\r\n                        )}\r\n                    </main>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\nimport { UserProvider } from './context/UserContext';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport AuthForm from \"./Auth/AuthForm.tsx\";\r\nimport { Toaster } from \"@/components/ui/toaster\"\r\nimport AnalyticsDashboard from './pages/AnalyticsDashboard/AnalyticsDashboard.tsx';\r\nimport GeneralDashboard from './pages/GeneralisedDashboard/GeneralDashboard.tsx';\r\nimport { BrandProvider } from './context/BrandContext.tsx';\r\nimport { ExcelMetricsPage } from './pages/MonthlyAdMetrics/ExcelMetrics.tsx';\r\nimport PerformanceDashboard from './pages/BrandPerformanceDashboard/PerformanceDashboard.tsx';\r\nimport SegmentDashboard from './pages/SegmentDashboard/SegmentDashboard.tsx';\r\nimport GoogleCallback from './Auth/OauthSucces.tsx';\r\nimport ReportsPage from './pages/ReportPage/ReportsPage.tsx';\r\nimport { TokenErrorProvider } from './context/TokenErrorContext.tsx';\r\nimport AudienceConversionReportPage from './pages/ConversionReportPage/AudienceConversionReportPage.tsx';\r\nimport WebsiteConversionReportPage from './pages/ConversionReportPage/WebsiteConversionReportPage.tsx';\r\nimport GoogleAdsDashboard from './pages/GoogleAdsHub/Dashboard.tsx';\r\nimport FbReportPage from './pages/FbReports/FbReportPage.tsx';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './store';\r\nimport MetaDashboard from './pages/META/AdAccount/MetaDashboard.tsx';\r\nimport CampaignDashboard from './pages/META/Campaign/CampaignDashboard.tsx';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <UserProvider>\r\n          <BrandProvider>\r\n            <TokenErrorProvider>\r\n              <Router>\r\n                <Toaster />\r\n                <Routes>\r\n                  <Route path=\"/\" element={<AuthForm />} />\r\n                  <Route path=\"/dashboard\" element={<GeneralDashboard />} />\r\n                  <Route path=\"/analytics-dashboard/:brandId\" element={<AnalyticsDashboard />} />\r\n                  <Route path='/ecommerce-reports/:brandId' element={<ReportsPage />} />\r\n                  <Route path=\"/ad-metrics/:brandId\" element={<ExcelMetricsPage />} />\r\n                  <Route path='/performance-metrics' element={<PerformanceDashboard />} />\r\n                  <Route path='/segment-dashboard/:brandId' element={<SegmentDashboard />} />\r\n                  <Route path='/adaccount-summary/:brandId' element={<MetaDashboard />} />\r\n                  <Route path='/meta-campaigns/:brandId' element={<CampaignDashboard />} />\r\n                  <Route path='/meta-reports/:brandId' element={<FbReportPage />} />\r\n                  <Route path='/google-ads-hub/:brandId' element={<GoogleAdsDashboard />} />\r\n                  <Route path=\"/conversion-reports/:brandId/demographics\" element={<AudienceConversionReportPage />} />\r\n                  <Route path=\"/conversion-reports/:brandId/performance\" element={<WebsiteConversionReportPage />} />\r\n                  <Route path=\"/callback\" element={<GoogleCallback />} />\r\n                </Routes>\r\n              </Router>\r\n            </TokenErrorProvider>\r\n          </BrandProvider>\r\n        </UserProvider>\r\n        </PersistGate>\r\n        </Provider>\r\n        );\r\n}\r\n\r\n        export default App;\r\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"names":["UserContext","createContext","UserProvider","children","user","setUser","useState","storedUser","showLandingPopup","setShowLandingPopup","useEffect","updateUser","newUser","jsx","useUser","context","useContext","cn","inputs","twMerge","clsx","Input","React.forwardRef","className","type","props","ref","buttonVariants","cva","Button","variant","size","asChild","Comp","Slot","labelVariants","Label","LabelPrimitive.Root","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","t","toast","listeners","memoryState","listener","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","initialState","userSlice","createSlice","clearUser","userReducer","AuthForm","isLogin","setIsLogin","username","setUsername","email","setEmail","password","setPassword","showPassword","setShowPassword","navigate","useNavigate","errors","setErrors","useSelector","useDispatch","toggleForm","validateForm","newErrors","isValid","handleSubmit","e","response","baseURL","axios","userData","error","handleGoogleLogin","authUrl","jsxs","User","Mail","Lock","Eye","EyeOff","FcGoogle","ToastProvider","ToastPrimitives.Provider","ToastViewport","ToastPrimitives.Viewport","toastVariants","Toast","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","Cross2Icon","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","Toaster","toasts","title","description","brandSlice","setSelectedBrandId","setBrands","resetBrand","brandReducer","TooltipProvider","TooltipPrimitive.Provider","Tooltip","TooltipPrimitive.Root","TooltipTrigger","TooltipPrimitive.Trigger","TooltipContent","sideOffset","TooltipPrimitive.Portal","TooltipPrimitive.Content","Logo","ScrollArea","ScrollAreaPrimitive.Root","ScrollAreaPrimitive.Viewport","ScrollBar","ScrollAreaPrimitive.Corner","orientation","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb","CollapsibleSidebar","isExpanded","setIsExpanded","location","useLocation","sidebarRef","useRef","selectedBrandId","brands","fetchBrands","useCallback","toggleSidebar","prev","handleLogout","pathParts","dashboards","CalendarRange","ShoppingCart","LineChart","Radar","FaMeta","SiGoogleads","Compass","isItemDisabled","item","currentBrand","b","ChevronLeft","ChevronRight","SidebarItem","Store","_a","ChevronUp","ChevronDown","brand","SidebarChild","dashboard","subItem","subIndex","UserProfile","LogoutButton","icon","text","openIcon","closeIcon","isSelected","tooltipContent","onClick","disabled","autoOpenOnSelect","isOpen","setIsOpen","handleToggle","isChildSelected","React","child","isActive","content","path","baseClasses","NavLink","userProfileContent","User2Icon","logoutContent","LogOut","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","Skeleton","FacebookLogo","width","height","GoogleLogo","MetricCardSkeleton","MetricCard","label","value","date","formatDate","dateValue","HelpCircle","AdAccountMetricsCard","metrics","isLoading","errorMessage","Fragment","_","metric","CampaignGrid","campaigns","campaign","spendValue","roas","_b","roasValue","Tab","CustomTabs","tabs","activeTab","onTabChange","tab","Calendar","classNames","showOutsideDays","DayPicker","ChevronLeftIcon","ChevronRightIcon","Popover","PopoverPrimitive.Root","PopoverTrigger","PopoverPrimitive.Trigger","PopoverContent","align","PopoverPrimitive.Portal","PopoverPrimitive.Content","dateSlice","setDate","clearDate","dateReducer","selectDateRange","createSelector","from","to","DatePickerWithRange","defaultDate","resetToFirstPage","dateRange","initialDate","useMemo","tempDate","setTempDate","setOpen","selectedPreset","setSelectedPreset","dates","today","daysSinceSunday","startOfThisWeek","subDays","endOfThisWeek","addDays","startOfThisMonth","endOfThisMonth","startOfLastWeek","endOfLastWeek","quarter","startOfThisQuarter","endOfThisQuarter","lastQuarter","year","startOfLastQuarter","endOfLastQuarter","handleUpdate","clearDateRange","setPresetRange","formatDateRange","range","format","presets","subMonths","subYears","startOfYear","endOfYear","handleCalendarSelect","CalendarIcon","preset","Header","Icon","showDatePicker","showSettings","showRefresh","showColorPalette","handleManualRefresh","locale","setLocale","colorInfo","RefreshCw","Settings","Palette","color","condition","Dashboard","setIsLoading","fbAdAccountsMetrics","setFbAdAccountsMetrics","googleAdMetrics","setGoogleAdMetrics","setActiveTab","dataSource","setDataSource","rawMetrics","setRawMetrics","brandId","useParams","dateFrom","dateTo","handleDataSourceChange","newValue","selectedTab","userId","fetchAdData","startDate","endDate","fbData","googleData","fbError","googleError","calculateAggregatedMetrics","intervalId","totalSpent","totalRevenue","totalPurchases","totalClicks","totalImpressions","account","formattedMetrics","googleMetrics","_c","_d","_e","_f","_g","_h","Blend","accountMetrics","fbmetrics","AnalyticsDashboard","Dialog","DialogPrimitive.Root","DialogTrigger","DialogPrimitive.Trigger","DialogPortal","DialogPrimitive.Portal","DialogOverlay","DialogPrimitive.Overlay","DialogContent","DialogPrimitive.Content","DialogPrimitive.Close","DialogHeader","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","ShopifyModalContent","storeName","setStoreName","handleShopifyLogin","Ga4Logo","ShopifyLogo","OtherPlatformModalContent","platform","onConnect","connectedId","searchTerm","setSearchTerm","googleAdsAccounts","setGoogleAdsAccounts","googleAnalyticsAccounts","setGoogleAnalyticsAccounts","facebookAdsAccounts","setFacebookAdsAccounts","showLoginButton","setShowLoginButton","loading","setLoading","fetchGoogleAdsAccounts","handleError","fetchGoogleAnalyticsAccounts","fetchFacebookAdsAccounts","axiosError","status","data","code","filteredAccounts","handleConnect","accountId","displayName","handleFbLogin","Search","isGoogleAds","isFacebook","accountName","platformLogo","Check","platforms","steps","BrandSetup","currentStep","setCurrentStep","openModal","setOpenModal","connectedAccounts","setConnectedAccounts","brandName","setBrandName","brandLogo","setBrandLogo","googleAdId","setGoogleAdId","ga4Id","setGa4Id","fbAdId","setFBAdId","shop","setShop","shopifyAccessToken","setShopifyAccessToken","params","accessToken","shopName","handleLogoUpload","event","file","isConnected","getConnectedId","platformName","canProceed","payload","newBrandId","updatedUser","renderStepContent","Upload","accounts","Building2","step","current","ArrowRight","LandingSlides","onEnd","currentSlide","setCurrentSlide","slides","nextSlide","prevSlide","feature","CombinedDashboard","selectedBrands","setSelectedBrands","achievedSales","setAchievedSales","getAchievedSales","fetchSalesData","salesData","Target","a","TrendingUp","Activity","ArrowUpRight","Link","Rocket","Zap","GeneralDashboard","LandingPage","BrandContext","BrandProvider","storedBrands","storedSelectedBrandId","useBrand","TooltipHeader","tooltip","colSpan","rowSpan","isSubHeader","ExcelMetricsPage","metricsData","setMetricsData","setError","isFullScreen","setIsFullScreen","expandedMonths","setExpandedMonths","toggleFullScreen","getTableHeight","queryParams","err","toggleMonth","monthYear","m","formatCurrency","formatPercentage","processedData","safeDivide","numerator","denominator","monthData","processedDailyMetrics","daily","metaSales","sum","googleSales","totalAdSales","Minimize","Maximize","Table","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableCaption","Select","SelectPrimitive.Root","SelectValue","SelectPrimitive.Value","SelectTrigger","SelectPrimitive.Trigger","SelectPrimitive.Icon","ChevronDownIcon","SelectScrollUpButton","SelectPrimitive.ScrollUpButton","ChevronUpIcon","SelectScrollDownButton","SelectPrimitive.ScrollDownButton","SelectContent","position","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectLabel","SelectPrimitive.Label","SelectItem","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","CheckIcon","SelectPrimitive.ItemText","SelectSeparator","SelectPrimitive.Separator","BrandPerformanceDashboard","newBrand","setNewBrand","endOfMonth","editingBrand","setEditingBrand","editData","setEditData","handleInputChange","name","handleSourceChange","handleAddBrand","brandToAdd","newBrandTarget","handleEdit","brandToEdit","handleSaveEdit","handleCancelEdit","handleDelete","Loader","calculateMetrics","achieved","remainingTarget","targetDate","remainingDays","requiredSalesPerDay","chartData","PlusCircle","isEditing","X","Edit2","Trash2","ResponsiveContainer","BarChart","XAxis","YAxis","Bar","PerformanceDashboard","ProductTab","setTabs","currentPage","setCurrentPage","expandedCategories","setExpandedCategories","filterApplied","setFilterApplied","rowsPerPage","filterData","setFilterData","cacheRef","POLL_INTERVAL","sortColumn","setSortColumn","sortOrder","setSortOrder","handleTabChange","newTabId","fetchTabData","tabId","body","isFilterApplied","updatedBody","cacheKey","cachedData","now","prevTabs","columns","key","requestBody","handleRowClick","currentTab","rowData","tabColumnMapping","bodyKeyMapping","columnToFetch","bodyKey","valueToSend","filterPayload","toggleCategory","categoryPath","newSet","renderCategoryRow","category","depth","currentPath","subCategory","handleSort","columnId","prevOrder","getCurrentTabData","sortedData","aValue","bValue","stringA","stringB","startIndex","endIndex","totalPages","categoryColumns","TableSkeleton","idx","Package","Layers","Tag","BarChart2","Filter","column","ArrowUp","ArrowDown","ArrowUpDown","row","i","isIssuesColumn","isProductColumn","isStatusColumn","isNoIssues","getStatusColor","renderCell","CheckCircle","AlertCircle","statusValue","colorClass","rowIndex","cellIndex","SearchTermTable","searchTerms","setSearchTerms","hasMoreData","setHasMoreData","totalRecords","setTotalRecords","setTotalPages","campaignAdGroupPairs","setCampaignAdGroupPairs","selectedCampaign","setSelectedCampaign","statusOptions","setStatusOptions","selectedAdGroup","setSelectedAdGroup","selectedStatus","setSelectedStatus","Megaphone","Users","DollarSign","Percent","MousePointer","CreditCard","sortedSearchTerms","fetchData","handleCampaignChange","handleAdGroupChange","handleStatusChange","filteredAdGroups","pair","adGroup","isSearchTermColumn","searchTermValue","performance","isPerformingWell","metricLabels","ROWS_PER_PAGE","AgeAndGenderMetrics","filters","setFilters","filterOptions","setFilterOptions","setData","showGraph","setShowGraph","graphData","setGraphData","selectedMetrics","setSelectedMetrics","handleMetricChange","cachedAgeRanges","setCachedAgeRanges","cachedGenders","setCachedGenders","requestData","_forceRefresh","apiEndpoint","genderCampaignNames","campaignNames","campaignAdGroupMap","adGroups","prevOptions","ageRanges","genders","str","statusColor","aggregatedData","processedGraphData","displayKey","baseEntry","typedMetrics","handleFilterChange","filterKey","updatedFilters","sortableColumns","handlePageChange","newPage","validPage","colorPalette","ag","gender","CartesianGrid","RechartsTooltip","Legend","Checkbox","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","DropdownMenu","DropdownMenuPrimitive.Root","DropdownMenuTrigger","DropdownMenuPrimitive.Trigger","DropdownMenuSubTrigger","inset","DropdownMenuPrimitive.SubTrigger","DropdownMenuSubContent","DropdownMenuPrimitive.SubContent","DropdownMenuContent","DropdownMenuPrimitive.Portal","DropdownMenuPrimitive.Content","DropdownMenuItem","DropdownMenuPrimitive.Item","DropdownMenuCheckboxItem","checked","DropdownMenuPrimitive.CheckboxItem","DropdownMenuPrimitive.ItemIndicator","DropdownMenuRadioItem","DropdownMenuPrimitive.RadioItem","DotFilledIcon","DropdownMenuLabel","DropdownMenuPrimitive.Label","DropdownMenuSeparator","DropdownMenuPrimitive.Separator","getConditionalColors","average","ReportTable","allTimeData","sortDirection","setSortDirection","filterLabel","setFilterLabel","filterType","setFilterType","columnWidths","setColumnWidths","isResizing","setIsResizing","loadedRows","setLoadedRows","rowsPerChunk","isDateTable","tableRef","containerRef","initializationRef","dataRef","filteredDataRef","comparisonColumns","parsePercentage","headerCells","widths","cell","handleResize","averageValues","averages","validData","allTimeAverageValues","validAllTimeData","rowPerformanceLabels","currentPerformance","isWorstPerformingCurrent","currentLabel","allTimePerformance","allTimeAverage","isWorstPerformingAllTime","handleMouseDown","startX","startWidth","handleMouseMove","moveEvent","delta","newWidth","newWidths","handleMouseUp","parsedData","aNum","bNum","isNumericColumn","handleClickLabel","filteredData","result","loadMoreRows","nextChunk","handleScroll","target","displayRows","pageCount","goToPage","page","pageNumber","columnPairs","colIndex","isFirstColumn","needsLeftSticky","isComparisonCol","Award","ThumbsDown","cellValue","isComparisonColumn","isPairedColumn","rateColumn","rateValue","ChevronsLeft","ChevronsRight","ReportTable$1","FilterComponent","onFiltersChange","filterColumn","setFilterColumn","filterOperator","setFilterOperator","filterValue","setFilterValue","addFilter","TokenErrorContext","TokenErrorProvider","tokenError","setTokenError","useTokenError","createAxiosInstance","axiosInstance","CitySessionPage","propDateRange","setAllTimeData","setFilteredData","selectedColumns","setSelectedColumns","rowsToShow","setRowsToShow","removedColumns","setRemovedColumns","allColumns","toggleColumnSelection","newColumns","col","prevRemoved","fetchMetrics","analyticsResponse","allTimeResponse","fetchedData","fetchedAllTimeData","prevSelected","sortedSelectedColumns","applyFilters","filter","numValue","memoizedFilteredData","numericColumns","removeFilter","Columns","LandingPageSession","AgeReportPage","GenderReportPage","ChannelSessionPage","fullScreenChangeHandler","AgeGenderMetrics","CityBasedReports","GenderBasedReports","SegmentDashboard","GoogleCallback","googletoken","fbToken","googleRefreshToken","updateToken","url","token","login","NewReportTable","columnOrder","setColumnOrder","draggedColumn","setDraggedColumn","minColumnWidth","widthsRef","handleDragStart","handleDragOver","handleDrop","targetColumn","newOrder","draggedIdx","targetIdx","containerWidth","totalColumns","initialWidths","equalWidth","parseDateString","dateStr","day","month","aDate","bDate","renderHeader","GripVertical","NewReportTable$1","Sheet","SheetPrimitive.Root","SheetTrigger","SheetPrimitive.Trigger","SheetPortal","SheetPrimitive.Portal","SheetOverlay","SheetPrimitive.Overlay","sheetVariants","SheetContent","side","SheetPrimitive.Content","SheetPrimitive.Close","SheetHeader","SheetTitle","SheetPrimitive.Title","SheetDescription","SheetPrimitive.Description","ColumnManagementSheet","visibleColumns","onVisibilityChange","onOrderChange","dropTargetColumn","setDropTargetColumn","filteredColumns","toggleColumnVisibility","newVisibleColumns","Settings2","EcommerceMetricsPage","setVisibleColumns","handleVisibilityChange","handleOrderChange","NoGA4AcessPage","PlatformModal","onOpenChange","onSuccess","connectedIds","endpoint","accountsSetter","updateBrandWithAccount","updateData","platformConfigs","PieChart","BarChart3","AlertTriangle","Facebook","ConnectPlatform","isModalOpen","setIsModalOpen","config","benefit","DaywiseMetricsPage","ReportsPage","selectedBrand","hasGA4Account","DailyEcommerceMetrics","ConversionTable","primaryColumn","secondaryColumns","monthlyDataKey","monthlyMetrics","rows","isAdsTable","months","getMonthName","monthNumber","allMonths","monthlyData","monthNum","allRows","dataIndex","metricIndex","prevRows","scrollTop","scrollHeight","clientHeight","thresholds","totalSessions","totalConvRate","sessionCount","totalSpend","totalPurchaseROAS","spendCount","totalCost","totalConvValuePerCost","costCount","getMetricColor","sessions","convRate","spend","purchaseROAS","cost","convValuePerCost","isHighSessions","isGoodConversion","isHighSpent","isGoodROAS","isHighCost","isGoodConvValuePerCost","renderMonthCell","bgColor","renderMetricValue","currentMetric","columnIndex","totalConvValue","totalPCV","renderMetricRow","getMonthNumber","monthName","monthFormat","totalRows","renderColumnHeader","thresholdValue","PerformanceSummary","metricConfig","expandedCategory","setExpandedCategory","primaryMetric","secondaryMetric","categories","categorizedItems","primaryValue","isHighPrimary","isHighSecondary","c","metricConfigs","defaultStyles","calculateThresholds","getCellStyle","styles","applyExcelStyles","worksheet","XLSX.utils","C","headerCell","actualRow","startCol","endCol","cellRef","cellStyle","monthIndex","monthKey","fillStyle","ExcelDownload","fileName","buttonClassName","handleDownload","workbook","sheetData","headerRow","colWidths","XLSX.writeFile","FileDown","conversionFiltersSlice","componentId","setFilter","clearFilters","conversionFiltersReducer","FILTERABLE_COLUMNS","FilterConversions","availableColumns","selectedColumn","setSelectedColumn","operator","setOperator","setValue","dropdownOpen","setDropdownOpen","handleAddFilter","handleClearFilters","filterTooltip","DeviceTypeConversion","apiResponse","setApiResponse","shallowEqual","transformedFilters","acc","apiColumnName","GenderConversion","AgeConversion","InterestConversion","OperatingSystemConversion","BrowserConversion","sessionsFilter","convRateFilter","SourceConversion","AudienceConversionReportPage","refs","observer","entries","entry","element","targetRef","offset","CityTypeConversion","ChannelConversion","RegionConversion","LandingPageConversion","CampaignConversion","PagePathConversion","PageTitleConversion","CountryConversion","WebsiteConversionReportPage","SearchTerm","Age","Gender","GoogleAdsDashboard","hasGoogleAdAccount","SquareChartGantt","AudienceFbReport","fullScreenAccount","setFullScreenAccount","blendedAudienceData","PlacementFbReport","blendedPlacementData","PlatformFbReport","blendedPlatformData","CountryFbReport","blendedCountryData","DeviceFbReport","dateForm","blendedDeviceData","GenderFbReport","blendedGenderData","AgeFbReport","blendedAgeData","FbReportPage","loadState","serializedState","saveState","campaignGroupsSlice","newGroup","group","g","groupId","createGroup","deleteGroup","addCampaignToGroup","removeCampaignFromGroup","setSelectedCampaigns","toggleEditingGroup","toggleGroupExpansion","setIsCreatingGroup","campaignGroupsReducer","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","getDefaultMiddleware","persistor","persistStore","MetaDashboard","badgeVariants","Badge","GROUP_COLORS","GROUP_DEEP_COLORS","MetaCampaignTable","groups","selectedCampaigns","editingGroupId","expandedGroups","isCreatingGroup","isScrolled","setIsScrolled","newGroupName","setNewGroupName","isDropdownOpen","setIsDropdownOpen","headers","handleCreateGroup","handleAddToGroup","campaignName","handleRemoveFromGroup","tableContainer","formatNumber","num","formatCellValue","header","calculateGroupMetrics","campaignData","filteredCampaigns","sortedCampaigns","stickyColumnClass","groupedCampaigns","ungroupedCampaigns","renderTableHeader","GripHorizontal","renderTableBody","groupMetrics","deepColor","MdOutlineCampaign","Save","MinusCircle","Minimize2","Maximize2","newSelected","CampaignDashboard","fbCampaignMetrics","setFbCampaignMetrics","fbAdResponse","App","Provider","PersistGate","Router","Routes","Route","createRoot","StrictMode"],"mappings":"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"}