{"version":3,"file":"index--Q053cCs.js","sources":["../../src/context/UserContext.tsx","../../src/lib/utils.ts","../../src/components/ui/input.tsx","../../src/components/ui/button.tsx","../../src/components/ui/label.tsx","../../src/hooks/use-toast.ts","../../src/store/slices/UserSlice.ts","../../src/Auth/AuthForm.tsx","../../src/components/ui/toast.tsx","../../src/components/ui/toaster.tsx","../../src/store/slices/BrandSlice.ts","../../src/components/ui/tooltip.tsx","../../src/assets/messold-icon.png","../../src/components/ui/scroll-area.tsx","../../src/data/constant.ts","../../src/data/logo.tsx","../../src/pages/Dashboard/CollapsibleSidebar.tsx","../../src/components/ui/card.tsx","../../src/components/ui/skeleton.tsx","../../src/pages/AnalyticsDashboard/AdAccountsMetricsCard.tsx","../../src/components/ui/calendar.tsx","../../src/components/ui/popover.tsx","../../src/components/ui/checkbox.tsx","../../src/store/slices/DateSlice.ts","../../src/components/dashboard_component/DatePickerWithRange.tsx","../../src/components/Tutorial/TutorialConfig.ts","../../src/store/slices/TutorialSlice.ts","../../src/components/Tutorial/TutorialButton.tsx","../../src/components/Tutorial/HeaderTutorialButton.tsx","../../src/store/slices/LocalSlice.ts","../../src/components/dashboard_component/Header.tsx","../../src/components/dashboard_component/loader.tsx","../../src/context/TokenErrorContext.tsx","../../src/pages/ConversionReportPage/components/axiosInstance.ts","../../src/pages/AnalyticsDashboard/dashboard.tsx","../../src/components/dashboard_component/TicketForm.tsx","../../src/components/dashboard_component/HelpDeskModal.tsx","../../src/pages/AnalyticsDashboard/AnalyticsDashboard.tsx","../../src/components/ui/dialog.tsx","../../src/pages/GeneralisedDashboard/components/ShopifyModalContent.tsx","../../src/pages/GeneralisedDashboard/components/OtherPlatformModalContent.tsx","../../src/pages/GeneralisedDashboard/components/BrandForm.tsx","../../src/pages/GeneralisedDashboard/BrandSetUpDashboard.tsx","../../src/pages/GeneralisedDashboard/dashboard.tsx","../../src/pages/GeneralisedDashboard/GeneralDashboard.tsx","../../src/context/BrandContext.tsx","../../src/pages/MonthlyAdMetrics/components/DataBuilding.tsx","../../src/pages/MonthlyAdMetrics/ExcelMetrics.tsx","../../src/components/ui/table.tsx","../../src/components/ui/select.tsx","../../src/pages/BrandPerformanceDashboard/Dashboard.tsx","../../src/pages/BrandPerformanceDashboard/PerformanceDashboard.tsx","../../src/pages/SegmentDashboard/component/ProductTab.tsx","../../src/components/dashboard_component/TableSkeleton.tsx","../../src/pages/SegmentDashboard/component/SearchTermTable.tsx","../../src/pages/SegmentDashboard/component/AgeGenderMetrics.tsx","../../src/components/ui/dropdown-menu.tsx","../../src/pages/ReportPage/component/ReportTable.tsx","../../src/components/dashboard_component/FilterReport.tsx","../../src/pages/ReportPage/component/CitySessionPage.tsx","../../src/pages/ReportPage/component/LandingPageSession.tsx","../../src/pages/ReportPage/component/AgeReportPage.tsx","../../src/pages/ReportPage/component/GenderReportPage.tsx","../../src/pages/ReportPage/component/RefferingChannelPage.tsx","../../src/pages/SegmentDashboard/Dashboard.tsx","../../src/pages/SegmentDashboard/SegmentDashboard.tsx","../../src/Auth/OauthSucces.tsx","../../src/pages/ReportPage/component/NewReportTable.tsx","../../src/components/ui/sheet.tsx","../../src/pages/AnalyticsDashboard/Components/ColumnManagementSheet.tsx","../../src/pages/ReportPage/component/EcommerceMetricsPage.tsx","../../src/pages/ReportPage/NoGA4AccessPage..tsx","../../src/components/dashboard_component/PlatformModal.tsx","../../src/pages/ReportPage/ConnectPlatformPage.tsx","../../src/pages/ReportPage/component/DaywiseMetricsPage.tsx","../../src/pages/ConversionReportPage/components/CustomTabs.tsx","../../src/components/dashboard_component/Missing-Date-Waning.tsx","../../src/pages/ReportPage/ReportsPage.tsx","../../src/pages/ConversionReportPage/components/Table.tsx","../../src/store/slices/ConversionFilterSlice.ts","../../src/pages/ConversionReportPage/components/Filter.tsx","../../src/pages/GoogleAdsHub/components/SearchTerm.tsx","../../src/pages/GoogleAdsHub/components/Age.tsx","../../src/pages/GoogleAdsHub/components/Gender.tsx","../../src/pages/GoogleAdsHub/components/Keyword.tsx","../../src/pages/GoogleAdsHub/components/Product.tsx","../../src/pages/GoogleAdsHub/Dashboard.tsx","../../src/pages/ConversionReportPage/components/PerformanceSummary.tsx","../../src/data/index.ts","../../src/components/dashboard_component/NumberFormatSelector.tsx","../../src/pages/Meta/FbReports/component/AudienceFbReport.tsx","../../src/pages/Meta/FbReports/component/PlacementFbReport.tsx","../../src/pages/Meta/FbReports/component/PlatformFbReport.tsx","../../src/pages/Meta/FbReports/component/CountryFbReport.tsx","../../src/pages/Meta/FbReports/component/DeviceFbReport.tsx","../../src/pages/Meta/FbReports/component/GenderFbReport.tsx","../../src/pages/Meta/FbReports/component/AgeFbReport.tsx","../../src/pages/Meta/FbReports/FbReportPage.tsx","../../src/store/slices/CampaignGroupSlice.ts","../../src/store/slices/campaignLabelsSlice.ts","../../src/store/index.ts","../../src/components/ui/badge.tsx","../../src/pages/Pricing/Pricing.tsx","../../src/pages/Profile Page/ProfilePage.tsx","../../src/components/Tutorial/TutorialManager.tsx","../../src/components/Tutorial/TutorialDriver.tsx","../../src/pages/LandingPage/components/CTA.tsx","../../src/pages/LandingPage/components/Features.tsx","../../src/pages/LandingPage/components/Footer.tsx","../../src/pages/LandingPage/components/HeroSection.tsx","../../src/pages/LandingPage/components/Navbar.tsx","../../src/pages/LandingPage/page.tsx","../../src/pages/LandingPage/components/PrivacyPolicy.tsx","../../src/pages/ConversionReportPage/components/ExcelDownload.tsx","../../src/pages/ConversionReportPage/components/DeviceConversion.tsx","../../src/pages/ConversionReportPage/components/GenderConversion.tsx","../../src/pages/ConversionReportPage/components/AgeConversion.tsx","../../src/pages/ConversionReportPage/components/InterestConversion.tsx","../../src/pages/ConversionReportPage/components/OperatingSystemConversion.tsx","../../src/pages/ConversionReportPage/components/BrowserConversion.tsx","../../src/pages/ConversionReportPage/components/SourceConversion.tsx","../../src/pages/ConversionReportPage/components/PageTitleConversion.tsx","../../src/pages/ConversionReportPage/components/PagePathConversion.tsx","../../src/pages/ConversionReportPage/components/LandingPageConversion.tsx","../../src/pages/ConversionReportPage/components/RegionConversion.tsx","../../src/pages/ConversionReportPage/components/CityConversion.tsx","../../src/pages/ConversionReportPage/components/CountryConversion.tsx","../../src/pages/ConversionReportPage/components/CampaignConversion.tsx","../../src/pages/ConversionReportPage/components/ChannelConversion.tsx","../../src/pages/ConversionReportPage/ConversionLens.tsx","../../src/pages/Meta/Campaign Reports/components/MetaCampaignTable.tsx","../../src/pages/Meta/Campaign Reports/CampaignPage.tsx","../../src/pages/Meta/Interest Reports/components/InterestTable.tsx","../../src/pages/Meta/Interest Reports/InterestReportPage.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n  brands: string[];\r\n  hasSeenLandingSlides?: boolean;\r\n}\r\n\r\ninterface UserContextType {\r\n  user: User | null;\r\n  setUser: (user: User | null) => void;\r\n  showLandingPopup: boolean;\r\n  setShowLandingPopup: (show: boolean) => void;\r\n}\r\n\r\nconst UserContext = createContext<UserContextType | undefined>(undefined);\r\n\r\nexport const UserProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n\r\n  const [showLandingPopup, setShowLandingPopup] = useState(() => {\r\n    if (!user) return false;\r\n    // Only show landing popup if user has no brands\r\n    return !user.hasSeenLandingSlides && (!user.brands || user.brands.length === 0);\r\n  });\r\n\r\n  // Sync localStorage whenever user data changes\r\n  useEffect(() => {\r\n    if (user) {\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n    } else {\r\n      localStorage.removeItem('user');\r\n    }\r\n  }, [user]);\r\n\r\n  // Show landing popup when user logs in and hasn't seen it\r\n  useEffect(() => {\r\n    if (user && !user.hasSeenLandingSlides && (!user.brands || user.brands.length === 0)) {\r\n      setShowLandingPopup(true);\r\n    }\r\n  }, [user]);\r\n\r\n  const updateUser = (newUser: User | null) => {\r\n    if (newUser && !newUser.hasSeenLandingSlides && (!newUser.brands || newUser.brands.length === 0)) {\r\n      setShowLandingPopup(true);\r\n    }\r\n    setUser(newUser);\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ \r\n      user, \r\n      setUser: updateUser,\r\n      showLandingPopup,\r\n      setShowLandingPopup\r\n    }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = () => {\r\n  const context = useContext(UserContext);\r\n  if (context === undefined) {\r\n    throw new Error('useUser must be used within a UserProvider');\r\n  }\r\n  return context;\r\n};\r\n","import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-black text-white shadow hover:bg-white hover:text-black\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n  brands: string[];\r\n  isClient: boolean;\r\n  isAdmin: boolean;\r\n  metgod: string;\r\n  loginCount: number;\r\n}\r\n\r\ninterface UserState {\r\n  user: User | null;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  user: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<User | null>) => {\r\n      state.user = action.payload;\r\n    },\r\n\r\n    clearUser: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser, clearUser } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Eye, EyeOff, Mail, Lock, User } from 'lucide-react'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Label } from '@/components/ui/label'\r\nimport { useToast } from \"../hooks/use-toast\"\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '@/store'\r\nimport { setUser } from '@/store/slices/UserSlice'\r\n\r\nexport default function AuthForm() {\r\n  const [isLogin, setIsLogin] = useState(true)\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const { toast } = useToast()\r\n  const navigate = useNavigate()\r\n  const [errors, setErrors] = useState({ username: '', email: '', password: '' })\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      navigate('/dashboard');\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  const toggleForm = () => setIsLogin(!isLogin)\r\n\r\n  const validateForm = () => {\r\n    const newErrors = { username: '', email: '', password: '' }\r\n    let isValid = true\r\n\r\n    if (!isLogin && !username.trim()) {\r\n      newErrors.username = 'Username is required'\r\n      isValid = false\r\n    }\r\n\r\n    if (!email.trim()) {\r\n      newErrors.email = 'Email is required'\r\n      isValid = false\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      newErrors.email = 'Email is invalid'\r\n      isValid = false\r\n    }\r\n\r\n    if (!password) {\r\n      newErrors.password = 'Password is required'\r\n      isValid = false\r\n    } else if (password.length < 8) {\r\n      newErrors.password = 'Password must be at least 8 characters'\r\n      isValid = false\r\n    }\r\n\r\n    setErrors(newErrors)\r\n    return isValid\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let response;\r\n      // Determine the base URL based on the environment\r\n      const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n      if (isLogin) {\r\n        response = await axios.post(\r\n          `${baseURL}/api/auth/login/normal`,\r\n          { email, password },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.data.success) {\r\n          // Set the user in the context with hasSeenLandingSlides flag\r\n          const userData = {\r\n            ...response.data.user,\r\n          };\r\n          dispatch(setUser(userData))\r\n         \r\n          toast({\r\n            title: 'Login successful!',\r\n            description: 'Welcome! Redirecting to your dashboard.',\r\n            variant: 'default',\r\n          });\r\n          navigate('/dashboard');\r\n        }\r\n      } else {\r\n        response = await axios.post(\r\n          `${baseURL}/api/auth/signup`,\r\n          { username, email, password },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.data.success) {\r\n          toast({\r\n            title: 'Registration successful!',\r\n            description: 'Please log in with your new account.',\r\n            variant: 'default',\r\n          });\r\n          setIsLogin(true);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error) && error.response) {\r\n        toast({\r\n          title: 'Error',\r\n          description: error.response.data.message || 'An error occurred',\r\n          variant: 'destructive',\r\n        });\r\n      } else {\r\n        toast({\r\n          title: 'Unexpected Error',\r\n          description: 'An unexpected error occurred',\r\n          variant: 'destructive',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n      const response = await axios.get(`${baseURL}/api/auth/google?context=userLogin`);\r\n      const { authUrl } = response.data;\r\n\r\n      window.location.href = authUrl;\r\n    } catch (error) {\r\n      console.error('Error getting Google Auth URL:', error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"hidden md:flex md:w-1/2 bg-cover bg-center\" style={{ backgroundImage: \"url('https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2015&q=80')\" }}>\r\n        <div className=\"flex items-center justify-center w-full h-full bg-black bg-opacity-40\">\r\n          <div className=\"text-white text-center p-8\">\r\n            <h3 className=\"text-4xl font-bold mb-6\">Unified Marketing Analytics</h3>\r\n            <p className=\"text-xl\">View your Shopify, Facebook, and Google Ads data all in one place.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full md:w-1/2 flex items-center justify-center bg-gradient-to-br from-blue-50 to-white p-8\">\r\n        <div className=\"w-full max-w-md\">\r\n          <h2 className=\"text-3xl font-bold mb-3\">\r\n            {isLogin ? 'Welcome Back' : 'Create an Account'}\r\n          </h2>\r\n          <p className=\"mb-8\">\r\n            {isLogin\r\n              ? 'Sign in to access your marketing dashboard'\r\n              : 'Join us to view all your marketing data in one place'}\r\n          </p>\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            {!isLogin && (\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"username\" >Username</Label>\r\n                <div className=\"relative\">\r\n                  <User className=\"absolute left-3 top-3 h-5 w-5\" />\r\n                  <Input\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    placeholder=\"Enter your username\"\r\n                    required={!isLogin}\r\n                    className=\"pl-10 border-blue-300 focus:border-blue-500 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                {errors.username && <p className=\"text-red-500 text-sm\">{errors.username}</p>}\r\n              </div>\r\n            )}\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"email\" >Email</Label>\r\n              <div className=\"relative\">\r\n                <Mail className=\"absolute left-3 top-3 h-5 w-5\" />\r\n                <Input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  placeholder=\"Enter your email\"\r\n                  required\r\n                  className=\"pl-10 border-blue-300 focus:border-blue-500 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n              {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"password\">Password</Label>\r\n              <div className=\"relative\">\r\n                <Lock className=\"absolute left-3 top-3 h-5 w-5\" />\r\n                <Input\r\n                  id=\"password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  placeholder=\"Enter your password\"\r\n                  required\r\n                  className=\"pl-10 border-blue-300 focus:border-blue-500 focus:ring-blue-500\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  className=\"absolute right-3 top-3 \"\r\n                >\r\n                  {showPassword ? <Eye className=\"h-5 w-5\" /> : <EyeOff className=\"h-5 w-5\" />}\r\n                </button>\r\n              </div>\r\n              {errors.password && <p className=\"text-red-500 text-sm\">{errors.password}</p>}\r\n            </div>\r\n            <Button type=\"submit\" className=\"w-full text-white\">\r\n              {isLogin ? 'Sign In' : 'Sign Up'}\r\n            </Button>\r\n          </form>\r\n          <div className=\"mt-6\">\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"w-full flex items-center justify-center space-x-2\"\r\n              onClick={handleGoogleLogin}\r\n            >\r\n              <FcGoogle className=\"h-5 w-5\" />\r\n              <span>Continue with Google</span>\r\n            </Button>\r\n          </div>\r\n          <p className=\"mt-6 text-center text-sm\">\r\n            {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\r\n            <button onClick={toggleForm} className=\"font-semibold hover:underline\">\r\n              {isLogin ? 'Sign Up' : 'Sign In'}\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import * as React from \"react\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <Cross2Icon className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold [&+div]:text-xs\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { IBrand, IBrandState } from '@/interfaces';\r\n\r\nconst initialState: IBrandState = {\r\n  selectedBrandId: null,\r\n  brands: [],\r\n};\r\n\r\nconst brandSlice = createSlice({\r\n  name: 'brand',\r\n  initialState,\r\n  reducers: {\r\n    setSelectedBrandId: (state, action: PayloadAction<string | null>) => {\r\n      state.selectedBrandId = action.payload;\r\n    },\r\n    setBrands: (state, action: PayloadAction<IBrand[]>) => {\r\n      state.brands = action.payload;\r\n    },\r\n    resetBrand: (state) => {\r\n      state.selectedBrandId = null;\r\n      state.brands = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setSelectedBrandId, setBrands, resetBrand } = brandSlice.actions;\r\nexport default brandSlice.reducer;\r\n","import * as React from \"react\"\r\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst TooltipProvider = TooltipPrimitive.Provider\r\n\r\nconst Tooltip = TooltipPrimitive.Root\r\n\r\nconst TooltipTrigger = TooltipPrimitive.Trigger\r\n\r\nconst TooltipContent = React.forwardRef<\r\n  React.ElementRef<typeof TooltipPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <TooltipPrimitive.Portal>\r\n    <TooltipPrimitive.Content\r\n      ref={ref}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 overflow-hidden rounded-md bg-black px-3 py-1.5 text-xs text-white animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </TooltipPrimitive.Portal>\r\n))\r\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\r\n\r\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\r\n","export default \"__VITE_ASSET__BTkxAs8a__\"","import * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n","export const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n\r\n// Define a new color scheme directly in the component\r\nexport const COLORS = {\r\n  primary: {\r\n    main: \"#0EA5E9\", // Vivid sky blue\r\n    light: \"#7DD3FC\", // Light sky blue\r\n    dark: \"#0369A1\", // Deep sky blue\r\n    bg: \"#F0F9FF\", // Very light sky blue\r\n  },\r\n  secondary: {\r\n    main: \"#475569\", // Slate gray\r\n    light: \"#94A3B8\", // Light slate\r\n    dark: \"#334155\", // Dark slate\r\n    bg: \"#F8FAFC\", // Very light slate\r\n  },\r\n  success: {\r\n    main: \"#10B981\", // Emerald green\r\n    dark: \"#047857\", // Deep emerald\r\n    bg: \"#D7FFDF\", // Very light emerald\r\n  },\r\n  danger: {\r\n    main: \"#F43F5E\", // Rose red\r\n    dark: \"#BE123C\", // Deep rose\r\n    bg: \"#FFF1F2\", // Very light rose\r\n  },\r\n  warning: {\r\n    main: \"#1E40AF\", // Deep navy blue\r\n    dark: \"#1E3A8A\", // Darker navy blue\r\n    bg: \"#EFF6FF\", // Very light blue\r\n  },\r\n  neutral: {\r\n\r\n    main: \"#F59E0B\", // Amber\r\n    dark: \"#B45309\", // Deep amber\r\n    bg: \"#FFFBEB\", // Very light amber\r\n  },\r\n  text: {\r\n    primary: \"#0F172A\", // Very dark slate\r\n    secondary: \"#334155\", // Dark slate\r\n    muted: \"#64748B\", // Medium slate\r\n  },\r\n  border: {\r\n    main: \"#CBD5E1\", // Light slate\r\n    dark: \"#94A3B8\", // Medium slate\r\n  },\r\n  background: {\r\n    headerGradient: \"linear-gradient(to bottom, #F1F5F9, #E2E8F0)\",\r\n  },\r\n};\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n","import { ILogoProps } from \"@/interfaces\";\r\n\r\nexport const Ga4Logo: React.FC<ILogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n    <svg viewBox=\"0 0 24 24\" style={{ height, width }}>\r\n        <rect x=\"17\" y=\"2\" width=\"2rem\" height=\"2rem\" rx=\"2.5\" fill=\"#F9AB00\"></rect>\r\n        <path d=\"M9.5 13.5C9.5 12.1193 10.6193 11 12 11C13.3807 11 14.5 12.1193 14.5 13.5V19.5C14.5 20.8807 13.3807 22 12 22C10.6193 22 9.5 20.8807 9.5 19.5V13.5Z\" fill=\"#E37400\"></path>\r\n        <path d=\"M2 19.5C2 18.1193 3.11929 17 4.5 17C5.88071 17 7 18.1193 7 19.5C7 20.8807 5.88071 22 4.5 22C3.11929 22 2 20.8807 2 19.5Z\" fill=\"#E37400\"></path><path d=\"M6.92162 10C6.36184 10 5.95724 9.68838 5.95724 9.05977V8.55474H3.2304C2.49881 8.55474 2 8.1088 2 7.45332C2 7.07723 2.12193 6.70651 2.40459 6.22297C2.93666 5.29349 3.57403 4.31565 4.31116 3.23573C4.92637 2.31162 5.39747 2 6.20111 2C7.2209 2 7.88044 2.54265 7.88044 3.38617V7.02351H8.19082C8.72842 7.02351 9 7.34587 9 7.79181C9 8.23774 8.72288 8.55474 8.19082 8.55474H7.88044V9.05977C7.88044 9.68838 7.47585 10 6.92162 10ZM6.01267 7.09335V3.48287H5.97387C5.0095 4.8368 4.34996 5.83076 3.7015 7.03962V7.09335H6.01267Z\" fill=\"#E37400\"></path>\r\n    </svg>\r\n);\r\n\r\nexport const ShopifyLogo: React.FC<ILogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n    <svg viewBox=\"0 0 64 64\" style={{ height, width }}\r\n        xmlns=\"http://www.w3.org/2000/svg\" ><g>\r\n            <g><path d=\"M51.759,12.659c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631    c-0.36-0.362-1.063-0.254-1.337-0.171c-0.039,0.011-0.715,0.222-1.834,0.567c-1.096-3.167-3.027-6.077-6.426-6.077    c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844c-7.919,0-11.703,9.951-12.889,15.008    c-3.078,0.956-5.266,1.638-5.542,1.728C9.943,18.42,9.89,18.474,9.667,20.1C9.495,21.331,5,56.264,5,56.264l35.022,6.594    L59,58.731c0,0-6.661-45.261-6.703-45.572C52.255,12.849,51.983,12.677,51.759,12.659z M33.034,10.88    c0,0.119-0.002,0.231-0.002,0.344c-1.928,0.601-4.02,1.251-6.121,1.906c1.179-4.57,3.387-6.78,5.32-7.613    C32.716,6.743,33.034,8.505,33.034,10.88z M29.876,3.278c0.346,0,0.688,0.116,1.018,0.345c-2.539,1.199-5.258,4.224-6.408,10.261    c-1.679,0.522-3.319,1.034-4.838,1.506C20.994,10.783,24.188,3.278,29.876,3.278z M31.241,30.19c0,0-2.05-1.099-4.561-1.099    c-3.686,0-3.872,2.324-3.872,2.908c0,3.195,8.287,4.42,8.287,11.903c0,5.888-3.714,9.678-8.726,9.678    c-6.012,0-9.088-3.761-9.088-3.761l1.609-5.345c0,0,3.16,2.729,5.83,2.729c1.74,0,2.449-1.38,2.449-2.387    c0-4.168-6.799-4.354-6.799-11.203c0-5.761,4.116-11.341,12.428-11.341c3.199,0,4.783,0.923,4.783,0.923L31.241,30.19z     M35.11,10.578c0-0.211,0.002-0.417,0.002-0.644c0-1.966-0.273-3.551-0.709-4.807c1.752,0.219,2.919,2.223,3.67,4.528    C37.194,9.931,36.194,10.241,35.11,10.578z\" fill=\"#95C675\" /></g><g><path d=\"M51.759,12.659c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631    c-0.36-0.362-1.063-0.254-1.337-0.171c-0.039,0.011-0.715,0.222-1.834,0.567c-1.096-3.167-3.027-6.077-6.426-6.077    c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844c-7.919,0-9.873,9.951-11.059,15.008    c-3.078,0.956-5.44,6.219-5.719,6.307c-1.719,0.542-1.772,0.596-1.996,2.223C11.148,25.91,5,56.264,5,56.264l35.022,6.594    L59,58.731c0,0-6.661-45.261-6.703-45.572C52.255,12.849,51.983,12.677,51.759,12.659z M33.034,10.88    c0,0.119-0.002,0.231-0.002,0.344c-1.928,0.601-4.02,1.251-6.121,1.906c1.179-4.57,3.387-6.78,5.32-7.613    C32.716,6.743,33.034,8.505,33.034,10.88z M29.876,3.278c0.346,0,0.688,0.116,1.018,0.345c-2.539,1.199-5.258,4.224-6.408,10.261    c-1.679,0.522-3.319,1.034-4.838,1.506C20.994,10.783,24.188,3.278,29.876,3.278z M31.241,30.19c0,0-2.05-1.099-4.561-1.099    c-3.686,0-3.872,2.324-3.872,2.908c0,3.195,8.287,4.42,8.287,11.903c0,5.888-3.714,9.678-8.726,9.678    c-6.012,0-9.088-3.761-9.088-3.761l1.609-5.345c0,0,3.16,2.729,5.83,2.729c1.74,0,2.449-1.38,2.449-2.387    c0-4.168-6.799-4.354-6.799-11.203c0-5.761,4.116-11.341,12.428-11.341c3.199,0,4.783,0.923,4.783,0.923L31.241,30.19z     M35.11,10.578c0-0.211,0.002-0.417,0.002-0.644c0-1.966-0.273-3.551-0.709-4.807c1.752,0.219,2.919,2.223,3.67,4.528    C37.194,9.931,36.194,10.241,35.11,10.578z\" fill=\"#79B259\" /></g><path d=\"M40.022,62.857L59,58.731c0,0-6.661-45.261-6.703-45.572c-0.042-0.311-0.313-0.482-0.538-0.5   c-0.221-0.021-4.94-0.371-4.94-0.371s-3.28-3.271-3.639-3.631c-0.192-0.194-0.479-0.249-0.75-0.251   c-0.72,1.22-0.571,3.537-0.571,3.537l-2.232,50.839L40.022,62.857z\" fill=\"#55932C\" /><path d=\"M33.583,2.977c-0.094,0-0.191,0.004-0.289,0.01c-0.966-1.283-2.164-1.844-3.199-1.844   c-7.887,0-11.674,9.873-12.875,14.947l2.447-0.759c1.354-4.609,4.545-12.053,10.209-12.053c0.346,0,0.688,0.116,1.018,0.345   c-2.532,1.195-5.244,4.209-6.398,10.213l2.43-0.75c1.182-4.541,3.381-6.739,5.307-7.569c0.484,1.227,0.803,2.988,0.803,5.363   c0,0.108,0,0.211-0.002,0.314l2.078-0.643c0-0.2,0.002-0.4,0.002-0.617c0-1.966-0.273-3.551-0.709-4.807   c1.746,0.218,2.912,2.213,3.662,4.508l1.938-0.601C38.906,5.876,36.976,2.977,33.583,2.977z\" fill=\"#4A7A2B\" /><path d=\"M47.611,12.348c-0.474-0.037-0.793-0.06-0.793-0.06s-3.28-3.271-3.639-3.631   c-0.192-0.194-0.479-0.249-0.75-0.251c-0.72,1.22-0.571,3.537-0.571,3.537l-2.232,50.839l0.396,0.075l10.098-2.196L47.611,12.348z\" fill=\"#4C822A\" />\r\n        </g></svg>\r\n);\r\n\r\nexport const FacebookLogo: React.FC<ILogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n    <svg style={{ height, width }} fill=\"#1877F2\" viewBox=\"0 0 24 24\">\r\n        <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n    </svg>\r\n);\r\n\r\nexport const GoogleLogo: React.FC<ILogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n    <svg viewBox=\"0 0 24 24\" style={{ height, width }}>\r\n        <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n        <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n        <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n    </svg>\r\n)\r\nexport const WhiteGa4Logo: React.FC<ILogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 256 256\"\r\n      style={{ width, height }}\r\n      fill=\"#ffffff\"\r\n    >\r\n      <g\r\n        fill=\"#ffffff\"\r\n        fillRule=\"nonzero\"\r\n        stroke=\"none\"\r\n        strokeWidth=\"1\"\r\n        strokeLinecap=\"butt\"\r\n        strokeLinejoin=\"miter\"\r\n        strokeMiterlimit=\"10\"\r\n        fontFamily=\"none\"\r\n        fontWeight=\"none\"\r\n        fontSize=\"none\"\r\n        textAnchor=\"none\"\r\n        style={{ mixBlendMode: 'normal' }}\r\n      >\r\n        <g transform=\"scale(5.12,5.12)\">\r\n          <path d=\"M35,3c-2.206,0 -4,1.794 -4,4v10h-10c-2.19733,0 -4,1.80267 -4,4v10h-10c-2.19733,0 -4,1.80267 -4,4v8c0,2.19733 1.80267,4 4,4h24h1h11c2.206,0 4,-1.794 4,-4v-36c0,-2.206 -1.794,-4 -4,-4zM21,19h10v26h-24c-1.11667,0 -2,-0.88333 -2,-2v-8c0,-1.11667 0.88333,-2 2,-2h11c0.55226,-0.00006 0.99994,-0.44774 1,-1v-11c0,-1.11667 0.88333,-2 2,-2z\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n\r\n  export const WhiteGoogleAdsLogo: React.FC<ILogoProps> = ({ width = '1.25rem', height = '1.25rem' }) => (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 50 50\"\r\n      style={{ width, height }}\r\n      fill=\"#ffffff\"\r\n    >\r\n      <path d=\"M 25.167969 5.0058594 C 24.781877 4.9968865 24.394532 5.014912 24.007812 5.0625 C 22.976561 5.1894012 21.954004 5.5214624 21 6.0722656 C 19.738126 6.8008205 18.867614 7.8795934 18.189453 9.0625 L 18.074219 8.9960938 L 4.0742188 32.996094 L 4.1894531 33.0625 C 3.5013617 34.243015 3 35.539748 3 37 C 3 41.406432 6.5935644 45 11 45 C 13.946182 45 16.422265 43.319288 17.810547 40.9375 L 17.925781 41.003906 L 25 28.876953 L 32.074219 41.003906 C 34.278505 44.817 39.185255 46.130214 43 43.927734 C 46.816027 41.724515 48.130947 36.816015 45.927734 33 L 45.927734 32.998047 L 31.927734 9 C 30.481872 6.4957324 27.870611 5.0686695 25.167969 5.0058594 z M 25.130859 6.9960938 C 27.155284 7.0392142 29.104113 8.1100176 30.195312 10 L 30.197266 10.001953 L 30.197266 10.003906 L 44.197266 34.003906 C 45.856861 36.883192 44.878669 40.533286 42 42.195312 C 39.120015 43.8581 35.467467 42.879973 33.804688 40 L 33.802734 39.998047 L 19.804688 16 L 19.804688 15.998047 L 19.802734 15.996094 C 18.143139 13.116808 19.121331 9.4667144 22 7.8046875 C 22.719996 7.3889907 23.488252 7.1380832 24.261719 7.0410156 C 24.551769 7.0046153 24.841656 6.9899337 25.130859 6.9960938 z M 17.212891 14.441406 C 17.372969 15.315284 17.603702 16.188437 18.072266 17 L 18.072266 17.001953 L 23.841797 26.892578 L 18.728516 35.658203 C 18.065728 31.912371 14.931107 29 11 29 C 10.084587 29 9.236334 29.238188 8.4160156 29.523438 L 17.212891 14.441406 z M 11 31 C 14.325556 31 17 33.674446 17 37 C 17 40.325554 14.325556 43 11 43 C 7.6744439 43 5 40.325554 5 37 C 5 33.674446 7.6744439 31 11 31 z\" />\r\n    </svg>\r\n  );","import React, { useState, useEffect, useRef, useCallback } from \"react\"\r\nimport {\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  ChevronUp,\r\n  ChevronDown,\r\n  Blend,\r\n  LogOut,\r\n  User2Icon,\r\n  Store,\r\n  CalendarRange,\r\n  LineChart,\r\n  Target,\r\n} from \"lucide-react\"\r\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\"\r\nimport { setSelectedBrandId, setBrands, resetBrand } from \"@/store/slices/BrandSlice.ts\"\r\nimport axios from \"axios\"\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\r\nimport Logo from \"@/assets/messold-icon.png\"\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport type { RootState } from \"../../store/index.ts\"\r\nimport { clearUser } from \"@/store/slices/UserSlice.ts\"\r\nimport { baseURL } from \"@/data/constant.ts\"\r\nimport type { IBrand } from \"@/interfaces\"\r\nimport { WhiteGa4Logo, WhiteGoogleAdsLogo } from \"@/data/logo.tsx\"\r\nimport { FaMeta } from \"react-icons/fa6\"\r\n\r\nexport default function CollapsibleSidebar() {\r\n  const [isExpanded, setIsExpanded] = useState(true)\r\n  const [isInitialLoad, setIsInitialLoad] = useState(false)\r\n  const location = useLocation()\r\n  const navigate = useNavigate()\r\n  const sidebarRef = useRef<HTMLDivElement>(null)\r\n\r\n  const dispatch = useDispatch()\r\n  const selectedBrandId = useSelector((state: RootState) => state.brand.selectedBrandId)\r\n  const brands = useSelector((state: RootState) => state.brand.brands)\r\n  const user = useSelector((state: RootState) => state.user.user)\r\n\r\n  // Fetch brands\r\n  const fetchBrands = useCallback(async () => {\r\n    try {\r\n      if (!user?.brands || user.brands.length === 0) {\r\n        console.warn(\"No brand IDs found in user context.\")\r\n        return\r\n      }\r\n\r\n      const response = await axios.post(\r\n        `${baseURL}/api/brands/filter`,\r\n        { brandIds: user.brands },\r\n        { withCredentials: true },\r\n      )\r\n\r\n      dispatch(setBrands(response.data))\r\n\r\n      if (!selectedBrandId && response.data.length > 0) {\r\n        dispatch(setSelectedBrandId(response.data[0]._id))\r\n        // For first load after login, navigate to dashboard\r\n        if (isInitialLoad) {\r\n          navigate('/dashboard')\r\n          setIsInitialLoad(false)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching brands:\", error)\r\n    }\r\n  }, [user?.brands, dispatch, selectedBrandId, isInitialLoad, navigate]) // Added isInitialLoad and navigate\r\n\r\n  useEffect(() => {\r\n    fetchBrands()\r\n  }, [fetchBrands]) // Will only run when dependencies change\r\n\r\n  const toggleSidebar = () => setIsExpanded((prev) => !prev)\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const response = await axios.post(`${baseURL}/api/auth/logout`, {}, { withCredentials: true })\r\n      if (response.status === 200) {\r\n        dispatch(clearUser())\r\n        dispatch(resetBrand())\r\n        navigate(\"/\")\r\n        // Reset initial load state for next login\r\n        setIsInitialLoad(true)\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error logging out:\", error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const pathParts = location.pathname.split(\"/\")\r\n    if (pathParts[2]) {\r\n      dispatch(setSelectedBrandId(pathParts[2]))\r\n    }\r\n  }, [location.pathname, dispatch])\r\n\r\n  // Helper function to get current path type\r\n  const getCurrentPathType = () => {\r\n    const pathParts = location.pathname.split(\"/\")\r\n    if (pathParts.length >= 2) {\r\n      return pathParts[1] // Returns the path type (e.g., 'ad-metrics', 'analytics-dashboard', etc.)\r\n    }\r\n    return 'dashboard' // Default\r\n  }\r\n\r\n  // Function to handle brand change navigation\r\n  const handleBrandChange = (brandId: string) => {\r\n    dispatch(setSelectedBrandId(brandId))\r\n    \r\n    // If it's initial load, we'll navigate to dashboard (this is handled in fetchBrands)\r\n    // For subsequent brand changes, stay on current dashboard type but with new brand ID\r\n    if (!isInitialLoad) {\r\n      const currentPathType = getCurrentPathType()\r\n      \r\n      // Special case for main dashboard that doesn't have brandId in URL\r\n      if (currentPathType === 'dashboard') {\r\n        navigate('/dashboard')\r\n        return\r\n      }\r\n      \r\n      // For pages with brand ID in URL path, replace the old brand ID with the new one\r\n      const pathParts = location.pathname.split(\"/\")\r\n      if (pathParts.length >= 3) {\r\n        pathParts[2] = brandId\r\n        navigate(pathParts.join('/'))\r\n      } else {\r\n        // Fallback - navigate to the same dashboard type with new brandId\r\n        navigate(`/${currentPathType}/${brandId}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Define base dashboards that all users can see\r\n  const allDashboards = [\r\n    { name: \"Business Overview\", path: `/dashboard`, icon: <Blend size={20} /> },\r\n    { name: \"Marketing Insights Tracker\", path: `/marketing-insights/${selectedBrandId}`, icon: <CalendarRange size={20} /> },\r\n    { name: \"Ad Metrics Hub\", path: `/admetrics/${selectedBrandId}`, icon: <LineChart size={20} /> },\r\n    {\r\n      name: \"GA4 Analytics\",\r\n      path: `#`,\r\n      icon: <WhiteGa4Logo />,\r\n      subItems: [\r\n        { name: \"E-Commerce Insights\", path: `/ecommerce-reports/${selectedBrandId}` },\r\n        { name: \"Conversion Lens\", path: `/conversion-reports/${selectedBrandId}` },\r\n      ],\r\n    },\r\n    {\r\n      name: \"Meta\",\r\n      path: `#`,\r\n      icon: <FaMeta />,\r\n      subItems: [\r\n        { name: \"Campaign Analysis\", path: `/meta-campaigns/${selectedBrandId}` },\r\n        { name: \"Interest 360\", path:`/meta-interest/${selectedBrandId}`},\r\n        { name: \"Meta Reports\", path: `/meta-reports/${selectedBrandId}` },\r\n      ],\r\n    },\r\n\r\n    { name: \"Google Reports\", path: `/google-reports/${selectedBrandId}`, icon: <WhiteGoogleAdsLogo /> },\r\n\r\n    { name: \"Brands Targets\", path: `/performance-metrics`, icon: <Target size={20} /> },\r\n  ]\r\n\r\n  const isItemDisabled = (item: any) => {\r\n    if (!selectedBrandId) return true\r\n\r\n    const currentBrand = brands.find((b) => b._id === selectedBrandId)\r\n    if (\r\n      (item.name === \"Analytics Dashboard\" || item.name === \"Campaign Metrics\") &&\r\n      !currentBrand?.fbAdAccounts &&\r\n      !currentBrand?.googleAdAccount\r\n    ) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  return (\r\n    <TooltipProvider>\r\n      <div\r\n        ref={sidebarRef}\r\n        className={`bg-[rgb(4,16,33)] text-white transition-all duration-500 ease-in-out flex flex-col ${isExpanded ? \"w-56\" : \"w-16\"}`}\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <div className={`flex justify-between items-center p-4 relative`}>\r\n          <div className=\"flex items-center cursor-pointer\" onClick={() => navigate(\"/dashboard\")}>\r\n            <img src={Logo || \"/placeholder.svg\"} alt=\"Messold Logo\" className=\"h-8 w-8\" />\r\n            {isExpanded ? <span className=\"text-sm ml-2\">Messold</span> : null}\r\n          </div>\r\n          <span\r\n            className={`transition-all duration-300 ease-in-out bg-[rgb(4,16,33)] rounded-full flex items-center justify-center`}\r\n            style={{\r\n              width: \"25px\",\r\n              height: \"25px\",\r\n              position: \"absolute\",\r\n              right: \"-10px\",\r\n              top: \"50%\",\r\n              transform: \"translateY(-50%)\",\r\n              zIndex: 50,\r\n            }}\r\n            onClick={toggleSidebar}\r\n          >\r\n            {isExpanded ? <ChevronLeft size={15} /> : <ChevronRight size={15} />}\r\n          </span>\r\n        </div>\r\n\r\n        <div className={`flex-1 overflow-y-auto ${isExpanded ? \"h-[calc(100vh-64px)]\" : \"h-[calc(100vh-16px)]\"}`}>\r\n          <ScrollArea className=\"h-full\">\r\n            <nav className=\"mt-3\">\r\n              {/* Brand selector - Modified to use handleBrandChange */}\r\n              <SidebarItem\r\n                icon={<Store size={24} />}\r\n                text={\r\n                  selectedBrandId\r\n                    ? brands.find((b) => b._id === selectedBrandId)?.name.replace(/_/g, \" \") || \"Unknown Brand\"\r\n                    : \"Your Brands\"\r\n                }\r\n                isExpanded={isExpanded}\r\n                openIcon={<ChevronUp />}\r\n                closeIcon={<ChevronDown />}\r\n                isSelected={!!selectedBrandId}\r\n                tooltipContent=\"Your Brands\"\r\n                autoOpenOnSelect={false}\r\n              >\r\n                {brands.map((brand: IBrand) => (\r\n                  <SidebarChild\r\n                    key={brand._id}\r\n                    path={`#`} // Changed to # to prevent default navigation\r\n                    text={brand.name.replace(/_/g, \" \")}\r\n                    onClick={() => handleBrandChange(brand._id)} // Use our new handler\r\n                    isSelected={selectedBrandId === brand._id}\r\n                  />\r\n                ))}\r\n              </SidebarItem>\r\n\r\n              {/* Dashboard items - all open by default */}\r\n              {allDashboards.map((item, index) => {\r\n                const isAnySubItemSelected = item.subItems?.some((subItem) => location.pathname === subItem.path)\r\n\r\n                const isMainItemActive =\r\n                  (location.pathname.startsWith(item.path) && item.path !== \"#\") || isAnySubItemSelected\r\n\r\n                // Main heading with tooltip when collapsed\r\n                const dashboardItemContent = (\r\n                  <div\r\n                    className={`flex items-center px-4 py-1.5 mb-1 text-gray-300 hover:bg-gray-700 hover:text-white transition-colors duration-200 ${item.subItems ? \"cursor-auto\" : \"cursor-pointer\"}\r\n                      ${\r\n                        isMainItemActive ? \"text-white font-semibold relative\" : \"text-gray-100\"\r\n                      } ${isItemDisabled(item) ? \"cursor-not-allowed opacity-50\" : \"\"}`}\r\n                    onClick={() => {\r\n                      if (!isItemDisabled(item) && item.path && item.path !== \"#\" && !item.subItems) {\r\n                        navigate(item.path)\r\n                      }\r\n                    }}\r\n                  >\r\n                    <span className=\"mr-2\">{item.icon}</span>\r\n                    {isExpanded && <span className=\"text-xs\">{item.name}</span>}\r\n                    {isExpanded && item.subItems && <span className=\"ml-auto\"></span>}\r\n                  </div>\r\n                )\r\n\r\n                return (\r\n                  <div key={index}>\r\n                    {/* Main heading with tooltip when collapsed */}\r\n                    {!isExpanded ? (\r\n                      <Tooltip>\r\n                        <TooltipTrigger asChild>{dashboardItemContent}</TooltipTrigger>\r\n                        <TooltipContent side=\"right\">\r\n                          <p>{item.name}</p>\r\n                          {item.subItems && (\r\n                            <>\r\n                              <div className=\"h-[1px] w-full my-2 bg-gray-400\" />\r\n                              <div className=\"mt-1\">\r\n                                {item.subItems.map((subItem, subIndex) => (\r\n                                  <div\r\n                                    key={subIndex}\r\n                                    className=\"text-xs py-1.5 px-1 hover:bg-gray-700 rounded cursor-pointer\"\r\n                                    onClick={(e) => {\r\n                                      e.stopPropagation() // Prevent parent click\r\n                                      navigate(subItem.path)\r\n                                    }}\r\n                                  >\r\n                                    {subItem.name}\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            </>\r\n                          )}\r\n                        </TooltipContent>\r\n                      </Tooltip>\r\n                    ) : (\r\n                      dashboardItemContent\r\n                    )}\r\n\r\n                    {/* Subheadings with divider */}\r\n                    {isExpanded && item.subItems && (\r\n                      <div className=\"pl-8 mb-2\">\r\n                        <div className=\"h-[1px] w-2/3 my-2 bg-gray-400\" />\r\n                        {item.subItems.map((subItem, subIndex) => (\r\n                          <div\r\n                            key={subIndex}\r\n                            className={`flex items-center text-xs w-full p-2 transition-colors duration-200 cursor-pointer ${\r\n                              location.pathname === subItem.path\r\n                                ? \"text-white font-semibold relative bg-gray-800\"\r\n                                : \"text-gray-100\"\r\n                            } hover:bg-gray-700`}\r\n                            onClick={() => navigate(subItem.path)}\r\n                          >\r\n                            <span>{subItem.name}</span>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )\r\n              })}\r\n            </nav>\r\n          </ScrollArea>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col\">\r\n          <UserProfile isExpanded={isExpanded} user={user} />\r\n          <LogoutButton handleLogout={handleLogout} isExpanded={isExpanded} />\r\n        </div>\r\n      </div>\r\n    </TooltipProvider>\r\n  )\r\n}\r\n\r\n// Keep these components for the brand section which should remain the same\r\ninterface SidebarChildProps {\r\n  path: string\r\n  text: string\r\n  onClick?: () => void\r\n  disabled?: boolean\r\n  isSelected?: boolean\r\n  children?: React.ReactNode\r\n}\r\n\r\nfunction SidebarChild({\r\n  path,\r\n  text,\r\n  onClick,\r\n  disabled = false,\r\n  isSelected = false,\r\n  children,\r\n}: SidebarChildProps): JSX.Element {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const hasChildren = React.Children.count(children) > 0\r\n\r\n  const handleToggle = () => {\r\n    if (hasChildren) {\r\n      setIsOpen((prev) => !prev)\r\n    }\r\n  }\r\n\r\n  const isChildSelected = React.Children.toArray(children).some((child: any) => child?.props?.isSelected)\r\n  const isActive = isSelected || isChildSelected\r\n\r\n  useEffect(() => {\r\n    if (isActive) {\r\n      setIsOpen(true)\r\n    }\r\n  }, [isActive])\r\n\r\n  const baseClasses = `flex items-center text-xs w-full p-2 transition-colors duration-200 \r\n      ${isActive ? \"text-white font-semibold relative bg-gray-800\" : \"text-gray-100\"} \r\n      ${disabled ? \"cursor-not-allowed text-gray-400\" : \"hover:bg-gray-700\"}`\r\n\r\n  const content = (\r\n    <>\r\n      <div className=\"flex items-center justify-between w-full\">\r\n        <span>{text}</span>\r\n        {hasChildren && <span className=\"ml-2\">{isOpen ? <ChevronUp /> : <ChevronDown />}</span>}\r\n      </div>\r\n      {isActive && <div className=\"absolute left-0 top-0 w-1 h-full bg-white\" />}\r\n    </>\r\n  )\r\n\r\n  const childItem = disabled ? (\r\n    <div className={baseClasses}>{content}</div>\r\n  ) : (\r\n    <NavLink\r\n      to={path}\r\n      className={baseClasses}\r\n      onClick={(e) => {\r\n        // Stop default navigation for items that are just containers\r\n        if (path === \"/#\" || !path || path === \"#\") {\r\n          e.preventDefault()\r\n        }\r\n\r\n        // Always toggle if there are children\r\n        if (hasChildren) {\r\n          handleToggle()\r\n        }\r\n\r\n        // External onClick handler\r\n        if (onClick) {\r\n          onClick()\r\n        }\r\n      }}\r\n    >\r\n      {content}\r\n    </NavLink>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {childItem}\r\n      {isOpen && hasChildren && (\r\n        <div className=\"relative pl-4\">\r\n          <div className=\"absolute top-0 left-4 w-1 h-full bg-gray-500\" />\r\n          {children}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface SidebarItemProps {\r\n  icon?: React.ReactNode\r\n  text: string\r\n  isExpanded: boolean\r\n  openIcon?: React.ReactNode\r\n  closeIcon?: React.ReactNode\r\n  children?: React.ReactNode\r\n  isSelected: boolean\r\n  tooltipContent: string\r\n  onClick?: () => void\r\n  disabled?: boolean\r\n  autoOpenOnSelect?: boolean\r\n}\r\n\r\nfunction SidebarItem({\r\n  icon,\r\n  text,\r\n  isExpanded,\r\n  openIcon,\r\n  closeIcon,\r\n  children,\r\n  isSelected,\r\n  tooltipContent,\r\n  onClick,\r\n  disabled,\r\n  autoOpenOnSelect = true,\r\n}: SidebarItemProps) {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const hasChildren = React.Children.count(children) > 0\r\n\r\n  const handleToggle = () => {\r\n    if (hasChildren) {\r\n      setIsOpen((prev) => !prev)\r\n    }\r\n  }\r\n\r\n  // Enhanced recursive check for nested selections\r\n  const isChildSelected = React.Children.toArray(children).some((child: any) => {\r\n    if (child?.props?.isSelected) return true\r\n    // Check if any of this child's children are selected\r\n    if (child?.props?.children) {\r\n      return React.Children.toArray(child.props.children).some((grandchild: any) => grandchild?.props?.isSelected)\r\n    }\r\n    return false\r\n  })\r\n\r\n  const isActive = isSelected || isChildSelected\r\n\r\n  useEffect(() => {\r\n    if (autoOpenOnSelect && isActive) {\r\n      setIsOpen(true)\r\n    }\r\n  }, [isActive, autoOpenOnSelect])\r\n\r\n  const content = (\r\n    <div\r\n      onClick={() => {\r\n        // Always toggle if it has children\r\n        if (hasChildren) {\r\n          handleToggle()\r\n        }\r\n\r\n        // Then handle navigation via onClick if provided\r\n        if (!disabled && onClick) {\r\n          onClick()\r\n        }\r\n      }}\r\n      className={`flex items-center px-4 py-2 mb-2 text-gray-300 hover:bg-gray-700 hover:text-white transition-colors duration-200 cursor-pointer ${\r\n        isActive ? \"text-white font-semibold relative\" : \"text-gray-100\"\r\n      } ${disabled ? \"cursor-not-allowed opacity-50\" : \"\"}`}\r\n    >\r\n      <span className=\"mr-2\">{icon}</span>\r\n      {isExpanded && <span className=\"text-xs\">{text}</span>}\r\n      {isExpanded && <span className=\"ml-auto\">{isOpen ? openIcon : closeIcon}</span>}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {!isExpanded ? (\r\n        <Tooltip>\r\n          <TooltipTrigger asChild>{content}</TooltipTrigger>\r\n          <TooltipContent side=\"right\">\r\n            <p className={React.Children.count(children) > 0 ? \"mb-4\" : \"\"}>{tooltipContent}</p>\r\n            {React.Children.map(children, (child) => (\r\n              <div className=\"relative\">\r\n                <div className=\"absolute top-0 w-1 h-full bg-gray-500\" />\r\n                {child}\r\n              </div>\r\n            ))}\r\n          </TooltipContent>\r\n        </Tooltip>\r\n      ) : (\r\n        content\r\n      )}\r\n      {isOpen && isExpanded && (\r\n        <div className=\"relative pl-8\">\r\n          <div className=\"absolute top-0 w-1 h-full bg-gray-500\" />\r\n          {React.Children.map(children, (child) => (\r\n            <div>{child}</div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface UserProfileProps {\r\n  isExpanded: boolean\r\n  user: any\r\n}\r\n\r\nfunction UserProfile({ isExpanded, user }: UserProfileProps) {\r\n  const navigate = useNavigate()\r\n  const userProfileContent = (\r\n    <div\r\n      onClick={() => navigate(\"/profile\")}\r\n      className={\r\n        \"flex items-center gap-3 px-3 py-1.5 mb-1 text-gray-300 hover:bg-gray-700 hover:text-white transition-colors duration-200 cursor-pointer\"\r\n      }\r\n    >\r\n      <span className=\"text-gray-300 hover:text-white\">\r\n        <User2Icon size={24} />\r\n      </span>\r\n      {isExpanded && <span className=\"text-sm mr-2\">{user?.username || \"user\"}</span>}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {!isExpanded ? (\r\n        <Tooltip>\r\n          <TooltipTrigger asChild>{userProfileContent}</TooltipTrigger>\r\n          <TooltipContent side=\"right\">\r\n            <p>{user?.username || \"user\"}</p>\r\n          </TooltipContent>\r\n        </Tooltip>\r\n      ) : (\r\n        userProfileContent\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface LogoutButtonProps {\r\n  handleLogout: () => void\r\n  isExpanded: boolean\r\n}\r\n\r\nfunction LogoutButton({ handleLogout, isExpanded }: LogoutButtonProps) {\r\n  const logoutContent = (\r\n    <div\r\n      onClick={handleLogout}\r\n      className={\r\n        \"flex items-center gap-3 px-3 py-1.5 mb-1 text-gray-300 hover:bg-gray-700 hover:text-white transition-colors duration-200 cursor-pointer\"\r\n      }\r\n    >\r\n      <span className=\"text-gray-300 hover:text-white\">\r\n        <LogOut size={24} />\r\n      </span>\r\n      {isExpanded && <span className=\"hidden sm:inline\">Logout</span>}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {!isExpanded ? (\r\n        <Tooltip>\r\n          <TooltipTrigger asChild>{logoutContent}</TooltipTrigger>\r\n          <TooltipContent side=\"right\">\r\n            <p>Logout</p>\r\n          </TooltipContent>\r\n        </Tooltip>\r\n      ) : (\r\n        logoutContent\r\n      )}\r\n    </div>\r\n  )\r\n}","import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-xl border bg-card text-card-foreground shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-3\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-4 pt-3\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n","import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-primary/10\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","// AdAccountMetrics.js\r\nimport React from 'react';\r\nimport { Card, CardHeader, CardContent } from \"@/components/ui/card\"\r\nimport { Skeleton } from \"@/components/ui/skeleton\"\r\nimport {  HelpCircle } from 'lucide-react';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\nimport { Campaign, GoogleCampaign } from '../Dashboard/interfaces';\r\nimport { FacebookLogo, GoogleLogo } from '@/data/logo';\r\n\r\n\r\n// Define the type for each metric\r\nexport interface Metric {\r\n  label: string;\r\n  value: string | number;\r\n  tooltipContent?: string\r\n\r\n}\r\n\r\n// Define the props for the AdAccountMetrics component\r\ninterface AdAccountMetricsProps {\r\n  title?: string;\r\n  metrics: Metric[];\r\n  date: DateRange;\r\n  isLoading: boolean;\r\n  icon?: 'Facebook' | 'Google' | '';\r\n  tooltipContent?: string\r\n  errorMessage?: string;\r\n}\r\n\r\nexport interface DateRange {\r\n  from?: Date;\r\n  to?: Date;\r\n}\r\n\r\ninterface MetricCardProps extends Metric {\r\n  date: DateRange;\r\n  icon?: 'Facebook' | 'Google' | ''\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst MetricCardSkeleton: React.FC = () => {\r\n  return (\r\n    <Card className=\"transition-transform transform hover:scale-105 hover:border hover:border-blue-600\">\r\n      <CardHeader className='flex flex-col items-start justify-start'>\r\n        <div className=\"flex flex-row items-center gap-2\">\r\n          <Skeleton className=\"w-4 h-4 rounded-full\" />\r\n          <Skeleton className=\"h-6 w-24\" />\r\n        </div>\r\n        <Skeleton className=\"h-4 w-32 mt-2\" />\r\n      </CardHeader>\r\n      <CardContent>\r\n        <Skeleton className=\"h-8 w-20 mt-2\" />\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\n// MetricCard component to render each metric using ShadCN Card\r\nconst MetricCard: React.FC<MetricCardProps> = ({ label, value, date, icon, tooltipContent }) => {\r\n  const formatDate = (dateValue: Date | undefined) => {\r\n    if (!dateValue) return \"\";\r\n    if (typeof dateValue === \"string\") {\r\n      dateValue = new Date(dateValue); // Convert string to Date\r\n    }\r\n    return dateValue.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"transition-transform transform hover:scale-105 hover:border hover:border-blue-600\">\r\n      <CardHeader className='flex flex-col items-start justify-start'>\r\n        <div className=\"flex flex-row items-center gap-2\">\r\n          {icon === 'Facebook' ? (\r\n            <FacebookLogo width=\"1rem\" height=\"1rem\" />\r\n          ) : icon === 'Google' ? (\r\n            <GoogleLogo width=\"1rem\" height=\"1rem\" />\r\n          ) : null}\r\n\r\n          <div className=\"text-base font-medium\">{label}</div>\r\n\r\n          {tooltipContent && (\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <button className=\"p-0 m-0\" aria-label={`Info about ${label}`}>\r\n                    <HelpCircle className=\"w-3 h-3 text-gray-400\" />\r\n                  </button>\r\n                </TooltipTrigger>\r\n                <TooltipContent className=\"w-64 p-0 bg-white text-black border shadow-sm\">\r\n                  <div className=\"p-2 font-semibold border-black\">{label}</div>\r\n                  <div className=\"w-full h-[0.5px] bg-black\" />\r\n                  <div className=\"p-2\">{tooltipContent}</div>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"text-xs text-gray-500 font-bold\">\r\n          {formatDate(date.from)}\r\n          {date.from && date.to ? ' - ' : ''}\r\n          {formatDate(date.to)}\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <p className=\"text-lg lg:text-xl 2xl:text-2xl font-bold text-teal-800\">{value}</p>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n};\r\n\r\n\r\nconst AdAccountMetricsCard: React.FC<AdAccountMetricsProps> = ({ title, metrics = [], date, isLoading = false, icon, errorMessage }) => {\r\n  if (errorMessage && !isLoading) {\r\n    return (\r\n      <section className={title ? 'mt-10' : ''}>\r\n        <Card className=\"p-4\">\r\n          <CardHeader><h2 className=\"text-xl font-semibold flex items-center space-x-2\">\r\n            {title && (\r\n              <>\r\n                {icon === 'Facebook' ? (\r\n                  <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n                    <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n                  </svg>\r\n                ) : (\r\n                  <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n                    <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n                    <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n                    <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n                  </svg>\r\n                )}\r\n                <span>{title}</span>\r\n              </>\r\n            )}\r\n          </h2>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <p className=\"text-red-600 text-sm\">{errorMessage}</p>\r\n          </CardContent>\r\n        </Card>\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <section className={title ? 'mt-10' : ''}>\r\n      <h2 className=\"text-xl font-semibold mb-4 flex items-center space-x-2\">\r\n        {title && (\r\n          <>\r\n            {icon === 'Facebook' ? (\r\n              <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n                <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n              </svg>\r\n            ) : (\r\n              <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n                <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n                <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n                <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n              </svg>\r\n            )}\r\n            <span>{title}</span>\r\n          </>\r\n        )}\r\n      </h2>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-3\">\r\n        {isLoading\r\n          ? Array(metrics.length).fill(0).map((_, index) => <MetricCardSkeleton key={index} />)\r\n          : metrics.map((metric, index) => (\r\n            <>\r\n              <MetricCard key={index} label={metric.label} value={metric.value} date={date} icon={icon} tooltipContent={metric.tooltipContent} />\r\n            </>\r\n          ))\r\n        }\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AdAccountMetricsCard;\r\n\r\nexport const CampaignGrid = ({ campaigns, isLoading, icon }: { campaigns: (Campaign | GoogleCampaign)[], isLoading: boolean, icon: string }) => {\r\n  return isLoading ? (\r\n    <div>Loading...</div>\r\n  ) : (\r\n    <Card className=\" p-4 my-4  hover:border hover:border-blue-600\">\r\n      <div className='flex items-center space-x-2 mb-3'>\r\n        {icon === 'Facebook' ? (\r\n          <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n            <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n          </svg>\r\n        ) : (\r\n          <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\">\r\n            <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path>\r\n            <path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path>\r\n            <path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n          </svg>\r\n        )}\r\n        <h3 className=\"text-lg font-semibold\">Campaign Performance</h3>\r\n      </div>\r\n\r\n      {/* Wrapper for scrolling */}\r\n      <div className=\"overflow-x-auto max-h-[280px] overflow-y-auto\">\r\n        <table className=\"min-w-full table-auto border-collapse bg-white shadow-md rounded-lg\">\r\n          <thead>\r\n            <tr className=\"bg-gray-100 text-left text-sm font-medium text-gray-700 sticky top-0\">\r\n              <th className=\"px-6 py-3\">Campaign Name</th>\r\n              <th className=\"px-6 py-3 text-center\">Spend (₹)</th>\r\n              <th className=\"px-6 py-3 text-center\">ROAS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {campaigns.map((campaign: Campaign | GoogleCampaign, index) => {\r\n              const spendValue = parseFloat(String(campaign.spend));\r\n              let roas = null;\r\n              if (typeof campaign.purchase_roas === 'string') {\r\n                roas = campaign.purchase_roas;\r\n              } else if (Array.isArray(campaign.purchase_roas)) {\r\n                roas = campaign.purchase_roas[0]?.value;\r\n              }\r\n              const roasValue = roas ? parseFloat(String(roas)) : null;\r\n\r\n              return (\r\n                <tr\r\n                  key={index}\r\n                  className={`border-t text-sm ${index % 2 === 0 ? 'bg-gray-50' : 'bg-white'\r\n                    }`}\r\n                >\r\n                  <td className=\"px-6 py-3 line-clamp-2\" title={String(campaign.campaign_name)}>\r\n                    {campaign.campaign_name}\r\n                  </td>\r\n                  <td className=\"px-6 py-3 text-center text-gray-700 font-semibold\">\r\n                  ₹{spendValue.toFixed(2)}\r\n                  </td>\r\n                  <td className=\"px-6 py-3 text-center\">\r\n                    {roasValue !== null ? (\r\n                      <span className=\"inline-flex items-center rounded-full font-medium\">\r\n                        {roasValue.toFixed(2)}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"text-gray-500\">N/A</span>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\n","import * as React from \"react\"\r\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@radix-ui/react-icons\"\r\nimport { DayPicker } from \"react-day-picker\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  ...props\r\n}: CalendarProps) {\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"px-3\", className)}\r\n      classNames={{\r\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\r\n        month: \"space-y-4\",\r\n        caption: \"flex justify-center pt-1 relative items-center\",\r\n        caption_label: \"text-xs font-medium\",\r\n        nav: \"space-x-1 flex items-center\",\r\n        nav_button: cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\r\n        ),\r\n        nav_button_previous: \"absolute left-1\",\r\n        nav_button_next: \"absolute right-1\",\r\n        table: \"w-full border-collapse space-y-1\",\r\n        head_row: \"flex\",\r\n        head_cell: \"text-muted-foreground rounded-md w-7 font-normal text-[0.6rem]\",\r\n        row: \"flex w-full mt-2\",\r\n        cell: cn(\r\n          \"relative p-0 text-center text-[0.7rem] focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected].day-range-end)]:rounded-r-md\",\r\n          props.mode === \"range\"\r\n            ? \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"\r\n            : \"[&:has([aria-selected])]:rounded-md\",\r\n        ),\r\n        day: cn(buttonVariants({ variant: \"ghost\" }), \"h-7 w-7 p-0 font-normal aria-selected:opacity-100 text-[0.7rem]\"),\r\n        day_range_start: \"day-range-start\",\r\n        day_range_end: \"day-range-end\",\r\n        day_selected:\r\n          \"bg-black text-white hover:bg-black hover:text-white focus:bg-black focus:text-white\",\r\n        day_today: \"bg-accent text-accent-foreground\",\r\n        day_outside:\r\n          \"day-outside text-gray-400 opacity-50  aria-selected:bg-gray-400/50 aria-selected:text-accent-foreground aria-selected:opacity-30\",\r\n        day_disabled: \"text-accent-foreground opacity-50\",\r\n        day_range_middle:\r\n          \"aria-selected:bg-gray-100 aria-selected:text-accent-foreground\",\r\n        day_hidden: \"invisible\",\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        IconLeft: () => <ChevronLeftIcon className=\"h-4 w-4\" />,\r\n        IconRight: () => <ChevronRightIcon className=\"h-4 w-4\" />,\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nCalendar.displayName = \"Calendar\"\r\n\r\nexport { Calendar }\r\n","import * as React from \"react\"\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Popover = PopoverPrimitive.Root\r\n\r\nconst PopoverTrigger = PopoverPrimitive.Trigger\r\n\r\nconst PopoverAnchor = PopoverPrimitive.Anchor\r\n\r\nconst PopoverContent = React.forwardRef<\r\n  React.ElementRef<typeof PopoverPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\r\n>(({ className, align = \"start\", sideOffset = 4, ...props }, ref) => (\r\n  <PopoverPrimitive.Portal>\r\n    <PopoverPrimitive.Content\r\n      ref={ref}\r\n      align={align}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </PopoverPrimitive.Portal>\r\n))\r\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\r\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { cn } from \"@/lib/utils\"\nimport { CheckIcon } from \"@radix-ui/react-icons\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <CheckIcon className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface DateRange {\r\n  from?: string; // Primary date range start\r\n  to?: string;  // Primary date range end\r\n  compareFrom?: string; // Optional comparison date range start\r\n  compareTo?: string;   // Optional comparison date range end\r\n}\r\n\r\nconst initialState: DateRange = {\r\n  from: new Date(new Date().getFullYear(), new Date().getMonth(), 1).toISOString(),\r\n  to: new Date().toISOString(),\r\n};\r\n\r\n// Create the Redux slice\r\nconst dateSlice = createSlice({\r\n  name: \"date\",\r\n  initialState,\r\n  reducers: {\r\n    setDate: (state, action: PayloadAction<{\r\n      from?: string; \r\n      to?: string; \r\n      compareFrom?: string; \r\n      compareTo?: string;\r\n    }>) => {\r\n      // Update primary date range\r\n      state.from = action.payload.from;\r\n      state.to = action.payload.to;\r\n\r\n      // Update comparison date range\r\n      state.compareFrom = action.payload.compareFrom;\r\n      state.compareTo = action.payload.compareTo;\r\n    },\r\n    clearDate: (state) => {\r\n      // Reset to initial state\r\n      state.from = undefined;\r\n      state.to = undefined;\r\n      state.compareFrom = undefined;\r\n      state.compareTo = undefined;\r\n    },\r\n  },\r\n});\r\n\r\n// Export actions and reducer\r\nexport const { setDate, clearDate } = dateSlice.actions;\r\nexport default dateSlice.reducer;","import { useState, useMemo, useCallback } from \"react\"\r\nimport { createSelector } from \"@reduxjs/toolkit\"\r\nimport { CalendarIcon } from \"lucide-react\"\r\nimport { addDays, endOfYear, format, startOfYear, subDays, subMonths, subYears, parse } from \"date-fns\"\r\nimport type { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Calendar } from \"@/components/ui/calendar\"\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setDate, clearDate } from \"@/store/slices/DateSlice\"\r\nimport type { RootState } from \"@/store\"\r\n\r\ntype DatePickerWithRangeProps = {\r\n  defaultDate?: DateRange\r\n  resetToFirstPage?: () => void\r\n}\r\n\r\n// Memoized selector\r\nconst selectDateRange = createSelector(\r\n  (state: RootState) => state.date.from,\r\n  (state: RootState) => state.date.to,\r\n  (from, to) => ({\r\n    from,\r\n    to,\r\n  }),\r\n)\r\n\r\nexport function DatePickerWithRange({ defaultDate, resetToFirstPage }: DatePickerWithRangeProps) {\r\n  const dispatch = useDispatch()\r\n  const dateRange = useSelector(selectDateRange)\r\n\r\n  // Memoize the initial date\r\n  const initialDate = useMemo(() => {\r\n    if (dateRange) {\r\n      return {\r\n        from: dateRange.from ? new Date(dateRange.from) : undefined,\r\n        to: dateRange.to ? new Date(dateRange.to) : undefined,\r\n      }\r\n    }\r\n    return defaultDate\r\n      ? {\r\n          from: defaultDate.from ? new Date(defaultDate.from) : undefined,\r\n          to: defaultDate.to ? new Date(defaultDate.to) : undefined,\r\n        }\r\n      : undefined\r\n  }, [dateRange, defaultDate])\r\n\r\n  const [tempDate, setTempDate] = useState<DateRange | undefined>(initialDate)\r\n  const [compareDate, setCompareDate] = useState<DateRange | undefined>()\r\n  const [open, setOpen] = useState(false)\r\n  const [selectedPreset, setSelectedPreset] = useState<string | null>(null)\r\n  const [isCompareEnabled, setIsCompareEnabled] = useState(false)\r\n  const [calendarMode, setCalendarMode] = useState<'primary' | 'comparison'>('primary')\r\n\r\n  // Manual date input states\r\n  const [manualFromDate, setManualFromDate] = useState(\r\n    tempDate?.from ? format(tempDate.from, \"yyyy-MM-dd\") : \"\"\r\n  )\r\n  const [manualToDate, setManualToDate] = useState(\r\n    tempDate?.to ? format(tempDate.to, \"yyyy-MM-dd\") : \"\"\r\n  )\r\n  const [manualCompareFromDate, setManualCompareFromDate] = useState(\"\")\r\n  const [manualCompareToDate, setManualCompareToDate] = useState(\"\")\r\n\r\n  // Dates calculation\r\n  const dates = useMemo(() => {\r\n    const today = new Date()\r\n    const daysSinceSunday = today.getDay()\r\n    const startOfThisWeek = subDays(today, daysSinceSunday)\r\n    const endOfThisWeek = addDays(startOfThisWeek, 6)\r\n    const startOfThisMonth = new Date(today.getFullYear(), today.getMonth(), 1)\r\n    const endOfThisMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0)\r\n    const startOfLastWeek = subDays(startOfThisWeek, 7)\r\n    const endOfLastWeek = subDays(startOfThisWeek, 1)\r\n    const quarter = Math.floor(today.getMonth() / 3)\r\n    const startOfThisQuarter = new Date(today.getFullYear(), quarter * 3, 1)\r\n    const endOfThisQuarter = new Date(today.getFullYear(), (quarter + 1) * 3, 0)\r\n\r\n    const lastQuarter = today.getMonth() < 3 ? 3 : Math.floor((today.getMonth() - 3) / 3)\r\n    const lastQuarterYear = today.getMonth() < 3 ? today.getFullYear() - 1 : today.getFullYear()\r\n    const startOfLastQuarter = new Date(lastQuarterYear, lastQuarter * 3, 1)\r\n    const endOfLastQuarter = new Date(lastQuarterYear, (lastQuarter + 1) * 3, 0)\r\n\r\n    return {\r\n      today,\r\n      startOfThisWeek,\r\n      endOfThisWeek,\r\n      startOfThisMonth,\r\n      endOfThisMonth,\r\n      startOfLastWeek,\r\n      endOfLastWeek,\r\n      startOfThisQuarter,\r\n      endOfThisQuarter,\r\n      startOfLastQuarter,\r\n      endOfLastQuarter,\r\n    }\r\n  }, [])\r\n\r\n  // Date parsing utility\r\n  const parseManualDate = useCallback((dateString: string): Date | undefined => {\r\n    try {\r\n      const parsedDate = parse(dateString, \"yyyy-MM-dd\", new Date())\r\n      return !isNaN(parsedDate.getTime()) ? parsedDate : undefined\r\n    } catch {\r\n      return undefined\r\n    }\r\n  }, [])\r\n\r\n  // Handle manual date input for primary range\r\n  const handleManualDateInput = useCallback(() => {\r\n    const fromDate = parseManualDate(manualFromDate)\r\n    const toDate = parseManualDate(manualToDate)\r\n\r\n    if (fromDate && toDate) {\r\n      setTempDate({ from: fromDate, to: toDate })\r\n      setSelectedPreset(null)\r\n    }\r\n  }, [manualFromDate, manualToDate, parseManualDate])\r\n\r\n  // Handle manual date input for compare range\r\n  const handleManualCompareDateInput = useCallback(() => {\r\n    const fromDate = parseManualDate(manualCompareFromDate)\r\n    const toDate = parseManualDate(manualCompareToDate)\r\n\r\n    if (fromDate && toDate) {\r\n      setCompareDate({ from: fromDate, to: toDate })\r\n    }\r\n  }, [manualCompareFromDate, manualCompareToDate, parseManualDate])\r\n\r\n\r\n  // Preset range setter\r\n  const setPresetRange = useCallback((from: Date, to: Date) => {\r\n    if (calendarMode === 'primary') {\r\n      const newRange = { from, to }\r\n      setTempDate(newRange)\r\n      \r\n      // Update manual date inputs \r\n      setManualFromDate(format(from, \"yyyy-MM-dd\"))\r\n      setManualToDate(format(to, \"yyyy-MM-dd\"))\r\n    } else if (calendarMode === 'comparison') {\r\n      const newCompareRange = { from, to }\r\n      setCompareDate(newCompareRange)\r\n      \r\n      // Update comparison manual date inputs\r\n      setManualCompareFromDate(format(from, \"yyyy-MM-dd\"))\r\n      setManualCompareToDate(format(to, \"yyyy-MM-dd\"))\r\n    }\r\n    \r\n    setSelectedPreset(null)\r\n  }, [calendarMode])\r\n\r\n  // Presets\r\n  const presets = useMemo(\r\n    () => [\r\n      { label: \"Today\", fn: () => setPresetRange(dates.today, dates.today) },\r\n      { label: \"Yesterday\", fn: () => setPresetRange(subDays(dates.today, 1), subDays(dates.today, 1)) },\r\n      { label: \"This Week\", fn: () => setPresetRange(dates.startOfThisWeek, dates.endOfThisWeek) },\r\n      { label: \"Last 7 Days\", fn: () => setPresetRange(subDays(dates.today, 6), dates.today) },\r\n      { label: \"Last week\", fn: () => setPresetRange(dates.startOfLastWeek, dates.endOfLastWeek) },\r\n      { label: \"Last 30 Days\", fn: () => setPresetRange(subDays(dates.today, 29), dates.today) },\r\n      { label: \"This Month\", fn: () => setPresetRange(dates.startOfThisMonth, dates.today) },\r\n      { label: \"Last 3 Months\", fn: () => setPresetRange(subMonths(dates.today, 3), dates.today) },\r\n      { label: \"Last 6 Months\", fn: () => setPresetRange(subMonths(dates.today, 6), dates.today) },\r\n      { label: \"This Quarter\", fn: () => setPresetRange(dates.startOfThisQuarter, dates.endOfThisQuarter) },\r\n      { label: \"Last Quarter\", fn: () => setPresetRange(dates.startOfLastQuarter, dates.endOfLastQuarter) },\r\n      { label: \"This Year\", fn: () => setPresetRange(new Date(new Date().getFullYear(), 0, 1), dates.today) },\r\n      { label: \"Last 365 Days\", fn: () => setPresetRange(subDays(dates.today, 365), dates.today) },\r\n      {\r\n        label: \"Last Year\",\r\n        fn: () => setPresetRange(subYears(startOfYear(new Date()), 1), subYears(endOfYear(new Date()), 1)),\r\n      },\r\n    ],\r\n    [dates, setPresetRange],\r\n  )\r\n\r\n  // Calendar select handler\r\n  const handleCalendarSelect = useCallback((range: DateRange | undefined) => {\r\n    if (calendarMode === 'primary') {\r\n      if (range?.from && !range.to) {\r\n        setTempDate({ from: range.from, to: range.from })\r\n        // Update manual input for single date\r\n        setManualFromDate(format(range.from, \"yyyy-MM-dd\"))\r\n        setManualToDate(format(range.from, \"yyyy-MM-dd\"))\r\n      } else if (range?.from && range?.to && range.from > range.to) {\r\n        setTempDate({ from: range.from, to: range.from })\r\n        // Update manual input for single date\r\n        setManualFromDate(format(range.from, \"yyyy-MM-dd\"))\r\n        setManualToDate(format(range.from, \"yyyy-MM-dd\"))\r\n      } else if (range?.from && range?.to) {\r\n        setTempDate(range)\r\n        // Update manual inputs for range\r\n        setManualFromDate(format(range.from, \"yyyy-MM-dd\"))\r\n        setManualToDate(format(range.to, \"yyyy-MM-dd\"))\r\n      } else {\r\n        setTempDate(undefined)\r\n        // Clear manual inputs\r\n        setManualFromDate(\"\")\r\n        setManualToDate(\"\")\r\n      }\r\n      setSelectedPreset(null)\r\n    } else {\r\n      // Comparison date range handling\r\n      if (range?.from && !range.to) {\r\n        setCompareDate({ from: range.from, to: range.from })\r\n        // Update manual input for single date\r\n        setManualCompareFromDate(format(range.from, \"yyyy-MM-dd\"))\r\n        setManualCompareToDate(format(range.from, \"yyyy-MM-dd\"))\r\n      } else if (range?.from && range?.to && range.from > range.to) {\r\n        setCompareDate({ from: range.from, to: range.from })\r\n        // Update manual input for single date\r\n        setManualCompareFromDate(format(range.from, \"yyyy-MM-dd\"))\r\n        setManualCompareToDate(format(range.from, \"yyyy-MM-dd\"))\r\n      } else if (range?.from && range?.to) {\r\n        setCompareDate(range)\r\n        // Update manual inputs for range\r\n        setManualCompareFromDate(format(range.from, \"yyyy-MM-dd\"))\r\n        setManualCompareToDate(format(range.to, \"yyyy-MM-dd\"))\r\n      } else {\r\n        setCompareDate(undefined)\r\n        // Clear manual inputs\r\n        setManualCompareFromDate(\"\")\r\n        setManualCompareToDate(\"\")\r\n      }\r\n    }\r\n  }, [calendarMode])\r\n\r\n  // Date range formatter\r\n  const formatDateRange = useCallback(\r\n    (range: DateRange | undefined) => {\r\n      if (!range) {\r\n        return defaultDate && defaultDate.from && defaultDate.to\r\n          ? `${format(defaultDate.from, \"LLL dd, y\")} - ${format(defaultDate.to, \"LLL dd, y\")}`\r\n          : \"Pick a date\"\r\n      }\r\n      if (range.from) {\r\n        if (range.to) {\r\n          return `${format(range.from, \"LLL dd, y\")} - ${format(range.to, \"LLL dd, y\")}`\r\n        }\r\n        return format(range.from, \"LLL dd, y\")\r\n      }\r\n      return \"Pick a date\"\r\n    },\r\n    [defaultDate],\r\n  )\r\n\r\n  // Clear date range\r\n  const clearDateRange = useCallback(() => {\r\n    setTempDate(undefined)\r\n    setCompareDate(undefined)\r\n    setSelectedPreset(null)\r\n    setIsCompareEnabled(false)\r\n    setManualFromDate(\"\")\r\n    setManualToDate(\"\")\r\n    setManualCompareFromDate(\"\")\r\n    setManualCompareToDate(\"\")\r\n    dispatch(clearDate())\r\n    if (resetToFirstPage) {\r\n      resetToFirstPage()\r\n    }\r\n    setOpen(false)\r\n  }, [dispatch, resetToFirstPage])\r\n\r\n  // Update handler\r\n  const handleUpdate = useCallback(() => {\r\n    if (tempDate) {\r\n      dispatch(\r\n        setDate({\r\n          from: tempDate.from ? tempDate.from.toISOString() : undefined,\r\n          to: tempDate.to ? tempDate.to.toISOString() : undefined,\r\n          compareFrom: isCompareEnabled && compareDate?.from ? compareDate.from.toISOString() : undefined,\r\n          compareTo: isCompareEnabled && compareDate?.to ? compareDate.to.toISOString() : undefined,\r\n        }),\r\n      )\r\n    }\r\n    if (resetToFirstPage) {\r\n      resetToFirstPage()\r\n    }\r\n    setOpen(false)\r\n  }, [dispatch, resetToFirstPage, tempDate, compareDate, isCompareEnabled])\r\n\r\n  return (\r\n    <Popover open={open} onOpenChange={setOpen}>\r\n      <PopoverTrigger asChild>\r\n        <Button\r\n          variant=\"outline\"\r\n          className={cn(\r\n            \"w-[250px] justify-start text-left font-normal\",\r\n            !tempDate && !defaultDate && \"text-muted-foreground\",\r\n            \"hover:bg-muted/50 transition-colors rounded-lg border-muted-foreground/20\"\r\n          )}\r\n        >\r\n          <CalendarIcon className=\"mr-2 h-4 w-4 text-primary\" />\r\n          {formatDateRange(tempDate)}\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-auto p-0 max-w-[650px]\" align=\"start\">\r\n        <div className=\"flex flex-col md:flex-row\">\r\n          {/* Preset selection column */}\r\n          <div className=\"border-r p-3 w-full md:w-[150px] overflow-y-auto bg-gradient-to-b from-muted/50 to-muted/10\" style={{ maxHeight: \"400px\" }}>\r\n            <div className=\"space-y-1.5\">\r\n              <h1 className=\"text-sm pb-2 font-medium border-b border-border/50 text-primary\">Presets</h1>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-1 gap-1\">\r\n                {presets.map((preset) => (\r\n                  <Button\r\n                    key={preset.label}\r\n                    size=\"sm\"\r\n                    variant={selectedPreset === preset.label ? \"default\" : \"ghost\"}\r\n                    className={cn(\r\n                      \"w-full justify-start text-xs font-normal h-8 rounded-md\",\r\n                      selectedPreset === preset.label \r\n                        ? \"bg-primary text-primary-foreground\" \r\n                        : \"hover:bg-muted text-muted-foreground hover:text-foreground\",\r\n                    )}\r\n                    onClick={() => {\r\n                      preset.fn()\r\n                      setSelectedPreset(preset.label)\r\n                    }}\r\n                  >\r\n                    {preset.label}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Calendar and input section */}\r\n          <div className=\"p-3 flex-grow\">\r\n            <div className=\"flex items-center space-x-2 mb-3\">\r\n              <Checkbox \r\n                id=\"compare-toggle\"\r\n                checked={isCompareEnabled}\r\n                onCheckedChange={() => setIsCompareEnabled(!isCompareEnabled)}\r\n                className=\"text-primary\"\r\n              />\r\n              <label htmlFor=\"compare-toggle\" className=\"text-sm font-medium\">Compare with another period</label>\r\n            </div>\r\n\r\n            {/* Date Range Inputs */}\r\n            <div className=\"grid gap-3 mb-3\">\r\n              <div className=\"space-y-2\">\r\n                <h2 className=\"text-xs font-medium text-muted-foreground\">Primary Range</h2>\r\n                <div className=\"flex space-x-2\">\r\n                  <div className=\"flex-1 relative\">\r\n                    <Input \r\n                      placeholder=\"YYYY-MM-DD\" \r\n                      value={manualFromDate}\r\n                      onChange={(e) => setManualFromDate(e.target.value)}\r\n                      onBlur={handleManualDateInput}\r\n                      onClick={() => {\r\n                        setCalendarMode('primary')\r\n                      }}\r\n                      className=\"h-8 pl-10 text-xs rounded-md\"\r\n                    />\r\n                    <span className=\"absolute left-2 top-1/2 -translate-y-1/2 text-xs text-muted-foreground\">From</span>\r\n                  </div>\r\n                  <div className=\"flex-1 relative\">\r\n                    <Input \r\n                      placeholder=\"YYYY-MM-DD\" \r\n                      value={manualToDate}\r\n                      onChange={(e) => setManualToDate(e.target.value)}\r\n                      onBlur={handleManualDateInput}\r\n                      onClick={() => {\r\n                        setCalendarMode('primary')\r\n                      }}\r\n                      className=\"h-8 pl-10 text-xs rounded-md\"\r\n                    />\r\n                    <span className=\"absolute left-2 top-1/2 -translate-y-1/2 text-xs text-muted-foreground\">To</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Compare Date Range Inputs */}\r\n              {isCompareEnabled && (\r\n                <div className=\"space-y-2\">\r\n                  <h2 className=\"text-xs font-medium text-muted-foreground\">Comparison Range</h2>\r\n                  <div className=\"flex space-x-2\">\r\n                    <div className=\"flex-1 relative\">\r\n                      <Input \r\n                        placeholder=\"YYYY-MM-DD\" \r\n                        value={manualCompareFromDate}\r\n                        onChange={(e) => setManualCompareFromDate(e.target.value)}\r\n                        onBlur={handleManualCompareDateInput}\r\n                        onClick={() => {\r\n                          setCalendarMode('comparison')\r\n                        }}\r\n                        className=\"h-8 pl-10 text-xs rounded-md\"\r\n                      />\r\n                      <span className=\"absolute left-2 top-1/2 -translate-y-1/2 text-xs text-muted-foreground\">From</span>\r\n                    </div>\r\n                    <div className=\"flex-1 relative\">\r\n                      <Input \r\n                        placeholder=\"YYYY-MM-DD\" \r\n                        value={manualCompareToDate}\r\n                        onChange={(e) => setManualCompareToDate(e.target.value)}\r\n                        onBlur={handleManualCompareDateInput}\r\n                        onClick={() => {\r\n                          setCalendarMode('comparison')\r\n                        }}\r\n                        className=\"h-8 pl-10 text-xs rounded-md\"\r\n                      />\r\n                      <span className=\"absolute left-2 top-1/2 -translate-y-1/2 text-xs text-muted-foreground\">To</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n\r\n            {/* Calendar */}\r\n            <div className=\"border rounded-lg p-2 bg-background/80 shadow-sm\">\r\n              <Calendar\r\n                initialFocus\r\n                mode=\"range\"\r\n                defaultMonth={\r\n                  calendarMode === 'primary' \r\n                    ? (tempDate?.from || defaultDate?.from || dates.today)\r\n                    : (compareDate?.from || dates.today)\r\n                }\r\n                selected={calendarMode === 'primary' ? tempDate : compareDate}\r\n                onSelect={handleCalendarSelect}\r\n                numberOfMonths={2}\r\n                disabled={(date) =>\r\n                  date > new Date() || date < new Date(\"2023-01-01\")\r\n                }\r\n                className=\"rounded-md\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Action Buttons */}\r\n        <div className=\"border-t p-2 flex justify-end gap-2 bg-muted/10\">\r\n          <Button \r\n            variant=\"outline\" \r\n            size=\"sm\" \r\n            onClick={clearDateRange}\r\n            className=\"rounded-md h-8 text-xs\"\r\n          >\r\n            Clear\r\n          </Button>\r\n          <Button \r\n            size=\"sm\" \r\n            onClick={handleUpdate}\r\n            className=\"rounded-md h-8 text-xs bg-primary hover:bg-primary/90\"\r\n          >\r\n            Apply\r\n          </Button>\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}\r\n\r\n","export interface TutorialStep {\r\n    element: string;\r\n    popover: {\r\n        title: string;\r\n        description: string;\r\n        position?: 'top' | 'bottom' | 'left' | 'right' | 'auto';\r\n    };\r\n}\r\n\r\nexport interface TutorialDefinition {\r\n    id: string;\r\n    title: string;\r\n    description?: string;\r\n    route: string | RegExp;  // The route where this tutorial is applicable\r\n    componentId?: string; // Component identifier (optional)\r\n    steps?: TutorialStep[]; // Steps can be defined here or in the steps map\r\n    relatedTutorials?: string[]; // IDs of tutorials that should run after this one\r\n    priority?: number; // Higher priority tutorials will run first (default: 0)\r\n}\r\n\r\n// List of all available tutorials\r\nexport const availableTutorials: TutorialDefinition[] = [\r\n    {\r\n        id: 'business-performance',\r\n        title: 'Business Performance',\r\n        route: '/dashboard',\r\n        description: 'Period wise Metrics Performance',\r\n    },\r\n    {\r\n        id: 'report-tab',\r\n        title: 'Report Tab',\r\n        route: /^\\/conversion-reports\\/[a-zA-Z0-9]+\\/demographics$/,\r\n        description: 'Choose the Reports you want. Tap one any of the report and you will redirect to that report',\r\n        priority: 2, // Higher priority - will run first,\r\n        relatedTutorials:['age-conversion-report']\r\n    },\r\n    {\r\n        id: 'age-conversion-report',\r\n        title: 'Age Conversion Report',\r\n        description: 'Understanding the age conversion report',\r\n        route: /^\\/conversion-reports\\/[a-zA-Z0-9]+\\/demographics$/,\r\n        componentId: 'age-report',\r\n        priority: 1, \r\n    },\r\n    { \r\n        id: 'marketing-insights',\r\n        title: 'Marketing Insights',\r\n        description: 'Understanding the marketing insights iver different months',\r\n        route: /^\\/ad-metrics\\/[a-zA-Z0-9]+$/,\r\n    }\r\n];\r\n\r\n// Map tutorial steps by tutorial ID\r\nexport const tutorialStepsMap: Record<string, TutorialStep[]> = {\r\n'business-performance': [\r\n    {\r\n        element: '#analytics-section',\r\n        popover: {\r\n            title: 'Analytics Overview',\r\n            description: 'This section provides key business metrics such as Sessions, Cart Additions, Checkouts, and Purchases.',\r\n            position: 'top'\r\n        }\r\n    },\r\n    {\r\n        element: '#sessions-metric',\r\n        popover: {\r\n            title: 'Sessions Overview',\r\n            description: `This section shows the total number of sessions on your website:\\n\r\n            - Yesterday: Displays the total sessions for yesterday and its comparison to the previous day.\\n\r\n            - Last 7 Days: Aggregates data for the last 7 days and compares it with the previous 7-day period.\\n\r\n            - Last 30 Days: Shows trends over the last month, compared with the previous 30-day period.`,\r\n            position: 'bottom'\r\n        }\r\n    }\r\n]\r\n,\r\n    'report-tab':[\r\n        {\r\n            element: '#report-tab',\r\n            popover: {\r\n                title: 'Report Tab',\r\n                description: 'Choose the Reports you want. Tap one any of the report and you will redirect to that report',\r\n                position: 'bottom'\r\n            }\r\n        },\r\n    ],\r\n    'age-conversion-report': [\r\n        {\r\n            element: '#age-report',\r\n            popover: {\r\n                title: 'Age based Report',\r\n                description: 'Review detailed monthly conversion numbers for each age group here.',\r\n                position: 'top'\r\n            }\r\n        },\r\n        {\r\n            element: '#age-report-performance',\r\n            popover: {\r\n                title: 'Key Performers',\r\n                description: 'These metrics highlight your best and worst performing age segments.',\r\n                position: 'left'\r\n            }\r\n        },\r\n        {\r\n            element: '#age-report-table',\r\n            popover: {\r\n                title: 'Detailed Data',\r\n                description: 'Analyze session counts, conversion rates, and purchase trends for different age groups over time.',\r\n                position: 'top'\r\n            }\r\n        },\r\n        {\r\n            element: \"#refresh\",\r\n            popover: {\r\n                title: \"Refresh for Updated Values\",\r\n                description: \"Refresh to see the latest performance metrics for different age segments\",\r\n                position: 'bottom',\r\n            },\r\n        },\r\n        {\r\n            element: \"#filters\",\r\n            popover: {\r\n                title: \"Filter Your Data\",\r\n                description:\r\n                    \"Use filters to refine your data by selecting a metric, condition, and value. Click 'Add Filter' to apply.\",\r\n                position: \"bottom\",\r\n            },\r\n        },\r\n        {\r\n            element: \"#download-button\",\r\n            popover: {\r\n                title: \"Download Your Excel Report\",\r\n                description: \"Click to download the report as an Excel file for further analysis.\",\r\n                position: \"bottom\",\r\n            }\r\n        },\r\n        {\r\n            element: \"#expand-button\",\r\n            popover: {\r\n                title: \"Expand the Table for a Better View\",\r\n                description: \"Click to enlarge the table for easier data analysis and readability.\",\r\n                position: \"bottom\",\r\n            }\r\n        }\r\n    ],\r\n    'marketing-insights': [\r\n        {\r\n            element: '#metrics-table',\r\n            popover: {\r\n                title: 'Monthly Performance Overview',\r\n                description: 'This table displays key performance metrics for each month over the last two years, including ad spend, sales, and ROAS for Meta, Google, and Shopify.',\r\n                position: 'left'\r\n            }\r\n        },\r\n        {\r\n            element: '#expand-month',\r\n            popover: {\r\n                title: 'Expand to View Daily Breakdown',\r\n                description: 'Click on a month to expand and see the daily breakdown of ad performance metrics.',\r\n                position: 'top'\r\n            }\r\n        }\r\n    ],\r\n    // Define more tutorial steps as needed\r\n};\r\n\r\n// Helper to get all tutorials for a given path\r\nexport const getTutorialsForPath = (path: string): TutorialDefinition[] => {\r\n    return availableTutorials\r\n        .filter(tutorial => {\r\n            if (typeof tutorial.route === 'string') {\r\n                return tutorial.route === path;\r\n            } else {\r\n                return tutorial.route.test(path);\r\n            }\r\n        })\r\n        .sort((a, b) => (b.priority || 0) - (a.priority || 0)); // Sort by priority\r\n};\r\n\r\n// Helper to get tutorial steps by tutorial ID\r\nexport const getTutorialSteps = (tutorialId: string): TutorialStep[] => {\r\n    const tutorial = getTutorialById(tutorialId);\r\n\r\n    // If tutorial has steps defined in its definition, use those\r\n    if (tutorial?.steps && tutorial.steps.length > 0) {\r\n        return tutorial.steps;\r\n    }\r\n\r\n    // Otherwise check the steps map\r\n    return tutorialStepsMap[tutorialId] || [];\r\n};\r\n\r\n// Helper to get a specific tutorial by ID\r\nexport const getTutorialById = (id: string): TutorialDefinition | undefined => {\r\n    return availableTutorials.find(tutorial => tutorial.id === id);\r\n};\r\n\r\n// Helper to get related tutorials (tutorials that should run after this one)\r\nexport const getRelatedTutorials = (tutorialId: string): string[] => {\r\n    const tutorial = getTutorialById(tutorialId);\r\n    return tutorial?.relatedTutorials || [];\r\n};\r\n\r\n// Helper to get component-specific tutorials for a path\r\nexport const getComponentTutorials = (path: string, componentId: string): TutorialDefinition[] => {\r\n    return availableTutorials\r\n        .filter(tutorial => {\r\n            const routeMatches = typeof tutorial.route === 'string'\r\n                ? tutorial.route === path\r\n                : tutorial.route.test(path);\r\n\r\n            return routeMatches && tutorial.componentId === componentId;\r\n        })\r\n        .sort((a, b) => (b.priority || 0) - (a.priority || 0)); // Sort by priority\r\n};\r\n\r\n// Helper to get all tutorials for the current path in the correct order\r\nexport const getAllTutorialsForPath = (path: string): TutorialDefinition[] => {\r\n    // Get tutorials that match the current path\r\n    const pageTutorials = getTutorialsForPath(path);\r\n    \r\n    // Sort them by priority (higher priority first)\r\n    const sortedTutorials = [...pageTutorials].sort((a, b) => \r\n        (b.priority || 0) - (a.priority || 0)\r\n    );\r\n    \r\n    // Create a map to store unique tutorials\r\n    const tutorialMap = new Map<string, TutorialDefinition>();\r\n    \r\n    // Process a tutorial and its related tutorials\r\n    const processTutorial = (tutorial: TutorialDefinition) => {\r\n        // Skip if already processed\r\n        if (tutorialMap.has(tutorial.id)) {\r\n            return;\r\n        }\r\n        \r\n        // Add the tutorial to our map\r\n        tutorialMap.set(tutorial.id, tutorial);\r\n        \r\n        // Process related tutorials\r\n        if (tutorial.relatedTutorials && tutorial.relatedTutorials.length > 0) {\r\n            for (const relatedId of tutorial.relatedTutorials) {\r\n                const relatedTutorial = getTutorialById(relatedId);\r\n                if (relatedTutorial) {\r\n                    processTutorial(relatedTutorial);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    // Process all tutorials\r\n    for (const tutorial of sortedTutorials) {\r\n        processTutorial(tutorial);\r\n    }\r\n    \r\n    // Convert map to array, preserving the original priority order\r\n    const result = Array.from(tutorialMap.values());\r\n    \r\n    // Add debugging log\r\n    console.log('Available tutorials:', result.map(t => t.id).join(', '));\r\n    \r\n    return result;\r\n};\r\n\r\n// Create a route map for quick lookup\r\nexport const tutorialRouteMap: Record<string, string | RegExp> = {};\r\navailableTutorials.forEach(tutorial => {\r\n    tutorialRouteMap[tutorial.id] = tutorial.route;\r\n});","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface TutorialState {\r\n  isFirstTimeLogin: boolean;\r\n  activeTutorial: string | null;\r\n  isTutorialActive: boolean;\r\n  activeTutorialStep: number;\r\n  tutorialQueue: string[]; // Array of tutorial IDs to play in sequence\r\n  completedTutorials: Record<string, boolean>;\r\n}\r\n\r\nconst initialState: TutorialState = {\r\n  isFirstTimeLogin: false,\r\n  activeTutorial: null,\r\n  isTutorialActive: false,\r\n  activeTutorialStep: 0,\r\n  tutorialQueue: [],\r\n  completedTutorials: {}\r\n};\r\n\r\nconst tutorialSlice = createSlice({\r\n  name: 'tutorial',\r\n  initialState,\r\n  reducers: {\r\n    // Set first-time login status\r\n    setFirstTimeLogin: (state, action: PayloadAction<boolean>) => {\r\n      state.isFirstTimeLogin = action.payload;\r\n    },\r\n\r\n    // Queue multiple tutorials to play in sequence\r\n    queueTutorials: (state, action: PayloadAction<string[]>) => {\r\n      // Filter out tutorials that are already in the queue or are the active tutorial\r\n      const newTutorials = action.payload.filter(id => \r\n        !state.tutorialQueue.includes(id) && id !== state.activeTutorial\r\n      );\r\n      \r\n      if (newTutorials.length === 0) {\r\n        console.log('No new tutorials to queue');\r\n        return;\r\n      }\r\n      \r\n      // Add new tutorials to the beginning of the queue\r\n      state.tutorialQueue = [...newTutorials, ...state.tutorialQueue];\r\n      console.log(`Queued tutorials: ${newTutorials.join(', ')}, Queue is now: ${state.tutorialQueue.join(', ')}`);\r\n      \r\n      // If no tutorial is active, start the first one in queue\r\n      if (!state.isTutorialActive && state.tutorialQueue.length > 0) {\r\n        state.activeTutorial = state.tutorialQueue[0];\r\n        state.tutorialQueue = state.tutorialQueue.slice(1);\r\n        state.isTutorialActive = true;\r\n        state.activeTutorialStep = 0;\r\n        console.log(`Auto-starting tutorial: ${state.activeTutorial}`);\r\n      }\r\n    },\r\n\r\n    // Start a specific tutorial\r\n    startTutorial: (state, action: PayloadAction<string>) => {\r\n      state.activeTutorial = action.payload;\r\n      state.isTutorialActive = true;\r\n      state.activeTutorialStep = 0;\r\n      console.log(`Manually starting tutorial: ${action.payload}`);\r\n    },\r\n\r\n    // Move to the next tutorial in queue\r\n    nextTutorial: (state) => {\r\n      // Mark current tutorial as completed if one is active\r\n      if (state.activeTutorial) {\r\n        state.completedTutorials[state.activeTutorial] = true;\r\n        console.log(`Completed tutorial: ${state.activeTutorial}`);\r\n      }\r\n      \r\n      console.log(`nextTutorial called, queue length: ${state.tutorialQueue.length}, queue: [${state.tutorialQueue.join(', ')}]`);\r\n      \r\n      // Check if there are more tutorials in queue\r\n      if (state.tutorialQueue.length > 0) {\r\n        state.activeTutorial = state.tutorialQueue[0];\r\n        state.tutorialQueue = state.tutorialQueue.slice(1);\r\n        state.activeTutorialStep = 0;\r\n        state.isTutorialActive = true;\r\n        \r\n        console.log(`Starting next tutorial: ${state.activeTutorial}, remaining queue: [${state.tutorialQueue.join(', ')}]`);\r\n      } else {\r\n        // No more tutorials, stop the tutorial mode\r\n        state.activeTutorial = null;\r\n        state.isTutorialActive = false;\r\n        \r\n        console.log('No more tutorials in queue, stopping tutorial mode');\r\n      }\r\n    },\r\n\r\n    // Update current step in the active tutorial\r\n    setTutorialStep: (state, action: PayloadAction<number>) => {\r\n      state.activeTutorialStep = action.payload;\r\n    },\r\n\r\n    // Stop current tutorial and clear queue\r\n    stopTutorial: (state) => {\r\n      // Mark current tutorial as completed if there is one active\r\n      if (state.activeTutorial) {\r\n        state.completedTutorials[state.activeTutorial] = true;\r\n        console.log(`Tutorial stopped, marking ${state.activeTutorial} as completed`);\r\n      }\r\n      \r\n      state.isTutorialActive = false;\r\n      state.activeTutorial = null;\r\n      state.tutorialQueue = [];\r\n      state.activeTutorialStep = 0;\r\n      \r\n      console.log('Tutorial stopped, queue cleared');\r\n    },\r\n\r\n    // Complete first-time login\r\n    completeFirstTimeLogin: (state) => {\r\n      state.isFirstTimeLogin = false;\r\n    },\r\n    \r\n    // Reset tutorial for a specific ID\r\n    resetTutorial: (state, action: PayloadAction<string>) => {\r\n      if (state.completedTutorials[action.payload]) {\r\n        state.completedTutorials[action.payload] = false;\r\n      }\r\n    },\r\n    \r\n    // Reset all tutorials\r\n    resetAllTutorials: (state) => {\r\n      state.completedTutorials = {};\r\n    }\r\n  }\r\n});\r\n\r\n// Export actions\r\nexport const { \r\n  setFirstTimeLogin, \r\n  queueTutorials,\r\n  startTutorial, \r\n  nextTutorial,\r\n  setTutorialStep,\r\n  stopTutorial, \r\n  completeFirstTimeLogin,\r\n  resetTutorial,\r\n  resetAllTutorials\r\n} = tutorialSlice.actions;\r\n\r\nexport default tutorialSlice.reducer;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { RootState } from '@/store';\r\nimport { queueTutorials } from '@/store/slices/TutorialSlice';\r\nimport { getAllTutorialsForPath } from './TutorialConfig';\r\n\r\ninterface TutorialButtonProps {\r\n  className?: string;\r\n  buttonText?: string;\r\n  variant?: 'primary' | 'secondary' | 'outline';\r\n  componentId?: string;\r\n  tutorialId?: string;\r\n  position?: 'header' | 'inline'; // Position determines behavior\r\n}\r\n\r\nconst TutorialButton: React.FC<TutorialButtonProps> = ({\r\n  className = '',\r\n  buttonText = 'Start Tutorial',\r\n  variant = 'primary',\r\n  componentId,\r\n  tutorialId,\r\n  position = 'inline',\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const currentPath = location.pathname;\r\n  \r\n  const isTutorialActive = useSelector((state: RootState) => state.tutorials.isTutorialActive);\r\n\r\n  const handleStartTutorial = () => {\r\n    // If a specific tutorial ID is provided, queue just that tutorial\r\n    if (tutorialId) {\r\n      dispatch(queueTutorials([tutorialId]));\r\n      return;\r\n    }\r\n    \r\n    // For header button or general page tutorial button, \r\n    // get all tutorials for the current path\r\n    const allTutorials = getAllTutorialsForPath(currentPath);\r\n    const tutorialIds = allTutorials.map(tutorial => tutorial.id);\r\n    \r\n    // If we're in \"header\" mode, queue all tutorials\r\n    if (position === 'header') {\r\n      if (tutorialIds.length > 0) {\r\n        dispatch(queueTutorials(tutorialIds));\r\n      } else {\r\n        console.warn(`No tutorials found for path ${currentPath}`);\r\n      }\r\n      return;\r\n    }\r\n    \r\n    // For component-specific buttons, filter by componentId if provided\r\n    if (componentId) {\r\n      const componentTutorials = allTutorials\r\n        .filter(tutorial => tutorial.componentId === componentId)\r\n        .map(tutorial => tutorial.id);\r\n      \r\n      if (componentTutorials.length > 0) {\r\n        dispatch(queueTutorials(componentTutorials));\r\n      } else {\r\n        console.warn(`No tutorials found for component ${componentId} on path ${currentPath}`);\r\n      }\r\n      return;\r\n    }\r\n    \r\n    // Default: queue all tutorials for this path\r\n    if (tutorialIds.length > 0) {\r\n      dispatch(queueTutorials(tutorialIds));\r\n    } else {\r\n      console.warn(`No tutorials found for path ${currentPath}`);\r\n    }\r\n  };\r\n\r\n  // Determine button styling based on variant\r\n  const buttonStyles = {\r\n    primary: 'bg-blue-500 hover:bg-blue-600 text-white',\r\n    secondary: 'bg-gray-500 hover:bg-gray-600 text-white',\r\n    outline: 'border border-blue-500 text-blue-500 hover:bg-blue-50'\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={handleStartTutorial}\r\n      disabled={isTutorialActive}\r\n      className={`px-4 py-2 rounded-md ${buttonStyles[variant]} ${className} ${isTutorialActive ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n    >\r\n      {buttonText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TutorialButton;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { RootState } from '@/store';\r\nimport { getAllTutorialsForPath } from './TutorialConfig';\r\nimport TutorialButton from './TutorialButton';\r\n\r\nconst HeaderTutorialButton: React.FC = () => {\r\n  const location = useLocation();\r\n  const currentPath = location.pathname;\r\n  \r\n  const isTutorialActive = useSelector((state: RootState) => state.tutorials.isTutorialActive);\r\n  const completedTutorials = useSelector((state: RootState) => state.tutorials.completedTutorials || {});\r\n  \r\n  // Check if there are any tutorials for the current path\r\n  const availableTutorials = getAllTutorialsForPath(currentPath);\r\n  const hasTutorials = availableTutorials.length > 0;\r\n  \r\n  // Check if all tutorials are completed\r\n  const allCompleted = hasTutorials && \r\n    availableTutorials.every(tutorial => completedTutorials[tutorial.id]);\r\n  \r\n  // Don't show the button if there are no tutorials or if a tutorial is active\r\n  if (!hasTutorials || isTutorialActive) {\r\n    return null;\r\n  }\r\n  \r\n  return (\r\n    <TutorialButton\r\n      buttonText={allCompleted ? \"Replay Tutorial\" : \"Start Tutorial\"}\r\n      variant=\"outline\"\r\n      position=\"header\"\r\n      className=\"ml-2\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default HeaderTutorialButton;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport type LocaleType = \"en-IN\" | \"en-US\";\r\n\r\n\r\ninterface LocaleState {\r\n  locale: LocaleType;\r\n}\r\n\r\n\r\nconst initialState: LocaleState = {\r\n  locale: \"en-IN\"\r\n};\r\n\r\n// Create the slice\r\nconst localeSlice = createSlice({\r\n  name: 'locale',\r\n  initialState,\r\n  reducers: {\r\n    setLocale: (state, action: PayloadAction<LocaleType>) => {\r\n      state.locale = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setLocale } = localeSlice.actions;\r\n\r\nexport default localeSlice.reducer;","import { Settings, RefreshCw} from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { DatePickerWithRange } from \"./DatePickerWithRange\";\r\nimport { Popover, PopoverTrigger, PopoverContent } from \"@/components/ui/popover\";\r\nimport HeaderTutorialButton from \"../Tutorial/HeaderTutorialButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLocale } from \"@/store/slices/LocalSlice\";\r\nimport { RootState } from \"@/store\";\r\n\r\ninterface HeaderProps {\r\n  title: string;\r\n  Icon: React.ComponentType<{ className?: string }>;\r\n  showDatePicker?: boolean;\r\n  showSettings?: boolean;\r\n  showRefresh?: boolean;\r\n  isLoading?: boolean;\r\n  handleManualRefresh?: () => void;\r\n}\r\n \r\nexport default function Header({\r\n  title,\r\n  Icon,\r\n  showDatePicker = false,\r\n  showSettings = false,\r\n  showRefresh = false,\r\n  isLoading = false,\r\n  handleManualRefresh,\r\n}: HeaderProps) {\r\n\r\n  const dispatch = useDispatch();\r\n  const locale = useSelector((state: RootState) => state.locale.locale);\r\n\r\n  return (\r\n    <header className=\"sticky top-0 z-40 bg-white border-b px-6 py-3 transition-all duration-300\">\r\n      <div className=\"flex items-center justify-between\">\r\n        {/* Left Section */}\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"rounded-lg bg-secondary p-2 transition-transform duration-300 ease-in-out hover:scale-110\">\r\n            <Icon className=\"h-6 w-6 text-secondary-foreground\" />\r\n          </div>\r\n          <h1 className=\"text-2xl font-semibold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-secondary-foreground to-primary\">\r\n            {title}\r\n          </h1>\r\n        </div>\r\n\r\n        {/* Right Section */}\r\n        <div className=\"flex flex-row items-center space-x-2\">\r\n          {showDatePicker && (\r\n            <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n              <DatePickerWithRange\r\n                defaultDate={{\r\n                  from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                  to: new Date()\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {showRefresh && (\r\n            <div className=\"md:flex items-center hidden\">\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} className=\"flex items-center\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? \"animate-spin\" : \"\"}`} />\r\n              </Button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Rest of the component remains the same */}\r\n          {showSettings && (\r\n            <Popover>\r\n              <PopoverTrigger asChild>\r\n                <Button variant=\"outline\" size=\"icon\">\r\n                  <Settings className=\"h-4 w-4\" />\r\n                </Button>\r\n              </PopoverTrigger>\r\n              <PopoverContent>\r\n                <div className=\"grid gap-2\">\r\n                  <h3 className=\"font-medium\">Locale Settings</h3>\r\n                  <div className=\"flex flex-col space-y-2\">\r\n                    <label className=\"cursor-pointer\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"locale\"\r\n                        value=\"en-IN\"\r\n                        checked={locale === \"en-IN\"}\r\n                        onChange={() => dispatch(setLocale(\"en-IN\"))}\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Indian Formatting\r\n                    </label>\r\n                    <label className=\"cursor-pointer\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"locale\"\r\n                        value=\"en-US\"\r\n                        checked={locale === \"en-US\"}\r\n                        onChange={() => dispatch(setLocale(\"en-US\"))}\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Western Formatting\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </PopoverContent>\r\n            </Popover>\r\n          )}\r\n          <HeaderTutorialButton />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}","import { useEffect, useState } from \"react\"\r\nimport { CheckCircle } from \"lucide-react\"\r\n\r\nexport default function Loader({ isLoading }: { isLoading: boolean }) {\r\n  const [progress, setProgress] = useState(0)\r\n  const [messageIndex, setMessageIndex] = useState(0)\r\n  const [isComplete, setIsComplete] = useState(false)\r\n\r\n  // Loading messages\r\n  const loadingMessages = [\r\n    \"Just a moment, we're getting things ready...\",\r\n    \"Almost there, hang tight!\",\r\n    \"Brewing some magic for you...\",\r\n    \"The best things are worth waiting for...\",\r\n    \"Gathering all the awesome stuff...\",\r\n    \"Just putting on the finishing touches...\",\r\n    \"We're working our digital magic...\",\r\n    \"Your experience is being crafted...\",\r\n    \"Just a few more seconds of patience...\",\r\n    \"You're going to love what's coming...\",\r\n  ]\r\n\r\n  useEffect(() => {\r\n    // Progress bar animation - stops at 95% until loading is complete\r\n    const progressInterval = setInterval(() => {\r\n      setProgress((prev) => {\r\n        // Cap at 95% during loading\r\n        if (isLoading && prev >= 95) {\r\n          return 95;\r\n        }\r\n        \r\n        // Jump to 100% when loading completes\r\n        if (!isLoading && prev < 100) {\r\n          clearInterval(progressInterval);\r\n          setProgress(100);\r\n          setTimeout(() => {\r\n            setIsComplete(true);\r\n          }, 300);\r\n          return 100;\r\n        }\r\n        \r\n        // Normal progress increase\r\n        if (prev < 95) {\r\n          return prev + 1;\r\n        }\r\n        \r\n        return prev;\r\n      });\r\n    }, 80);\r\n\r\n\r\n    // Message changing animation\r\n    const messageInterval = setInterval(() => {\r\n      if (!isComplete) {\r\n        setMessageIndex((prev) => (prev + 1) % loadingMessages.length);\r\n      }\r\n    }, 2500);\r\n\r\n    return () => {\r\n      clearInterval(progressInterval);\r\n      clearInterval(messageInterval);\r\n    };\r\n  }, [isLoading, isComplete]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center bg-white text-black text-center px-4 z-50 min-h-screen\">\r\n      {/* Animated Text */}\r\n      <div className=\"h-20 flex items-center justify-center mb-6 overflow-hidden\">\r\n        <h3 key={messageIndex} className=\"text-xl font-medium text-black/80 animate-fadeIn\">\r\n          {isComplete ? \"Ready!\" : loadingMessages[messageIndex]}\r\n        </h3>\r\n      </div>\r\n\r\n      {/* Progress Bar Container */}\r\n      <div className=\"relative w-full max-w-md mx-auto mb-4\">\r\n        <div className=\"h-2 bg-gray-100 rounded-full overflow-hidden\">\r\n          <div\r\n            className=\"h-full bg-primary rounded-full transition-all duration-300 ease-out\"\r\n            style={{ width: `${progress}%` }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Percentage */}\r\n      <div className=\"flex justify-between items-center text-sm text-gray-500 font-mono mb-8 w-full max-w-md\">\r\n        <span>Loading</span>\r\n        <span>{progress}%</span>\r\n      </div>\r\n\r\n      {/* Success Message */}\r\n      {isComplete && (\r\n        <div className=\"mt-6 animate-fadeIn\">\r\n          <div className=\"text-xl font-medium text-primary flex items-center justify-center gap-2\">\r\n            <CheckCircle className=\"w-5 h-5\" />\r\n            <span>You've arrived! Welcome.</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* CSS for animations */}\r\n      <style>{`\r\n        @keyframes fadeIn {\r\n          from { opacity: 0; }\r\n          to { opacity: 1; }\r\n        }\r\n        \r\n        .animate-fadeIn {\r\n          animation: fadeIn 0.5s ease-in forwards;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  )\r\n}","import React, { createContext, useContext, useState } from \"react\";\r\n\r\ninterface TokenErrorContextType {\r\n  tokenError: boolean;\r\n  setTokenError: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst TokenErrorContext = createContext<TokenErrorContextType>({\r\n  tokenError: false,\r\n  setTokenError: () => {}\r\n});\r\n\r\nexport const TokenErrorProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [tokenError, setTokenError] = useState(false);\r\n\r\n  return (\r\n    <TokenErrorContext.Provider value={{ tokenError, setTokenError }}>\r\n      {children}\r\n    </TokenErrorContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTokenError = () => useContext(TokenErrorContext);\r\n","import axios, { AxiosInstance, AxiosError} from 'axios';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTokenError } from \"@/context/TokenErrorContext\";\r\n\r\n/**\r\n * Creates a custom Axios instance with cancelable requests.\r\n * @returns {AxiosInstance} Configured Axios instance.\r\n */\r\nconst createAxiosInstance = (): AxiosInstance => {\r\n\r\n    const navigate = useNavigate();\r\n    const { setTokenError } = useTokenError();\r\n\r\n  const axiosInstance: AxiosInstance = axios.create({\r\n    baseURL: import.meta.env.PROD\r\n      ? import.meta.env.VITE_API_URL as string\r\n      : import.meta.env.VITE_LOCAL_API_URL as string,\r\n    withCredentials: true, \r\n  });\r\n\r\n\r\n  // Add a response interceptor\r\n  axiosInstance.interceptors.response.use(\r\n    (response) => response,\r\n    (error: AxiosError) => {\r\n      if (error.response?.status === 401) {\r\n    \r\n          localStorage.removeItem('user');\r\n          navigate('/');\r\n        \r\n      }else if (error.response?.status === 403) {\r\n        setTokenError(true);\r\n      }\r\n      return Promise.reject(error); \r\n    }\r\n  );\r\n\r\n  return axiosInstance;\r\n};\r\n\r\nexport default createAxiosInstance;","import { useState, useEffect, useCallback, useMemo } from 'react'\r\nimport { format } from \"date-fns\"\r\nimport { Blend, LineChart } from \"lucide-react\"\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from \"axios\"\r\nimport AdAccountMetricsCard from \"./AdAccountsMetricsCard.tsx\"\r\nimport { AdAccountData, GoogleAdAccountData } from '@/pages/Dashboard/interfaces.ts'\r\nimport Header from '@/components/dashboard_component/Header.tsx';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store/index.ts';\r\nimport Loader from '@/components/dashboard_component/loader.tsx';\r\nimport createAxiosInstance from '../ConversionReportPage/components/axiosInstance.ts';\r\nimport { GoogleLogo } from '@/data/logo.tsx';\r\n\r\nexport default function Dashboard() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fbAdAccountsMetrics, setFbAdAccountsMetrics] = useState<AdAccountData[]>([]);\r\n  const [googleAdMetrics, setGoogleAdMetrics] = useState<GoogleAdAccountData>();\r\n  const locale = useSelector((state:RootState) => state.locale.locale)\r\n  const [rawMetrics, setRawMetrics] = useState({\r\n    totalSpent: 0,\r\n    totalRevenue: 0,\r\n    totalROAS: 0,\r\n    totalPurchases: 0,\r\n    totalCTR: 0,\r\n    totalCPC: 0,\r\n    totalCPM: 0,\r\n    totalCPP: 0,\r\n  });\r\n  const { brandId } = useParams();\r\n  const navigate = useNavigate();\r\n \r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n\r\n\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n\r\n  const userId = user?.id;\r\n\r\n  const fetchFacebookData = async (startDate: string, endDate: string) => {\r\n    try {\r\n      const fbAdResponse = await axiosInstance.post(\r\n        `/api/metrics/fbAd/${brandId}`,\r\n        { startDate, endDate, userId },\r\n        { withCredentials: true }\r\n      );\r\n      return fbAdResponse.data.data;\r\n    } catch (fbError) {\r\n      console.error('Error fetching Facebook ad data:', fbError);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const fetchGoogleData = async (startDate: string, endDate: string) => {\r\n    try {\r\n      const googleAdResponse = await axiosInstance.post(\r\n        `/api/metrics/googleAdAndCampaign/${brandId}`,\r\n        { startDate, endDate, userId },\r\n        { withCredentials: true }\r\n      );\r\n      return googleAdResponse.data?.data || [];\r\n    } catch (googleError) {\r\n      console.error('Error fetching Google ad data:', googleError);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const fetchAdData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n      const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n      const [fbData, googleData] = await Promise.all([\r\n        fetchFacebookData(startDate, endDate),\r\n        fetchGoogleData(startDate, endDate)\r\n      ]);\r\n\r\n      setFbAdAccountsMetrics(fbData);\r\n      setGoogleAdMetrics(googleData);\r\n      calculateAggregatedMetrics(fbData, googleData);\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching ad data:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [navigate, date, brandId, userId]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchAdData();\r\n  }, [fetchAdData]);\r\n\r\n  useEffect(() => {\r\n    fetchAdData();\r\n    const intervalId = setInterval(fetchAdData, 3 * 60 * 60 * 1000); // 3 hours\r\n    return () => clearInterval(intervalId);\r\n}, [fetchAdData]);\r\n\r\n  const calculateFacebookMetrics = (fbData: AdAccountData[]) => {\r\n    let totalSpent = 0;\r\n    let totalRevenue = 0;\r\n    let totalPurchases = 0;\r\n    let totalClicks = 0;\r\n    let totalImpressions = 0;\r\n\r\n    if (fbData?.length) {\r\n      fbData.forEach(account => {\r\n        totalSpent += parseFloat(String(account.spend || '0'));\r\n        totalRevenue += parseFloat(String(account.Revenue?.value || '0'));\r\n        totalPurchases += parseFloat(String(account.purchases?.value || '0'));\r\n        totalClicks += parseFloat(String(account.clicks || '0'));\r\n        totalImpressions += parseFloat(String(account.impressions || '0'));\r\n      });\r\n    }\r\n\r\n    return { totalSpent, totalRevenue, totalPurchases, totalClicks, totalImpressions };\r\n  };\r\n\r\n  const calculateGoogleMetrics = (googleData: GoogleAdAccountData | undefined) => {\r\n    let totalSpent = 0;\r\n    let totalRevenue = 0;\r\n    let totalPurchases = 0;\r\n    let totalClicks = 0;\r\n    let totalImpressions = 0;\r\n\r\n    if (googleData?.adMetrics) {\r\n      totalSpent += parseFloat(googleData.adMetrics.totalSpend || '0');\r\n      totalRevenue += parseFloat(googleData.adMetrics.totalConversionsValue || '0');\r\n      totalPurchases += parseFloat(googleData.adMetrics.totalConversions || '0');\r\n      totalClicks += parseFloat(googleData.adMetrics.totalClicks || '0');\r\n      totalImpressions += parseFloat(googleData.adMetrics.totalImpressions || '0');\r\n    }\r\n\r\n    return { totalSpent, totalRevenue, totalPurchases, totalClicks, totalImpressions };\r\n  };\r\n\r\n  const calculateAggregatedMetrics = useCallback((fbData: AdAccountData[], googleData: GoogleAdAccountData | undefined) => {\r\n    const fbMetrics = calculateFacebookMetrics(fbData);\r\n    const googleMetrics = calculateGoogleMetrics(googleData);\r\n\r\n    const totalSpent = fbMetrics.totalSpent + googleMetrics.totalSpent;\r\n    const totalRevenue = fbMetrics.totalRevenue + googleMetrics.totalRevenue;\r\n    const totalPurchases = fbMetrics.totalPurchases + googleMetrics.totalPurchases;\r\n    const totalClicks = fbMetrics.totalClicks + googleMetrics.totalClicks;\r\n    const totalImpressions = fbMetrics.totalImpressions + googleMetrics.totalImpressions;\r\n\r\n    setRawMetrics({\r\n      totalSpent,\r\n      totalRevenue,\r\n      totalROAS: totalRevenue / totalSpent || 0,\r\n      totalPurchases,\r\n      totalCTR: (totalClicks / totalImpressions) * 100 || 0,\r\n      totalCPC: totalSpent / totalClicks || 0,\r\n      totalCPM: (totalSpent * 1000) / totalImpressions || 0,\r\n      totalCPP: totalPurchases > 0 ? (totalSpent / totalPurchases) : 0,\r\n    });\r\n  }, []);\r\n\r\n\r\n  const formattedMetrics = useMemo(() => {\r\n    return {\r\n      totalSpent: `₹ ${rawMetrics.totalSpent.toLocaleString(locale)}`,\r\n      totalRevenue: `₹ ${rawMetrics.totalRevenue.toLocaleString(locale)}`,\r\n      totalROAS: Number((rawMetrics.totalROAS).toFixed(2)).toLocaleString(locale),\r\n      totalPurchases: rawMetrics.totalPurchases.toLocaleString(locale),\r\n      totalCTR: `${Number((rawMetrics.totalCTR).toFixed(2)).toLocaleString(locale)} %`,\r\n      totalCPC: Number((rawMetrics.totalCPC).toFixed(2)).toLocaleString(locale),\r\n      totalCPM: Number((rawMetrics.totalCPM).toFixed(2)).toLocaleString(locale),\r\n      totalCPP: Number((rawMetrics.totalCPP).toFixed(2)).toLocaleString(locale),\r\n    };\r\n  }, [rawMetrics, locale]);\r\n\r\n\r\n  const metrics = [\r\n    {\r\n      label: 'Amount Spent',\r\n      value: formattedMetrics.totalSpent,\r\n      tooltipContent: 'The sum of ad spends for all advertising platforms',\r\n    },\r\n    {\r\n      label: 'Revenue',\r\n      value: formattedMetrics.totalRevenue,\r\n      tooltipContent: 'Revenue from Ads Purchases',\r\n    },\r\n    {\r\n      label: 'ROAS (Ads only)',\r\n      value: formattedMetrics.totalROAS,\r\n      tooltipContent: 'Blended ROAS = Ads Purchases value / Blended Ad Spend',\r\n    },\r\n    {\r\n      label: 'Ads Purchases',\r\n      value: formattedMetrics.totalPurchases,\r\n      tooltipContent: 'Ads Purchases = Fb Ads Purchase + Google Conversions',\r\n    },\r\n    {\r\n      label: 'CPC',\r\n      value: formattedMetrics.totalCPC,\r\n      tooltipContent:\r\n        'Average CPC from all advertising platforms = (Blended Ad Spend / Blended Clicks)',\r\n    },\r\n    {\r\n      label: 'CPM',\r\n      value: formattedMetrics.totalCPM,\r\n      tooltipContent:\r\n        'Average CPM from all advertising platforms = (Blended Ad Spend * 1000 / Blended Impressions)',\r\n    },\r\n    {\r\n      label: 'CTR',\r\n      value: formattedMetrics.totalCTR,\r\n      tooltipContent:\r\n        'Average CTR from all advertising platforms = (Blended Clicks / Blended Impressions)*100',\r\n    },\r\n    {\r\n      label: 'CPP',\r\n      value: formattedMetrics.totalCPP,\r\n      tooltipContent:\r\n        'Average CPP from all advertising platforms = (Blended Ad Spend / Blended Purchases)',\r\n    },\r\n  ];\r\n\r\n\r\n  const googleMetrics = [\r\n    {\r\n      label: 'Total Cost',\r\n      value: googleAdMetrics\r\n        ? `₹ ${parseFloat(googleAdMetrics?.adMetrics?.totalSpend || '0').toLocaleString(locale)}`\r\n        : '₹ 0',\r\n    },\r\n    {\r\n      label: 'Conversion Value',\r\n      value: googleAdMetrics ? `₹ ${parseFloat(googleAdMetrics?.adMetrics?.totalConversionsValue).toLocaleString(locale)}` : ' 0',\r\n    },\r\n    {\r\n      label: 'ROAS',\r\n      value: googleAdMetrics ? parseFloat(googleAdMetrics?.adMetrics?.roas).toLocaleString(locale) : '0.00',\r\n    },\r\n    {\r\n      label: 'Conversions',\r\n      value: googleAdMetrics ? parseFloat(googleAdMetrics?.adMetrics?.totalConversions).toLocaleString(locale) : '0',\r\n    },\r\n    {\r\n      label: 'CPC',\r\n      value: googleAdMetrics ? `₹ ${parseFloat(googleAdMetrics?.adMetrics?.totalCPC).toLocaleString(locale)}` : ' 0',\r\n    },\r\n    {\r\n      label: 'CPM',\r\n      value: googleAdMetrics ? `₹ ${parseFloat(googleAdMetrics?.adMetrics?.totalCPM).toLocaleString(locale)}` : ' 0',\r\n    },\r\n    {\r\n      label: 'CTR',\r\n      value: googleAdMetrics ? `${parseFloat(googleAdMetrics?.adMetrics?.totalCTR).toLocaleString(locale)} %` : ' 0',\r\n    },\r\n    {\r\n      label: 'Cost Per Conversion',\r\n      value: googleAdMetrics ? `₹ ${parseFloat(googleAdMetrics?.adMetrics?.totalCostPerConversion).toLocaleString(locale)}` : ' 0',\r\n    },\r\n  ]\r\n\r\n  if(isLoading){\r\n    return <Loader isLoading={isLoading} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <Header\r\n        title=\"AdMetrics Dashboard\"\r\n        Icon={LineChart}\r\n        showDatePicker={true}\r\n        showSettings={true}\r\n        showRefresh={true}\r\n        isLoading={false}\r\n        handleManualRefresh={() => {\r\n          fetchAdData();\r\n        }}\r\n />\r\n\r\n      {/* Main content */}\r\n      <main className=\"p-4 md:p-6 lg:px-8\">\r\n        <div className=\"space-y-2\">\r\n          {/* Blended summary */}\r\n          <section id='all'>\r\n            <h2 className=\"text-xl font-semibold flex flex-row items-center justify-between\">\r\n              <div className='flex flex-row items-center space-x-2'>\r\n                <Blend className=\"h-5 w-5\" />\r\n                <span>Blended summary</span>\r\n            \r\n                  <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"#1877F2\">\r\n                    <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\" />\r\n                  </svg>\r\n                \r\n      \r\n                  <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5\" >\r\n                    <path d=\"M13.5437 4.24116L13.5441 4.24138C13.904 4.43971 14.2179 4.70303 14.4689 5.01529C14.7198 5.3275 14.903 5.68264 15.009 6.0601L15.4904 5.92486L15.009 6.0601C15.115 6.43752 15.1422 6.83078 15.0891 7.21776C15.0361 7.60457 14.9038 7.97861 14.6989 8.31855C14.6988 8.31873 14.6987 8.31891 14.6986 8.3191L8.41444 18.701C7.9918 19.3741 7.30557 19.868 6.49825 20.0687C5.68937 20.2699 4.83087 20.1586 4.10949 19.7614C3.38872 19.3646 2.86649 18.7168 2.64727 17.9633C2.42868 17.212 2.5264 16.4083 2.92214 15.7226L9.20689 5.33823C9.20695 5.33813 9.20702 5.33802 9.20708 5.33792C9.62451 4.65082 10.3142 4.14383 11.1301 3.93599C11.9464 3.72804 12.8151 3.83872 13.5437 4.24116Z\" fill=\"#FFB70A\" stroke=\"#FFB70A\"></path><path d=\"M21.5404 15.4544L15.24 5.04127C14.7453 4.25097 13.9459 3.67817 13.0138 3.44633C12.0817 3.21448 11.0917 3.34215 10.2572 3.80182C9.4226 4.26149 8.8103 5.01636 8.55224 5.90372C8.29418 6.79108 8.41102 7.73988 8.87757 8.54562L15.178 18.9587C15.6726 19.749 16.4721 20.3218 17.4042 20.5537C18.3362 20.7855 19.3262 20.6579 20.1608 20.1982C20.9953 19.7385 21.6076 18.9836 21.8657 18.0963C22.1238 17.2089 22.0069 16.2601 21.5404 15.4544Z\" fill=\"#3B8AD8\"></path><path d=\"M9.23018 16.2447C9.07335 15.6884 8.77505 15.1775 8.36166 14.7572C7.94827 14.3369 7.43255 14.0202 6.86011 13.835C6.28768 13.6499 5.67618 13.6021 5.07973 13.6958C4.48328 13.7895 3.92026 14.0219 3.44049 14.3723C2.96071 14.7227 2.57898 15.1804 2.32906 15.7049C2.07914 16.2294 1.96873 16.8045 2.00762 17.3794C2.0465 17.9542 2.23347 18.5111 2.55199 19.0007C2.8705 19.4902 3.31074 19.8975 3.83376 20.1863C4.46363 20.5354 5.1882 20.6983 5.91542 20.6542C6.64264 20.6101 7.33969 20.361 7.91802 19.9386C8.49636 19.5162 8.92988 18.9395 9.16351 18.2817C9.39715 17.624 9.42035 16.915 9.23018 16.2447Z\" fill=\"#2CAA14\"></path>\r\n                  </svg>\r\n                \r\n              </div>\r\n\r\n\r\n\r\n            </h2>\r\n            <AdAccountMetricsCard\r\n              metrics={metrics}\r\n              date={{\r\n                from: date.from ? new Date(date.from) : undefined,\r\n                to: date.to ? new Date(date.to) : undefined\r\n              }}\r\n              isLoading={isLoading}\r\n            />\r\n          </section>\r\n        </div>\r\n\r\n\r\n        {fbAdAccountsMetrics?.length > 0 && fbAdAccountsMetrics.map((accountMetrics, index) => {\r\n          const fbmetrics = [\r\n            { label: 'Amount Spent', value: `₹ ${parseFloat(String(accountMetrics.spend || '0')).toLocaleString(locale)}` },\r\n            {\r\n              label: 'Revenue',\r\n              value: `₹ ${parseFloat(String(accountMetrics.Revenue?.value || '0')).toLocaleString(locale)}`\r\n            },\r\n            {\r\n              label: 'ROAS (Ads only)',\r\n              value: accountMetrics.purchase_roas && accountMetrics.purchase_roas.length > 0\r\n                ? parseFloat(String(accountMetrics.purchase_roas[0].value)).toLocaleString(locale, {\r\n                    minimumFractionDigits: 2,\r\n                    maximumFractionDigits: 2\r\n                  })\r\n                : '0'\r\n            },\r\n            { label: 'Ads Purchases', value: accountMetrics.purchases?.value || '0' },\r\n            { label: 'CPC (All clicks)', value: `₹ ${new Intl.NumberFormat(locale).format(parseFloat(accountMetrics.cpc || '0'))}` },\r\n            { label: 'CPM', value: `₹ ${new Intl.NumberFormat(locale, { minimumFractionDigits: 2 }).format(parseFloat(accountMetrics.cpm || '0'))}` },\r\n            { label: 'CTR', value: `${parseFloat(accountMetrics.ctr || '0').toFixed(2)} %` },\r\n            { label: 'Cost per Purchase (All)', value: `₹ ${new Intl.NumberFormat(locale).format(parseFloat(accountMetrics.cpp || '0'))}` },\r\n          ];\r\n\r\n          return (\r\n            <div key={index} id=\"facebook\">\r\n              <AdAccountMetricsCard\r\n                icon=\"Facebook\"\r\n                title={`Facebook - ${accountMetrics.account_name}`}\r\n                metrics={fbmetrics}  // Pass fbmetrics for the current account\r\n                date={{\r\n                  from: date.from ? new Date(date.from) : undefined,\r\n                  to: date.to ? new Date(date.to) : undefined\r\n                }}\r\n                isLoading={isLoading}\r\n                errorMessage={accountMetrics.message}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        { (\r\n            googleAdMetrics && Object.keys(googleAdMetrics).length > 0 ? (\r\n              <div key=\"google\" id=\"google\">\r\n                <AdAccountMetricsCard\r\n                  icon=\"Google\"\r\n                  title={`Google Ads - ${googleAdMetrics?.adAccountName}`}\r\n                  metrics={googleMetrics}\r\n                  date={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }}\r\n                  isLoading={isLoading}\r\n                />\r\n                {/* <CampaignGrid campaigns={googleAdMetrics.campaignData || []} isLoading={isLoading} icon=\"Google\" /> */}\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-2\">\r\n              <section className='mt-10 ' id=\"google\">\r\n                <div className='flex flex-row gap-2 items-center'>\r\n                  <GoogleLogo width={\"1.5rem\"} height={\"1.5rem\"} />\r\n                  <h3 className=\"text-lg font-semibold\">Google Ad Metrics</h3>\r\n             \r\n                </div>\r\n\r\n                <div className=\"text-center text-gray-500 mt-4 bg-white p-2 rounded-md\">\r\n                  No Google Ad Account for this brand.\r\n                </div>\r\n              </section>\r\n              </div>\r\n            )\r\n          )\r\n        }\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import type React from \"react\"\r\nimport { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport { Loader2, Mail, User, Building, Briefcase, MessageSquare, Send, X, AlertCircle } from \"lucide-react\"\r\nimport { Card, CardContent } from \"../ui/card\"\r\nimport { Skeleton } from \"../ui/skeleton\"\r\n\r\nconst baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n function TicketFormSkeleton() {\r\n  return (\r\n    <Card className=\"p-6 space-y-4\">\r\n      <CardContent className=\"space-y-4\">\r\n        <div className=\"space-y-2\">\r\n          <Skeleton className=\"h-4 w-32\" />\r\n          <Skeleton className=\"h-10 w-full\" />\r\n        </div>\r\n        \r\n        <div className=\"space-y-2\">\r\n          <Skeleton className=\"h-4 w-32\" />\r\n          <Skeleton className=\"h-10 w-full\" />\r\n        </div>\r\n        \r\n        <div className=\"space-y-2\">\r\n          <Skeleton className=\"h-4 w-32\" />\r\n          <Skeleton className=\"h-10 w-full\" />\r\n        </div>\r\n        \r\n        <div className=\"space-y-2\">\r\n          <Skeleton className=\"h-4 w-32\" />\r\n          <Skeleton className=\"h-24 w-full\" />\r\n        </div>\r\n        \r\n        <div className=\"flex justify-end space-x-2\">\r\n          <Skeleton className=\"h-10 w-24\" />\r\n          <Skeleton className=\"h-10 w-24\" />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\ninterface TicketFormProps {\r\n  onClose: () => void\r\n}\r\n\r\nfunction TicketForm({ onClose }: TicketFormProps) {\r\n  const [form, setForm] = useState({\r\n    subject: \"\",\r\n    description: \"\",\r\n    departmentId: \"\",\r\n    brand: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n  })\r\n\r\n  const [departments, setDepartments] = useState<Array<{ id: string; name: string }>>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [submitting, setSubmitting] = useState(false)\r\n  const [errors, setErrors] = useState<Record<string, string>>({})\r\n\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      setLoading(true)\r\n      try {\r\n        const response = await axios.get(`${baseURL}/api/zoho/departments`,{withCredentials: true})\r\n        if (response.data && response.data.departments) {\r\n          setDepartments(response.data.departments)\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching departments:\", error)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchDepartments()\r\n  }, [])\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target\r\n    setForm((prev) => ({ ...prev, [name]: value }))\r\n\r\n    // Clear error when field is updated\r\n    if (errors[name]) {\r\n      setErrors((prev) => {\r\n        const newErrors = { ...prev }\r\n        delete newErrors[name]\r\n        return newErrors\r\n      })\r\n    }\r\n  }\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {}\r\n\r\n    if (!form.subject.trim()) newErrors.subject = \"Subject is required\"\r\n    if (!form.brand.trim()) newErrors.brand = \"Brand name is required\"\r\n    if (!form.departmentId) newErrors.departmentId = \"Please select a department\"\r\n    if (!form.description.trim()) newErrors.description = \"Description is required\"\r\n    if (!form.firstName.trim()) newErrors.firstName = \"First Name is required\"\r\n    if (!form.email.trim()) {\r\n      newErrors.email = \"Email is required\"\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\r\n      newErrors.email = \"Please enter a valid email address\"\r\n    }\r\n\r\n    setErrors(newErrors)\r\n    return Object.keys(newErrors).length === 0\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n\r\n    if (!validateForm()) {\r\n      return\r\n    }\r\n\r\n    setSubmitting(true)\r\n\r\n    try {\r\n      const response = await axios.post(`${baseURL}/api/zoho/create-ticket`, form,{withCredentials: true})\r\n\r\n      if (response.data.success) {\r\n        onClose()\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting ticket:\", error)\r\n      setErrors({\r\n        form: \"There was an error submitting your ticket. Please try again.\",\r\n      })\r\n    } finally {\r\n      setSubmitting(false)\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <TicketFormSkeleton />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n      <div className=\"bg-slate-800 px-6 py-4 flex justify-between items-center\">\r\n        <h2 className=\"text-xl font-semibold text-white flex items-center\">\r\n          <MessageSquare className=\"mr-2 h-5 w-5\" />\r\n          Submit a Support Ticket\r\n        </h2>\r\n        <button onClick={onClose} className=\"text-slate-300 hover:text-white transition-colors\">\r\n          <X className=\"h-6 w-6\" />\r\n        </button>\r\n      </div>\r\n\r\n      {errors.form && (\r\n        <div className=\"mx-6 mt-4 p-3 bg-red-50 border border-red-200 rounded-md flex items-start\">\r\n          <AlertCircle className=\"h-5 w-5 text-red-500 mr-2 flex-shrink-0 mt-0.5\" />\r\n          <span className=\"text-red-700 text-sm\">{errors.form}</span>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} className=\"p-6 space-y-5\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5\">\r\n          {/* Left column - Essential information */}\r\n          <div className=\"space-y-5\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-slate-700 mb-1\" htmlFor=\"subject\">\r\n                Subject <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <MessageSquare className=\"h-5 w-5 text-slate-400\" />\r\n                </div>\r\n                <input\r\n                  id=\"subject\"\r\n                  name=\"subject\"\r\n                  type=\"text\"\r\n                  value={form.subject}\r\n                  onChange={handleChange}\r\n                  className={`pl-10 block w-full px-3 py-2.5 border ${errors.subject ? \"border-red-300 bg-red-50\" : \"border-slate-300\"} rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-slate-500 focus:border-slate-500`}\r\n                  placeholder=\"Brief description of your issue\"\r\n                />\r\n              </div>\r\n              {errors.subject && <p className=\"mt-1 text-sm text-red-600\">{errors.subject}</p>}\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-slate-700 mb-1\" htmlFor=\"brand\">\r\n                Brand Name <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <Building className=\"h-5 w-5 text-slate-400\" />\r\n                </div>\r\n                <input\r\n                  id=\"brand\"\r\n                  name=\"brand\"\r\n                  type=\"text\"\r\n                  value={form.brand}\r\n                  onChange={handleChange}\r\n                  className={`pl-10 block w-full px-3 py-2.5 border ${errors.brand ? \"border-red-300 bg-red-50\" : \"border-slate-300\"} rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-slate-500 focus:border-slate-500`}\r\n                  placeholder=\"Your brand name\"\r\n                />\r\n              </div>\r\n              {errors.brand && <p className=\"mt-1 text-sm text-red-600\">{errors.brand}</p>}\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-slate-700 mb-1\" htmlFor=\"departmentId\">\r\n                Department <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <Briefcase className=\"h-5 w-5 text-slate-400\" />\r\n                </div>\r\n                <select\r\n                  id=\"departmentId\"\r\n                  name=\"departmentId\"\r\n                  value={form.departmentId}\r\n                  onChange={handleChange}\r\n                  className={`pl-10 block w-full px-3 py-2.5 border ${errors.departmentId ? \"border-red-300 bg-red-50\" : \"border-slate-300\"} rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-slate-500 focus:border-slate-500 appearance-none bg-no-repeat bg-right`}\r\n                  style={{\r\n                    backgroundImage:\r\n                      \"url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' strokeLinecap='round' strokeLinejoin='round' strokeWidth='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e\\\")\",\r\n                    backgroundPosition: \"right 0.5rem center\",\r\n                    backgroundSize: \"1.5em 1.5em\",\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select an issue type</option>\r\n                  {departments.map((dept) => (\r\n                    <option key={dept.id} value={dept?.id}>\r\n                      {dept.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              {errors.departmentId && <p className=\"mt-1 text-sm text-red-600\">{errors.departmentId}</p>}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right column - Contact information */}\r\n          <div className=\"space-y-5\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-slate-700 mb-1\" htmlFor=\"firstName\">\r\n                  First Name <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <User className=\"h-5 w-5 text-slate-400\" />\r\n                  </div>\r\n                  <input\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    type=\"text\"\r\n                    value={form.firstName}\r\n                    onChange={handleChange}\r\n                    className=\"pl-10 block w-full px-3 py-2.5 border border-slate-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-slate-500 focus:border-slate-500\"\r\n                    placeholder=\"First name\"\r\n                  />\r\n               \r\n                </div>\r\n                {errors.firstName && <p className=\"mt-1 text-sm text-red-600\">{errors.firstName}</p>}\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-slate-700 mb-1\" htmlFor=\"lastName\">\r\n                  Last Name\r\n                </label>\r\n                <input\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  value={form.lastName}\r\n                  onChange={handleChange}\r\n                  className=\"block w-full px-3 py-2.5 border border-slate-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-slate-500 focus:border-slate-500\"\r\n                  placeholder=\"Last name\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-slate-700 mb-1\" htmlFor=\"email\">\r\n                Email Address <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <Mail className=\"h-5 w-5 text-slate-400\" />\r\n                </div>\r\n                <input\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={form.email}\r\n                  onChange={handleChange}\r\n                  className={`pl-10 block w-full px-3 py-2.5 border ${errors.email ? \"border-red-300 bg-red-50\" : \"border-slate-300\"} rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-slate-500 focus:border-slate-500`}\r\n                  placeholder=\"your.email@example.com\"\r\n                />\r\n              </div>\r\n              {errors.email && <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>}\r\n              <div className=\"h-full flex items-end\">\r\n              <div className=\"text-xs text-slate-500 italic\">We'll use this email to contact you about your ticket</div>\r\n            </div>\r\n            </div>\r\n\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        {/* Description - Full width */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-slate-700 mb-1\" htmlFor=\"description\">\r\n            Description <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={form.description}\r\n            onChange={handleChange}\r\n            rows={5}\r\n            className={`block w-full px-3 py-2.5 border ${errors.description ? \"border-red-300 bg-red-50\" : \"border-slate-300\"} rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-slate-500 focus:border-slate-500`}\r\n            placeholder=\"Please provide detailed information about your issue to help us assist you better\"\r\n          />\r\n          {errors.description && <p className=\"mt-1 text-sm text-red-600\">{errors.description}</p>}\r\n        </div>\r\n\r\n        {/* Action buttons */}\r\n        <div className=\"flex gap-4 pt-2\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={submitting}\r\n            className={`flex-1 bg-slate-700 text-white py-2.5 px-4 rounded-md hover:bg-slate-800 focus:outline-none focus:ring-2 focus:ring-slate-500 focus:ring-offset-2 transition-colors ${\r\n              submitting ? \"opacity-70 cursor-not-allowed\" : \"\"\r\n            }`}\r\n          >\r\n            {submitting ? (\r\n              <span className=\"flex items-center justify-center gap-2\">\r\n                <Loader2 className=\"w-5 h-5 animate-spin\" />\r\n                Submitting...\r\n              </span>\r\n            ) : (\r\n              <span className=\"flex items-center justify-center gap-2\">\r\n                <Send className=\"w-4 h-4\" />\r\n                Submit Ticket\r\n              </span>\r\n            )}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClose}\r\n            className=\"flex-1 bg-white text-slate-700 py-2.5 px-4 border border-slate-300 rounded-md hover:bg-slate-50 focus:outline-none focus:ring-2 focus:ring-slate-500 focus:ring-offset-2 transition-colors\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TicketForm\r\n\r\n","import { useState } from 'react';\r\nimport { FaHeadset } from \"react-icons/fa\";\r\nimport TicketForm from './TicketForm'; \r\n\r\nconst HelpDeskModal = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => setIsModalOpen(true)}\r\n        className=\"fixed bottom-8 right-8 z-30 flex items-center gap-2 bg-indigo-600 text-white p-3 rounded-full shadow-lg hover:bg-indigo-700 transition-colors duration-200 group\"\r\n      >\r\n        <FaHeadset className=\"w-5 h-5 group-hover:animate-pulse\" />\r\n      </button>\r\n      \r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\r\n  \r\n              <TicketForm onClose={() => setIsModalOpen(false)} />\r\n\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HelpDeskModal;","import React from \"react\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar.tsx\";\r\nimport Dashboard from \"./dashboard.tsx\";\r\nimport HelpDeskModal from \"@/components/dashboard_component/HelpDeskModal.tsx\";\r\n\r\nconst AnalyticsDashboard: React.FC = () => {\r\n  return (\r\n    <div className=\"flex h-screen\"> \r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n        <Dashboard />\r\n     <HelpDeskModal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalyticsDashboard;\r\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","import { useState } from 'react'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport axios from 'axios'\r\n\r\n\r\nexport default function ShopifyModalContent() {\r\n  const [storeName, setStoreName] = useState('')\r\n  const baseURL = import.meta.env.PROD? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n  const handleShopifyLogin = async () => {\r\n    try {\r\n      const response = await axios.post(`${baseURL}/api/auth/shopify`, { shop: storeName }, { withCredentials: true });\r\n      if (response.data.success) {\r\n        const { authUrl } = response.data;\r\n        console.log('Generated Shopify Auth URL:', authUrl); // Log the URL to check if it's correct\r\n        window.location.href = authUrl;\r\n      } else {\r\n        console.error('Failed to get Shopify Auth URL');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting Shopify Auth URL:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"mt-4 space-y-4\">\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Enter your Shopify store name\"\r\n        value={storeName}\r\n        onChange={(e) => setStoreName(e.target.value)}\r\n      />\r\n      <Button className=\"w-full\" onClick={handleShopifyLogin} disabled={!storeName}>\r\n        Login to Shopify\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Search, Check, X } from 'lucide-react'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Ga4Logo, FacebookLogo, GoogleLogo } from '@/data/logo'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '@/store'\r\n\r\n\r\n\r\n\r\ninterface OtherPlatformModalContentProps {\r\n  platform: string;\r\n  onConnect: (\r\n    platform: string,\r\n    account: string,\r\n    accountId: string,\r\n    managerId?: string,\r\n  ) => void;\r\n  onRemove?: (platform: string, accountId: string, managerId?: string) => void;\r\n  connectedId: string;\r\n}\r\n\r\ninterface GoogleAdsAccount {\r\n  name: string;\r\n  clientId: string;\r\n  managerId?: string;\r\n  hidden?: boolean;\r\n}\r\n\r\ninterface GoogleAnalyticsAccount {\r\n  propertyName: string\r\n  propertyId: string\r\n}\r\n\r\ninterface FacebookAdsAccount {\r\n  adname: string\r\n  id: string\r\n}\r\n\r\nexport default function OtherPlatformModalContent({\r\n  platform,\r\n  onConnect,\r\n  connectedId,\r\n  onRemove\r\n}: OtherPlatformModalContentProps) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [googleAdsAccounts, setGoogleAdsAccounts] = useState<GoogleAdsAccount[]>([]);\r\n  const [googleAnalyticsAccounts, setGoogleAnalyticsAccounts] = useState<GoogleAnalyticsAccount[]>([]);\r\n  const [facebookAdsAccounts, setFacebookAdsAccounts] = useState<FacebookAdsAccount[]>([]);\r\n  const [showLoginButton, setShowLoginButton] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n\r\n  useEffect(() => {\r\n    const fetchGoogleAdsAccounts = async () => {\r\n      setLoading(true); // Start loading\r\n      try {\r\n        const userId = user?.id;\r\n        const response = await axios.post(\r\n          `${baseURL}/api/setup/google-accounts`,\r\n          { userId },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          setShowLoginButton(false);\r\n          setGoogleAdsAccounts(\r\n            response.data?.clientAccounts.filter((account: GoogleAdsAccount) => !account.hidden)\r\n          );\r\n        } else {\r\n          console.log('Unexpected status code:', response.status);\r\n        }\r\n      } catch (error) {\r\n        handleError(error);\r\n      } finally {\r\n        setLoading(false); // End loading\r\n      }\r\n    };\r\n\r\n    const fetchGoogleAnalyticsAccounts = async () => {\r\n      setLoading(true); // Start loading\r\n      try {\r\n        const userId = user?.id;\r\n        const response = await axios.post(\r\n          `${baseURL}/api/setup/ga4-propertyIds`,\r\n          { userId },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          setShowLoginButton(false);\r\n          setGoogleAnalyticsAccounts(response.data.propertiesList || []);\r\n        } else {\r\n          console.log('Unexpected status code:', response.status);\r\n        }\r\n      } catch (error) {\r\n        handleError(error);\r\n      } finally {\r\n        setLoading(false); // End loading\r\n      }\r\n    };\r\n\r\n    const fetchFacebookAdsAccounts = async () => {\r\n      setLoading(true); // Start loading\r\n      try {\r\n        const userId = user?.id;\r\n        const response = await axios.post(\r\n          `${baseURL}/api/setup/fb-ad-accounts`,\r\n          { userId },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        setFacebookAdsAccounts(response.data.adAccounts || []);\r\n      } catch (error) {\r\n        handleError(error);\r\n      } finally {\r\n        setLoading(false); // End loading\r\n      }\r\n    };\r\n\r\n    if (platform.toLowerCase() === 'google ads') fetchGoogleAdsAccounts();\r\n    if (platform.toLowerCase() === 'google analytics') fetchGoogleAnalyticsAccounts();\r\n    if (platform.toLowerCase() === 'facebook') fetchFacebookAdsAccounts();\r\n  }, [platform, user]);\r\n\r\n  const handleError = (error: any) => {\r\n    // Axios error handling\r\n    if (axios.isAxiosError(error)) {\r\n      const axiosError = error;\r\n      const { response, request } = axiosError;\r\n\r\n      // If response received from server\r\n      if (response) {\r\n        const { status, data, config } = response;\r\n        const code = data?.error?.code || data?.code;\r\n\r\n        // Common authentication and authorization errors\r\n        const authErrors = [\r\n          401,  // Unauthorized\r\n          403,  // Forbidden\r\n          'UNAUTHENTICATED',\r\n          'TOKEN_EXPIRED',\r\n          'INVALID_CREDENTIALS'\r\n        ];\r\n\r\n        // Check if the error is related to authentication\r\n        const isAuthError = authErrors.some(\r\n          authCode => status === authCode || code === authCode\r\n        );\r\n\r\n        if (isAuthError) {\r\n          console.error('Authentication Error:', { status, code, message: data?.message });\r\n          setShowLoginButton(true);\r\n          return;\r\n        }\r\n\r\n        // Specific Google Ads API error handling\r\n        if (data?.errors && data.errors.length > 0) {\r\n          const googleAdsError = data.errors[0];\r\n          const googleAdsErrorMessage = googleAdsError.message || 'Google Ads API Error';\r\n\r\n          console.error('Google Ads API Error:', googleAdsErrorMessage);\r\n\r\n          // Common Google Ads authentication scenarios\r\n          const googleAuthErrors = [\r\n            'not associated with any Ads accounts',\r\n            'missing required authentication credential',\r\n            'OAuth access token invalid'\r\n          ];\r\n\r\n          const isGoogleAuthError = googleAdsErrorMessage &&\r\n            googleAuthErrors.some(errText =>\r\n              googleAdsErrorMessage.toLowerCase().includes(errText.toLowerCase())\r\n            );\r\n\r\n          if (isGoogleAuthError) {\r\n            setShowLoginButton(true);\r\n            return;\r\n          }\r\n        }\r\n\r\n        // General server error handling\r\n        console.error('Server Error:', {\r\n          status,\r\n          url: config?.url,\r\n          method: config?.method\r\n        });\r\n        setShowLoginButton(true);\r\n\r\n      }\r\n      // No response received\r\n      else if (request) {\r\n        console.error('No response received:', request);\r\n        setShowLoginButton(true);\r\n      }\r\n      // Network or other axios error\r\n      else {\r\n        console.error('Request Setup Error:', axiosError.message);\r\n        setShowLoginButton(true);\r\n      }\r\n    }\r\n    // Non-axios error handling\r\n    else {\r\n      console.error('Unexpected Error:', error);\r\n      setShowLoginButton(true);\r\n    }\r\n  };\r\n\r\n\r\n  const filteredAccounts = () => {\r\n    if (platform.toLowerCase() === 'google ads') {\r\n      if (!googleAdsAccounts || googleAdsAccounts.length === 0) {\r\n        return null;\r\n      }\r\n      return googleAdsAccounts.filter((account) =>\r\n        account.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    } else if (platform.toLowerCase() === 'google analytics') {\r\n      if (!googleAnalyticsAccounts || googleAnalyticsAccounts.length === 0) {\r\n        return null;\r\n      }\r\n      return googleAnalyticsAccounts.filter((account) =>\r\n        account.propertyName.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    } else if (platform.toLowerCase() === 'facebook') {\r\n      if (!facebookAdsAccounts || facebookAdsAccounts.length === 0) {\r\n        return null; // Return null if there are no Facebook Ads accounts\r\n      }\r\n      return facebookAdsAccounts.filter((account) =>\r\n        account.adname.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const handleConnect = (account: GoogleAdsAccount | GoogleAnalyticsAccount | FacebookAdsAccount) => {\r\n    let accountId: string;\r\n    let displayName: string;\r\n    let managerId: string | undefined;\r\n\r\n    if ('clientId' in account) {\r\n      accountId = account.clientId;\r\n      managerId = account.managerId;\r\n\r\n      // Include manager ID in the display name if available\r\n      displayName = managerId\r\n        ? `${account.name} (${accountId}/${managerId})`\r\n        : `${account.name} (${accountId})`;\r\n    } else if ('propertyId' in account) {\r\n      accountId = account.propertyId;\r\n      displayName = `${account.propertyName} (${accountId})`;\r\n    } else if ('id' in account) {\r\n      accountId = account.id;\r\n      displayName = `${account.adname}`;\r\n    } else { \r\n      accountId = '';\r\n      displayName = '';\r\n    }\r\n\r\n    onConnect(platform, displayName, accountId, managerId);\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      const response = await axios.get(`${baseURL}/api/auth/google?context=brandSetup`, { withCredentials: true });\r\n      const { authUrl } = response.data;\r\n\r\n      window.location.href = authUrl;\r\n    } catch (error) {\r\n      console.error('Error getting Google Auth URL:', error);\r\n    }\r\n  }\r\n\r\n  const handleFbLogin = async () => {\r\n    try {\r\n      const response = await axios.get(`${baseURL}/api/auth/facebook`, { withCredentials: true });\r\n      if (response.data.success) {\r\n        window.location.href = response.data.authURL;\r\n      } else {\r\n        console.error('Failed to get Facebook Auth URL');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting Facebook Auth URL:', error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    loading ? <div>Loading...</div> : (\r\n      <>\r\n        {showLoginButton ? (\r\n          <Button\r\n            size=\"sm\"\r\n            onClick={platform.toLowerCase() === 'facebook' ? handleFbLogin : handleGoogleLogin}\r\n            className=\"flex items-center gap-2 bg-white text-black border border-green-800 hover:bg-green-50\"\r\n          >\r\n            {platform.toLowerCase() === 'google ads' && (\r\n              <>\r\n                <GoogleLogo height=\"1rem\" width=\"1rem\" />\r\n                Connect to your Google Ads account\r\n              </>\r\n            )}\r\n            {platform.toLowerCase() === 'google analytics' && (\r\n              <>\r\n                <Ga4Logo height=\"1rem\" width=\"1rem\" />\r\n                Connect to your GA4 account\r\n              </>\r\n            )}\r\n            {platform.toLowerCase() === 'facebook' && (\r\n              <>\r\n                <FacebookLogo height=\"1rem\" width=\"1rem\" />\r\n                Connect to your Facebook account\r\n              </>\r\n            )}\r\n          </Button>\r\n        ) : (\r\n          // Handle the case where the button is not shown\r\n          <>\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Search accounts...\"\r\n                className=\"pl-10\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"max-h-[50vh] overflow-auto\">\r\n              {filteredAccounts()?.map((account) => {\r\n                // Extract platform-specific details\r\n                const isGoogleAds = platform.toLowerCase() === 'google ads';\r\n                const isFacebook = platform.toLowerCase() === 'facebook';\r\n                // const isGoogleAnalytics = platform.toLowerCase() === 'google analytics';\r\n\r\n                const accountId = isGoogleAds\r\n                  ? (account as GoogleAdsAccount).clientId\r\n                  : isFacebook\r\n                    ? (account as FacebookAdsAccount).id\r\n                    : (account as GoogleAnalyticsAccount).propertyId;\r\n\r\n                const managerId = isGoogleAds\r\n                  ? (account as GoogleAdsAccount).managerId\r\n                  : undefined;\r\n\r\n                const accountName = isGoogleAds\r\n                  ? (account as GoogleAdsAccount).name\r\n                  : isFacebook\r\n                    ? (account as FacebookAdsAccount).adname\r\n                    : (account as GoogleAnalyticsAccount).propertyName;\r\n\r\n                const platformLogo = isGoogleAds ? (\r\n                  <GoogleLogo height=\"1rem\" width=\"1rem\" />\r\n                ) : isFacebook ? (\r\n                  <FacebookLogo height=\"1rem\" width=\"1rem\" />\r\n                ) : (\r\n                  <Ga4Logo height=\"1rem\" width=\"1rem\" />\r\n                );\r\n\r\n                // Create display text based on account type\r\n                const displayText = isGoogleAds && managerId\r\n                  ? `${accountName} (${accountId}/${managerId})`\r\n                  : isFacebook\r\n                    ? `${accountName}`\r\n                    : `${accountName} (${accountId})`;\r\n\r\n                return (\r\n                  <div\r\n                    key={`${platform}-${accountId}-${managerId || \"\"}`}\r\n                    className=\"flex items-center justify-between p-2 rounded hover:bg-gray-50\"\r\n                  >\r\n                    <span>\r\n                      <div className=\"flex flex-row items-center gap-3\">\r\n                        {platformLogo}\r\n                        {displayText}\r\n                      </div>\r\n                    </span>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      {connectedId && onRemove && (\r\n                        <Button\r\n                          size=\"sm\"\r\n                          variant=\"destructive\"\r\n                          onClick={() => onRemove(\r\n                            platform,\r\n                            accountId,\r\n                            platform.toLowerCase() === 'google ads' ? managerId : undefined\r\n                          )}\r\n                          className=\"flex items-center\"\r\n                        >\r\n                          <X className=\"h-4 w-4 mr-1\" /> Remove\r\n                        </Button>\r\n                      )}\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => handleConnect(account)}\r\n                        disabled={connectedId.includes(accountId)}\r\n                        className={connectedId.includes(accountId) ? \"bg-green-600\" : \"bg-blue-600\"}\r\n                      >\r\n                        {connectedId.includes(accountId) && <Check className=\"h-4 w-4 mr-2\" />}\r\n                        {connectedId.includes(accountId) ? 'Connected' : 'Connect'}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </>\r\n    )\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Upload, Check, ArrowRight, Building2, ChevronRight } from 'lucide-react';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport ShopifyModalContent from './ShopifyModalContent';\r\nimport OtherPlatformModalContent from './OtherPlatformModalContent';\r\nimport { FacebookLogo,  GoogleLogo, Ga4Logo, ShopifyLogo } from '@/data/logo';\r\nimport axios from 'axios';\r\nimport { setUser } from '@/store/slices/UserSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Label } from '@radix-ui/react-label';\r\n\r\n\r\n\r\nconst platforms = [\r\n  { name: 'Shopify', color: 'bg-emerald-50', icon: ShopifyLogo, textColor: 'text-emerald-700', ringColor: 'ring-emerald-200', description: 'Connect your e-commerce store' },\r\n  { name: 'Facebook', color: 'bg-blue-50', icon: FacebookLogo, textColor: 'text-blue-700', ringColor: 'ring-blue-200', description: 'Link your ad accounts' },\r\n  { name: 'Google Ads', color: 'bg-rose-50', icon: GoogleLogo, textColor: 'text-rose-700', ringColor: 'ring-rose-200', description: 'Import campaign data' },\r\n  { name: 'Google Analytics', color: 'bg-yellow-50', icon: Ga4Logo, textColor: 'text-yellow-700', ringColor: 'ring-yellow-200', description: 'Track website metrics' },\r\n];\r\n\r\nconst steps = ['Brand Details', 'Platform Connections', 'Review'];\r\n\r\nexport default function BrandSetup() {\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [openModal, setOpenModal] = useState<string | null>(null);\r\n  const [connectedAccounts, setConnectedAccounts] = useState<Record<string, string[]>>({});\r\n  const [brandName, setBrandName] = useState('');\r\n  const [brandLogo, setBrandLogo] = useState<File | null>(null);\r\n  const [googleAdsConnections, setGoogleAdsConnections] = useState<{\r\n    clientId: string;\r\n    managerId?: string;\r\n  }[]>([]);\r\n  const [ga4Id, setGa4Id] = useState<string>('');\r\n  const [fbAdId, setFBAdId] = useState<string[]>([]);\r\n  const [shop, setShop] = useState<string>('');\r\n  const [shopifyAccessToken, setShopifyAccessToken] = useState('');\r\n  const { toast } = useToast();\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n  const user = useSelector((state: RootState) => state.user.user)\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const accessToken = params.get('access_token');\r\n    const shopName = params.get('shop_name');\r\n\r\n    if (accessToken && shopName) {\r\n      setShopifyAccessToken(accessToken);\r\n      setShop(shopName);\r\n      setConnectedAccounts(prev => ({\r\n        ...prev,\r\n        Shopify: [shopName],\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  const handleConnect = (\r\n    platform: string, \r\n    account: string, \r\n    accountId: string, \r\n    managerId?: string, \r\n  ) => {\r\n    // Update connected accounts\r\n    setConnectedAccounts(prev => ({\r\n      ...prev,\r\n      [platform]: [...(prev[platform] || []), account]\r\n    }));\r\n\r\n    // Handle platform-specific connection logic\r\n    if (platform.toLowerCase() === 'google ads') {\r\n      // Store comprehensive Google Ads connection details\r\n      setGoogleAdsConnections(prev => [\r\n        ...prev, \r\n        {\r\n          clientId:  accountId,\r\n          managerId:  managerId,\r\n        }\r\n      ]);\r\n    } else if (platform.toLowerCase() === 'google analytics') {\r\n      setGa4Id(accountId);\r\n    } else if (platform.toLowerCase() === 'facebook') {\r\n      setFBAdId(prev => [...prev, accountId]);\r\n    }\r\n\r\n    toast({ description: `Successfully connected ${account} to ${platform}`, variant: \"default\" });\r\n  };\r\n\r\n\r\n  const handleLogoUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      setBrandLogo(file);\r\n      toast({ description: 'Logo uploaded successfully', variant: \"default\" });\r\n    }\r\n  };\r\n\r\n  const isConnected = (platform: string) => {\r\n    return (connectedAccounts[platform]?.length || 0) > 0;\r\n  };\r\n\r\n  const getConnectedId = (platformName: string): string => {\r\n    switch (platformName.toLowerCase()) {\r\n      case 'google ads':\r\n        return googleAdsConnections.map(conn => conn.clientId).join(',');\r\n      case 'google analytics':\r\n        return ga4Id;\r\n      case 'facebook':\r\n        return fbAdId.join(',');\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const canProceed = () => {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return !!brandName && !!brandLogo;\r\n      case 1:\r\n        return Object.keys(connectedAccounts).length > 0;\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!brandName || Object.keys(connectedAccounts).length === 0) {\r\n      return toast({ description: 'Please complete all fields before submitting.', variant: \"destructive\" });\r\n    }\r\n\r\n    const payload = {\r\n      name: brandName,\r\n      logoUrl: brandLogo || '',\r\n      googleAdAccount: googleAdsConnections.map(connection => ({\r\n        clientId: connection.clientId,\r\n        managerId: connection.managerId || ''\r\n      })),\r\n      ga4Account: { PropertyID: ga4Id || '' },\r\n      fbAdAccounts: fbAdId.map((accountId) => accountId),\r\n      shopifyAccount: { shopName: shop || '', shopifyAccessToken: shopifyAccessToken || '' }\r\n    };\r\n\r\n    try {\r\n      // First create the brand\r\n      const brandResponse = await axios.post(\r\n        `${baseURL}/api/brands/add`,\r\n        payload,\r\n        { withCredentials: true }\r\n      );\r\n\r\n      const newBrandId = brandResponse.data.brand._id;\r\n\r\n      // Then add the brand to user\r\n      if (user) {\r\n        await axios.post(\r\n          `${baseURL}/api/users/add-brand`,\r\n          {\r\n            userId: user?.id,\r\n            brandId: newBrandId\r\n          },\r\n          { withCredentials: true }\r\n        );\r\n      }\r\n\r\n      // Update local state\r\n      const updatedUser = user ? {\r\n        ...user,\r\n        brands: [...user.brands, newBrandId]\r\n      } : null;\r\n\r\n      if (updatedUser) {\r\n        console.log(updatedUser);\r\n        dispatch(setUser(updatedUser));\r\n        console.log(\"after updating the state\",user);\r\n        navigate('/dashboard');\r\n      }\r\n\r\n      toast({ description: 'Brand setup completed successfully!', variant: \"default\" });\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast({ description: 'Error creating brand. Please try again.', variant: \"destructive\" });\r\n    }\r\n  };\r\n\r\n\r\n  const renderStepContent = () => {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"space-y-4\">\r\n              <Label className=\"block text-sm font-medium text-gray-700\">Brand Name</Label>\r\n              <Input\r\n                placeholder=\"Enter your brand name\"\r\n                value={brandName}\r\n                onChange={(e) => setBrandName(e.target.value)}\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              <Label className=\"block text-sm font-medium text-gray-700\">Brand Logo</Label>\r\n              <div className=\"flex items-center gap-4\">\r\n                <Input\r\n                  id=\"brandLogo\"\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleLogoUpload}\r\n                  className=\"hidden\"\r\n                />\r\n                <Button\r\n                  variant=\"outline\"\r\n                  className=\"flex-1\"\r\n                  onClick={() => document.getElementById('brandLogo')?.click()}\r\n                >\r\n                  <Upload className=\"h-4 w-4 mr-2\" />\r\n                  {brandLogo ? 'Change Logo' : 'Upload Logo'}\r\n                </Button>\r\n                {brandLogo && (\r\n                  <div className=\"flex items-center gap-2 px-4 py-2 bg-gray-50 rounded-lg\">\r\n                    <Check className=\"h-4 w-4 text-green-500\" />\r\n                    <span className=\"text-sm text-gray-600\">{brandLogo.name}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\r\n            {platforms.map((platform) => (\r\n              <Dialog\r\n                key={platform.name}\r\n                open={openModal === platform.name}\r\n                onOpenChange={(isOpen) => setOpenModal(isOpen ? platform.name : null)}\r\n              >\r\n                <DialogTrigger asChild>\r\n                  <button\r\n                    className={`relative group p-6 rounded-xl ${platform.color} ring-1 ${platform.ringColor} transition-all duration-200 hover:scale-[1.02]`}\r\n                  >\r\n                    <div className=\"flex items-start gap-4\">\r\n                      <platform.icon width=\"2rem\" height=\"2rem\" />\r\n                      <div className=\"flex-1 text-left\">\r\n                        <h3 className={`font-semibold ${platform.textColor}`}>{platform.name}</h3>\r\n                        <p className=\"text-sm text-gray-600 mt-1\">{platform.description}</p>\r\n                      </div>\r\n                      {isConnected(platform.name) ? (\r\n                        <Check className=\"h-5 w-5 text-green-500\" />\r\n                      ) : (\r\n                        <ChevronRight className=\"h-5 w-5 text-gray-400\" />\r\n                      )}\r\n                    </div>\r\n                  </button>\r\n                </DialogTrigger>\r\n                <DialogContent className=\"sm:max-w-[600px]\">\r\n                  <DialogHeader>\r\n                    <DialogTitle>Connect to {platform.name}</DialogTitle>\r\n                    <DialogDescription>\r\n                      {platform.name === 'Shopify'\r\n                        ? 'Enter your Shopify store name and login to connect.'\r\n                        : 'Select an account to connect with your brand.'}\r\n                    </DialogDescription>\r\n                  </DialogHeader>\r\n                  {platform.name === 'Shopify' ? (\r\n                    <ShopifyModalContent />\r\n                  ) : (\r\n                    <OtherPlatformModalContent\r\n                      platform={platform.name}\r\n                      onConnect={handleConnect}\r\n                      connectedId={getConnectedId(platform.name)}\r\n                    />\r\n                  )}\r\n                </DialogContent>\r\n              </Dialog>\r\n            ))}\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"rounded-lg bg-gray-50 p-6\">\r\n              <h3 className=\"font-medium text-gray-900\">Brand Details</h3>\r\n              <div className=\"mt-4 space-y-3\">\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-gray-600\">Name</span>\r\n                  <span className=\"font-medium\">{brandName}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-gray-600\">Logo</span>\r\n                  <span className=\"font-medium\">{brandLogo?.name}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"rounded-lg bg-gray-50 p-6\">\r\n              <h3 className=\"font-medium text-gray-900\">Connected Platforms</h3>\r\n              <div className=\"mt-4 space-y-3\">\r\n                {Object.entries(connectedAccounts).map(([platform, accounts]) => (\r\n                  <div key={platform} className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">{platform}</span>\r\n                    <span className=\"font-medium\">{accounts.join(', ')}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mx-auto shadow-lg\">\r\n      <CardContent className=\"p-8\">\r\n        <div className=\"flex items-center gap-3 mb-8\">\r\n          <div className=\"rounded-full bg-primary/10 p-2\">\r\n            <Building2 className=\"h-6 w-6 text-primary\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">Brand Setup</h2>\r\n            <p className=\"text-gray-500\">Complete the steps below to set up your brand</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            {steps.map((step, index) => (\r\n              <div key={step} className=\"flex items-center\">\r\n                <div className={`flex items-center justify-center w-8 h-8 rounded-full ${index <= currentStep ? 'bg-primary text-white' : 'bg-gray-100 text-gray-400'}`}>\r\n                  {index < currentStep ? (\r\n                    <Check className=\"h-5 w-5\" />\r\n                  ) : (\r\n                    <span>{index + 1}</span>\r\n                  )}\r\n                </div>\r\n                <span className={`ml-2 ${index <= currentStep ? 'text-gray-900' : 'text-gray-400'}`}>\r\n                  {step}\r\n                </span>\r\n                {index < steps.length - 1 && (\r\n                  <div className={`w-24 h-0.5 mx-4 ${index < currentStep ? 'bg-primary' : 'bg-gray-100'}`} />\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {renderStepContent()}\r\n\r\n        <div className=\"flex justify-between mt-8\">\r\n          {currentStep > 0 && (\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => setCurrentStep(current => current - 1)}\r\n            >\r\n              Back\r\n            </Button>\r\n          )}\r\n          <Button\r\n            className=\"ml-auto\"\r\n            disabled={!canProceed()}\r\n            onClick={() => {\r\n              if (currentStep === steps.length - 1) {\r\n                handleSubmit();\r\n              } else {\r\n                setCurrentStep(current => current + 1);\r\n              }\r\n            }}\r\n          >\r\n            {currentStep === steps.length - 1 ? (\r\n              <>\r\n                Complete Setup\r\n                <Check className=\"ml-2 h-5 w-5\" />\r\n              </>\r\n            ) : (\r\n              <>\r\n                Continue\r\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\r\n              </>\r\n            )}\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import {\r\n  Rocket,\r\n} from 'lucide-react'\r\nimport BrandSetup from './components/BrandForm.tsx'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '@/store/index.ts'\r\nimport CollapsibleSidebar from '../Dashboard/CollapsibleSidebar.tsx'\r\n\r\nexport default function BrandSetupDashboard() {\r\n  const user = useSelector((state: RootState) => state.user.user)\r\n\r\n  return (\r\n    <div className=\"flex h-screen\"> {/* Set a fixed width for the sidebar */}\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n      <div className=\"container mx-auto px-4 py-4\">\r\n        <div className=\"space-y-5\">\r\n          {/* Vibrant Welcome Header */}\r\n          <div className=\"bg-gradient-to-r from-primary to-primary/80 text-white rounded-2xl shadow-md overflow-hidden\">\r\n            <div className=\"p-8 flex items-center justify-between\">\r\n              <div className=\"space-y-4 max-w-2xl\">\r\n                <h1 className=\"text-4xl font-extrabold tracking-tight\">\r\n                  Welcome, <span className=\"text-white/90\">{user?.username.split(' ')[0] || 'User'}</span>\r\n                </h1>\r\n                <p className=\"text-lg text-white/80 leading-relaxed\">\r\n                  Embark on your analytics journey! Setting up your first brand will unlock powerful insights, helping you transform data into strategic growth.\r\n                </p>\r\n              </div>\r\n              <Rocket className=\"h-24 w-24 text-white/20 animate-pulse\" />\r\n            </div>\r\n          </div>\r\n              <BrandSetup />\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  ArrowDownIcon,\r\n  ArrowUpIcon,\r\n  RefreshCw,\r\n} from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport createAxiosInstance from \"../ConversionReportPage/components/axiosInstance\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\nimport { useSelector } from \"react-redux\";\r\nimport type { RootState } from \"@/store\";\r\nimport HeaderTutorialButton from \"@/components/Tutorial/HeaderTutorialButton\";\r\nimport { FacebookLogo, GoogleLogo, Ga4Logo } from \"@/data/logo\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport type Trend = \"up\" | \"down\" | \"neutral\";\r\nexport type Period = \"yesterday\" | \"last7Days\" | \"last30Days\";\r\nexport type Source = \"meta\" | \"google\" | \"analytics\";\r\n\r\nexport interface MetricData {\r\n  current: number;\r\n  previous: number;\r\n  change: number;\r\n  trend: Trend;\r\n}\r\n\r\nexport interface MetricsData {\r\n  [metric: string]: MetricData;\r\n}\r\n\r\nexport interface PerformanceSummary {\r\n  success: boolean;\r\n  periodData: {\r\n    [key in Period]: MetricsData;\r\n  };\r\n}\r\n\r\n// Styling constants for visual consistency\r\nconst METRIC_COLORS = {\r\n  // Meta metrics\r\n  \"metaspend\": \"bg-blue-500\",\r\n  \"metaroas\": \"bg-purple-500\",\r\n  \r\n  // Analytics metrics\r\n  \"sessions\": \"bg-cyan-500\",\r\n  \"addToCarts\": \"bg-orange-500\",\r\n  \"checkouts\": \"bg-teal-500\",\r\n  \"purchases\": \"bg-red-500\",\r\n  \"addToCartRate\": \"bg-pink-500\",\r\n  \"checkoutRate\": \"bg-emerald-500\",\r\n  \"purchaseRate\": \"bg-rose-500\",\r\n  \r\n  // Google metrics\r\n  \"spend\": \"bg-green-500\",\r\n  \"roas\": \"bg-indigo-500\",\r\n};\r\n\r\nconst METRIC_BG_COLORS = {\r\n  // Meta metrics\r\n  \"metaspend\": \"bg-blue-50 border-blue-100\",\r\n  \"metaroas\": \"bg-purple-50 border-purple-100\",\r\n  \r\n  // Analytics metrics\r\n  \"sessions\": \"bg-cyan-50 border-cyan-100\",\r\n  \"addToCarts\": \"bg-orange-50 border-orange-100\",\r\n  \"checkouts\": \"bg-teal-50 border-teal-100\",\r\n  \"purchases\": \"bg-red-50 border-red-100\",\r\n  \"addToCartRate\": \"bg-pink-50 border-pink-100\",\r\n  \"checkoutRate\": \"bg-emerald-50 border-emerald-100\",\r\n  \"purchaseRate\": \"bg-rose-50 border-rose-100\",\r\n  \r\n  // Google metrics\r\n  \"spend\": \"bg-green-50 border-green-100\",\r\n  \"roas\": \"bg-indigo-50 border-indigo-100\",\r\n};\r\n\r\nconst formatValue = (value: number, isRoas = false) => {\r\n  if (isRoas) return value.toFixed(2);\r\n  return value >= 1000 ? Math.round(value).toLocaleString() : value;\r\n};\r\n\r\ninterface MetricCardProps {\r\n  metric: keyof typeof METRIC_COLORS;\r\n  label: string;\r\n  value: number;\r\n  change: number;\r\n  trend: Trend;\r\n  source: Source;\r\n  prevValue: number;\r\n}\r\n\r\nfunction MetricCard({ \r\n  metric, \r\n  label,\r\n  value, \r\n  change, \r\n  trend,\r\n  prevValue,\r\n  source\r\n}: MetricCardProps) {\r\n  \r\n  return (\r\n    <div className={cn(\"p-3 rounded-md border shadow-sm flex flex-col\", METRIC_BG_COLORS[metric])}>\r\n      <div className=\"flex flex-row items-center justify-between\">\r\n        <div className=\"flex items-center mb-1\">\r\n          <div className={cn(\"h-2 w-2 rounded-full mr-1.5\", METRIC_COLORS[metric])}></div>\r\n          <span className=\"text-xs font-medium text-slate-700\">{label}</span>\r\n        </div>\r\n        {(() => {\r\n          switch (source) {\r\n            case \"analytics\":\r\n              return <Ga4Logo width={\"1rem\"} height={\"1rem\"} />;\r\n            case \"meta\":\r\n              return <FacebookLogo width={\"1rem\"} height={\"1rem\"} />;\r\n            default:\r\n              return <GoogleLogo width={\"1rem\"} height={\"1rem\"} />;\r\n          }\r\n        })()}\r\n      </div>\r\n      <div className=\"text-lg font-bold text-slate-800\">\r\n         {formatValue(Number(value))}\r\n      </div>\r\n      <div className=\"flex items-center mt-1 justify-between\">\r\n        <span className=\"text-xs text-slate-500\">vs {formatValue(Number(prevValue), false)}</span>\r\n        <div\r\n          className={cn(\r\n            \"flex items-center text-xs font-medium\",\r\n            trend === \"up\" ? \"text-green-600\" : \"text-red-600\"\r\n          )}\r\n        >\r\n          {trend === \"up\" ? <ArrowUpIcon className=\"h-3 w-3 mr-0.5\" /> : <ArrowDownIcon className=\"h-3 w-3 mr-0.5\" />}\r\n          {Math.abs(Number(change))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PerformanceCard({ \r\n  period,\r\n  performanceData,\r\n  apiStatus\r\n}: { \r\n  period: Period;\r\n  performanceData: {\r\n    meta?: PerformanceSummary['periodData'];\r\n    google?: PerformanceSummary['periodData'];\r\n    analytics?: PerformanceSummary['periodData'];\r\n  };\r\n  apiStatus: {\r\n    meta: boolean;\r\n    google: boolean;\r\n    analytics: boolean;\r\n  };\r\n}) {\r\n  // Combine metrics from all sources for the specified period\r\n  const combineMetrics = () => {\r\n    const allMetrics: { [source: string]: MetricsData } = {};\r\n    \r\n    if (performanceData.meta?.[period] && apiStatus.meta) {\r\n      allMetrics.meta = performanceData.meta[period];\r\n    }\r\n    if (performanceData.google?.[period] && apiStatus.google) {\r\n      allMetrics.google = performanceData.google[period];\r\n    }\r\n    if (performanceData.analytics?.[period] && apiStatus.analytics) {\r\n      allMetrics.analytics = performanceData.analytics[period];\r\n    }\r\n    \r\n    return allMetrics;\r\n  };\r\n\r\n  const combinedMetrics = combineMetrics();\r\n\r\n  const periodLabels = {\r\n    \"yesterday\": \"Yesterday\",\r\n    \"last7Days\": \"Last 7 Days\",\r\n    \"last30Days\": \"Last 30 Days\"\r\n  };\r\n\r\n  if (Object.keys(combinedMetrics).length === 0) {\r\n    return (\r\n      <div className=\"bg-white border rounded-lg shadow-md p-6 text-center text-slate-500\">\r\n        No data available for {periodLabels[period]}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Create cards for each data source, showing \"No Data Found\" for failed ones\r\n  const renderSourceCards = () => {\r\n    const cards = [];\r\n\r\n    // Check if we need to display \"No Data Found\" for Meta\r\n    if (!apiStatus.meta) {\r\n      cards.push(\r\n        <div key=\"meta-no-data\" className=\"col-span-1 p-3 rounded-md border shadow-sm flex flex-col justify-center items-center bg-gray-50 h-24\">\r\n          <FacebookLogo width={\"1.5rem\"} height={\"1.5rem\"}/>\r\n          <span className=\"text-sm text-slate-500\">No data found</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Check if we need to display \"No Data Found\" for Google\r\n    if (!apiStatus.google) {\r\n      cards.push(\r\n        <div key=\"google-no-data\" className=\"col-span-1 p-3 rounded-md border shadow-sm flex flex-col justify-center items-center bg-gray-50 h-24\">\r\n          <GoogleLogo width={\"1.5rem\"} height={\"1.5rem\"} />\r\n          <span className=\"text-sm text-slate-500\">No data found</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Check if we need to display \"No Data Found\" for Analytics\r\n    if (!apiStatus.analytics) {\r\n      cards.push(\r\n        <div key=\"analytics-no-data\" className=\"col-span-1 p-3 rounded-md border shadow-sm flex flex-col justify-center items-center bg-gray-50 h-24\">\r\n          <Ga4Logo width={\"1.5rem\"} height={\"1.5rem\"}  />\r\n          <span className=\"text-sm text-slate-500\">No data found</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Add actual metric cards for successful API calls\r\n    Object.entries(combinedMetrics).forEach(([source, sourceMetrics]) => \r\n      Object.entries(sourceMetrics).forEach(([key, metricData]) => {\r\n        cards.push(\r\n          <MetricCard\r\n            key={`${source}-${key}`}\r\n            metric={key as keyof typeof METRIC_COLORS}\r\n            label={\r\n              key === 'metaspend' ? 'Meta Spend' : \r\n              key === 'metaroas' ? 'Meta ROAS' : \r\n              key === 'spend' ? 'Google Spend' :\r\n              key === 'roas' ? 'Google ROAS' :\r\n              key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())\r\n            }\r\n            value={metricData.current}\r\n            change={metricData.change}\r\n            trend={metricData.trend}\r\n            prevValue={metricData.previous}\r\n            source={source as Source}\r\n          />\r\n        );\r\n      })\r\n    );\r\n\r\n    return cards;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white border rounded-lg shadow-md p-6 space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-xl font-bold text-slate-800\">\r\n          {periodLabels[period]} Performance Overview\r\n        </h2>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n        {renderSourceCards()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Main dashboard component\r\nconst SummaryDashboard: React.FC = () => {\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const brandId = useSelector((state: RootState) => state.brand.selectedBrandId);\r\n\r\n  const userName = user?.username;\r\n  const [loading, setLoading] = useState(false);\r\n  const [performanceData, setPerformanceData] = useState<{\r\n    meta?: PerformanceSummary['periodData'];\r\n    google?: PerformanceSummary['periodData'];\r\n    analytics?: PerformanceSummary['periodData'];\r\n  }>({});\r\n\r\n  const navigate = useNavigate();\r\n  \r\n  // Track API call success/failure status\r\n  const [apiStatus, setApiStatus] = useState({\r\n    meta: true,\r\n    google: true,\r\n    analytics: true\r\n  });\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const fetchPerformanceData = useCallback(async () => {\r\n    if (!brandId) {\r\n      console.log('No brand ID available, skipping API calls');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setPerformanceData({});\r\n    setApiStatus({\r\n      meta: true,\r\n      google: true,\r\n      analytics: true\r\n    });\r\n\r\n    try {\r\n      const metaPromise = axiosInstance.post(\r\n        `api/summary/facebook-ads/${brandId}`,\r\n        { withCredentials: true }\r\n      ).catch(error => {\r\n        console.error('Error fetching Meta data:', error);\r\n        setApiStatus(prev => ({ ...prev, meta: false }));\r\n        return { data: { success: false } };\r\n      });\r\n\r\n      const googlePromise = axiosInstance.post(\r\n        `api/summary/google-ads/${brandId}`,\r\n        { withCredentials: true }\r\n      ).catch(error => {\r\n        console.error('Error fetching Google data:', error);\r\n        setApiStatus(prev => ({ ...prev, google: false }));\r\n        return { data: { success: false } };\r\n      });\r\n\r\n      const analyticsPromise = axiosInstance.post(\r\n        `api/summary/analytics/${brandId}`,\r\n        { withCredentials: true }\r\n      ).catch(error => {\r\n        console.error('Error fetching Analytics data:', error);\r\n        setApiStatus(prev => ({ ...prev, analytics: false }));\r\n        return { data: { success: false } };\r\n      });\r\n      \r\n      const [metaResponse, googleResponse, analyticsResponse] = await Promise.all([\r\n        metaPromise,\r\n        googlePromise,\r\n        analyticsPromise\r\n      ]);\r\n\r\n      setPerformanceData({\r\n        meta: metaResponse.data.success ? metaResponse.data.periodData : undefined,\r\n        google: googleResponse.data.success ? googleResponse.data.periodData : undefined,\r\n        analytics: analyticsResponse.data.success ? analyticsResponse.data.periodData : undefined\r\n      });\r\n      \r\n      // Update API status based on response success property\r\n      setApiStatus({\r\n        meta: metaResponse.data.success,\r\n        google: googleResponse.data.success,\r\n        analytics: analyticsResponse.data.success\r\n      });\r\n    } catch (error) {\r\n      console.error('Error in fetchPerformanceData:', error);\r\n      // If we had an overall error, mark all APIs as failed\r\n      setApiStatus({\r\n        meta: false,\r\n        google: false,\r\n        analytics: false\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [brandId]);\r\n\r\n  useEffect(() => {\r\n      fetchPerformanceData();\r\n  }, [fetchPerformanceData]);\r\n\r\n  useEffect(()=>{\r\n    if(!user?.brands || user.brands.length === 0){\r\n      navigate(\"/brand-setup\")\r\n    }\r\n  },[])\r\n\r\n  if (loading) {\r\n    return <Loader isLoading={loading} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-slate-50 text-slate-900\">\r\n      <div className=\"mx-auto p-6 max-w-7xl\">\r\n        <div className=\"mb-6 animate-fade-up\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"h-12 w-1 bg-blue-500 rounded-full\" />\r\n              <div>\r\n                <h1 className=\"text-2xl lg:text-3xl font-bold tracking-tight\">Welcome Back, {userName}</h1>\r\n                <p className=\"text-slate-500 mt-1\">Here's your performance overview</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-row items-center gap-3\">\r\n              <HeaderTutorialButton />\r\n              <Button\r\n                onClick={fetchPerformanceData}\r\n                disabled={loading}\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                className=\"hover:bg-slate-100\"\r\n              >\r\n                <RefreshCw className={cn(\"h-4 w-4 \", loading && \"animate-spin\")} />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Performance Cards for All Periods */}\r\n        <div className=\"space-y-6\">\r\n          {(['yesterday', 'last7Days', 'last30Days'] as Period[]).map(period => (\r\n            <PerformanceCard \r\n              key={period}\r\n              period={period}\r\n              performanceData={performanceData}\r\n              apiStatus={apiStatus}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SummaryDashboard;","import React from \"react\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\";\r\nimport { useUser } from \"@/context/UserContext\";\r\nimport Dashboard from \"./BrandSetUpDashboard\";\r\nimport SummaryDashboard from \"./dashboard\";\r\nimport HelpDeskModal from \"@/components/dashboard_component/HelpDeskModal\";\r\n// import LandingSlides from \"./components/LandingSlides\";\r\n\r\nconst GeneralDashboard: React.FC = () => {\r\n    const { user } = useUser();\r\n\r\n    return (\r\n        <div className=\"flex h-screen relative\"> \r\n            <CollapsibleSidebar />\r\n            <div className=\"flex-1 h-screen overflow-auto\">\r\n               \r\n                {user?.brands?.length === 0 ? <Dashboard /> : <SummaryDashboard />}\r\n            </div>\r\n            <HelpDeskModal />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GeneralDashboard;","import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ninterface Brand {\r\n  _id: string;\r\n  name: string;\r\n  brandId: string;\r\n  fbAdAccounts?: [];\r\n  googleAdAccount?: { \r\n    clientId: string;\r\n    managerId: string;\r\n  }[];\r\n  ga4Account?: {string : string};\r\n}\r\n\r\ninterface BrandContextType {\r\n  selectedBrandId: string | null;\r\n  setSelectedBrandId: (id: string | null) => void;\r\n  resetBrand: () => void;\r\n  brands: Brand[];\r\n  setBrands: (brands: Brand[]) => void;\r\n}\r\n\r\nconst BrandContext = createContext<BrandContextType | undefined>(undefined);\r\n\r\nexport const BrandProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [selectedBrandId, setSelectedBrandId] = useState<string | null>(null);\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n\r\n  // Load brands from local storage when the component mounts\r\n  useEffect(() => {\r\n    const storedBrands = localStorage.getItem('brands');\r\n    const storedSelectedBrandId = localStorage.getItem('selectedBrandId');\r\n\r\n    if (storedBrands) {\r\n      setBrands(JSON.parse(storedBrands));\r\n    }\r\n    if (storedSelectedBrandId) {\r\n      setSelectedBrandId(storedSelectedBrandId);\r\n    }\r\n  }, []);\r\n\r\n  // Whenever brands state changes, save them to local storage\r\n  useEffect(() => {\r\n    if (brands.length > 0) {\r\n      localStorage.setItem('brands', JSON.stringify(brands));\r\n    }\r\n  }, [brands]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBrandId) {\r\n      localStorage.setItem('selectedBrandId', selectedBrandId);\r\n    }\r\n  }, [selectedBrandId]);\r\n\r\n  const resetBrand = () => {\r\n    setSelectedBrandId(null);\r\n    localStorage.removeItem('selectedBrandId');\r\n  };\r\n\r\n  return (\r\n    <BrandContext.Provider value={{ selectedBrandId, setSelectedBrandId, resetBrand, brands, setBrands }}>\r\n      {children}\r\n    </BrandContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useBrand = () => {\r\n  const context = useContext(BrandContext);\r\n  if (context === undefined) {\r\n    throw new Error('useBrand must be used within a BrandProvider');\r\n  }\r\n  return context;\r\n};\r\n","import { useEffect, useState } from \"react\"\r\nimport { Link, useParams } from \"react-router-dom\"\r\nimport { ArrowRight, BarChart3, LineChart, PieChart } from \"lucide-react\"\r\n\r\n\r\nexport default function DataBuilding() {\r\n  const { brandId } = useParams<{ brandId: string }>()\r\n  const [loadingText, setLoadingText] = useState(\"Fetching table data\")\r\n  const loadingMessages = [\r\n    \"Fetching table data\",\r\n    \"Processing sales records\",\r\n    \"Aggregating metrics\",\r\n    \"Organizing table columns\",\r\n    \"Calculating performance indicators\",\r\n    \"Preparing data tables\",\r\n  ]\r\n\r\n  // Cycle through loading messagesb\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setLoadingText((prev) => {\r\n        const currentIndex = loadingMessages.indexOf(prev)\r\n        const nextIndex = (currentIndex + 1) % loadingMessages.length\r\n        return loadingMessages[nextIndex]\r\n      })\r\n    }, 2500)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"bg-slate-50 flex flex-col w-full min-h-screen\">\r\n      <main className=\"container max-w-6xl mx-auto px-4 py-8 flex flex-col h-screen justify-center\">\r\n        <div className=\"w-full text-center mb-12\">\r\n          <h1 className=\"text-xl md:text-4xl font-bold text-primary mb-3\">Preparing your dashboard...</h1>\r\n\r\n          {/* Animated loading text */}\r\n          <div className=\"h-8 my-8\">\r\n            <p className=\"text-base md:text-lg text-violet-600 font-medium animate-pulse\">{loadingText}...</p>\r\n          </div>\r\n\r\n          <p className=\"text-sm md:text-base text-gray-700 max-w-4xl mx-auto mb-2\">\r\n            We're pulling your analytics data from the past two years.\r\n          </p>\r\n          <p className=\"text-sm md:text-base text-gray-500 max-w-4xl mx-auto mb-8\">\r\n            This process may take <span className=\"font-medium\">1-2 hours</span> to complete.\r\n          </p>\r\n\r\n          <p className=\"text-sm md:text-base text-gray-700 max-w-4xl mx-auto mb-10\">\r\n            In the meantime, you can explore these dashboards:\r\n          </p>\r\n\r\n          {/* Dashboard Links - Horizontal Layout */}\r\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center mt-6\">\r\n            {/* AdMetrics Hub Card */}\r\n            <Link\r\n              to={`/admetrics/${brandId}`}\r\n              className=\"bg-white rounded-lg shadow-md border-2 overflow-hidden transition-all duration-300 hover:shadow-lg hover:translate-y-[-2px] group flex-1 max-w-xs mx-auto sm:mx-0\"\r\n            >\r\n              <div className=\"p-5 flex flex-col items-center text-center\">\r\n                <div className=\"w-12 h-12 rounded-full bg-violet-100 flex items-center justify-center mb-3\">\r\n                  <BarChart3 className=\"w-6 h-6 text-violet-600\" />\r\n                </div>\r\n                <h3 className=\"text-lg font-medium text-gray-800 mb-2\">AdMetrics Hub</h3>\r\n                <div className=\"flex items-center text-violet-600 text-sm font-medium\">\r\n                  <span>View dashboard</span>\r\n                  <ArrowRight className=\"w-4 h-4 ml-1 transition-transform duration-300 group-hover:translate-x-1\" />\r\n                </div>\r\n              </div>\r\n            </Link>\r\n\r\n            {/* Ecommerce Insights Card */}\r\n            <Link\r\n              to={`/ecommerce-reports/${brandId}`}\r\n              className=\"bg-white rounded-lg shadow-md border-2 overflow-hidden transition-all duration-300 hover:shadow-lg hover:translate-y-[-2px] group flex-1 max-w-xs mx-auto sm:mx-0\"\r\n            >\r\n              <div className=\"p-5 flex flex-col items-center text-center\">\r\n                <div className=\"w-12 h-12 rounded-full bg-pink-100 flex items-center justify-center mb-3\">\r\n                  <PieChart className=\"w-6 h-6 text-pink-600\" />\r\n                </div>\r\n                <h3 className=\"text-lg font-medium text-gray-800 mb-2\">Ecommerce Insights</h3>\r\n                <div className=\"flex items-center text-pink-600 text-sm font-medium\">\r\n                  <span>View dashboard</span>\r\n                  <ArrowRight className=\"w-4 h-4 ml-1 transition-transform duration-300 group-hover:translate-x-1\" />\r\n                </div>\r\n              </div>\r\n            </Link>\r\n\r\n            {/* Campaign Analysis Card */}\r\n            <Link\r\n              to={`/meta-campaigns/${brandId}`}\r\n              className=\"bg-white rounded-lg shadow-md border-2 overflow-hidden transition-all duration-300 hover:shadow-lg hover:translate-y-[-2px] group flex-1 max-w-xs mx-auto sm:mx-0\"\r\n            >\r\n              <div className=\"p-5 flex flex-col items-center text-center\">\r\n                <div className=\"w-12 h-12 rounded-full bg-blue-100 flex items-center justify-center mb-3\">\r\n                  <LineChart className=\"w-6 h-6 text-blue-600\" />\r\n                </div>\r\n                <h3 className=\"text-lg font-medium text-gray-800 mb-2\">Campaign Analysis</h3>\r\n                <div className=\"flex items-center text-blue-600 text-sm font-medium\">\r\n                  <span>View dashboard</span>\r\n                  <ArrowRight className=\"w-4 h-4 ml-1 transition-transform duration-300 group-hover:translate-x-1\" />\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useMemo, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { format } from \"date-fns\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\"\r\nimport { CalendarRange, ChevronDown, Download, Maximize, Minimize } from \"lucide-react\"\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@radix-ui/react-tooltip\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { FacebookLogo, GoogleLogo, ShopifyLogo } from \"@/data/logo.tsx\"\r\nimport { useSelector } from \"react-redux\"\r\nimport type { RootState } from \"@/store\"\r\nimport Header from \"@/components/dashboard_component/Header\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\"\r\nimport HelpDeskModal from \"@/components/dashboard_component/HelpDeskModal\"\r\nimport type { ITooltipHeaderProps, IMonthlyAggregate } from \"@/interfaces/index\"\r\nimport Loader from \"@/components/dashboard_component/loader\"\r\nimport { baseURL } from \"@/data/constant\"\r\nimport DataBuilding from \"./components/DataBuilding\"\r\n\r\n\r\nfunction TooltipHeader({\r\n  title,\r\n  tooltip,\r\n  colSpan = 1,\r\n  rowSpan,\r\n  isSubHeader = false,\r\n  isImportant = false,\r\n}: Readonly<ITooltipHeaderProps & { isImportant?: boolean }>) {\r\n  return (\r\n    <th\r\n      className={`\r\n        ${isSubHeader ? \"text-xs font-medium\" : \"font-semibold text-sm\"}\r\n        text-center whitespace-nowrap p-2\r\n        ${isSubHeader ? \"bg-slate-100\" : \"bg-slate-200\"}\r\n        ${isImportant ? \"bg-blue-50 !font-bold text-blue-800\" : \"\"}\r\n        relative overflow-hidden\r\n        ${!isSubHeader ? \"sticky top-0 z-10\" : \"\"}\r\n        font-inter border-b border-r border-slate-300\r\n      `}\r\n      colSpan={colSpan}\r\n      rowSpan={rowSpan}\r\n    >\r\n      <TooltipProvider>\r\n        <Tooltip>\r\n          <TooltipTrigger asChild>\r\n            <span\r\n              className={`\r\n                flex items-center justify-center gap-1 cursor-help\r\n                ${isImportant ? \"text-blue-800\" : \"\"}\r\n              `}\r\n            >\r\n              {isImportant && <span className=\"text-blue-500\">●</span>}\r\n              {title}\r\n            </span>\r\n          </TooltipTrigger>\r\n          <TooltipContent className=\"mb-3\">\r\n            <div className=\"text-gray-700 bg-white p-2 rounded-md text-sm border shadow-lg max-w-xs\">\r\n              {isImportant && <div className=\"font-semibold text-blue-600 mb-1\">Key Metric</div>}\r\n              {tooltip}\r\n            </div>\r\n          </TooltipContent>\r\n        </Tooltip>\r\n      </TooltipProvider>\r\n    </th>\r\n  )\r\n}\r\n\r\n// Excel-like cell component\r\nfunction Cell({\r\n  children,\r\n  isNumeric = false,\r\n  isHeader = false,\r\n  isSticky = false,\r\n  isExpanded = false,\r\n  isImportant = false,\r\n  className = \"\",\r\n}: {\r\n  children?: React.ReactNode\r\n  isNumeric?: boolean\r\n  isHeader?: boolean\r\n  isSticky?: boolean\r\n  isExpanded?: boolean\r\n  isImportant?: boolean\r\n  className?: string\r\n}) {\r\n  return (\r\n    <td\r\n      className={`\r\n        border-b border-r border-slate-200\r\n        ${isNumeric ? \"text-right font-roboto tabular-nums\" : \"text-left\"} \r\n        ${isHeader ? \"font-medium font-dm-sans\" : \"\"}\r\n        ${isSticky ? \"sticky z-10\" : \"\"}\r\n        ${isExpanded ? \"bg-blue-50/30\" : \"bg-white hover:bg-slate-50/80\"}\r\n        ${isSticky && isExpanded ? \"bg-blue-50/30\" : \"\"}\r\n        ${isImportant ? \"font-semibold text-blue-700\" : \"\"}\r\n        transition-colors\r\n        ${className}\r\n      `}\r\n    >\r\n      {children}\r\n    </td>\r\n  )\r\n}\r\n\r\nexport const ExcelMetricsPage: React.FC = () => {\r\n  const [metricsData, setMetricsData] = useState<IMonthlyAggregate[]>([])\r\n  const [loading, setLoading] = useState<boolean>(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false)\r\n  const dateFrom = useSelector((state: RootState) => state.date.from)\r\n  const dateTo = useSelector((state: RootState) => state.date.to)\r\n  const [expandedMonths, setExpandedMonths] = useState<string[]>([])\r\n  const { brandId } = useParams()\r\n\r\n  const date = useMemo(\r\n    () => ({\r\n      from: dateFrom,\r\n      to: dateTo,\r\n    }),\r\n    [dateFrom, dateTo],\r\n  )\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\"\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\"\r\n\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen)\r\n  }\r\n\r\n  const getTableHeight = () => {\r\n    if (isFullScreen) {\r\n      return \"max-h-[calc(100vh-120px)]\"\r\n    }\r\n    return \"max-h-[calc(100vh-230px)]\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true)\r\n      setError(null)\r\n      try {\r\n        const queryParams: Record<string, string> = {}\r\n\r\n        if (startDate) queryParams.startDate = startDate\r\n        if (endDate) queryParams.endDate = endDate\r\n\r\n        const reportResponse = await axios.get(`${baseURL}/api/report/${brandId}`, {\r\n          params: queryParams,\r\n          withCredentials: true,\r\n        })\r\n        const metricsData: IMonthlyAggregate[] = reportResponse.data.data\r\n        setMetricsData(metricsData);\r\n      } catch (err) {\r\n        console.error(err)\r\n        const message =\r\n          axios.isAxiosError(err) && err.response?.data?.message\r\n            ? err.response.data.message\r\n            : 'Something went wrong'\r\n        setError(message)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [brandId, startDate, endDate, baseURL])\r\n\r\n  const toggleMonth = (monthYear: string) => {\r\n    setExpandedMonths((prev) => (prev.includes(monthYear) ? prev.filter((m) => m !== monthYear) : [...prev, monthYear]))\r\n  }\r\n\r\n  const formatCurrency = (value: number) => {\r\n    return new Intl.NumberFormat(\"en-IN\", {\r\n      style: \"currency\",\r\n      currency: \"INR\",\r\n      maximumFractionDigits: 0,\r\n    }).format(value)\r\n  }\r\n\r\n  const formatPercentage = (value: number) => {\r\n    return `${value.toFixed(2)}`\r\n  }\r\n\r\n  const processedData = useMemo(() => {\r\n    const safeDivide = (numerator: number, denominator: number) => (denominator ? numerator / denominator : 0)\r\n\r\n    return metricsData.map((monthData: IMonthlyAggregate) => {\r\n      const processedDailyMetrics = monthData.dailyMetrics.map((daily) => ({\r\n        ...daily,\r\n        metaSales: daily.metaSpend * (daily.metaROAS || 0),\r\n        googleSales: daily.googleSpend * (daily.googleROAS || 0),\r\n        adSales: daily.totalSpend * daily.grossROI || 0,\r\n        ROI: safeDivide(daily.totalSales, daily.totalSpend),\r\n      }))\r\n\r\n      const metaSales = processedDailyMetrics.reduce((sum, daily) => sum + daily.metaSales, 0)\r\n      const googleSales = processedDailyMetrics.reduce((sum, daily) => sum + daily.googleSales, 0)\r\n      const totalAdSales = metaSales + googleSales || 0\r\n\r\n      return {\r\n        ...monthData,\r\n        metaSales,\r\n        googleSales,\r\n        totalAdSales,\r\n        metaROAS: safeDivide(metaSales, monthData.metaSpend),\r\n        googleROAS: safeDivide(googleSales, monthData.googleSpend),\r\n        grossROI: safeDivide(totalAdSales, monthData.totalSpend),\r\n        netROI: safeDivide(monthData.shopifySales, monthData.totalSpend),\r\n        ROI: safeDivide(monthData.totalSales, monthData.totalSpend),\r\n        dailyMetrics: processedDailyMetrics,\r\n      }\r\n    })\r\n  }, [metricsData])\r\n\r\n  useMemo(() => {\r\n    if (!processedData.length) return null\r\n\r\n    const totalSales = processedData.reduce((sum, month) => sum + month.totalSales, 0)\r\n    const totalSpend = processedData.reduce((sum, month) => sum + month.totalSpend, 0)\r\n    const totalROI = totalSpend ? totalSales / totalSpend : 0\r\n    const metaSpend = processedData.reduce((sum, month) => sum + month.metaSpend, 0)\r\n    const googleSpend = processedData.reduce((sum, month) => sum + month.googleSpend, 0)\r\n    const metaSales = processedData.reduce((sum, month) => sum + month.metaSales, 0)\r\n    const googleSales = processedData.reduce((sum, month) => sum + month.googleSales, 0)\r\n    const metaROAS = metaSpend ? metaSales / metaSpend : 0\r\n    const googleROAS = googleSpend ? googleSales / googleSpend : 0\r\n\r\n    return {\r\n      totalSales,\r\n      totalSpend,\r\n      totalROI,\r\n      metaSpend,\r\n      googleSpend,\r\n      metaSales,\r\n      googleSales,\r\n      metaROAS,\r\n      googleROAS,\r\n    }\r\n  }, [processedData])\r\n\r\n\r\n  const renderTable = (): React.ReactNode => {\r\n    if (error) {\r\n      return <div className=\"rounded-lg bg-red-50 p-4 text-red-600 border border-red-200\">{error}</div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"border rounded-lg shadow-sm overflow-hidden bg-white\">\r\n        <div className={`${getTableHeight()} overflow-auto`}>\r\n          <table className=\"w-full border-collapse font-inter\">\r\n            <thead className=\"sticky top-0 z-20\">\r\n              <tr>\r\n                <th className=\"w-10 sticky left-0 z-30 bg-slate-200 border-b border-r border-slate-300\" rowSpan={2} />\r\n                <th\r\n                  className=\"sticky left-[40px] z-20 text-center whitespace-nowrap p-2 font-semibold text-sm bg-slate-200 border-b border-r border-slate-300\"\r\n                  rowSpan={2}\r\n                >\r\n                  Date\r\n                </th>\r\n                <TooltipHeader title=\"Shopify (Actual Sales Data)\" tooltip=\"Shopify Metrics\" colSpan={5} />\r\n                <TooltipHeader title=\"Meta + Google\" tooltip=\"Meta + Google\" colSpan={3} />\r\n                <TooltipHeader title=\"Meta (Facebook & Instagram Ads)\" tooltip=\"Meta Metrics\" colSpan={3} />\r\n                <TooltipHeader title=\"Google Ads\" tooltip=\"Google Metrics\" colSpan={3} />\r\n              </tr>\r\n              <tr>\r\n                <TooltipHeader title=\"Net Sales\" tooltip=\"Net Sales = Gross Sales - Discount\" isSubHeader />\r\n                <TooltipHeader\r\n                  title=\"Net ROI\"\r\n                  tooltip=\"Net ROI = Net Sales / Total Spend\"\r\n                  isSubHeader\r\n                  isImportant={true}\r\n                />\r\n                <TooltipHeader title=\"Returns\" tooltip=\"Returns\" isSubHeader />\r\n                <TooltipHeader title=\"Total Sales\" tooltip=\"Total Sales = Net Sales - Returns\" isSubHeader />\r\n                <TooltipHeader\r\n                  title=\"Final ROI\"\r\n                  tooltip=\"Final ROI = Total Sales / Total Spend\"\r\n                  isSubHeader\r\n                  isImportant={true}\r\n                />\r\n                <TooltipHeader title=\"Spend\" tooltip=\"Total Spent = Meta Spent + Google Spent\" isSubHeader />\r\n                <TooltipHeader title=\"Sales\" tooltip=\"Sales = (MetaSales + GoogleSales)\" isSubHeader />\r\n                <TooltipHeader title=\"ROI\" tooltip=\"ROI = (MetaSales + GoogleSales)/ Total Spent\" isSubHeader />\r\n                <TooltipHeader title=\"Spend\" tooltip=\"Meta Spent\" isSubHeader />\r\n                <TooltipHeader title=\"Sales\" tooltip=\"Meta Sales = Meta Spent * Meta ROAS\" isSubHeader />\r\n                <TooltipHeader title=\"ROAS\" tooltip=\"Meta ROAS\" isSubHeader isImportant={true} />\r\n                <TooltipHeader title=\"Spend\" tooltip=\"Google Spent\" isSubHeader />\r\n                <TooltipHeader title=\"Sales\" tooltip=\"Google Sales = Google Spent * Google ROAS\" isSubHeader />\r\n                <TooltipHeader title=\"ROAS\" tooltip=\"Google ROAS\" isSubHeader isImportant={true} />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {processedData.map((monthData: any) => {\r\n                const monthYear = `${monthData.year}-${monthData.month.toString().padStart(2, \"0\")}`\r\n                const isExpanded = expandedMonths.includes(monthYear)\r\n                return (\r\n                  <React.Fragment key={monthYear}>\r\n                    <tr\r\n                      className={`\r\n                        ${isExpanded ? \"bg-blue-50/30\" : \"bg-white hover:bg-slate-50/80\"} \r\n                        cursor-pointer transition-colors\r\n                      `}\r\n                      onClick={() => toggleMonth(monthYear)}\r\n                    >\r\n                      <Cell isSticky isExpanded={isExpanded} className=\"w-10 px-2 py-2 sticky left-0\">\r\n                        <div\r\n                          className={`\r\n                            w-6 h-6 rounded-full flex items-center justify-center\r\n                            transition-all duration-300 transform\r\n                            ${isExpanded ? \"rotate-180 bg-blue-500\" : \"bg-blue-100 hover:bg-blue-200\"}\r\n                          `}\r\n                        >\r\n                          <ChevronDown className={`w-4 h-4 ${isExpanded ? \"text-white\" : \"text-blue-500\"}`} />\r\n                        </div>\r\n                      </Cell>\r\n                      <Cell\r\n                        isHeader\r\n                        isSticky\r\n                        isExpanded={isExpanded}\r\n                        className=\"sticky left-[40px] px-3 py-2.5 whitespace-nowrap bg-slate-50/80 text-sm\"\r\n                      >\r\n                        {format(new Date(monthData.year, monthData.month - 1), \"MMM yyyy\")}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} className=\"px-3 py-2.5 font-medium text-sm\">\r\n                        {formatCurrency(monthData.shopifySales)}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} isImportant className=\"px-3 py-2.5 text-sm\">\r\n                        {formatPercentage(monthData.ROI)}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} className=\"px-3 py-2.5 text-sm\">\r\n                        {formatCurrency(monthData.refundAmount)}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} className=\"px-3 py-2.5 text-sm\">\r\n                        {formatCurrency(monthData.totalSales)}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} isImportant className=\"px-3 py-2.5 text-sm\">\r\n                        {formatPercentage(monthData.netROI)}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} className=\"px-3 py-2.5 text-sm\">\r\n                        {formatCurrency(monthData.totalSpend)}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} className=\"px-3 py-2.5 text-sm\">\r\n                        {formatCurrency(monthData.totalAdSales)}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} isImportant className=\"px-3 py-2.5 text-sm\">\r\n                        {formatPercentage(monthData.grossROI)}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} className=\"px-3 py-2.5 text-sm\">\r\n                        {formatCurrency(monthData.metaSpend)}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} className=\"px-3 py-2.5 text-sm\">\r\n                        {formatCurrency(monthData.metaSales)}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} isImportant className=\"px-3 py-2.5 text-sm\">\r\n                        {formatPercentage(monthData.metaROAS)}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} className=\"px-3 py-2.5 text-sm\">\r\n                        {formatCurrency(monthData.googleSpend)}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} className=\"px-3 py-2.5 text-sm\">\r\n                        {formatCurrency(monthData.googleSales)}\r\n                      </Cell>\r\n                      <Cell isNumeric isExpanded={isExpanded} isImportant className=\"px-3 py-2.5 text-sm\">\r\n                        {formatPercentage(monthData.googleROAS)}\r\n                      </Cell>\r\n                    </tr>\r\n                    {isExpanded &&\r\n                      monthData.dailyMetrics.map((daily: any) => (\r\n                        <tr key={daily._id} className=\"bg-slate-50/50 hover:bg-slate-100/50 transition-colors\">\r\n                          <Cell isSticky className=\"w-10 px-2 py-1.5 sticky left-0 bg-slate-50/50\" />\r\n                          <Cell\r\n                            isSticky\r\n                            className=\"sticky left-[40px] px-3 py-1.5 text-xs text-gray-600 bg-slate-50/80\"\r\n                          >\r\n                            {format(new Date(daily.date), \"dd/MM/yyyy\")}\r\n                          </Cell>\r\n                          <Cell isNumeric className=\"px-3 py-1.5 text-xs\">\r\n                            {formatCurrency(daily.shopifySales)}\r\n                          </Cell>\r\n                          <Cell isNumeric isImportant className=\"px-3 py-1.5 text-xs\">\r\n                            {formatPercentage(daily.ROI)}\r\n                          </Cell>\r\n                          <Cell isNumeric className=\"px-3 py-1.5 text-xs\">\r\n                            {formatCurrency(daily.refundAmount)}\r\n                          </Cell>\r\n                          <Cell isNumeric className=\"px-3 py-1.5 text-xs\">\r\n                            {formatCurrency(daily.totalSales)}\r\n                          </Cell>\r\n                          <Cell isNumeric isImportant className=\"px-3 py-1.5 text-xs\">\r\n                            {formatPercentage(daily.netROI)}\r\n                          </Cell>\r\n                          <Cell isNumeric className=\"px-3 py-1.5 text-xs\">\r\n                            {formatCurrency(daily.totalSpend)}\r\n                          </Cell>\r\n                          <Cell isNumeric className=\"px-3 py-1.5 text-xs\">\r\n                            {formatCurrency(daily.adSales)}\r\n                          </Cell>\r\n                          <Cell isNumeric isImportant className=\"px-3 py-1.5 text-xs\">\r\n                            {formatPercentage(daily.grossROI)}\r\n                          </Cell>\r\n                          <Cell isNumeric className=\"px-3 py-1.5 text-xs\">\r\n                            {formatCurrency(daily.metaSpend)}\r\n                          </Cell>\r\n                          <Cell isNumeric className=\"px-3 py-1.5 text-xs\">\r\n                            {formatCurrency(daily.metaSales)}\r\n                          </Cell>\r\n                          <Cell isNumeric isImportant className=\"px-3 py-1.5 text-xs\">\r\n                            {formatPercentage(daily.metaROAS)}\r\n                          </Cell>\r\n                          <Cell isNumeric className=\"px-3 py-1.5 text-xs\">\r\n                            {formatCurrency(daily.googleSpend)}\r\n                          </Cell>\r\n                          <Cell isNumeric className=\"px-3 py-1.5 text-xs\">\r\n                            {formatCurrency(daily.googleSales)}\r\n                          </Cell>\r\n                          <Cell isNumeric isImportant className=\"px-3 py-1.5 text-xs\">\r\n                            {formatPercentage(daily.googleROAS)}\r\n                          </Cell>\r\n                        </tr>\r\n                      ))}\r\n                  </React.Fragment>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderContent = () => {\r\n    if (loading) return <Loader isLoading={loading} />\r\n    if (error === 'No metrics data available yet. Please try again later.') return <DataBuilding />\r\n    return (\r\n      <div className=\"flex-1 h-screen overflow-hidden bg-slate-100\">\r\n        <Header title=\"Marketing Insights Tracker\" Icon={CalendarRange} showDatePicker={true} />\r\n        <Card\r\n          id=\"metrics-table\"\r\n          className={`${isFullScreen ? \"fixed inset-0 z-50 m-0 rounded-none\" : \"m-6\"} shadow-md`}\r\n        >\r\n          <CardContent className=\"p-4 md:p-6\">\r\n            <div className=\"flex flex-col md:flex-row items-start md:items-center justify-between mb-6 gap-4\">\r\n              <div className=\"flex flex-col md:flex-row items-start md:items-center gap-4\">\r\n                <h2 className=\"text-xl font-semibold text-slate-800\">Key Performance Metrics</h2>\r\n                <div className=\"flex flex-row gap-3 items-center\">\r\n                  <FacebookLogo width={20} height={20} />\r\n                  <GoogleLogo width={20} height={20} />\r\n                  <ShopifyLogo width={20} height={20} />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-row items-center gap-3\">\r\n                {isFullScreen && (\r\n                  <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                    <DatePickerWithRange\r\n                      defaultDate={{\r\n                        from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                        to: new Date(),\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n                <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\" className=\"bg-white\">\r\n                  {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                </Button>\r\n                <Button variant=\"outline\" size=\"sm\" className=\"gap-2 bg-white\">\r\n                  <Download className=\"h-4 w-4\" />\r\n                  Export\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            {renderTable()}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n        {renderContent()}\r\n      </div>\r\n      <HelpDeskModal />\r\n    </div>\r\n  )\r\n}\r\n\r\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","import * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"@radix-ui/react-icons\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDownIcon className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUpIcon className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDownIcon className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <CheckIcon className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n","import { useState, useEffect, useCallback } from 'react'\r\nimport { PlusCircle, Edit2, X, Trash2 } from 'lucide-react'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\r\nimport { Calendar } from \"@/components/ui/calendar\"\r\nimport { format, endOfMonth } from \"date-fns\"\r\nimport { Bar, BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip } from 'recharts'\r\nimport { cn } from \"@/lib/utils\"\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '@/store'\r\n\r\n// Define types for better type safety\r\ninterface MetricsData {\r\n  spend: number;\r\n  Revenue: number;\r\n  purchase_roas: string;\r\n  individualAccounts?: Array<{\r\n    accountId: string;\r\n    spend: number;\r\n    purchase_roas: string;\r\n    Revenue: string | number;\r\n  }>;\r\n}\r\n\r\ninterface BrandTarget {\r\n  brandId: string;\r\n  name: string;\r\n  source: string;\r\n  targetSales: number;\r\n  targetSpend: number;\r\n  targetROAS: number;\r\n  targetDate: Date;\r\n}\r\n\r\nexport default function BrandPerformanceDashboard() {\r\n  const brands = useSelector((state: RootState) => state.brand.brands)\r\n  const [selectedBrands, setSelectedBrands] = useState<Array<BrandTarget>>([])\r\n  const [newBrand, setNewBrand] = useState<BrandTarget>({\r\n    brandId: '',\r\n    name: '',\r\n    source: '',\r\n    targetSales: 0,\r\n    targetSpend: 0,\r\n    targetROAS: 0,\r\n    targetDate: endOfMonth(new Date())\r\n  })\r\n  const [editingBrand, setEditingBrand] = useState<string | null>(null)\r\n  const [editData, setEditData] = useState<BrandTarget | null>(null)\r\n  const [achievedMetrics, setAchievedMetrics] = useState<{ [key: string]: MetricsData }>({})\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const userId = user?.id;\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const getMetaMetrics = useCallback(async (brandId: string) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${baseURL}/api/performance/metaMetrics/${brandId}`, { userId },\r\n        { withCredentials: true }\r\n      );\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching metrics data:', error);\r\n      if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n        alert('Your session has expired. Please log in again.');\r\n        navigate('/');\r\n      }\r\n      return { success: false, data: { spend: 0, Revenue: 0, purchase_roas: \"0.00\" } };\r\n    }\r\n  }, [baseURL, userId, navigate]);\r\n  \r\n  const fetchMetricsData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const metricsData: { [key: string]: MetricsData } = {};\r\n      await Promise.all(\r\n        selectedBrands.map(async (brand) => {\r\n          const response = await getMetaMetrics(brand.brandId);\r\n          if (response.success) {\r\n            metricsData[brand.brandId] = response.data;\r\n          }\r\n        })\r\n      );\r\n      setAchievedMetrics(metricsData);\r\n    } catch (error) {\r\n      console.error('Error fetching metrics data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [selectedBrands, getMetaMetrics]);\r\n  \r\n  useEffect(() => {\r\n    if (selectedBrands.length > 0) {\r\n      fetchMetricsData();\r\n    }\r\n  }, [fetchMetricsData, selectedBrands]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setNewBrand(prev => ({ ...prev, [name]: ['brandId', 'name'].includes(name) ? value : Number(value) }))\r\n  }\r\n\r\n  const handleSourceChange = (value: string) => {\r\n    setNewBrand(prev => ({ ...prev, source: value }))\r\n  }\r\n\r\n  const handleAddBrand = async () => {\r\n    const brandToAdd = brands.find(b => String(b._id) === String(newBrand.brandId));\r\n\r\n    if (brandToAdd) {\r\n      try {\r\n        const newBrandTarget = {\r\n          brandId: brandToAdd._id,\r\n          name: brandToAdd.name,\r\n          source: newBrand.source,\r\n          targetSales: newBrand.targetSales,\r\n          targetSpend: newBrand.targetSpend,\r\n          targetROAS: newBrand.targetROAS,\r\n          targetDate: newBrand.targetDate,\r\n        };\r\n\r\n        const response = await axios.post(`${baseURL}/api/performance/addTarget`, newBrandTarget, { withCredentials: true });\r\n\r\n        setSelectedBrands(prev => [...prev, response.data]);\r\n        setNewBrand({\r\n          brandId: '',\r\n          name: '',\r\n          source: '',\r\n          targetSales: 0,\r\n          targetSpend: 0,\r\n          targetROAS: 0,\r\n          targetDate: endOfMonth(new Date())\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('Error adding brand:', error);\r\n      }\r\n    } else {\r\n      console.log(\"Brand not found\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (brandId: string) => {\r\n    const brandToEdit = selectedBrands.find(b => b.brandId === brandId)\r\n    if (brandToEdit) {\r\n      setEditingBrand(brandId)\r\n      setEditData({ ...brandToEdit, targetDate: new Date(brandToEdit.targetDate) })\r\n    }\r\n  }\r\n\r\n  const handleSaveEdit = async (brandId: string) => {\r\n    if (editData) {\r\n      try {\r\n        const response = await axios.patch(`${baseURL}/api/performance/updateTarget/${brandId}`, editData, { withCredentials: true });\r\n        setSelectedBrands(prev => prev.map(brand =>\r\n          brand.brandId === brandId ? { ...brand, ...response.data } : brand\r\n        ));\r\n\r\n        setEditingBrand(null);\r\n        setEditData(null);\r\n\r\n        alert('Brand updated successfully!');\r\n      } catch (error) {\r\n        console.error('Error saving brand edit:', error);\r\n        alert('Failed to update brand');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingBrand(null)\r\n    setEditData(null)\r\n  }\r\n\r\n  const handleDelete = async (brandId: string) => {\r\n    try {\r\n      await axios.delete(`${baseURL}/api/performance/deleteTarget/${brandId}`, { withCredentials: true });\r\n      setSelectedBrands(prev => prev.filter(brand => brand.brandId !== brandId));\r\n      console.log('Brand deleted successfully');\r\n    } catch (error) {\r\n      console.error('Error deleting brand:', error);\r\n    }\r\n  };\r\n\r\n  const Loader = () => (\r\n    <div className=\"animate-spin rounded-full h-5 w-5 border-t-2 border-blue-500\"></div>\r\n  )\r\n\r\n  const calculateMetrics = (brand: BrandTarget) => {\r\n    const metrics = achievedMetrics[brand.brandId] || { spend: 0, Revenue: 0, purchase_roas: \"0.00\" }; \r\n    // Calculate spent metrics\r\n    const achievedSpend = metrics.spend || 0;\r\n    // Calculate sales metrics\r\n    const achievedSales = Number(metrics.Revenue) || 0;\r\n    const remainingSales = Math.max(brand.targetSales - achievedSales, 0).toFixed(2);\r\n    \r\n    // Calculate ROAS\r\n    const achievedROAS = parseFloat(metrics.purchase_roas) || 0;\r\n    \r\n    // Calculate days and per-day requirements\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    const targetDate = new Date(brand.targetDate);\r\n    targetDate.setHours(0, 0, 0, 0);\r\n    const remainingDays = Math.max(Math.ceil((targetDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24)), 0);\r\n    \r\n    const requiredSalesPerDay = remainingDays > 0 ? parseFloat(remainingSales) / remainingDays : 0;\r\n\r\n    return {\r\n      achievedSales,\r\n      remainingSales,\r\n      achievedSpend,\r\n      achievedROAS,\r\n      remainingDays,\r\n      requiredSalesPerDay,\r\n    }\r\n  }\r\n\r\n  const chartData = selectedBrands.map(brand => {\r\n    const { achievedSales, remainingSales } = calculateMetrics(brand);\r\n    return {\r\n      name: brand.name,\r\n      Achieved: achievedSales,\r\n      Remaining: remainingSales\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchBrandTargets = async () => {\r\n      try {\r\n        const response = await axios.get(`${baseURL}/api/performance/brandTarget`, { withCredentials: true });\r\n        // Ensure targetDate is a Date object\r\n        const brands = response.data.map((brand: any) => ({\r\n          ...brand,\r\n          targetDate: new Date(brand.targetDate)\r\n        }));\r\n        setSelectedBrands(brands);\r\n      } catch (error) {\r\n        console.error('Error fetching brands:', error);\r\n      }\r\n    };\r\n\r\n    fetchBrandTargets();\r\n  }, [baseURL]);\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen\">\r\n      <nav className=\"bg-white border-b border-gray-200 px-4 py-4 md:px-6 lg:px-8\">\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n          <h1 className=\"text-2xl font-bold\">Brands Performance Metrics</h1>\r\n        </div>\r\n      </nav>\r\n      <div className='container mx-auto p-4'>\r\n        <Card className=\"mb-4\">\r\n          <CardHeader>\r\n            <CardTitle>Add New Brand Target</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-7 gap-4\">\r\n              <div>\r\n                <Label htmlFor=\"brandName\">Brand Name</Label>\r\n                <Select onValueChange={(value) => {\r\n                  const brand = brands.find(b => b._id === value);\r\n                  setNewBrand(prev => ({ \r\n                    ...prev, \r\n                    brandId: value,\r\n                    name: brand?.name || ''\r\n                  }));\r\n                }}>\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select brand\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {brands.map(brand => (\r\n                      <SelectItem key={brand._id} value={brand._id}>\r\n                        {brand.name}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <Label htmlFor=\"source\">Source</Label>\r\n                <Select onValueChange={handleSourceChange} value={newBrand.source}>\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select source\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"Meta & Google\">Meta & Google</SelectItem>\r\n                    <SelectItem value=\"Meta\">Meta</SelectItem>\r\n                    <SelectItem value=\"Google\">Google</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <Label htmlFor=\"targetSales\">Target Sales</Label>\r\n                <Input \r\n                  id=\"targetSales\" \r\n                  name=\"targetSales\" \r\n                  type=\"number\"\r\n                  value={newBrand.targetSales} \r\n                  onChange={handleInputChange} \r\n                  placeholder=\"Enter target sales\" \r\n                />\r\n              </div>\r\n              <div>\r\n                <Label htmlFor=\"targetSpend\">Target Spend</Label>\r\n                <Input \r\n                  id=\"targetSpend\" \r\n                  name=\"targetSpend\" \r\n                  type=\"number\"\r\n                  value={newBrand.targetSpend} \r\n                  onChange={handleInputChange} \r\n                  placeholder=\"Enter target spend\" \r\n                />\r\n              </div>\r\n              <div>\r\n                <Label htmlFor=\"targetROAS\">Target ROAS</Label>\r\n                <Input \r\n                  id=\"targetROAS\" \r\n                  name=\"targetROAS\" \r\n                  type=\"number\"\r\n                  value={newBrand.targetROAS} \r\n                  onChange={handleInputChange} \r\n                  placeholder=\"Enter target ROAS\" \r\n                  step=\"0.01\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Target Date</Label>\r\n                <Popover>\r\n                  <PopoverTrigger asChild>\r\n                    <Button\r\n                      variant={\"outline\"}\r\n                      className={cn(\r\n                        \"w-full justify-start text-left font-normal\",\r\n                        !newBrand.targetDate && \"text-muted-foreground\"\r\n                      )}\r\n                    >\r\n                      {newBrand.targetDate ? format(newBrand.targetDate, \"PPP\") : <span>Pick a date</span>}\r\n                    </Button>\r\n                  </PopoverTrigger>\r\n                  <PopoverContent className=\"w-auto p-0\">\r\n                    <Calendar\r\n                      mode=\"single\"\r\n                      selected={newBrand.targetDate}\r\n                      onSelect={(date) => date && setNewBrand(prev => ({ ...prev, targetDate: date }))}\r\n                      initialFocus\r\n                    />\r\n                  </PopoverContent>\r\n                </Popover>\r\n              </div>\r\n              <div className=\"flex items-end\">\r\n                <Button onClick={handleAddBrand} className=\"w-full\">\r\n                  <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Brand Target\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className='mb-4'>\r\n          <CardHeader>\r\n            <CardTitle>Brand Performance Table</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"overflow-x-auto\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Brand</TableHead>\r\n                    <TableHead>Source</TableHead>\r\n                    <TableHead>Month</TableHead>\r\n                    <TableHead>Target Spend</TableHead>\r\n                    <TableHead>Target Sales</TableHead>\r\n                    <TableHead>Target ROAS</TableHead>\r\n                    <TableHead>Achieved Spend</TableHead>\r\n                    <TableHead>Achieved Sales</TableHead>\r\n                    <TableHead>Achieved ROAS</TableHead>\r\n                    <TableHead>Remaining Sales</TableHead>\r\n                    <TableHead>Remaining Days</TableHead>\r\n                    <TableHead>Required Sales/Day</TableHead>\r\n                    <TableHead>Actions</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {selectedBrands.map(brand => {\r\n                    const { \r\n                      achievedSales, \r\n                      remainingSales, \r\n                      achievedSpend, \r\n                      achievedROAS, \r\n                      remainingDays, \r\n                      requiredSalesPerDay \r\n                    } = calculateMetrics(brand);\r\n                    \r\n                    const isEditing = editingBrand === brand.brandId;\r\n                    \r\n                    return (\r\n                      <TableRow key={brand.brandId}>\r\n                        <TableCell className=\"font-bold text-sm\">{brand.name}</TableCell>\r\n                        <TableCell>\r\n                          {isEditing ? (\r\n                            <Select\r\n                              onValueChange={(value) => setEditData(prev => prev ? { ...prev, source: value } : null)}\r\n                              defaultValue={editData?.source}\r\n                            >\r\n                              <SelectTrigger>\r\n                                <SelectValue placeholder={brand.source} />\r\n                              </SelectTrigger>\r\n                              <SelectContent>\r\n                                <SelectItem value=\"Meta & Google\">Meta & Google</SelectItem>\r\n                                <SelectItem value=\"Meta\">Meta</SelectItem>\r\n                                <SelectItem value=\"Google\">Google</SelectItem>\r\n                              </SelectContent>\r\n                            </Select>\r\n                          ) : (\r\n                            brand.source\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {isEditing ? (\r\n                            <Popover>\r\n                              <PopoverTrigger asChild>\r\n                                <Button variant={\"outline\"}>\r\n                                  {editData?.targetDate ? format(editData.targetDate, \"PPP\") : <span>Pick a date</span>}\r\n                                </Button>\r\n                              </PopoverTrigger>\r\n                              <PopoverContent className=\"w-auto p-0\">\r\n                                <Calendar\r\n                                  mode=\"single\"\r\n                                  selected={editData?.targetDate}\r\n                                  onSelect={(date) => date && setEditData(prev => prev ? { ...prev, targetDate: date } : null)}\r\n                                  initialFocus\r\n                                />\r\n                              </PopoverContent>\r\n                            </Popover>\r\n                          ) : (\r\n                            format(new Date(brand.targetDate), \"MMM yyyy\") \r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {isEditing ? (\r\n                            <Input\r\n                              type=\"number\"\r\n                              value={editData?.targetSpend}\r\n                              onChange={(e) => setEditData(prev => prev ? { ...prev, targetSpend: Number(e.target.value) } : null)}\r\n                            />\r\n                          ) : (\r\n                            `₹${brand.targetSpend.toLocaleString()}`\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {isEditing ? (\r\n                            <Input\r\n                              type=\"number\"\r\n                              value={editData?.targetSales}\r\n                              onChange={(e) => setEditData(prev => prev ? { ...prev, targetSales: Number(e.target.value) } : null)}\r\n                            />\r\n                          ) : (\r\n                            `₹${brand.targetSales.toLocaleString()}`\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {isEditing ? (\r\n                            <Input\r\n                              type=\"number\"\r\n                              step=\"0.01\"\r\n                              value={editData?.targetROAS}\r\n                              onChange={(e) => setEditData(prev => prev ? { ...prev, targetROAS: Number(e.target.value) } : null)}\r\n                            />\r\n                          ) : (\r\n                            brand.targetROAS.toFixed(2)\r\n                          )}\r\n                        </TableCell>\r\n                       \r\n                        <TableCell>{isLoading ? <Loader /> : `₹${achievedSpend.toLocaleString('en-IN')}`}</TableCell>\r\n                        <TableCell>{isLoading ? <Loader /> : `₹${achievedSales.toLocaleString('en-IN')}`}</TableCell>\r\n                        <TableCell>{isLoading ? <Loader /> : achievedROAS.toFixed(2)}</TableCell>\r\n                        <TableCell>{new Intl.NumberFormat('en-IN', { maximumFractionDigits: 2 }).format(Number(remainingSales))}</TableCell>\r\n                        <TableCell>{remainingDays}</TableCell>\r\n                        <TableCell>₹{new Intl.NumberFormat('en-IN', { maximumFractionDigits: 2 }).format(requiredSalesPerDay)}</TableCell>\r\n                        <TableCell>\r\n                          {isEditing ? (\r\n                            <>\r\n                              <Button onClick={() => handleSaveEdit(brand.brandId)} className=\"mr-2\">Save</Button>\r\n                              <Button onClick={handleCancelEdit} variant=\"outline\"><X className=\"h-4 w-4\" /></Button>\r\n                            </>\r\n                          ) : (\r\n                            <div className='flex flex-row gap-1'>\r\n                              <Button size={\"sm\"} onClick={() => handleEdit(brand.brandId)} ><Edit2 className=\"h-2 w-2\" /></Button>\r\n                              <Button size={\"sm\"} onClick={() => handleDelete(brand.brandId)} variant=\"destructive\"><Trash2 className=\"h-2 w-2\" /></Button>\r\n                            </div>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Sales Progress</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <BarChart data={chartData}>\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip formatter={(value) => `₹${Number(value).toLocaleString()}`} />\r\n                <Bar dataKey=\"Achieved\" stackId=\"a\" fill=\"#4ade80\" />\r\n                <Bar dataKey=\"Remaining\" stackId=\"a\" fill=\"#f87171\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport BrandPerformanceDashboard from \"./Dashboard\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\";\r\n const PerformanceDashboard : React.FC=()=>{\r\n    return (\r\n        <div className=\"flex h-screen\"> \r\n        <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n        <BrandPerformanceDashboard />\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\nexport default PerformanceDashboard;","import React, { useEffect, useRef, useState, useCallback, useMemo } from 'react'\r\nimport { ArrowUp, ArrowDown, ArrowUpDown, Filter, ChevronLeft, X, CheckCircle, AlertCircle, RefreshCw, BarChart2, Tag, Layers, Package, ChevronDown, ChevronRight } from 'lucide-react';\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Skeleton } from '@/components/ui/skeleton'\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@radix-ui/react-tooltip'\r\nimport {GoogleLogo} from \"@/data/logo.tsx\"\r\nimport { Button } from '@/components/ui/button'\r\nimport { format } from \"date-fns\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\n\r\ntype Metrics = {\r\n    products: number\r\n    totalCost: number\r\n    ROAS: number,\r\n    conversions: number,\r\n    ConversionValue: number,\r\n    ConversionRate: number,\r\n    totalClicks: number,\r\n    ctr: number,\r\n    AvgCPC: number,\r\n}\r\n\r\ntype Category = {\r\n    name: string\r\n    metrics: Metrics\r\n    subcategories: Category[]\r\n}\r\n\r\ntype ColumnDef = {\r\n    id: string\r\n    header: string\r\n    accessorKey: string\r\n    cell: (value: any) => React.ReactNode\r\n}\r\n\r\ntype TabConfig = {\r\n    id: string\r\n    label: string\r\n    apiEndpoint: string\r\n    columns: ColumnDef[]\r\n    data: any[]\r\n    lastUpdated: number | null,\r\n}\r\n\r\nexport default function ProductTab() {\r\n    const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n    const { brandId } = useParams()\r\n\r\n    const [tabs, setTabs] = useState<TabConfig[]>([\r\n        { id: 'products', label: 'Products', apiEndpoint: `${baseURL}/api/segment/productMetrics/${brandId}`, columns: [], data: [], lastUpdated: null },\r\n        { id: 'categories', label: 'Categories', apiEndpoint: `${baseURL}/api/segment/categoryMetrics/${brandId}`, columns: [], data: [], lastUpdated: null },\r\n        { id: 'brands', label: 'Brands', apiEndpoint: `${baseURL}/api/segment/brandMetrics/${brandId}`, columns: [], data: [], lastUpdated: null },\r\n        { id: 'productTypes', label: 'Product types', apiEndpoint: `${baseURL}/api/segment/typeMetrics/${brandId}`, columns: [], data: [], lastUpdated: null },\r\n    ])\r\n    const [activeTab, setActiveTab] = useState(tabs[0].id)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [expandedCategories, setExpandedCategories] = useState<Set<string>>(new Set())\r\n    const [loading, setLoading] = useState(false)\r\n    const [filterApplied, setFilterApplied] = useState(false);\r\n    const rowsPerPage = 100\r\n    const [filterData, setFilterData] = useState<any>({});\r\n    const cacheRef = useRef<{ [key: string]: { data: any; timestamp: number } }>({});\r\n    const POLL_INTERVAL = 5 * 60 * 1000;\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    // Sorting state\r\n    const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n    const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\r\n\r\n    const handleTabChange = (newTabId: string) => {\r\n        setActiveTab(newTabId);\r\n        setCurrentPage(1);\r\n        setExpandedCategories(new Set());\r\n    };\r\n\r\n    const fetchTabData = useCallback(\r\n        async (tabId: string, body: Record<string, any> = {}, isFilterApplied: boolean = false) => {\r\n            if (loading) return;\r\n\r\n            setLoading(true);\r\n\r\n            const tab = tabs.find(t => t.id === tabId);\r\n            if (!tab) {\r\n                console.warn(`Tab not found for ID: ${tabId}`);\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            const updatedBody = {\r\n                ...body,\r\n                ...(startDate && { startDate }),\r\n                ...(endDate && { endDate }),\r\n            };\r\n\r\n            const cacheKey = `${tabId}-${startDate || \"default\"}-${endDate || \"default\"}`;\r\n            const cachedData = cacheRef.current[cacheKey];\r\n            const now = Date.now();\r\n\r\n            if (!isFilterApplied && tabId === 'products') {\r\n                delete cacheRef.current[cacheKey];\r\n            }\r\n\r\n            if (!isFilterApplied && cachedData && now - cachedData.timestamp < POLL_INTERVAL) {\r\n                setTabs(prevTabs =>\r\n                    prevTabs.map(t =>\r\n                        t.id === tabId ? { ...t, data: cachedData.data, lastUpdated: cachedData.timestamp } : t\r\n                    )\r\n                );\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await axios.post(tab.apiEndpoint, updatedBody, { withCredentials: true });\r\n\r\n                if (response.data.success) {\r\n                    const result = response.data;\r\n                    const data = result[`${tabId}Data`] || [];\r\n                    console.log(\"New Data for Tab:\", tabId, data);\r\n\r\n                    const columns: ColumnDef[] = Object.keys(data[0] || {}).map(key => ({\r\n                        id: key,\r\n                        header: key.charAt(0).toUpperCase() + key.slice(1),\r\n                        accessorKey: key,\r\n                        cell: (value: any) => {\r\n                            if (key === 'issues' && Array.isArray(value)) {\r\n                                return value.length > 0 ? value[0].description : 'No issues';\r\n                            }\r\n                            return String(value);\r\n                        },\r\n                    }));\r\n\r\n                    console.log(\"Columns for Tab:\", columns);\r\n\r\n                    setTabs(prevTabs =>\r\n                        prevTabs.map(t =>\r\n                            t.id === tabId ? { ...t, columns, data, lastUpdated: now } : t\r\n                        )\r\n                    );\r\n\r\n                    cacheRef.current[cacheKey] = { data, timestamp: now };\r\n                } else {\r\n                    console.error(`Failed to fetch data for ${tabId}`);\r\n                }\r\n            } catch (error) {\r\n                console.error(`Error fetching data for ${tabId}:`, error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        },\r\n        [tabs, loading, cacheRef, startDate, endDate]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const requestBody = {\r\n            ...filterData,\r\n            ...(startDate && { startDate }),\r\n            ...(endDate && { endDate }),\r\n        };\r\n\r\n        fetchTabData(activeTab, filterApplied ? requestBody : {}, filterApplied ? true : false);\r\n    }, [activeTab, date, filterApplied, filterData]);\r\n\r\n    const handleRowClick = (currentTab: string, rowData: Record<string, any>) => {\r\n        const tabColumnMapping: Record<string, string> = {\r\n            brands: 'Brand', // Column name to fetch value when on Brand tab\r\n            productTypes: 'Type', // Column name to fetch value when on Product types tab\r\n            categories: 'name', // Column name to fetch value when on Categories tab\r\n            products: 'status'\r\n        };\r\n\r\n        const bodyKeyMapping: Record<string, string> = {\r\n            brands: 'brands', // Key to send in the API request body when on Brand tab\r\n            productTypes: 'productType', // Key to send in the API request body when on Product types tab\r\n            categories: 'categoryName', // Key to send in the API request body when on Categories tab\r\n            products: 'status'\r\n        };\r\n\r\n        const columnToFetch = tabColumnMapping[currentTab];\r\n        const bodyKey = bodyKeyMapping[currentTab];\r\n\r\n        if (columnToFetch && bodyKey) {\r\n            const valueToSend = rowData[columnToFetch]; // Get value from the row based on the column name\r\n\r\n            if (valueToSend) {\r\n                const filterPayload: Record<string, any> = {\r\n                    [bodyKey]: valueToSend, // Add the main key-value pair\r\n                };\r\n\r\n                // Add the additional key for the 'categories' tab\r\n                if (currentTab === 'categories' && rowData.level) {\r\n                    filterPayload['categoryLevel'] = rowData.level; // Add the additional key\r\n                }\r\n\r\n                // Set filter state\r\n                setFilterData(filterPayload); // Set custom filter data\r\n                setFilterApplied(true); // Mark filter as applied\r\n                setActiveTab('products'); // Switch to the Products tab\r\n            } else {\r\n                console.warn(`No value found for column \"${columnToFetch}\" in row`, rowData);\r\n            }\r\n        } else {\r\n            console.warn(`No column or body key mapping found for tab: ${currentTab}`);\r\n        }\r\n    };\r\n\r\n    const toggleCategory = (categoryPath: string) => {\r\n        setExpandedCategories(prev => {\r\n            const newSet = new Set(prev)\r\n            if (newSet.has(categoryPath)) {\r\n                newSet.delete(categoryPath)\r\n            } else {\r\n                newSet.add(categoryPath)\r\n            }\r\n            return newSet\r\n        })\r\n    }\r\n\r\n    const renderCategoryRow = (category: Category, depth: number = 0, path: string = '') => {\r\n        const currentPath = path ? `${path}.${category.name}` : category.name\r\n        const isExpanded = expandedCategories.has(currentPath)\r\n\r\n        return (\r\n            <React.Fragment key={currentPath}>\r\n                <tr className={`${isExpanded ? 'bg-gray-100' : 'bg-white'}`}>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm flex items-center\">\r\n                        <div style={{ marginLeft: `${depth * 20}px` }} onClick={() => toggleCategory(currentPath)} className=\"flex items-center cursor-pointer\">\r\n                            {category.subcategories.length > 0 && (\r\n                                <button className=\"mr-2\">\r\n                                    {isExpanded ? <ChevronDown className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\r\n                                </button>\r\n                            )}\r\n                            {category.name}\r\n                        </div>\r\n                    </td>\r\n                    <td\r\n                        className=\"px-4 py-2 whitespace-nowrap text-sm cursor-pointer text-blue-500 underline\"\r\n                        onClick={() => handleRowClick(activeTab, category)} // Adding handleRowClick to the Products column\r\n                    >\r\n                        {category.metrics.products}\r\n                    </td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.totalCost}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.ROAS}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.conversions}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.ConversionValue}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.ConversionRate}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.totalClicks}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.ctr}</td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{category.metrics.AvgCPC}</td>\r\n                </tr>\r\n                {isExpanded &&\r\n                    category.subcategories.map(subCategory =>\r\n                        renderCategoryRow(subCategory, depth + 1, currentPath)\r\n                    )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    const handleSort = (columnId: string) => {\r\n        if (sortColumn === columnId) {\r\n            setSortOrder(prevOrder => (prevOrder === 'asc' ? 'desc' : 'asc'));\r\n        } else {\r\n            setSortColumn(columnId);\r\n            setSortOrder('asc');\r\n        }\r\n    };\r\n    const getCurrentTabData = () => {\r\n        const currentTab = tabs.find(tab => tab.id === activeTab)\r\n        if (!currentTab || currentTab.id === 'categories') return { columns: [], data: [] }\r\n\r\n        let sortedData = currentTab.data;\r\n\r\n        if (sortColumn) {\r\n            sortedData = [...sortedData].sort((a, b) => {\r\n                const aValue = a[sortColumn];\r\n                const bValue = b[sortColumn];\r\n\r\n                if (typeof aValue === 'number' && typeof bValue === 'number') {\r\n                    return sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\r\n                }\r\n\r\n                const stringA = String(aValue || '').toLowerCase();\r\n                const stringB = String(bValue || '').toLowerCase();\r\n\r\n                if (stringA < stringB) return sortOrder === 'asc' ? -1 : 1;\r\n                if (stringA > stringB) return sortOrder === 'asc' ? 1 : -1;\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        const startIndex = (currentPage - 1) * rowsPerPage;\r\n        const endIndex = startIndex + rowsPerPage;\r\n        return {\r\n            columns: currentTab.columns,\r\n            data: sortedData.slice(startIndex, endIndex),\r\n        };\r\n    }\r\n\r\n    const { columns, data } = getCurrentTabData()\r\n    const totalPages = Math.ceil((tabs.find(tab => tab.id === activeTab)?.data.length || 0) / rowsPerPage)\r\n\r\n    const categoryColumns = [\r\n        { id: 'name', header: 'Name' },\r\n        { id: 'products', header: 'Products' },\r\n        { id: 'totalCost', header: 'Cost' },\r\n        { id: 'ROAS', header: 'ROAS' },\r\n        { id: 'conversions', header: 'Conversions' },\r\n        { id: 'ConversionValue', header: 'Conv. Value' },\r\n        { id: 'ConversionRate', header: 'Conv. Rate' },\r\n        { id: 'totalClicks', header: 'Clicks' },\r\n        { id: 'ctr', header: 'CTR' },\r\n        { id: 'AvgCPC', header: 'Avg CPC' },\r\n    ]\r\n\r\n    function TableSkeleton() {\r\n        return (\r\n            <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full table-auto border-collapse\">\r\n                    <thead>\r\n                        <tr>\r\n                            {['w-24', 'w-32', 'w-32', 'w-24', 'w-24', 'w-24'].map((width, index) => (\r\n                                <th key={index} className=\"px-4 py-2 border-b\">\r\n                                    <Skeleton className={`h-4 ${width}`} />\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Array.from({ length: 8 }).map((_, index) => (\r\n                            <tr key={index}>\r\n                                {['w-24', 'w-32', 'w-32', 'w-24', 'w-24', 'w-24'].map((width, idx) => (\r\n                                    <td key={idx} className=\"px-4 py-2 border-b\">\r\n                                        <Skeleton className={`h-4 ${width}`} />\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n    <div className='w-full'>\r\n        <div className='flex flex-row gap-2 items-center mb-4'>\r\n            <GoogleLogo />\r\n            <h1 className='text-xl font-bold text-gray-800'>Google Ads Product Insights</h1>\r\n        </div>\r\n        <div className='bg-white p-6 rounded-xl shadow-lg border border-gray-200'>\r\n            <div className=\"flex items-center justify-between border-b border-gray-200 pb-2 mb-2\">\r\n                <div className=\"flex space-x-2\" role=\"tablist\">\r\n                    {tabs.map(tab => (\r\n                        <Button\r\n                            key={tab.id}\r\n                            variant={activeTab === tab.id ? \"default\" : \"ghost\"}\r\n                            onClick={() => handleTabChange(tab.id)}\r\n                            className=\"relative\"\r\n                        >\r\n                            {tab.id === 'products' && <Package className=\"w-4 h-4 mr-2\" />}\r\n                            {tab.id === 'categories' && <Layers className=\"w-4 h-4 mr-2\" />}\r\n                            {tab.id === 'brands' && <Tag className=\"w-4 h-4 mr-2\" />}\r\n                            {tab.id === 'productTypes' && <BarChart2 className=\"w-4 h-4 mr-2\" />}\r\n                            {tab.label}\r\n                            {activeTab === tab.id && (\r\n                                <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-blue-600\" />\r\n                            )}\r\n                        </Button>\r\n                    ))}\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                    <DatePickerWithRange\r\n                      \r\n                    />\r\n                    <Button variant=\"outline\" size=\"icon\">\r\n                        <Filter className={`h-4 w-4 ${filterApplied ? 'text-blue-600' : 'text-gray-600'}`} />\r\n                    </Button>\r\n                    <TooltipProvider>\r\n                        <Tooltip>\r\n                            <TooltipTrigger asChild>\r\n                                <Button variant=\"outline\" size=\"icon\" onClick={() => fetchTabData(activeTab, {}, false)}>\r\n                                    <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                </Button>\r\n                            </TooltipTrigger>\r\n                            {tabs.find(t => t.id === activeTab)?.lastUpdated && (\r\n                                <TooltipContent>\r\n                                    <p>Last updated: {new Date(tabs.find(t => t.id === activeTab)?.lastUpdated || 0).toLocaleString()}</p>\r\n                                </TooltipContent>\r\n                            )}\r\n                        </Tooltip>\r\n                    </TooltipProvider>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='space-y-4'>\r\n                {filterApplied && (\r\n                    <div className=\"flex items-center gap-2 w-fit p-2 bg-blue-50 rounded-full\">\r\n                        <span className=\"text-xs font-medium text-blue-700\">{Object.entries(filterData).map(([key, value]) => `${key}: ${value}`).join(', ')}</span>\r\n                        <Button\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            onClick={() => {\r\n                                setFilterApplied(false);\r\n                                setFilterData({});\r\n                                setActiveTab('products');\r\n                                cacheRef.current['products'] = null as any;\r\n                                fetchTabData('products', {}, false);\r\n                            }}\r\n                            className=\"text-blue-700 hover:text-blue-800 hover:bg-blue-100 p-1 h-auto\"\r\n                        >\r\n                            <X className=\"h-3 w-3\" />\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n                <div className=\"rounded-md border border-gray-200 overflow-hidden\">\r\n                    <div className=\"max-h-[350px] overflow-auto\">\r\n                        {loading ? <TableSkeleton /> : (\r\n                            <table className=\"w-full\">\r\n                                <thead className=\"sticky top-0 z-10 bg-[#4A628A]\">\r\n                                    <tr>\r\n                                        {(activeTab === 'categories' ? categoryColumns : columns).map(column => (\r\n                                            <th key={column.id} className=\"px-4 py-3 text-left text-xs font-medium text-gray-50 uppercase tracking-wider min-w-[150px] cursor-pointer\" onClick={() => handleSort(column.id)}>\r\n                                            <div className=\"flex items-center gap-1\">\r\n                                                {column.header}\r\n                                                {sortColumn === column.id ? (\r\n                                                    sortOrder === 'asc' ? <ArrowUp className=\"h-4 w-4\" /> : <ArrowDown className=\"h-4 w-4\" />\r\n                                                ) : (\r\n                                                    <ArrowUpDown className=\"h-4 w-4\" />\r\n                                                )}\r\n                                            </div>\r\n                                        </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                    {activeTab === 'categories' ? (\r\n                                        tabs.find(tab => tab.id === 'categories')?.data.map((category: Category) =>\r\n                                            renderCategoryRow(category)\r\n                                        )\r\n                                    ) : (\r\n                                        data.map((row, i) => (\r\n                                            <tr key={i} className=\"hover:bg-gray-50\">\r\n                                                {columns.map((column) => {\r\n                                                    const value = column.cell(row[column.accessorKey]);\r\n                                                    const isIssuesColumn = column.id === 'issues';\r\n                                                    const isProductColumn = column.id === 'Products';\r\n                                                    const isStatusColumn = column.id === 'status';\r\n                                                    const isNoIssues = typeof value === 'string' && value.trim().toLowerCase() === 'no issues';\r\n\r\n                                                    const getStatusColor = (status: string) => {\r\n                                                        switch (status.trim().toUpperCase()) {\r\n                                                            case \"UNSPECIFIED\": return 'bg-gray-100 text-gray-800';\r\n                                                            case \"UNKNOWN\": return 'bg-yellow-100 text-yellow-800';\r\n                                                            case \"NOT_ELIGIBLE\": return 'bg-red-100 text-red-800';\r\n                                                            case \"ELIGIBLE_LIMITED\": return 'bg-orange-100 text-orange-800';\r\n                                                            case \"ELIGIBLE\": return 'bg-green-100 text-green-800';\r\n                                                            default: return 'bg-gray-100 text-gray-700';\r\n                                                        }\r\n                                                    };\r\n\r\n                                                    const renderCell = () => {\r\n                                                        if (isIssuesColumn) {\r\n                                                            return (\r\n                                                                <div className={`flex items-center ${isNoIssues ? 'text-green-600' : 'text-red-600'}`}>\r\n                                                                    {isNoIssues ? <CheckCircle className=\"w-4 h-4 mr-2\" /> : <AlertCircle className=\"w-4 h-4 mr-2\" />}\r\n                                                                    {value}\r\n                                                                </div>\r\n                                                            );\r\n                                                        }\r\n\r\n                                                        if (isStatusColumn) {\r\n                                                            const statusValue = value ? String(value) : '';\r\n                                                            const colorClass = getStatusColor(statusValue);\r\n                                                            return (\r\n                                                                <div className={`px-2 py-1.5 rounded-full text-xs font-medium w-full ${colorClass} cursor-pointer`} onClick={() => handleRowClick(activeTab, row)}>\r\n                                                                    {statusValue}\r\n                                                                </div>\r\n                                                            );\r\n                                                        }\r\n                                                        return column.cell ? column.cell(value) : value;\r\n                                                    };\r\n\r\n                                                    return (\r\n                                                        <td\r\n                                                            key={column.id}\r\n                                                            className={`px-4 py-2.5 text-sm whitespace-nowrap min-w-[150px] ${isProductColumn ? 'cursor-pointer text-blue-600 hover:text-blue-800' : ''}`}\r\n                                                            onClick={() => isProductColumn && handleRowClick(activeTab, row)}\r\n                                                        >\r\n                                                            {renderCell()}\r\n                                                        </td>\r\n                                                    );\r\n                                                })}\r\n                                            </tr>\r\n                                        ))\r\n                                    )}\r\n                                    {(activeTab === 'categories' ? tabs.find(tab => tab.id === 'categories')?.data.length === 0 : data.length === 0) && (\r\n                                        <tr>\r\n                                            <td\r\n                                                colSpan={(activeTab === 'categories' ? categoryColumns : columns).length}\r\n                                                className=\"px-4 py-2 text-sm text-gray-500 text-center\"\r\n                                            >\r\n                                                No data available\r\n                                            </td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between px-4 py-3 bg-gray-50 border-t border-gray-200\">\r\n                        <div className=\"text-sm text-gray-700\">\r\n                            Showing {((currentPage - 1) * rowsPerPage) + 1} to {Math.min(currentPage * rowsPerPage, tabs.find(t => t.id === activeTab)?.data.length || 0)} of {tabs.find(t => t.id === activeTab)?.data.length || 0} entries\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                            <Button\r\n                                variant=\"outline\"\r\n                                size=\"sm\"\r\n                                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\r\n                                disabled={currentPage === 1}\r\n                            >\r\n                                <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n                                Previous\r\n                            </Button>\r\n                            <div className=\"text-sm text-gray-700\">\r\n                                Page {currentPage} of {totalPages}\r\n                            </div>\r\n                            <Button\r\n                                variant=\"outline\"\r\n                                size=\"sm\"\r\n                                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\r\n                                disabled={currentPage === totalPages}\r\n                            >\r\n                                Next\r\n                                <ChevronRight className=\"h-4 w-4 ml-1\" />\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n};      ","import { Table, TableBody, TableCell, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Skeleton } from \"@/components/ui/skeleton\"\r\nexport const TableSkeleton = () => (\r\n    <Table className=\"text-center min-w-full\">\r\n      <TableHeader className=\"bg-gray-200 sticky top-0 z-10\">\r\n        <TableRow>\r\n          {Array(8).fill(0).map((_, index) => (\r\n            <TableCell key={index} className=\"font-bold px-4 text-black min-w-[150px]\">\r\n              <Skeleton className=\"h-6 w-full\" />\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHeader>\r\n      <TableBody>\r\n        {Array(10).fill(0).map((_, rowIndex) => (\r\n          <TableRow key={rowIndex}>\r\n            {Array(8).fill(0).map((_, cellIndex) => (\r\n              <TableCell key={cellIndex} className=\"px-4 py-2 max-w-[200px]\">\r\n                <Skeleton className=\"h-6 w-full\" />\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  )","import { GoogleLogo } from '@/data/logo';\r\nimport { useState, useEffect, useCallback, useMemo } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ChevronLeft, ChevronRight, Search, Filter, RefreshCw, Zap, DollarSign, Percent, MousePointer, CreditCard, TrendingUp, Target, Users, Megaphone, ArrowUp, ArrowDown, ArrowUpDown } from 'lucide-react';\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { format } from \"date-fns\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\n\r\ninterface SearchTerm {\r\n  id: string;\r\n  searchTerm: string\r\n  matchType: string\r\n  status: string\r\n  campaignName: string\r\n  adGroup: string\r\n  impressions: number\r\n  clicks: number\r\n  ctr: string\r\n  cost: string\r\n  performance: string\r\n}\r\n\r\ninterface CampaignAdGroupPair {\r\n  campaignName: string;\r\n  adGroups: string[];\r\n}\r\n\r\nexport default function SearchTermTable() {\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n  const { brandId } = useParams();\r\n  const [searchTerms, setSearchTerms] = useState<SearchTerm[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [hasMoreData, setHasMoreData] = useState(true);\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [campaignAdGroupPairs, setCampaignAdGroupPairs] = useState<CampaignAdGroupPair[]>([]);\r\n  const [selectedCampaign, setSelectedCampaign] = useState<string>('all');\r\n  const [statusOptions, setStatusOptions] = useState<[]>([]);\r\n  const [selectedAdGroup, setSelectedAdGroup] = useState<string>('all');\r\n  const [selectedStatus, setSelectedStatus] = useState<string>('all');\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const rowsPerPage = 100;\r\n\r\n  const columns = [\r\n    { id: 'searchTerm', header: 'Search Term', icon: <Search className=\"w-4 h-4\" /> },\r\n    { id: 'matchType', header: 'Match Type', icon: <Zap className=\"w-4 h-4\" /> },\r\n    { id: 'status', header: 'Status', icon: <Filter className=\"w-4 h-4\" /> },\r\n    { id: 'campaignName', header: 'Campaign Name', icon: <Megaphone className=\"w-4 h-4\" /> },\r\n    { id: 'adGroupName', header: 'Ad Group', icon: <Users className=\"w-4 h-4\" /> },\r\n    { id: 'cost', header: 'Cost', icon: <DollarSign className=\"w-4 h-4\" /> },\r\n    { id: 'conversions', header: 'Conversions', icon: <Target className=\"w-4 h-4\" /> },\r\n    { id: 'conversionsValue', header: 'Conv. Value', icon: <TrendingUp className=\"w-4 h-4\" /> },\r\n    { id: 'conversionsRate', header: 'Conv. Rate', icon: <Percent className=\"w-4 h-4\" /> },\r\n    { id: 'clicks', header: 'Clicks', icon: <MousePointer className=\"w-4 h-4\" /> },\r\n    { id: 'ctr', header: 'CTR', icon: <Percent className=\"w-4 h-4\" /> },\r\n    { id: 'avg_cpc', header: 'Avg. CPC', icon: <CreditCard className=\"w-4 h-4\" /> },\r\n  ]\r\n\r\n  const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\r\n\r\n  const handleSort = (column: string) => {\r\n    if (sortColumn === column) {\r\n      setSortOrder(prevOrder => prevOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortColumn(column);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  const sortedSearchTerms = useMemo(() => {\r\n    if (!sortColumn) return searchTerms;\r\n\r\n    return [...searchTerms].sort((a, b) => {\r\n      const aValue = a[sortColumn as keyof SearchTerm];\r\n      const bValue = b[sortColumn as keyof SearchTerm];\r\n\r\n      // Handle numeric comparisons\r\n      if (typeof aValue === 'number' && typeof bValue === 'number') {\r\n        return sortOrder === 'asc' \r\n          ? aValue - bValue \r\n          : bValue - aValue;\r\n      }\r\n\r\n      // String comparison (case-insensitive)\r\n      const stringA = String(aValue).toLowerCase();\r\n      const stringB = String(bValue).toLowerCase();\r\n\r\n      if (stringA < stringB) return sortOrder === 'asc' ? -1 : 1;\r\n      if (stringA > stringB) return sortOrder === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n  }, [searchTerms, sortColumn, sortOrder]);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Prepare request body\r\n      const requestBody = {\r\n        limit: rowsPerPage,\r\n        page: currentPage,\r\n        startDate,\r\n        endDate,\r\n        ...(selectedCampaign && selectedCampaign !== 'all' && { campaign: selectedCampaign }),\r\n        ...(selectedAdGroup && selectedAdGroup !== 'all' && { adGroup: selectedAdGroup }),\r\n        ...(selectedStatus && selectedStatus !== 'all' && { status: selectedStatus }),\r\n      };\r\n\r\n      // Make API request\r\n      const { data: response } = await axios.post(\r\n        `${baseURL}/api/segment/searchTermMetrics/${brandId}`,\r\n        requestBody,\r\n        { withCredentials: true }\r\n      );\r\n\r\n      if (response.success) {\r\n        // Set data in state\r\n        setSearchTerms(response.data);\r\n        setTotalRecords(response.totalRecords);\r\n        setTotalPages(response.totalPages);\r\n        setHasMoreData(currentPage * rowsPerPage < response.totalRecords);\r\n        setCampaignAdGroupPairs(response.campaignAdGroupPairs);\r\n        setStatusOptions(response.statusOptions)\r\n      } else {\r\n        console.error('Failed to fetch search term metrics:', response.message);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching search term metrics:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [\r\n    baseURL,\r\n    brandId,\r\n    currentPage,\r\n    rowsPerPage,\r\n    selectedCampaign,\r\n    selectedAdGroup,\r\n    selectedStatus,\r\n    startDate,\r\n    endDate\r\n  ]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 300000);\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  const handleCampaignChange = (value: string) => {\r\n    setSelectedCampaign(value);\r\n    setSelectedAdGroup('all');\r\n    setCurrentPage(1)\r\n  };\r\n\r\n  const handleAdGroupChange = (value: string) => {\r\n    setSelectedAdGroup(value);\r\n    setCurrentPage(1)\r\n  };\r\n\r\n  const handleStatusChange = (value: string) => {\r\n    setSelectedStatus(value);\r\n    setCurrentPage(1)\r\n  };\r\n\r\n  const filteredAdGroups = selectedCampaign !== 'all'\r\n    ? campaignAdGroupPairs?.find(pair => pair.campaignName === selectedCampaign)?.adGroups || []\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"flex flex-row gap-2 items-center mb-4\">\r\n        <GoogleLogo />\r\n        <h1 className=\"text-xl font-bold text-gray-800\">Google Ads Search Term Insights</h1>\r\n      </div>\r\n      <div className=\"bg-white rounded-xl overflow-hidden border border-gray-200 shadow-md\">\r\n        <div className=\"p-4\">\r\n          <div className=\"flex justify-between mb-4\">\r\n            <Popover>\r\n              <PopoverTrigger asChild>\r\n                <Button variant=\"outline\" className=\"bg-white border-gray-300 hover:bg-gray-50 transition-colors duration-200\">\r\n                  <Filter className=\"w-4 h-4 mr-2\" />\r\n                  Filter\r\n                </Button>\r\n              </PopoverTrigger>\r\n              <PopoverContent className=\"w-80\">\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <h3 className=\"font-medium mb-2\">Status</h3>\r\n                    <Select onValueChange={handleStatusChange} value={selectedStatus}>\r\n                      <SelectTrigger className=\"w-full\">\r\n                        <SelectValue placeholder=\"Select Status\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"all\">All Status</SelectItem>\r\n                        {statusOptions.map((status) => (\r\n                          <SelectItem key={status} value={status}>{status}</SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-medium mb-2\">Campaign</h3>\r\n                    <Select onValueChange={handleCampaignChange} value={selectedCampaign}>\r\n                      <SelectTrigger className=\"w-full\">\r\n                        <SelectValue placeholder=\"Select Campaign\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"all\">All Campaigns</SelectItem>\r\n                        {campaignAdGroupPairs.map((pair) => (\r\n                          <SelectItem key={pair.campaignName} value={pair.campaignName}>{pair.campaignName}</SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  {selectedCampaign !== 'all' && (\r\n                    <div>\r\n                      <h3 className=\"font-medium mb-2\">Ad Group</h3>\r\n                      <Select\r\n                        disabled={selectedCampaign === 'all'}\r\n                        onValueChange={handleAdGroupChange}\r\n                        value={selectedAdGroup}\r\n                      >\r\n                        <SelectTrigger className=\"w-full\">\r\n                          <SelectValue placeholder=\"Select Ad Group\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"all\">All Ad Groups</SelectItem>\r\n                          {filteredAdGroups.map((adGroup) => (\r\n                            <SelectItem key={adGroup} value={adGroup}>{adGroup}</SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </PopoverContent>\r\n            </Popover>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <DatePickerWithRange\r\n              \r\n              />\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"bg-gray-50 text-gray-600 border-gray-200 hover:bg-gray-100\"\r\n                onClick={fetchData}\r\n              >\r\n                <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n                Refresh\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"rounded-md border border-gray-200 overflow-hidden\">\r\n            <div className=\"max-h-[380px] overflow-auto rounded-lg\">\r\n              {loading ? (\r\n                <TableSkeleton />\r\n              ) : (\r\n                <table className=\"w-full text-center\">\r\n                  <thead className=\"sticky top-0 z-10 bg-[#4A628A] rounded-t-lg\">\r\n                    <tr>\r\n                      {columns.map((column) => (\r\n                        <th\r\n                          key={column.id}\r\n                          className=\"px-4 py-3 text-xs font-medium text-gray-50 uppercase tracking-wider min-w-[200px] cursor-pointer\"\r\n                          onClick={() => handleSort(column.id)}\r\n                        >\r\n                          <div className=\"flex items-center justify-center gap-1\">\r\n                            {column.icon}\r\n                            {column.header}\r\n                            {sortColumn === column.id ? (\r\n                              sortOrder === 'asc' ? <ArrowUp className=\"ml-1 w-4 h-6 text-[#ffffff]\" /> : <ArrowDown className=\"ml-1 w-4 h-6 text-[#ffffff]\" />\r\n                            ) : (\r\n                              <ArrowUpDown className=\"ml-1 w-4 h-6 text-gray-300\" />\r\n                            )}\r\n                          </div>\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {sortedSearchTerms.map((row, i) => (\r\n                      <tr key={i} className=\"hover:bg-gray-50 transition-colors duration-150\">\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id as keyof SearchTerm];\r\n                          const isStatusColumn = column.id === 'status';\r\n                          const isSearchTermColumn = column.id === 'searchTerm'\r\n\r\n                          const renderCell = () => {\r\n                            if (isStatusColumn) {\r\n                              const statusValue = value ? String(value) : '';\r\n                              const getStatusColor = (status: string) => {\r\n                                switch (status.trim().toUpperCase()) {\r\n                                  case 'ADDED':\r\n                                    return 'bg-green-100 text-green-800';\r\n                                  case 'NONE':\r\n                                    return 'bg-yellow-100 text-yellow-800';\r\n                                  default:\r\n                                    return 'bg-gray-100 text-gray-800';\r\n                                }\r\n                              };\r\n                              const colorClass = getStatusColor(statusValue);\r\n\r\n                              return (\r\n                                <div className={`px-2 py-1 rounded-full text-xs font-medium ${colorClass}`}>\r\n                                  {statusValue}\r\n                                </div>\r\n                              );\r\n                            }\r\n\r\n                            if (isSearchTermColumn) {\r\n                              const searchTermValue = value ? String(value) : '';\r\n                              const performance = row.performance;\r\n                              const isPerformingWell = performance === 'Best Performing Keyword';\r\n\r\n                              return (\r\n                                <div className=\"px-2 py-1 rounded-full font-medium flex flex-col items-center\">\r\n                                  <span className={`text-xs ${isPerformingWell ? 'text-green-600' : 'text-red-600'}`}>\r\n                                    {performance}\r\n                                  </span>\r\n                                  <span className=\"text-sm mt-1\">{searchTermValue}</span>\r\n                                </div>\r\n                              );\r\n                            }\r\n\r\n                            return value;\r\n                          };\r\n\r\n                          return (\r\n                            <td\r\n                              key={column.id}\r\n                              className=\"px-4 py-2.5 text-sm min-w-[200px]\"\r\n                            >\r\n                              {renderCell()}\r\n                            </td>\r\n                          );\r\n                        })}\r\n                      </tr>\r\n                    ))}\r\n                    {searchTerms.length === 0 && (\r\n                      <tr>\r\n                        <td\r\n                          colSpan={columns.length}\r\n                          className=\"px-4 py-2 text-sm text-gray-500 text-center\"\r\n                        >\r\n                          No data available\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              )}\r\n            </div>\r\n            <div className=\"flex items-center justify-between px-4 py-3 bg-gray-50\">\r\n              <div className=\"text-sm text-gray-600\">\r\n                Showing {((currentPage - 1) * rowsPerPage) + 1} to{' '}\r\n                {Math.min(currentPage * rowsPerPage, totalRecords || 0)} of{' '}\r\n                {totalRecords || 0} entries\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n                  disabled={currentPage === 1}\r\n                  className=\"text-gray-600 border-gray-200 hover:bg-gray-50\"\r\n                >\r\n                  <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n                  Previous\r\n                </Button>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Page {currentPage} of {totalPages}\r\n                </div>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  onClick={() => setCurrentPage((prev) => prev + 1)}\r\n                  disabled={!hasMoreData}\r\n                  className=\"text-gray-600 border-gray-200 hover:bg-gray-50\"\r\n                >\r\n                  Next\r\n                  <ChevronRight className=\"h-4 w-4 ml-1\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { ChevronLeft, ChevronRight, RefreshCw, Package, Layers, ArrowUp, ArrowDown, ArrowUpDown, Filter } from 'lucide-react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Button } from '@/components/ui/button';\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, Legend } from 'recharts';\r\nimport { format } from \"date-fns\";\r\nimport {GoogleLogo} from \"@/data/logo.tsx\"\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\n\r\ntype TabConfig = {\r\n    id: string;\r\n    label: string;\r\n    apiEndpoint: string;\r\n    columns: ColumnDef[];\r\n    data: any[];\r\n    lastUpdated: number | null;\r\n    totalPages?: number;\r\n    currentPage?: number;\r\n    campaignAdGroupPairs?: CampaignAdGroupPair[];\r\n};\r\n\r\ntype CampaignAdGroupPair = {\r\n    campaignName: string;\r\n    adGroups: string[];\r\n};\r\n\r\ntype ColumnDef = {  \r\n    id: string;\r\n    header: string;\r\n    accessorKey: string;\r\n    cell: (value: any) => React.ReactNode;\r\n};\r\n\r\ntype MetricKey = keyof typeof metricLabels;\r\n\r\ntype FilterState = {\r\n    status: string;\r\n    campaign: string;\r\n    adGroup: string;\r\n    ageRange?: string;\r\n    gender?: string;\r\n    campaignStatus: string;\r\n};\r\n\r\nconst metricLabels = {\r\n    totalConversions: 'Total Conversions',\r\n    totalClicks: 'Total Clicks',\r\n    totalCost: 'Total Cost',\r\n    totalCTR: 'Total C T R'\r\n};\r\n\r\n// Define rows per page constant\r\nconst ROWS_PER_PAGE = 100;\r\n\r\nexport default function AgeAndGenderMetrics() {\r\n    const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n    const { brandId } = useParams();\r\n\r\n    if (!brandId) {\r\n        return <div>Error: Brand ID is missing</div>;\r\n    }\r\n\r\n    // State for filters\r\n    const [filters, setFilters] = useState<FilterState>({\r\n        campaign: 'all',\r\n        adGroup: 'all',\r\n        ageRange: 'all',\r\n        gender: 'all',\r\n        status: 'all', \r\n        campaignStatus: 'all' \r\n    });\r\n\r\n\r\n    const [filterOptions, setFilterOptions] = useState<{\r\n        campaigns: string[];\r\n        adGroups: string[];\r\n        ageRanges: string[];\r\n        genders: string[];\r\n        campaignAdGroupMap?: Record<string, string[]>;\r\n        statusOptions: string[]; \r\n    }>({\r\n        campaigns: [],\r\n        adGroups: [],\r\n        ageRanges: [],\r\n        genders: [],\r\n        campaignAdGroupMap: {},\r\n        statusOptions: ['REMOVED', 'PAUSED', 'ENABLED'], \r\n    });\r\n\r\n    const [data, setData] = useState<any[]>([]);\r\n    const [tabs, setTabs] = useState<TabConfig[]>([\r\n        { \r\n            id: 'age', \r\n            label: 'Age', \r\n            apiEndpoint: `${baseURL}/api/segment/ageMetrics/${brandId}`, \r\n            columns: [], \r\n            data: [], \r\n            lastUpdated: null,\r\n            totalPages: 1,\r\n            currentPage: 1\r\n        },\r\n        { \r\n            id: 'gender', \r\n            label: 'Gender', \r\n            apiEndpoint: `${baseURL}/api/segment/genderMetrics/${brandId}`, \r\n            columns: [], \r\n            data: [], \r\n            lastUpdated: null,\r\n            totalPages: 1,\r\n            currentPage: 1\r\n        },\r\n    ]);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [hasMoreData, setHasMoreData] = useState(true);\r\n    const [activeTab, setActiveTab] = useState(tabs[0].id);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [showGraph, setShowGraph] = useState(false);\r\n    const [graphData, setGraphData] = useState<any>(null);\r\n    const [selectedMetrics, setSelectedMetrics] = useState<MetricKey[]>(['totalClicks', 'totalCost']);\r\n\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n\r\n    // Add handleMetricChange function\r\n    const handleMetricChange = (metric: MetricKey) => {\r\n        setSelectedMetrics(prev => \r\n            prev.includes(metric) \r\n                ? prev.filter(m => m !== metric)\r\n                : [...prev, metric]\r\n        );\r\n    };\r\n\r\n    // State variables for caching filter options\r\n    const [cachedAgeRanges, setCachedAgeRanges] = useState<string[]>([]);\r\n    const [cachedGenders, setCachedGenders] = useState<string[]>([]);\r\n    \r\n    const fetchData = async (\r\n        tabId: string, \r\n        requestData?: {\r\n            startDate: string;\r\n            endDate: string;\r\n            page: number;\r\n            limit: number;\r\n            status?: string; // Ensure status is included here\r\n            campaign?: string;\r\n            adGroup?: string;\r\n            agerange?: string;\r\n            gender?: string;\r\n        }, \r\n        _forceRefresh?: boolean\r\n    ) => {\r\n        try {\r\n            setLoading(true);\r\n            const apiEndpoint = tabId === 'gender' \r\n                ? `${baseURL}/api/segment/genderMetrics/${brandId}`\r\n                : `${baseURL}/api/segment/ageMetrics/${brandId}`;\r\n    \r\n            // Prepare the request body with all possible filters\r\n            const requestBody = {\r\n                startDate: requestData?.startDate || (date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\"),\r\n                endDate: requestData?.endDate || (date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\"),\r\n                page: requestData?.page || currentPage,\r\n                limit: requestData?.limit || ROWS_PER_PAGE,\r\n                ...(requestData?.status && { status: requestData.status }), // Ensure this line is present\r\n                ...(requestData?.campaign && requestData.campaign !== 'all' && { campaign: requestData.campaign }),\r\n                ...(requestData?.adGroup && requestData.adGroup !== 'all' && { adGroup: requestData.adGroup }),\r\n                ...(activeTab === 'age' && requestData?.agerange && requestData.agerange !== 'all' && { agerange: requestData.agerange }),\r\n                ...(activeTab === 'gender' && requestData?.gender && requestData.gender !== 'all' && { gender: requestData.gender })\r\n            };\r\n    \r\n            console.log(\"Fetch Request Body:\", requestBody); // Debug logging\r\n    \r\n            const response = await axios.post(apiEndpoint, requestBody, { withCredentials: true });\r\n            const genderCampaignNames: string[] = response.data.genderCampaignAdGroupPairs?.map((pair: { campaignName: string }) => pair.campaignName) || [];\r\n            if (response.data.success) {\r\n                // Combine campaign names and ad groups from both age and gender metrics\r\n                const campaignNames: string[] = [\r\n                    ...(response.data.campaignAdGroupPairs?.map((pair: { campaignName: string }) => pair.campaignName) || []),\r\n                    ...(response.data.campaignAdGroupPairs?.map((pair: { campaignName: string }) => pair.campaignName) || []),\r\n                    ...genderCampaignNames\r\n                ];\r\n                \r\n                // Initialize and update campaignAdGroupMap\r\n                const campaignAdGroupMap: Record<string, string[]> = {};\r\n                const campaignAdGroupPairs = [\r\n                    ...(response.data.campaignAdGroupPairs || []),\r\n                    ...(response.data.genderCampaignAdGroupPairs || [])\r\n                ];\r\n            \r\n                campaignAdGroupPairs.forEach((pair: CampaignAdGroupPair) => {\r\n                    campaignAdGroupMap[pair.campaignName] = pair.adGroups || [];\r\n                });\r\n            \r\n                // Get unique ad groups\r\n                const adGroups = Array.from(new Set(\r\n                    campaignAdGroupPairs.flatMap((pair: CampaignAdGroupPair) => pair.adGroups || [])\r\n                ));\r\n            \r\n                setFilterOptions(prevOptions => ({\r\n                    ...prevOptions,\r\n                    campaigns: Array.from(new Set(campaignNames)),\r\n                    adGroups: adGroups,\r\n                    campaignAdGroupMap: campaignAdGroupMap\r\n                }));\r\n            \r\n            \r\n                const data = tabId === 'gender' ? response.data.genderData || [] : response.data.ageData || [];\r\n            \r\n                if (tabId === 'age') {\r\n                    const ageRanges = new Set(data.map((item: any) => item.ageRange));\r\n            \r\n                    if (cachedAgeRanges.length === 0) {\r\n                        setCachedAgeRanges(Array.from(ageRanges) as string[]);\r\n                    }\r\n            \r\n                    setFilterOptions(prevOptions => ({\r\n                        ...prevOptions,\r\n                        ageRanges: cachedAgeRanges.length > 0 ? cachedAgeRanges : Array.from(ageRanges) as string[],\r\n                        genders: prevOptions.genders\r\n                    }));\r\n                } else {\r\n                    const genders = new Set(data.map((item: any) => \r\n                        item.gender === 'MALE' ? 'MALE' : \r\n                        item.gender === 'FEMALE' ? 'FEMALE' : \r\n                        item.gender\r\n                    ));\r\n            \r\n                    if (cachedGenders.length === 0) {\r\n                        setCachedGenders(Array.from(genders) as string[]);\r\n                    }\r\n            \r\n                    setFilterOptions(prevOptions => ({\r\n                        ...prevOptions,\r\n                        campaigns: [...new Set([...campaignNames, ...genderCampaignNames])], // Combine both sets of campaign names\r\n                        genders: cachedGenders.length > 0 ? cachedGenders : Array.from(genders) as string[]\r\n                    }));\r\n                }\r\n            \r\n                setData(data);\r\n    \r\n                const columns: ColumnDef[] = data.length > 0\r\n                    ? Object.keys(data[0] || {})\r\n                        .filter(key => key !== 'adGroupStatus')\r\n                        .map(key => ({\r\n                            id: key,\r\n                            header: key === 'campaignStatus' \r\n                                ? 'Campaign Status' \r\n                                : key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()),\r\n                            accessorKey: key,\r\n                            cell: (value: any) => {\r\n                                if (key === 'cost') {\r\n                                    return `$${Number(value).toFixed(2)}`;\r\n                                }\r\n                                if (['roas', 'conversionsRate', 'ctr'].includes(key)) {\r\n                                    return `${(Number(value) * 100).toFixed(2)}%`;\r\n                                }\r\n                                if (key === 'campaignStatus') {\r\n                                    // Capitalize and style campaign status\r\n                                    const statusColor = {\r\n                                        'REMOVED': 'text-red-600',\r\n                                        'PAUSED': 'text-yellow-600',\r\n                                        'ENABLED': 'text-green-600'\r\n                                    }[value as string] || '';\r\n                                    return (\r\n                                        <span className={`font-medium ${statusColor}`}>\r\n                                            {value === 'REMOVED' ? 'Removed' : \r\n                                             value === 'PAUSED' ? 'Paused' : \r\n                                             value === 'ENABLED' ? 'Enabled' : value}\r\n                                        </span>\r\n                                    );\r\n                                }\r\n                                return String(value);\r\n                            }\r\n                        }))\r\n                    : [];\r\n                \r\n                setTabs(prevTabs =>\r\n                    prevTabs.map(t =>\r\n                        t.id === tabId\r\n                            ? { ...t, columns, data, lastUpdated: Date.now() }\r\n                            : t\r\n                    )\r\n                );\r\n                \r\n                const aggregatedData = tabId === 'gender' \r\n                    ? response.data.aggregatedRecords \r\n                    : response.data.ageRangeAggregatedMetrics;\r\n                console.log(\"Aggregated Data:\", aggregatedData);\r\n                console.log(\"Response Data afterfilter test:\", response.data);\r\n                const processedGraphData = Object.entries(aggregatedData || {}).map(([key, metrics]) => {\r\n                    const displayKey = tabId === 'gender' \r\n                        ? (key === 'MALE' ? 'Male' : key === 'FEMALE' ? 'Female' : key)\r\n                        : key;\r\n                        \r\n                    const baseEntry = {\r\n                        [tabId === 'gender' ? 'gender' : 'ageRange']: displayKey\r\n                    };\r\n                    \r\n                    if (metrics && typeof metrics === 'object' && !Array.isArray(metrics)) {\r\n                        const typedMetrics = metrics as Record<string, number>;\r\n                        return {\r\n                            ...baseEntry,\r\n                            totalConversions: typedMetrics.totalConversions || 0,\r\n                            totalClicks: typedMetrics.totalClicks || 0,\r\n                            totalCost: typedMetrics.totalCost || 0,\r\n                            totalCTR: typedMetrics.totalCTR || 0\r\n                        };\r\n                    }\r\n                    return baseEntry;\r\n                });\r\n                console.log(\"Processed Graph Data:\", processedGraphData);\r\n                setGraphData(processedGraphData);\r\n                setTotalRecords(response.data.totalRecords || 0);\r\n                setTotalPages(response.data.totalPages || 1);\r\n                setHasMoreData(currentPage * ROWS_PER_PAGE < response.data.totalRecords);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.error(`Error fetching data:`, error);\r\n            setGraphData(null);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleFilterChange = (filterKey: keyof FilterState, value: string) => {\r\n        setFilters(prev => {\r\n            const updatedFilters = {\r\n                ...prev,\r\n                [filterKey]: value\r\n            };\r\n    \r\n            // Reset dependent filters when certain filters change\r\n            if (filterKey === 'campaign') {\r\n                updatedFilters.adGroup = 'all';\r\n            }\r\n    \r\n            return updatedFilters;\r\n        });\r\n    \r\n        // Prepare request body with updated filters\r\n        const requestBody = {\r\n            startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n            endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n            page: 1,\r\n            limit: ROWS_PER_PAGE,\r\n            status: filters.status === 'all' ? undefined : filters.status,\r\n            campaign: filters.campaign === 'all' ? undefined : filters.campaign,\r\n            adGroup: filters.adGroup === 'all' ? undefined : filters.adGroup,\r\n            ...(activeTab === 'age' && filters.ageRange !== 'all' && { agerange: filters.ageRange }),\r\n            ...(activeTab === 'gender' && filters.gender !== 'all' && { gender: filters.gender })\r\n        };\r\n    \r\n        // Reset graph data before fetching\r\n        setGraphData(null);\r\n    \r\n        // Force data refresh with new filters\r\n        fetchData(activeTab, requestBody, true);\r\n    };\r\n    useEffect(() => {\r\n        const requestBody = {\r\n            startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n            endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n            page: currentPage,\r\n            limit: ROWS_PER_PAGE,\r\n            status: filters.status === 'all' ? undefined : filters.status,\r\n            campaign: filters.campaign === 'all' ? undefined : filters.campaign,\r\n            adGroup: filters.adGroup === 'all' ? undefined : filters.adGroup,\r\n            \r\n            // Conditional filters based on active tab\r\n            ...(activeTab === 'age' && filters.ageRange !== 'all' && { \r\n                agerange: filters.ageRange \r\n            }),\r\n            ...(activeTab === 'gender' && filters.gender !== 'all' && { \r\n                gender: filters.gender \r\n            })\r\n        };\r\n    \r\n        // Reset graph data before fetching\r\n        setGraphData(null);\r\n        \r\n        console.log('UseEffect Fetch Request:', { \r\n            activeTab, \r\n            filters, \r\n            requestBody \r\n        });\r\n        \r\n        fetchData(activeTab, requestBody);\r\n    \r\n        const intervalId = setInterval(() => {\r\n            fetchData(activeTab, requestBody);\r\n        }, 300000); // 5 minutes\r\n    \r\n        return () => clearInterval(intervalId);\r\n    }, [\r\n        activeTab, \r\n        date, \r\n        currentPage, \r\n        filters.campaign,\r\n        filters.adGroup,\r\n        filters.ageRange,\r\n        filters.gender,\r\n        filters.status\r\n    ]);\r\n    const handleTabChange = (newTabId: string) => {\r\n        setActiveTab(newTabId);\r\n        setCurrentPage(1);\r\n        const requestBody = {\r\n            startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n            endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n            page: 1,\r\n            limit: ROWS_PER_PAGE\r\n        };\r\n        fetchData(newTabId, requestBody);\r\n    };\r\n\r\n    const sortableColumns = [\r\n        'campaignName',\r\n        'adGroupName',\r\n        'campaignStatus',\r\n        'ageRange',\r\n        'conversionsValue',\r\n        'conversionsRate',\r\n        'avg_cpc', \r\n        'cost',\r\n        'roas',\r\n        'conversions',\r\n        'clicks',\r\n        'ctr'\r\n    ];\r\n\r\n    const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n    const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\r\n\r\n    const handleSort = (column: string) => {\r\n        if (sortColumn === column) {\r\n            setSortOrder(prevOrder => prevOrder === 'asc' ? 'desc' : 'asc');\r\n        } else {\r\n            setSortColumn(column);\r\n            setSortOrder('asc');\r\n        }\r\n    };\r\n\r\n    const { columns } = (() => {\r\n        const currentTab = tabs.find(tab => tab.id === activeTab);\r\n        if (!currentTab) return { columns: [] };\r\n        return {\r\n            columns: currentTab.columns,\r\n        };\r\n    })();\r\n\r\n    const sortedData = useMemo(() => {\r\n        if (!sortColumn) return data;\r\n\r\n        return [...data].sort((a, b) => {\r\n            const aValue = a[sortColumn];\r\n            const bValue = b[sortColumn];\r\n\r\n            if (typeof aValue === 'number' && typeof bValue === 'number') {\r\n                return sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\r\n            }\r\n\r\n            const stringA = String(aValue || '').toLowerCase();\r\n            const stringB = String(bValue || '').toLowerCase();\r\n\r\n            if (stringA < stringB) return sortOrder === 'asc' ? -1 : 1;\r\n            if (stringA > stringB) return sortOrder === 'asc' ? 1 : -1;\r\n            return 0;\r\n        });\r\n    }, [data, sortColumn, sortOrder]);\r\n\r\n   // Handle page change\r\n    const handlePageChange = (newPage: number) => {\r\n        const validPage = Math.min(Math.max(1, newPage), totalPages);\r\n        setCurrentPage(validPage);\r\n        // Fetch data for the new page\r\n        const requestBody = {\r\n            startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n            endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n            page: validPage,\r\n            limit: ROWS_PER_PAGE\r\n        };\r\n        fetchData(activeTab, requestBody);\r\n    };\r\n\r\n    const colorPalette = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300'];\r\n\r\n    return (\r\n        <div className='w-full'>\r\n            <div className='flex flex-row gap-2 items-center mb-4'>\r\n                <GoogleLogo />\r\n                <h1 className='text-xl font-bold text-gray-800'>Age and Gender Metrics</h1>\r\n            </div>\r\n            <div className='bg-white p-6 rounded-xl shadow-lg border border-gray-200'>\r\n                <div className=\"flex items-center justify-between border-b border-gray-200 pb-2 mb-2\">\r\n                    <div className=\"flex space-x-2\" role=\"tablist\">\r\n                        {tabs.map(tab => (\r\n                            <Button\r\n                                key={tab.id}\r\n                                variant={activeTab === tab.id ? \"default\" : \"ghost\"}\r\n                                onClick={() => handleTabChange(tab.id)}\r\n                                className=\"relative\"\r\n                            >\r\n                                {tab.id === 'age' ? <Package className=\"w-4 h-4 mr-2\" /> : <Layers className=\"w-4 h-4 mr-2\" />}\r\n                                {tab.label}\r\n                                {activeTab === tab.id && (\r\n                                    <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-blue-600\" />\r\n                                )}\r\n                            </Button>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <DatePickerWithRange\r\n                            \r\n                        />\r\n                        {showGraph && (\r\n                            <div className=\"flex gap-2\">\r\n                                {Object.keys(metricLabels).map(metric => (\r\n                                    <label key={metric} className=\"flex items-center space-x-2\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={selectedMetrics.includes(metric as MetricKey)}\r\n                                            onChange={() => handleMetricChange(metric as MetricKey)}\r\n                                        />\r\n                                        <span className=\"text-sm text-gray-700\">{metricLabels[metric as MetricKey]}</span>\r\n                                    </label>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        <Button \r\n                            variant=\"outline\" \r\n                            size=\"icon\" \r\n                            onClick={() => {\r\n                                const requestBody = {\r\n                                    startDate: date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\",\r\n                                    endDate: date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\",\r\n                                    page: 1,\r\n                                    limit: 1000\r\n                                };\r\n                                fetchData(activeTab, requestBody, true);\r\n                            }}\r\n                            disabled={loading}\r\n                        >\r\n                            <RefreshCw className={`h-4 w-4 ${loading ? '' : ''}`} />\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"outline\" \r\n                            onClick={() => setShowGraph(!showGraph)}\r\n                        >\r\n                            {showGraph ? \"Show Table\" : \"Show Graph\"}\r\n                        </Button>\r\n                        <Popover>\r\n                            <PopoverTrigger asChild>\r\n                                <Button variant=\"outline\" className=\"bg-white border-gray-300 hover:bg-gray-50 transition-colors duration-200\">\r\n                                    <Filter className=\"w-4 h-4 mr-2\" />\r\n                                    Filter\r\n                                </Button>\r\n                            </PopoverTrigger>\r\n                            <PopoverContent className=\"w-80\">\r\n                                <div className=\"space-y-4\">\r\n                                    <div>\r\n                                        <h3 className=\"font-medium mb-2\">Campaign</h3>\r\n                                        <Select \r\n                                            onValueChange={(value) => handleFilterChange('campaign', value)} \r\n                                            value={filters.campaign}\r\n                                        >\r\n                                            <SelectTrigger>\r\n                                                <SelectValue placeholder=\"Select campaign\" />\r\n                                            </SelectTrigger>\r\n                                            <SelectContent>\r\n                                                <SelectItem value=\"all\">All</SelectItem>\r\n                                                {filterOptions.campaigns.map(campaign => (\r\n                                                    <SelectItem key={campaign} value={campaign}>\r\n                                                        {campaign}\r\n                                                    </SelectItem>\r\n                                                ))}\r\n                                            </SelectContent>\r\n                                        </Select>\r\n                                    </div>\r\n                                    {filters.campaign !== 'all' && (\r\n                                        <div>\r\n                                            <h3 className=\"font-medium mb-2\">Ad Group</h3>\r\n                                            <Select \r\n                                                onValueChange={(value) => handleFilterChange('adGroup', value)} \r\n                                                value={filters.adGroup}\r\n                                            >\r\n                                                <SelectTrigger>\r\n                                                    <SelectValue placeholder=\"Select ad group\" />\r\n                                                </SelectTrigger>\r\n                                                <SelectContent>\r\n                                                    <SelectItem value=\"all\">All Ad Groups</SelectItem>\r\n                                                    {(\r\n                                                        filterOptions.campaignAdGroupMap?.[filters.campaign] || \r\n                                                        (activeTab === 'gender' \r\n                                                            ? filterOptions.adGroups.filter(() => {\r\n                                                                if (filterOptions && filterOptions.campaignAdGroupMap) {\r\n                                                                    const campaign = Object.keys(filterOptions.campaignAdGroupMap).find(() => \r\n                                                                        filterOptions.campaignAdGroupMap?.[filters.campaign]?.some(ag => \r\n                                                                            filterOptions.campaignAdGroupMap?.[filters.campaign]?.includes(ag)\r\n                                                                        )\r\n                                                                    );\r\n                                                                    return campaign && filterOptions.campaigns.includes(campaign);\r\n                                                                }\r\n                                                                return false;\r\n                                                            })\r\n                                                            : filterOptions.adGroups)\r\n                                                    )?.map(adGroup => (\r\n                                                        <SelectItem key={adGroup} value={adGroup}>\r\n                                                            {adGroup}\r\n                                                        </SelectItem>\r\n                                                    ))}\r\n                                                </SelectContent>\r\n                                            </Select>\r\n                                        </div>\r\n                                    )}\r\n                                    <div>\r\n                                        <h3 className=\"font-medium mb-2\">Status</h3>\r\n                                        <Select \r\n                                            onValueChange={(value) => handleFilterChange('status', value)} \r\n                                            value={filters.status}\r\n                                        >\r\n                                            <SelectTrigger>\r\n                                                <SelectValue placeholder=\"Select status\" />\r\n                                            </SelectTrigger>\r\n                                            <SelectContent>\r\n                                                <SelectItem value=\"all\">All</SelectItem>\r\n                                                {filterOptions.statusOptions.map((status) => (\r\n                                                    <SelectItem key={status} value={status}>\r\n                                                        {status}\r\n                                                    </SelectItem>\r\n                                                ))}\r\n                                            </SelectContent>\r\n                                        </Select>\r\n                                    </div>\r\n                                    {activeTab === 'age' && (\r\n                                        <div>\r\n                                            <h3 className=\"font-medium mb-2\">Age Range</h3>\r\n                                            <Select \r\n                                                onValueChange={(value) => handleFilterChange('ageRange', value)} \r\n                                                value={filters.ageRange}\r\n                                            >\r\n                                                <SelectTrigger>\r\n                                                    <SelectValue placeholder=\"Select age range\" />\r\n                                                </SelectTrigger>\r\n                                                <SelectContent>\r\n                                                    <SelectItem value=\"all\">All</SelectItem>\r\n                                                    {filterOptions.ageRanges.map((range) => (\r\n                                                        <SelectItem key={range} value={range}>\r\n                                                            {range.replace('AGE_RANGE_', '').replace(/_/g, '-')}\r\n                                                        </SelectItem>\r\n                                                    ))}\r\n                                                </SelectContent>\r\n                                            </Select>\r\n                                        </div>\r\n                                    )}\r\n                                    {activeTab === 'gender' && (\r\n                                        <div>\r\n                                            <h3 className=\"font-medium mb-2\">Gender</h3>\r\n                                            <Select \r\n                                                onValueChange={(value) => handleFilterChange('gender', value)} \r\n                                                value={filters.gender}\r\n                                            >\r\n                                                <SelectTrigger>\r\n                                                    <SelectValue placeholder=\"Select gender\" />\r\n                                                </SelectTrigger>\r\n                                                <SelectContent>\r\n                                                    <SelectItem value=\"all\">All</SelectItem>\r\n                                                    {filterOptions.genders.map((gender) => (\r\n                                                        <SelectItem key={gender} value={gender}>\r\n                                                            {gender === 'MALE' ? 'Male' : gender === 'FEMALE' ? 'Female' : gender}\r\n                                                        </SelectItem>\r\n                                                    ))}\r\n                                                </SelectContent>\r\n                                            </Select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </PopoverContent>\r\n                        </Popover>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                    {loading ? (\r\n                        <div className=\"flex justify-center items-center h-64\">\r\n                            <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-blue-500\"></div>\r\n                        </div>\r\n                    ) : showGraph ? (\r\n                        activeTab === 'age' && graphData ? (\r\n                            <ResponsiveContainer width=\"100%\" height={300}>\r\n                                <BarChart data={graphData}>\r\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"ageRange\" />\r\n                                    <YAxis />\r\n                                    <RechartsTooltip />\r\n                                    <Legend />\r\n                                    {selectedMetrics.map((metric, index) => (\r\n                                        <Bar key={metric} dataKey={metric} fill={colorPalette[index % colorPalette.length]} name={metricLabels[metric as MetricKey]} />\r\n                                    ))}\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        ) : (\r\n                            activeTab === 'gender' && graphData ? (\r\n                                <ResponsiveContainer width=\"100%\" height={300}>\r\n                                    <BarChart data={graphData}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"gender\" />\r\n                                        <YAxis />\r\n                                        <RechartsTooltip />\r\n                                        <Legend />\r\n                                        {selectedMetrics.map((metric, index) => (\r\n                                            <Bar key={metric} dataKey={metric} fill={colorPalette[index % colorPalette.length]} name={metricLabels[metric as MetricKey]} />\r\n                                        ))}\r\n                                    </BarChart>\r\n                                </ResponsiveContainer>\r\n                            ) : null\r\n                        )\r\n                    ) : (\r\n                        <div className=\"rounded-md border border-gray-200 overflow-hidden\">\r\n                            <div className=\"max-h-[350px] overflow-auto\">\r\n                                <table className=\"w-full\">\r\n                                    <thead className=\"sticky top-0 z-10 bg-[#4A628A]\">\r\n                                        <tr>\r\n                                            {columns.map(column => (\r\n                                                <th \r\n                                                    key={column.id} \r\n                                                    className=\"px-4 py-3 text-left text-xs font-medium text-gray-50 uppercase tracking-wider min-w-[150px] cursor-pointer\"\r\n                                                    onClick={() => sortableColumns.includes(column.id) && handleSort(column.id)}\r\n                                                >\r\n                                                    <div className=\"flex items-center gap-1\">\r\n                                                        {column.header}\r\n                                                        {sortableColumns.includes(column.id) && (\r\n                                                            sortColumn === column.id ? (\r\n                                                                sortOrder === 'asc' ? <ArrowUp className=\"ml-1 w-4 h-6 text-[#ffffff]\" /> : <ArrowDown className=\"ml-1 w-4 h-6 text-[#ffffff]\" />\r\n                                                            ) : (\r\n                                                                <ArrowUpDown className=\"ml-1 w-4 h-6 text-gray-300\" />\r\n                                                            )\r\n                                                        )}\r\n                                                    </div>\r\n                                                </th>\r\n                                            ))}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                        {sortedData.map((row, rowIndex) => (\r\n                                            <tr \r\n                                                key={rowIndex} \r\n                                                className=\"hover:bg-gray-50\"\r\n                                            >\r\n                                                {columns.map((column) => (\r\n                                                    <td \r\n                                                        key={column.id} \r\n                                                        className=\"px-4 py-2.5 text-sm whitespace-nowrap min-w-[150px]\"\r\n                                                    >\r\n                                                        {column.cell(row[column.accessorKey])}\r\n                                                    </td>\r\n                                                ))}\r\n                                            </tr>\r\n                                        ))}\r\n                                        {sortedData.length === 0 && (\r\n                                            <tr>\r\n                                                <td \r\n                                                    colSpan={columns.length} \r\n                                                    className=\"px-4 py-4 text-center text-gray-500\"\r\n                                                >\r\n                                                    No data available\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <div className=\"flex items-center justify-between px-4 py-3 bg-white border-t border-gray-200\">\r\n                                <div className=\"text-sm text-gray-700\">\r\n                                    {sortedData.length > 0 ? (\r\n                                        `Showing ${((currentPage - 1) * ROWS_PER_PAGE) + 1} to ${Math.min(currentPage * ROWS_PER_PAGE, totalRecords)} of ${totalRecords} entries`\r\n                                    ) : (\r\n                                        'Showing 0 entries'\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"flex items-center space-x-2\">\r\n                                    <Button\r\n                                        variant=\"outline\"\r\n                                        size=\"sm\"\r\n                                        onClick={() => handlePageChange(currentPage - 1)}\r\n                                        disabled={currentPage === 1}\r\n                                    >\r\n                                        <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n                                        Previous\r\n                                    </Button>\r\n                                    <div className=\"text-sm text-gray-700\">\r\n                                        Page {currentPage} of {totalPages}\r\n                                    </div>\r\n                                    <Button\r\n                                        variant=\"outline\"\r\n                                        size=\"sm\"\r\n                                        onClick={() => handlePageChange(currentPage + 1)}\r\n                                        disabled={!hasMoreData}\r\n                                    >\r\n                                        Next\r\n                                        <ChevronRight className=\"h-4 w-4 ml-1\" />\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\"\r\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { CheckIcon, ChevronRightIcon, DotFilledIcon } from \"@radix-ui/react-icons\"\r\n\r\nconst DropdownMenu = DropdownMenuPrimitive.Root\r\n\r\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\r\n\r\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\r\n\r\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\r\n\r\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\r\n\r\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\r\n\r\nconst DropdownMenuSubTrigger = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRightIcon className=\"ml-auto\" />\r\n  </DropdownMenuPrimitive.SubTrigger>\r\n))\r\nDropdownMenuSubTrigger.displayName =\r\n  DropdownMenuPrimitive.SubTrigger.displayName\r\n\r\nconst DropdownMenuSubContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuSubContent.displayName =\r\n  DropdownMenuPrimitive.SubContent.displayName\r\n\r\nconst DropdownMenuContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Portal>\r\n    <DropdownMenuPrimitive.Content\r\n      ref={ref}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </DropdownMenuPrimitive.Portal>\r\n))\r\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\r\n\r\nconst DropdownMenuItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\r\n\r\nconst DropdownMenuCheckboxItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <CheckIcon className=\"h-4 w-4\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.CheckboxItem>\r\n))\r\nDropdownMenuCheckboxItem.displayName =\r\n  DropdownMenuPrimitive.CheckboxItem.displayName\r\n\r\nconst DropdownMenuRadioItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <DotFilledIcon className=\"h-2 w-2 fill-current\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.RadioItem>\r\n))\r\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\r\n\r\nconst DropdownMenuLabel = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\r\n\r\nconst DropdownMenuSeparator = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\r\n\r\nconst DropdownMenuShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\r\n\r\nexport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuRadioItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuShortcut,\r\n  DropdownMenuGroup,\r\n  DropdownMenuPortal,\r\n  DropdownMenuSub,\r\n  DropdownMenuSubContent,\r\n  DropdownMenuSubTrigger,\r\n  DropdownMenuRadioGroup,\r\n}\r\n","import React, { useState, useMemo, useRef, useEffect } from 'react';\r\nimport { ArrowUp, ArrowDown, ArrowUpDown, ThumbsDown, Award, ChevronsLeft, ChevronRight, ChevronsRight, ChevronLeft } from 'lucide-react';\r\nimport { PageMetric } from '@/pages/ReportPage/component/LandingPageSession';\r\nimport { Button } from '@/components/ui/button';\r\n\r\ninterface TableProps {\r\n  columns: string[];\r\n  data: any[];\r\n  allTimeData?: PageMetric[];\r\n  isFullScreen?: boolean;\r\n}\r\n\r\nconst getConditionalColors = (value: number, average: number) => {\r\n  const epsilon = 0.0001; // Small tolerance for floating-point comparisons\r\n\r\n  if (value > average) return 'bg-green-100 text-green-800';\r\n  if (value < average) return 'bg-red-50 text-red-800';\r\n  if (Math.abs(value - average) < epsilon) return 'bg-yellow-100 text-yellow-700'; // Handles approximate equality\r\n\r\n  return 'bg-yellow-100 text-yellow-700';\r\n};\r\n\r\n\r\nconst ReportTable: React.FC<TableProps> = ({\r\n  columns = [],\r\n  data = [],\r\n  allTimeData = [],\r\n  isFullScreen,\r\n}) => {\r\n  const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\r\n  const [filterLabel, setFilterLabel] = useState<string | null>(null);\r\n  const [filterType, setFilterType] = useState<string | null>(null);\r\n  const [columnWidths, setColumnWidths] = useState<number[]>([]);\r\n  const [isResizing, setIsResizing] = useState<number | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [loadedRows, setLoadedRows] = useState<any[]>([]);\r\n  const rowsPerChunk = 30;\r\n  const rowsPerPage = 10;\r\n  const isDateTable = columns[0] === 'Date';\r\n\r\n  const tableRef = useRef<HTMLTableElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const initializationRef = useRef(false);\r\n  const dataRef = useRef(data);\r\n  const filteredDataRef = useRef<any[]>([]);\r\n\r\n  const comparisonColumns = ['Add To Cart Rate', 'Checkout Rate', 'Purchase Rate', 'Sessions'];\r\n\r\n  const parsePercentage = (value: string): number => {\r\n    return parseFloat(value?.replace('%', '').trim()) || 0;\r\n  };\r\n\r\n  // Initialize column widths only once after initial render\r\n  useEffect(() => {\r\n    if (!initializationRef.current && tableRef.current && containerRef.current) {\r\n      const headerCells = tableRef.current.querySelectorAll('thead th');\r\n      const widths = Array.from(headerCells).map(cell => {\r\n        return Math.max(100, cell.clientWidth);\r\n      });\r\n      setColumnWidths(widths);\r\n      initializationRef.current = true;\r\n    }\r\n  }, []);\r\n\r\n  // Handle window resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (tableRef.current && containerRef.current && initializationRef.current) {\r\n        const headerCells = tableRef.current.querySelectorAll('thead th');\r\n        const widths = Array.from(headerCells).map((cell, index) => {\r\n          return Math.max(100, columnWidths[index] || cell.clientWidth);\r\n        });\r\n        setColumnWidths(widths);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [columnWidths]);\r\n\r\n  const averageValues = useMemo(() => {\r\n    const averages: Record<string, number> = {};\r\n    comparisonColumns.forEach((key) => {\r\n      const validData = data.filter(item => item[key] !== undefined && !isNaN(parsePercentage(item[key] || '0')));\r\n      const average = validData.length > 0\r\n        ? validData.reduce((sum, item) => sum + parsePercentage(item[key] || '0'), 0) / validData.length\r\n        : 0;\r\n\r\n      // Convert \"Sessions\" to an integer, others remain as decimals\r\n      averages[key] = key === 'Sessions' ? Math.round(average) : parseFloat(average.toFixed(2));\r\n    });\r\n    return averages;\r\n  }, [data]);\r\n\r\n\r\n\r\n  const allTimeAverageValues = useMemo(() => {\r\n    const averages: Record<string, number> = {};\r\n    comparisonColumns.forEach((key) => {\r\n      if (allTimeData) {\r\n        const validAllTimeData = allTimeData.filter(item => item[key] !== undefined && !isNaN(parsePercentage(item[key] || '0')));\r\n        averages[key] = validAllTimeData.length > 0 ?\r\n          validAllTimeData.reduce((sum, item) => sum + parsePercentage(item[key] || '0'), 0) / validAllTimeData.length : 0;\r\n      } else {\r\n        averages[key] = 0;\r\n      }\r\n    });\r\n    return averages;\r\n  }, [allTimeData]);\r\n\r\n  const rowPerformanceLabels = useMemo(() => {\r\n    if (columns[0] === 'Date') return data.map(() => ({ currentLabel: null, allTimeLabel: null }));\r\n\r\n    return data.map((item) => {\r\n      if (!item || !comparisonColumns.every(column => item[column] !== undefined)) {\r\n        return { currentLabel: null, allTimeLabel: null };\r\n      }\r\n\r\n      const currentPerformance = comparisonColumns.some((column) => {\r\n        const value = parsePercentage(item[column] || '0');\r\n        const average = averageValues[column];\r\n        return value > average;\r\n      });\r\n\r\n      const isWorstPerformingCurrent = comparisonColumns.every((column) => {\r\n        const value = parsePercentage(item[column] || '0');\r\n        const average = averageValues[column];\r\n        return value < average;\r\n      });\r\n\r\n      const currentLabel = currentPerformance ? 'Current Top' : isWorstPerformingCurrent ? 'Current Worst' : '';\r\n\r\n      const allTimePerformance = comparisonColumns.some((column) => {\r\n        const value = parsePercentage(item[column] || '0');\r\n        const allTimeAverage = allTimeAverageValues[column];\r\n        return value > allTimeAverage;\r\n      });\r\n\r\n      const isWorstPerformingAllTime = comparisonColumns.every((column) => {\r\n        const value = parsePercentage(item[column] || '0');\r\n        const allTimeAverage = allTimeAverageValues[column];\r\n        return value < allTimeAverage;\r\n      });\r\n\r\n      const allTimeLabel = allTimePerformance ? 'All Time Top' : isWorstPerformingAllTime ? 'All Time Worst' : '';\r\n\r\n      return {\r\n        currentLabel,\r\n        allTimeLabel,\r\n      };\r\n    });\r\n  }, [data, allTimeData, averageValues, allTimeAverageValues, columns]);\r\n\r\n  const handleMouseDown = (index: number, event: React.MouseEvent) => {\r\n    setIsResizing(index);\r\n    const startX = event.pageX;\r\n    const startWidth = columnWidths[index];\r\n\r\n    const handleMouseMove = (moveEvent: MouseEvent) => {\r\n      const delta = moveEvent.pageX - startX;\r\n      const newWidth = Math.max(100, startWidth + delta);\r\n      const newWidths = [...columnWidths];\r\n      newWidths[index] = newWidth;\r\n      setColumnWidths(newWidths);\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      setIsResizing(null);\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n  };\r\n\r\n  const parsedData = useMemo(() =>\r\n    data.map((item, index) => ({\r\n      ...item,\r\n      currentPerformanceLabel: !isDateTable ? rowPerformanceLabels[index]?.currentLabel || null : null,\r\n      allTimePerformanceLabel: !isDateTable ? rowPerformanceLabels[index]?.allTimeLabel || null : null,\r\n      Sessions: Number(item?.Sessions || 0),\r\n      'Add To Cart Rate': parsePercentage(item?.['Add To Cart Rate'] || '0'),\r\n      'Checkout Rate': parsePercentage(item?.['Checkout Rate'] || '0'),\r\n      'Purchase Rate': parsePercentage(item?.['Purchase Rate'] || '0'),\r\n    })), [data, rowPerformanceLabels, isDateTable]);\r\n\r\n    const sortedData = useMemo(() => {\r\n      if (!sortColumn) return parsedData;\r\n    \r\n      return [...parsedData].sort((a, b) => {\r\n        const aValue = a[sortColumn];\r\n        const bValue = b[sortColumn];\r\n    \r\n        // Handle Date sorting\r\n        if (sortColumn === 'Date') {\r\n          return sortDirection === 'asc'\r\n            ? new Date(aValue).getTime() - new Date(bValue).getTime()\r\n            : new Date(bValue).getTime() - new Date(aValue).getTime();\r\n        }\r\n    \r\n        // Handle Numeric sorting\r\n        const aNum = typeof aValue === 'number'\r\n          ? aValue\r\n          : parseFloat((aValue || '0').toString().replace('%', '').trim());\r\n        const bNum = typeof bValue === 'number'\r\n          ? bValue\r\n          : parseFloat((bValue || '0').toString().replace('%', '').trim());\r\n    \r\n        if (aNum < bNum) return sortDirection === 'asc' ? -1 : 1;\r\n        if (aNum > bNum) return sortDirection === 'asc' ? 1 : -1;\r\n        return 0;\r\n      });\r\n    }, [parsedData, sortColumn, sortDirection]);\r\n    \r\n\r\n\r\n  const isNumericColumn = (column: string) => {\r\n    return [\r\n      'Date',\r\n      'Add To Cart',\r\n      'Checkouts',\r\n      'Sessions',\r\n      'Purchases',\r\n      'Visitors',\r\n      ...comparisonColumns,\r\n    ].includes(column);\r\n  };\r\n  const handleSort = (column: string) => {\r\n    if (!isNumericColumn(column)) return;\r\n  \r\n    if (sortColumn === column) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortColumn(column);\r\n      setSortDirection('asc');\r\n    } \r\n  };\r\n\r\n  const handleClickLabel = (label: string, type: string) => {\r\n    if (filterLabel === label && filterType === type) {\r\n      setFilterLabel(null);\r\n      setFilterType(null);\r\n    } else {\r\n      setFilterLabel(label);\r\n      setFilterType(type);\r\n    }\r\n  };\r\n\r\n  const filteredData = useMemo(() => {\r\n    const result = isDateTable\r\n      ? sortedData\r\n      : filterLabel\r\n        ? sortedData.filter((item) => {\r\n          if (filterType === 'current') {\r\n            return item.currentPerformanceLabel === filterLabel;\r\n          }\r\n          if (filterType === 'allTime') {\r\n            return item.allTimePerformanceLabel === filterLabel;\r\n          }\r\n          return false;\r\n        })\r\n        : sortedData;\r\n\r\n    filteredDataRef.current = result;\r\n    return result;\r\n  }, [sortedData, filterLabel, filterType, isDateTable]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (isFullScreen) {\r\n      setLoadedRows(filteredDataRef.current.slice(0, rowsPerChunk));\r\n    }\r\n  }, [isFullScreen]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isFullScreen &&\r\n      (dataRef.current !== data ||\r\n        filterLabel !== null ||\r\n        sortColumn !== null ||\r\n        sortDirection)  // Add sortDirection to trigger updates\r\n    ) {\r\n      setLoadedRows(filteredDataRef.current.slice(0, rowsPerChunk));\r\n      dataRef.current = data;\r\n    }\r\n  }, [data, filterLabel, sortColumn, sortDirection, isFullScreen]);\r\n\r\n  const loadMoreRows = () => {\r\n    if (isFullScreen && loadedRows.length < filteredDataRef.current.length) {\r\n      const nextChunk = filteredDataRef.current.slice(\r\n        loadedRows.length,\r\n        loadedRows.length + rowsPerChunk\r\n      );\r\n      setLoadedRows(prev => [...prev, ...nextChunk]);\r\n    }\r\n  };\r\n\r\n  const handleScroll = (event: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n    const target = event.currentTarget;\r\n    if (\r\n      target.scrollHeight - target.scrollTop <= target.clientHeight + 100\r\n    ) {\r\n      loadMoreRows();\r\n    }\r\n  };\r\n\r\n  const displayRows = useMemo(() => {\r\n    if (isFullScreen) {\r\n      return loadedRows;\r\n    }\r\n    return filteredData.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage);\r\n  }, [isFullScreen, loadedRows, filteredData, currentPage, rowsPerPage]);\r\n\r\n  const pageCount = Math.ceil(filteredData.length / rowsPerPage);\r\n\r\n  const goToPage = (page: number) => {\r\n    const pageNumber = Math.max(1, Math.min(page, pageCount));\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const columnPairs = {\r\n    'Add To Cart': 'Add To Cart Rate',\r\n    'Checkouts': 'Checkout Rate',\r\n    'Purchases': 'Purchase Rate'\r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={containerRef}\r\n        className=\"rounded-md overflow-x-auto relative border\"\r\n        style={{\r\n          width: '100%',\r\n          maxHeight: isFullScreen ? 'calc(100vh - 105px)' : 'calc(100vh - 200px)',\r\n          overflowX: 'auto',\r\n        }}\r\n        onScroll={isFullScreen ? handleScroll : undefined}\r\n      >\r\n        <table\r\n          ref={tableRef}\r\n          className=\"w-full text-center shadow-lg rounded-lg border border-gray-200\"\r\n          style={{\r\n            tableLayout: 'fixed',\r\n            width: '100%',\r\n            borderCollapse: 'collapse',\r\n          }}\r\n        >\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              {columns[0] !== 'Date' && allTimeData && (\r\n                <th\r\n                  className=\"font-bold p-1 text-gray-800 text-sm border-b-2 sticky left-0 bg-gray-100 z-30 border-r border-gray-300\"\r\n                  style={{\r\n                    width: `${columnWidths[0]}px`,\r\n                    minWidth: '200px',\r\n                    position: 'sticky',\r\n                    left: 0,\r\n                    top: 0,\r\n                  }}\r\n                >\r\n                  Performance Label\r\n                  <div\r\n                    onMouseDown={(e) => handleMouseDown(0, e)}\r\n                    className={`absolute right-0 top-0 bottom-0 w-2 cursor-col-resize hover:bg-blue-200 ${isResizing === 0 ? 'bg-blue-300' : ''}`}\r\n                  />\r\n                </th>\r\n              )}\r\n              {columns.map((column, colIndex) => {\r\n                const isFirstColumn = colIndex === 0;\r\n                const needsLeftSticky = isFirstColumn && columns[0] === 'Date';\r\n                const isComparisonCol = comparisonColumns.includes(column);\r\n\r\n                return (\r\n                  <th\r\n                    key={column}\r\n                    className={`\r\n            font-bold p-1 text-gray-800 text-sm border-b-2 \r\n            capitalize sticky top-0 bg-gray-100 \r\n            border-r border-gray-300 \r\n            ${isNumericColumn(column) ? 'cursor-pointer' : ''}\r\n            ${needsLeftSticky ? 'sticky left-0 z-30' : 'z-20'}\r\n            ${isFirstColumn && columns[0] !== 'Date' && allTimeData ? 'sticky left-[150px]' : ''}\r\n          `}\r\n                    style={{\r\n                      width: `${columnWidths[colIndex] + 1}px`,\r\n                      minWidth: '200px',\r\n                      ...(isFirstColumn && {\r\n                        left: needsLeftSticky\r\n                          ? 0\r\n                          : (columns[0] !== 'Date' && allTimeData ? columnWidths[0] : 0)\r\n                      }),\r\n                      ...(needsLeftSticky && {\r\n                        backgroundColor: 'rgb(243 244 246)', // bg-gray-100\r\n                        zIndex: 30,\r\n                      })\r\n                    }}\r\n                    onClick={() => handleSort(column)}\r\n                  >\r\n                    <div className=\"flex flex-col items-center\">\r\n                      <div className=\"flex items-center justify-center mb-1\">\r\n                        <span>{column}</span>\r\n                        {isNumericColumn(column) && (\r\n                          <span className=\"ml-2\">\r\n                            {sortColumn === column ? (\r\n                              sortDirection === 'asc' ? (\r\n                                <ArrowUp className=\"w-4 h-4 text-blue-600\" />\r\n                              ) : (\r\n                                <ArrowDown className=\"w-4 h-4 text-blue-600\" />\r\n                              )\r\n                            ) : (\r\n                              <ArrowUpDown className=\"w-4 h-4 text-gray-500\" />\r\n                            )}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      {isComparisonCol && averageValues[column] !== undefined && (\r\n                        <span className=\"text-xs text-gray-500\">\r\n                          avg: {column === 'Sessions'\r\n                            ? Math.round(averageValues[column])\r\n                            : averageValues[column]?.toFixed(2)}\r\n                          {column !== 'Sessions' ? '%' : ''}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      onMouseDown={(e) => handleMouseDown(colIndex, e)}\r\n                      className={`absolute right-0 top-0 bottom-0 w-2 cursor-col-resize hover:bg-blue-200 ${isResizing === colIndex ? 'bg-blue-300' : ''\r\n                        }`}\r\n                    />\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {displayRows.map((item, index) => (\r\n              <tr\r\n                key={index}\r\n                className={`${index % 2 === 0 ? 'bg-gray-50' : 'bg-white'\r\n                  } hover:bg-gray-100 transition-colors duration-200 rounded-md`}\r\n              >\r\n                {columns[0] !== 'Date' && allTimeData && (\r\n                  <td\r\n                    className=\"p-3 text-sm font-normal sticky left-0 bg-white z-20 shadow-[2px_0_0_0_rgba(0,0,0,0.1)] border-r border-gray-300\"\r\n                    style={{\r\n                      overflow: 'hidden',\r\n                      textOverflow: 'ellipsis',\r\n                      whiteSpace: 'nowrap',\r\n                    }}\r\n                  >\r\n                    <div className=\"flex items-center gap-1 min-w-[150px]\">\r\n                      {item.currentPerformanceLabel && (\r\n                        <span\r\n                          onClick={() => handleClickLabel(item.currentPerformanceLabel, 'current')}\r\n                          className={`inline-flex items-center px-2 py-1 rounded-md text-xs font-medium ${item.currentPerformanceLabel === 'Current Top'\r\n                            ? 'bg-green-100 text-green-800'\r\n                            : 'bg-red-100 text-red-800'\r\n                            } ${filterLabel === item.currentPerformanceLabel && filterType === 'current'\r\n                              ? 'ring-2 ring-offset-1 ring-opacity-60'\r\n                              : ''\r\n                            } cursor-pointer`}\r\n                        >\r\n                          {item.currentPerformanceLabel === 'Current Top' ? (\r\n                            <ArrowUp size={12} className=\"mr-1\" />\r\n                          ) : (\r\n                            <ArrowDown size={12} className=\"mr-1\" />\r\n                          )}\r\n                          {item.currentPerformanceLabel.split(' ')[1]}\r\n                        </span>\r\n                      )}\r\n                      {item.allTimePerformanceLabel && (\r\n                        <span\r\n                          onClick={() => handleClickLabel(item.allTimePerformanceLabel, 'allTime')}\r\n                          className={`inline-flex items-center px-2 py-1 rounded-md text-xs font-medium ${item.allTimePerformanceLabel === 'All Time Top'\r\n                            ? 'bg-blue-100 text-blue-800'\r\n                            : 'bg-orange-100 text-orange-800'\r\n                            } ${filterLabel === item.allTimePerformanceLabel && filterType === 'allTime'\r\n                              ? 'ring-2 ring-offset-1 ring-opacity-60'\r\n                              : ''\r\n                            } cursor-pointer`}\r\n                        >\r\n                          {item.allTimePerformanceLabel === 'All Time Top' ? (\r\n                            <Award size={12} className=\"mr-1\" />\r\n                          ) : (\r\n                            <ThumbsDown size={12} className=\"mr-1\" />\r\n                          )}\r\n                          All-time\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                )}\r\n                <td\r\n                  className=\"p-3 text-sm font-normal sticky left-[150px] bg-white z-20 shadow-[2px_0_0_0_rgba(0,0,0,0.1)] border-r border-gray-300\"\r\n                  style={{\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    whiteSpace: 'nowrap',\r\n                    left: `${columns[0] !== 'Date' ? columnWidths[0] : 0}px`,\r\n                  }}\r\n                >\r\n                  {item[columns[0]]}\r\n                </td>\r\n                {columns.slice(1).map((column) => {\r\n                  const cellValue = item[column as keyof typeof item];\r\n                  const isComparisonColumn = comparisonColumns.includes(column);\r\n                  const isPairedColumn = column in columnPairs;\r\n\r\n                  let colorClass = 'text-gray-800';\r\n                  if (isComparisonColumn) {\r\n                    colorClass = getConditionalColors(cellValue as number, averageValues[column]);\r\n                  } else if (isPairedColumn) {\r\n                    const rateColumn = columnPairs[column as keyof typeof columnPairs];\r\n                    const rateValue = item[rateColumn] as number;\r\n                    colorClass = getConditionalColors(rateValue, averageValues[rateColumn]);\r\n                  }\r\n                  return (\r\n                    <td\r\n                      key={column}\r\n                      className={`p-3 text-sm font-normal border-r border-gray-300 ${colorClass}`}\r\n                      style={{\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis',\r\n                        whiteSpace: 'nowrap',\r\n                      }}\r\n                    >\r\n                      <div className=\"flex items-center justify-center gap-2\">\r\n                        {column.includes('Rate')\r\n                          ? `${(cellValue as number).toFixed(2)}%`\r\n                          : cellValue}\r\n                      </div>\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {!isFullScreen && (\r\n        <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between gap-4\">\r\n          <div className=\"text-sm text-muted-foreground\">\r\n            Showing {((currentPage - 1) * rowsPerPage) + 1} to {Math.min(currentPage * rowsPerPage, filteredData.length)} of {filteredData.length} entries\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n              onClick={() => goToPage(1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <ChevronsLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"h-8 w-8 p-0\"\r\n              onClick={() => goToPage(currentPage - 1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <div className=\"flex items-center justify-center text-sm font-medium\">\r\n              Page {currentPage} of {pageCount}\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"h-8 w-8 p-0\"\r\n              onClick={() => goToPage(currentPage + 1)}\r\n              disabled={currentPage === pageCount}\r\n            >\r\n              <ChevronRight className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n              onClick={() => goToPage(pageCount)}\r\n              disabled={currentPage === pageCount}\r\n            >\r\n              <ChevronsRight className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ReportTable);","import { useState, useEffect } from 'react'\r\nimport { Filter } from 'lucide-react'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\n\r\nexport interface FilterItem {\r\n  column: string\r\n  operator: '>' | '<' | '=' \r\n  value: string\r\n}\r\n\r\ninterface FilterComponentProps {\r\n  columns: string[],\r\n  filters: FilterItem[];\r\n  setFilters: (filters: FilterItem[]) => void;\r\n  onFiltersChange: (filters: FilterItem[]) => void\r\n}\r\n\r\nexport function FilterComponent({ columns, onFiltersChange,filters,setFilters }: FilterComponentProps) {\r\n  const [filterColumn, setFilterColumn] = useState<string>('')\r\n  const [filterOperator, setFilterOperator] = useState<FilterItem['operator']>('>')\r\n  const [filterValue, setFilterValue] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    onFiltersChange(filters)\r\n  }, [filters, onFiltersChange])\r\n\r\n  const addFilter = () => {\r\n    if (filterColumn && filterValue) {\r\n      setFilters([...filters, { column: filterColumn, operator: filterOperator, value: filterValue }])\r\n      setFilterColumn('')\r\n      setFilterValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DropdownMenu>\r\n        <DropdownMenuTrigger asChild>\r\n          <Button variant=\"outline\" size={\"icon\"}>\r\n            <Filter className=\"h-4 w-4\" />\r\n          </Button>\r\n        </DropdownMenuTrigger>\r\n        <DropdownMenuContent className=\"w-80 p-4\">\r\n          <div className=\"flex flex-col gap-4\">\r\n            <Select value={filterColumn} onValueChange={(value) => {\r\n              setFilterColumn(value)\r\n            }}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select column\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {columns.map((column) => (\r\n                  <SelectItem key={column} value={column}>{column}</SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n            <Select value={filterOperator} onValueChange={(value) => setFilterOperator(value as FilterItem['operator'])}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select operator\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n\r\n                    <SelectItem value=\">\">Greater than</SelectItem>\r\n                    <SelectItem value=\"<\">Less than</SelectItem>\r\n                    <SelectItem value=\"=\">Equal to</SelectItem>\r\n            \r\n            \r\n              </SelectContent>\r\n            </Select>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Enter filter value\"\r\n              value={filterValue}\r\n              onChange={(e) => setFilterValue(e.target.value)}\r\n            />\r\n            <Button onClick={addFilter}>Add Filter</Button>\r\n          </div>\r\n        </DropdownMenuContent>\r\n      </DropdownMenu>\r\n    </div>\r\n  )\r\n}","import { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { format } from \"date-fns\";\r\nimport { ChevronDown, Columns, RefreshCw, X, Maximize, Minimize } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport ReportTable from \"@/pages/ReportPage/component/ReportTable\";\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { useUser } from \"@/context/UserContext\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\n\r\n\r\ninterface CityMetric {\r\n  \"city\": string;\r\n  \"country\": string;\r\n  \"region\": string;\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\ninterface CitySessionProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst CitySessionPage: React.FC<CitySessionProps> = ({ dateRange: propDateRange }) => {\r\n  const [date, setDate] = useState<DateRange | undefined>(propDateRange);\r\n  const [allTimeData, setAllTimeData]= useState<CityMetric[]>([]);\r\n  const [filteredData, setFilteredData] = useState<CityMetric[]>([]);\r\n  const [data, setData] = useState<CityMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  \r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState<string>('50');\r\n  const [filters, setFilters] = useState<FilterItem[]>([]);\r\n  const [removedColumns, setRemovedColumns] = useState<string[]>([]);\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n  const {user} = useUser();\r\n\r\n\r\n  const allColumns = ['city', 'country', 'region', 'Visitors', 'Sessions', 'Add To Cart', 'Add To Cart Rate', 'Checkouts', 'Checkout Rate', 'Purchases', 'Purchase Rate'];\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column) // Remove column from selected\r\n        : [...prev, column]; // Add column to selected\r\n\r\n      setRemovedColumns(prevRemoved => {\r\n        // Add or remove from removedColumns only if column is 'city', 'region', or 'country'\r\n        if (['city', 'region', 'country'].includes(column)) {\r\n          if (newColumns.includes(column)) {\r\n            // If re-selected, remove from removedColumns\r\n            return prevRemoved.filter(col => col !== column);\r\n          } else {\r\n            // If deselected, add to removedColumns\r\n            return [...prevRemoved, column];\r\n          }\r\n        }\r\n        // For other columns, keep removedColumns unchanged\r\n        return prevRemoved;\r\n      });\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelectedColumns(allColumns);\r\n  }, []);\r\n\r\n  // Update date state when prop changes\r\n  useEffect(() => {\r\n    setDate(propDateRange);\r\n  }, [propDateRange]);\r\n\r\n  const fetchMetrics = useCallback(async () => { \r\n    setIsLoading(true);\r\n    try {\r\n      // Ensure startDate and endDate are derived from the date state\r\n      const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n      const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n      // Fetch all-time and date-specific metrics in parallel\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axiosInstance.post(\r\n          `/api/analytics/locationReport/${brandId}`,\r\n          {\r\n            startDate: startDate || \"\",\r\n            endDate: endDate || \"\",\r\n            userId:user?.id,limit: rowsToShow,\r\n            ...(removedColumns.length > 0\r\n              ? { filters: { location: removedColumns } }\r\n              : {}),\r\n          },\r\n          { withCredentials: true }\r\n        ),\r\n        axiosInstance.post(\r\n          `/api/analytics/locationReport/${brandId}`,\r\n          { startDate: \"\", endDate: \"\",userId:user?.id,limit: rowsToShow, ...(removedColumns.length > 0\r\n            ? { filters: { location: removedColumns } }\r\n            : {}) },\r\n          { withCredentials: true }\r\n        ),\r\n      ]);\r\n\r\n      // Process the responses\r\n      const fetchedData = analyticsResponse.data.data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data.data || [];\r\n\r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n\r\n      // Ensure selected columns match fetched data\r\n      if (fetchedData.length > 0) {\r\n        const newColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? newColumns\r\n            : prevSelected.filter((col) => newColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching metrics:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, removedColumns, date,rowsToShow]);\r\n\r\n  // Use fetchMetrics in useEffect\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n    const intervalId = setInterval(fetchMetrics, 5 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchMetrics]);\r\n\r\n  // Manual refresh handler\r\n  const handleManualRefresh = () => {\r\n    fetchMetrics();\r\n  };\r\n\r\n  \r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const sortedSelectedColumns = useMemo(() => {\r\n    return allColumns.filter((col) => selectedColumns.includes(col));\r\n  }, [allColumns, selectedColumns]);\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n    \r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof CityMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate'];\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n    <CardContent className=\"mt-4\">\r\n      <div className=\"space-y-4\">\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Location Analytics</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n            <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button variant=\"outline\" size={\"icon\"}>\r\n                  <Columns className=\"h-4 w-4\" />\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent className=\"w-56\">\r\n                {allColumns.map((column) => (\r\n                  <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                    <Checkbox\r\n                      id={`column-${column}`}\r\n                      checked={selectedColumns.includes(column)}\r\n                      onCheckedChange={() => toggleColumnSelection(column)}\r\n                    />\r\n                    <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                      {column}\r\n                    </label>\r\n                  </DropdownMenuItem>\r\n                ))}\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n            <FilterComponent\r\n              columns={numericColumns}\r\n              onFiltersChange={applyFilters}\r\n              filters={filters}\r\n              setFilters={setFilters}\r\n            />\r\n             <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n             <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button variant=\"outline\">\r\n                  Show {rowsToShow === '10000' ? 'all' : rowsToShow} rows\r\n                  <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent>\r\n                <DropdownMenuItem onSelect={() => setRowsToShow('50')}>Show 50 rows</DropdownMenuItem>\r\n                <DropdownMenuItem onSelect={() => setRowsToShow('100')}>Show 100 rows</DropdownMenuItem>\r\n                <DropdownMenuItem onSelect={() => setRowsToShow('10000')}>Show all rows</DropdownMenuItem>\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n          </div>\r\n        </div>\r\n\r\n        {filters.length > 0 && (\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {filters.map((filter, index) => (\r\n              <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                  <X className=\"h-3 w-3\" />\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {isLoading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData}  allTimeData={allTimeData} isFullScreen={isFullScreen} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  </Card>\r\n  );\r\n};\r\n\r\nexport default CitySessionPage;","import { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { format } from \"date-fns\";\r\nimport { ChevronDown, Columns, RefreshCw, X, Maximize, Minimize } from 'lucide-react';\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport ReportTable from \"@/pages/ReportPage/component/ReportTable\";\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { useUser } from \"@/context/UserContext\";\r\nimport { Card, CardContent} from \"@/components/ui/card\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\n\r\nexport interface PageMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\ninterface LandingPageSessionProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst LandingPageSession: React.FC<LandingPageSessionProps> = ({ dateRange: propDateRange }) => {\r\n  const [date, setDate] = useState<DateRange | undefined>(propDateRange);\r\n  const [allTimeData, setAllTimeData] = useState<PageMetric[]>([]);\r\n  const [filteredData, setFilteredData] = useState<PageMetric[]>([]);\r\n  const [filters, setFilters] = useState<FilterItem[]>([]); \r\n  const [data, setData] = useState<PageMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState<string>('50');\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n\r\n  const { user } = useUser();\r\n\r\n\r\n  useEffect(() => {\r\n    setDate(propDateRange);\r\n  }, [propDateRange]);\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n\r\n      // Fetch all-time and date-specific metrics\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axiosInstance.post(`/api/analytics/landingpageReport/${brandId}`, {\r\n          startDate: startDate || \"\",\r\n          endDate: endDate || \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true }),\r\n        axiosInstance.post(`/api/analytics/landingpageReport/${brandId}`, {\r\n          startDate: \"\",\r\n          endDate: \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true })\r\n      ]);\r\n\r\n      const fetchedData = analyticsResponse.data.data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data.data || [];\r\n\r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n\r\n      if (fetchedData.length > 0) {\r\n        const allColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? allColumns\r\n            : prevSelected.filter((col) => allColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    \r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, rowsToShow]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof PageMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate'];\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index)); // Fixed filter reference\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen); // Toggle full-screen state\r\n  };\r\n\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent className=\"mt-4\">\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <h2 className=\"text-lg font-medium\">Landing Page Analytics</h2>\r\n              <Ga4Logo />\r\n            </div>\r\n            <div className=\"flex flex-wrap items-center gap-3\">\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" size={\"icon\"}>\r\n                    <Columns className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent className=\"w-56\">\r\n                  {allColumns.map((column) => (\r\n                    <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        id={`column-${column}`}\r\n                        checked={selectedColumns.includes(column)}\r\n                        onCheckedChange={() => toggleColumnSelection(column)}\r\n                      />\r\n                      <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                        {column}\r\n                      </label>\r\n                    </DropdownMenuItem>\r\n                  ))}\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n              <FilterComponent\r\n                columns={numericColumns}\r\n                onFiltersChange={applyFilters}\r\n                filters={filters}\r\n                setFilters={setFilters}\r\n              />\r\n               <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n              </Button>\r\n               <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\">\r\n                    Show {rowsToShow === '10000' ? 'all' : rowsToShow} rows\r\n                    <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('50')}>Show 50 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('100')}>Show 100 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('10000')}>Show all rows</DropdownMenuItem>\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n            </div>\r\n          </div>\r\n\r\n          {filters.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {filters.map((filter, index) => (\r\n                <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                  <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                  <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                    <X className=\"h-3 w-3\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"rounded-md overflow-hidden\">\r\n            {isLoading ? (\r\n              <TableSkeleton />\r\n            ) : (\r\n              <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData}  allTimeData={allTimeData} isFullScreen={isFullScreen} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LandingPageSession;","import { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { format } from \"date-fns\";\r\nimport { ChevronDown, Columns, RefreshCw, X, Maximize, Minimize } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport ReportTable from \"@/pages/ReportPage/component/ReportTable\";\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { useUser } from \"@/context/UserContext\"\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\n\r\ninterface AgeMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\ninterface AgeBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst AgeReportPage: React.FC<AgeBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const [date, setDate] = useState<DateRange | undefined>(propDateRange);\r\n  const [filteredData, setFilteredData] = useState<AgeMetric[]>([]);\r\n  const [allTimeData, setAllTimeData] = useState<AgeMetric[]>([]);\r\n  const [filters, setFilters] = useState<FilterItem[]>([]);\r\n  const [data, setData] = useState<AgeMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  // Use optional chaining to safely access date properties\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [isFullScreen, setIsFullScreen]= useState<boolean>(false);\r\n  const [rowsToShow, setRowsToShow] = useState<string>('50')\r\n  const {user} = useUser();\r\n\r\n  // Update date state when prop changes\r\n  useEffect(() => {\r\n    setDate(propDateRange);\r\n  }, [propDateRange]);\r\n\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n\r\n      // Fetch all-time and date-specific metrics\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axiosInstance.post(`/api/analytics/agereport/${brandId}`, {\r\n          startDate: startDate || \"\",\r\n          endDate: endDate || \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true }),\r\n        axiosInstance.post(`/api/analytics/agereport/${brandId}`, {\r\n          startDate: \"\",\r\n          endDate: \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true })\r\n      ]);\r\n\r\n      const fetchedData = analyticsResponse.data.data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data.data || [];\r\n\r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n\r\n      if (fetchedData.length > 0) {\r\n        const allColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? allColumns\r\n            : prevSelected.filter((col) => allColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      \r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, rowsToShow]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof AgeMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate'];\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent className=\"mt-4\">\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <h2 className=\"text-lg font-medium\">Age Analytics</h2>\r\n              <Ga4Logo />\r\n            </div>\r\n            <div className=\"flex flex-wrap items-center gap-3\">\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" size={\"icon\"}>\r\n                    <Columns className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent className=\"w-56\">\r\n                  {allColumns.map((column) => (\r\n                    <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        id={`column-${column}`}\r\n                        checked={selectedColumns.includes(column)}\r\n                        onCheckedChange={() => toggleColumnSelection(column)}\r\n                      />\r\n                      <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                        {column}\r\n                      </label>\r\n                    </DropdownMenuItem>\r\n                  ))}\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n              <FilterComponent\r\n                columns={numericColumns}\r\n                onFiltersChange={applyFilters}\r\n                filters={filters}\r\n                setFilters={setFilters}\r\n              />\r\n              <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n              </Button>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\">\r\n                    Show {rowsToShow === '10000' ? 'all' : rowsToShow} rows\r\n                    <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('50')}>Show 50 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('100')}>Show 100 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('10000')}>Show all rows</DropdownMenuItem>\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n            </div>\r\n          </div>\r\n\r\n          {filters.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {filters.map((filter, index) => (\r\n                <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                  <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                  <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                    <X className=\"h-3 w-3\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"rounded-md overflow-hidden\">\r\n            {isLoading ? (\r\n              <TableSkeleton />\r\n            ) : (\r\n              <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData} allTimeData={allTimeData} isFullScreen={isFullScreen} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AgeReportPage;","import { useState, useCallback, useEffect, useMemo } from \"react\"\r\nimport { useParams } from 'react-router-dom'\r\nimport { format } from \"date-fns\"\r\nimport { ChevronDown, Columns, RefreshCw, X, Maximize, Minimize } from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport ReportTable from \"@/pages/ReportPage/component/ReportTable\"\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\"\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { useUser } from \"@/context/UserContext\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\"\r\n\r\n\r\ninterface GenderMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\ninterface GenderBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst GenderReportPage: React.FC<GenderBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const [date, setDate] = useState<DateRange | undefined>(propDateRange);\r\n  const [filteredData, setFilteredData] = useState<GenderMetric[]>([])\r\n  const [allTimeData, setAllTimeData] = useState<GenderMetric[]>([])\r\n  const [filters, setFilters] = useState<FilterItem[]>([])\r\n  const [data, setData] = useState<GenderMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n  const {user} = useUser();\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  \r\n  // Use optional chaining to safely access date properties\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  \r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState<string>('50')\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n\r\n  // Update date state when prop changes\r\n  useEffect(() => {\r\n    setDate(propDateRange);\r\n  }, [propDateRange]);\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n\r\n      // Fetch all-time and date-specific metrics\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axiosInstance.post(`/api/analytics/genderReport/${brandId}`, {\r\n          startDate: startDate || \"\",\r\n          endDate: endDate || \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true }),\r\n        axiosInstance.post(`/api/analytics/genderReport/${brandId}`, {\r\n          startDate: \"\",\r\n          endDate: \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true })\r\n      ]);\r\n  \r\n      const fetchedData = analyticsResponse.data.data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data.data || [];\r\n  \r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n  \r\n      if (fetchedData.length > 0) {\r\n        const allColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? allColumns\r\n            : prevSelected.filter((col) => allColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, rowsToShow]);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n  \r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof GenderMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index))\r\n  }\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate']\r\n  \r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n    <CardContent className=\"mt-4\">\r\n      <div className=\"space-y-4\">\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Gender Analytics</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n            <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button variant=\"outline\" size={\"icon\"}>\r\n                  <Columns className=\"h-4 w-4\" />\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent className=\"w-56\">\r\n                {allColumns.map((column) => (\r\n                  <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                    <Checkbox\r\n                      id={`column-${column}`}\r\n                      checked={selectedColumns.includes(column)}\r\n                      onCheckedChange={() => toggleColumnSelection(column)}\r\n                    />\r\n                    <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                      {column}\r\n                    </label>\r\n                  </DropdownMenuItem>\r\n                ))}\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n            <FilterComponent\r\n              columns={numericColumns}\r\n              onFiltersChange={applyFilters}\r\n              filters={filters}\r\n              setFilters={setFilters}\r\n            />\r\n             <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n             <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button variant=\"outline\">\r\n                  Show {rowsToShow === '10000' ? 'all' : rowsToShow} rows\r\n                  <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent>\r\n                <DropdownMenuItem onSelect={() => setRowsToShow('50')}>Show 50 rows</DropdownMenuItem>\r\n                <DropdownMenuItem onSelect={() => setRowsToShow('100')}>Show 100 rows</DropdownMenuItem>\r\n                <DropdownMenuItem onSelect={() => setRowsToShow('10000')}>Show all rows</DropdownMenuItem>\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n          </div>\r\n        </div>\r\n\r\n        {filters.length > 0 && (\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {filters.map((filter, index) => (\r\n              <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                  <X className=\"h-3 w-3\" />\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {isLoading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData} allTimeData={allTimeData} isFullScreen={isFullScreen} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  </Card>\r\n  )\r\n}\r\n\r\nexport default GenderReportPage;","import { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { format } from \"date-fns\";\r\nimport { ChevronDown, Columns, RefreshCw, X, Maximize, Minimize } from 'lucide-react';\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\";\r\nimport ReportTable from \"@/pages/ReportPage/component/ReportTable\";\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { useUser } from \"@/context/UserContext\";\r\nimport { Card, CardContent} from \"@/components/ui/card\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\n\r\ninterface ChannelMetric {\r\n  \"Add To Carts\": string;\r\n  \"Add To Cart Rate\": string;\r\n  \"Checkouts\": string;\r\n  \"Checkout Rate\": string;\r\n  \"Purchases\": string;\r\n  \"Purchase Rate\": string;\r\n  [key: string]: string;\r\n}\r\n\r\nconst ChannelSessionPage: React.FC<{ dateRange?: DateRange }> = ({ dateRange }) => {\r\n  const [date, setDate] = useState<DateRange | undefined>(dateRange);\r\n  const [filteredData, setFilteredData] = useState<ChannelMetric[]>([]);\r\n  const [allTimeData, setAllTimeData] = useState<ChannelMetric[]>([]);\r\n  const [filters, setFilters] = useState<FilterItem[]>([]);\r\n  const [data, setData] = useState<ChannelMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [rowsToShow, setRowsToShow] = useState<string>('50');\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n  const { user } = useUser();\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  // Update date state when dateRange changes\r\n  useEffect(() => {\r\n    setDate(dateRange);\r\n  }, [dateRange]);\r\n\r\n  const toggleColumnSelection = (column: string) => {\r\n    setSelectedColumns(prev => {\r\n      const newColumns = prev.includes(column)\r\n        ? prev.filter(col => col !== column)\r\n        : [...prev, column];\r\n\r\n      return allColumns.filter(col => newColumns.includes(col));\r\n    });\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n\r\n      const [analyticsResponse, allTimeResponse] = await Promise.all([\r\n        axiosInstance.post(`/api/analytics/channelReport/${brandId}`, {\r\n          startDate: startDate || \"\",\r\n          endDate: endDate || \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true }),\r\n        axiosInstance.post(`/api/analytics/channelReport/${brandId}`, {\r\n          startDate: \"\",\r\n          endDate: \"\",\r\n          userId: user?.id,\r\n          limit: rowsToShow\r\n        }, { withCredentials: true })\r\n      ]);\r\n\r\n      const fetchedData = analyticsResponse.data.data || [];\r\n      const fetchedAllTimeData = allTimeResponse.data.data || [];\r\n\r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n      setAllTimeData(fetchedAllTimeData);\r\n\r\n      if (fetchedData.length > 0) {\r\n        const allColumns = Object.keys(fetchedData[0]);\r\n        setSelectedColumns((prevSelected) =>\r\n          prevSelected.length === 0\r\n            ? allColumns\r\n            : prevSelected.filter((col) => allColumns.includes(col))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      \r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, rowsToShow]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const allColumns = data.length > 0 ? Object.keys(data[0]) : [];\r\n  const sortedSelectedColumns = allColumns.filter(col => selectedColumns.includes(col));\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof ChannelMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate'];\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    if (!isFullScreen) {\r\n      document.documentElement.requestFullscreen();\r\n    } else {\r\n      document.exitFullscreen();\r\n    }\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fullScreenChangeHandler = () => {\r\n      setIsFullScreen(!!document.fullscreenElement);\r\n    };\r\n\r\n    document.addEventListener('fullscreenchange', fullScreenChangeHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener('fullscreenchange', fullScreenChangeHandler);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent className=\"mt-4\">\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <h2 className=\"text-lg font-medium\">Referring Channel Analytics</h2>\r\n              <Ga4Logo />\r\n            </div>\r\n            <div className=\"flex flex-wrap items-center gap-3\">\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\" size={\"icon\"}>\r\n                    <Columns className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent className=\"w-56\">\r\n                  {allColumns.map((column) => (\r\n                    <DropdownMenuItem key={column} className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        id={`column-${column}`}\r\n                        checked={selectedColumns.includes(column)}\r\n                        onCheckedChange={() => toggleColumnSelection(column)}\r\n                      />\r\n                      <label htmlFor={`column-${column}`} className=\"flex-1 cursor-pointer\">\r\n                        {column}\r\n                      </label>\r\n                    </DropdownMenuItem>\r\n                  ))}\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n              <FilterComponent\r\n                columns={numericColumns}\r\n                onFiltersChange={applyFilters}\r\n                filters={filters}\r\n                setFilters={setFilters}\r\n              />\r\n              <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n              </Button>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"outline\">\r\n                    Show {rowsToShow === '10000' ? 'all' : rowsToShow} rows\r\n                    <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('50')}>Show 50 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('100')}>Show 100 rows</DropdownMenuItem>\r\n                  <DropdownMenuItem onSelect={() => setRowsToShow('10000')}>Show all rows</DropdownMenuItem>\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n            </div>\r\n          </div>\r\n\r\n          {filters.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {filters.map((filter, index) => (\r\n                <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                  <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                  <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                    <X className=\"h-3 w-3\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"rounded-md overflow-hidden\">\r\n            {isLoading ? (\r\n              <TableSkeleton />\r\n            ) : (\r\n              <ReportTable columns={sortedSelectedColumns} data={memoizedFilteredData}  allTimeData={allTimeData} isFullScreen={isFullScreen} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChannelSessionPage;\r\n\r\n","import ProductTab from \"./component/ProductTab\";\r\nimport SearchTermTable from \"./component/SearchTermTable\";\r\nimport { useParams } from 'react-router-dom'\r\nimport AgeGenderMetrics from \"./component/AgeGenderMetrics\";\r\nimport CityBasedReports from '@/pages/ReportPage/component/CitySessionPage';\r\nimport LandingPageSession from \"../ReportPage/component/LandingPageSession\";\r\nimport AgeReportPage from \"../ReportPage/component/AgeReportPage\";\r\nimport GenderBasedReports from '@/pages/ReportPage/component/GenderReportPage';\r\nimport ChannelSessionPage from \"../ReportPage/component/RefferingChannelPage\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\n\r\nexport default function Dashboard() {\r\n  const { brandId } = useParams()\r\n    if (!brandId) {\r\n        console.error(\"Brand ID is not defined\");\r\n        return <div>Error: Brand ID is missing</div>;\r\n    }\r\n\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n\r\n    const dateRange={\r\n      from: date.from ? new Date(date.from) : undefined,\r\n      to: date.to ? new Date(date.to) : undefined \r\n    }\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen overflow-hidden\">\r\n       <nav className=\"sticky top-0 z-10 bg-white border-b border-gray-200 px-4 py-4 md:px-6 lg:px-8\">\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\r\n          <h1 className=\"text-2xl font-bold\">Segment Dashboard</h1>\r\n      \r\n        <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                  \r\n                    \r\n                  />\r\n                </div>\r\n                </div>\r\n      </nav>\r\n      <div className=\"flex flex-col p-6 gap-6 overflow-auto\">\r\n      <ProductTab />\r\n      <SearchTermTable />\r\n      <AgeGenderMetrics />\r\n      <section className=\"mb-6\">\r\n                  <CityBasedReports dateRange={dateRange} />\r\n                </section>\r\n                <section className=\"mb-6\">\r\n                  <LandingPageSession dateRange={dateRange} />\r\n                </section>\r\n                <section className=\"mb-6\">\r\n                  <ChannelSessionPage dateRange={dateRange} />\r\n                </section>\r\n                <section className=\"mb-6\">\r\n                  <AgeReportPage dateRange={dateRange} />\r\n                </section>\r\n                <section className=\"mb-6\">\r\n                  <GenderBasedReports dateRange={dateRange} />\r\n                </section>\r\n      </div>\r\n  \r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\";\r\n const SegmentDashboard : React.FC=()=>{\r\n    return (\r\n        <div className=\"flex h-screen\"> \r\n        <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n       <Dashboard />\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\nexport default SegmentDashboard;","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useToast } from '../hooks/use-toast';\r\nimport { useDispatch} from 'react-redux';\r\nimport { setUser } from '@/store/slices/UserSlice'\r\n\r\n\r\nconst GoogleCallback = () => {\r\n    const navigate = useNavigate();\r\n    const { toast } = useToast();\r\n    const dispatch = useDispatch();\r\n    const baseURL = import.meta.env.PROD\r\n        ? import.meta.env.VITE_API_URL\r\n        : import.meta.env.VITE_LOCAL_API_URL;\r\n\r\n        useEffect(() => {\r\n            const handleOauthCallback = async () => {\r\n                try {\r\n                    const queryParams = new URLSearchParams(window.location.search);\r\n                    const googletoken = queryParams.get('token');\r\n                    const fbToken = queryParams.get('fbToken');\r\n                    const googleRefreshToken = queryParams.get('googleRefreshToken');\r\n                    const zohoRefreshToken = queryParams.get('zohoToken');\r\n                    const userId = queryParams.get('userId');\r\n        \r\n                    // Helper function for token update\r\n                    const updateToken = async (url: string, token: string, type: string) => {\r\n                        const response = await axios.get(`${baseURL}${url}?${type}=${token}`, { withCredentials: true });\r\n                        if (response.data.success) {\r\n                            console.log(`${type} token updated successfully, redirecting to /dashboard`);\r\n                            if (type === \"zohoToken\") {\r\n                                console.log(\"Zoho token updated, redirecting to /profile\");\r\n                                 navigate('/profile');\r\n                            } else {\r\n                                console.log(`${type} token updated, redirecting to /dashboard`);\r\n                                navigate('/brand-setup');\r\n                            }\r\n                            return true;\r\n                        } else {\r\n                            console.error(`Failed to update ${type} token`);\r\n                            toast({\r\n                                title: 'Update Failed',\r\n                                description: `Unable to update ${type} token.`,\r\n                                variant: 'destructive',\r\n                            });\r\n                            navigate('/');\r\n                            return false;\r\n                        }\r\n                    };\r\n        \r\n                    if (googletoken) {\r\n                        console.log('Token found, proceeding with login');\r\n                        const login = await axios.post(`${baseURL}/api/auth/login/oauth?auth_token=${googletoken}`, { email: null, password: null });\r\n                    \r\n                        if (login.data.success) {\r\n                            console.log('Login successful');\r\n                            const user = login.data.user;\r\n                    \r\n                            dispatch(setUser(user));\r\n                    \r\n                            if (!user.brands || user.brands.length === 0) {\r\n                                console.log('No brands found, redirecting to /brand-setup');\r\n                                navigate('/brand-setup');\r\n                            } else {\r\n                                console.log('Brands found, redirecting to /dashboard');\r\n                                navigate('/dashboard');\r\n                            }\r\n                            return;\r\n                        } else {\r\n                            console.log('Login failed, redirecting to /');\r\n                            toast({\r\n                                title: 'Login Failed',\r\n                                description: 'Unable to authenticate with Google.',\r\n                                variant: 'destructive',\r\n                            });\r\n                            navigate('/');\r\n                            return;\r\n                        }\r\n                    }\r\n                    \r\n        \r\n                    if (fbToken) {\r\n                        await updateToken('/api/auth/updateTokens/facebook', fbToken, 'fbToken');\r\n                        return;\r\n                    }\r\n        \r\n                    if (googleRefreshToken) {\r\n                        await updateToken('/api/auth/updateTokens/google', googleRefreshToken, 'googleRefreshToken');\r\n                        return;\r\n                    }\r\n                    if (zohoRefreshToken) {\r\n                        await updateToken('/api/auth/updateTokens/zoho', zohoRefreshToken, 'zohoToken');\r\n                        return;\r\n                    }\r\n\r\n                     if (userId) {\r\n                        console.log('Token found, proceeding with user saving');\r\n                        const getUser = await axios.get(`${baseURL}/api/users/getuser/${userId}`);\r\n                    \r\n                        if (getUser.data.success) {\r\n                            const user = getUser.data.user;\r\n                    \r\n                            dispatch(setUser(user));\r\n                    \r\n                            if (!user.brands || user.brands.length === 0) {\r\n                                console.log('No brands found, redirecting to /brand-setup');\r\n                                navigate('/brand-setup');\r\n                            } else {\r\n                                console.log('Brands found, redirecting to /dashboard');\r\n                                navigate('/dashboard');\r\n                            }\r\n                            return;\r\n                        } else {\r\n                            console.log('Login failed, redirecting to /');\r\n                            toast({\r\n                                title: 'Login Failed',\r\n                                description: 'Unable to authenticate with Google.',\r\n                                variant: 'destructive',\r\n                            });\r\n                            navigate('/');\r\n                            return;\r\n                        }\r\n                    }\r\n        \r\n                    console.log('No token present, redirecting to /login');\r\n                    navigate('/login');\r\n        \r\n                } catch (error) {\r\n                    console.error('Error during OAuth callback:', error);\r\n                    toast({\r\n                        title: 'Error',\r\n                        description: 'An error occurred while handling the login callback.',\r\n                        variant: 'destructive',\r\n                    });\r\n                    navigate('/login');\r\n                }\r\n            };\r\n        \r\n            handleOauthCallback();\r\n        }, [navigate, setUser, toast, baseURL]);\r\n        \r\n\r\n    return null;\r\n};\r\n\r\nexport default GoogleCallback;","import React, { useState, useMemo, useRef, useEffect } from 'react';\r\nimport { ArrowUp, ArrowDown, ChevronsLeft, ChevronRight, ChevronsRight, ChevronLeft, GripVertical } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\n\r\ninterface TableProps {\r\n  columns: string[];\r\n  data: any[];\r\n  isFullScreen?: boolean;\r\n}\r\n\r\nconst getConditionalColors = (value: number, average: number) => {\r\n  const epsilon = 0.0001;\r\n\r\n  if (value > average) return 'bg-green-100 text-green-800';\r\n  if (value < average) return 'bg-red-50 text-red-800';\r\n  if (Math.abs(value - average) < epsilon) return 'bg-yellow-100 text-yellow-700';\r\n\r\n  return 'bg-yellow-100 text-yellow-700';\r\n};\r\n\r\nconst NewReportTable: React.FC<TableProps> = ({\r\n  columns = [],\r\n  data = [],\r\n  isFullScreen,\r\n}) => {\r\n    const [sortColumn, setSortColumn] = useState<string | null>(null);\r\n    const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\r\n    const [columnWidths, setColumnWidths] = useState<number[]>([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [loadedRows, setLoadedRows] = useState<any[]>([]);\r\n    const [columnOrder, setColumnOrder] = useState<string[]>(columns);\r\n    const [draggedColumn, setDraggedColumn] = useState<string | null>(null);\r\n    \r\n  \r\n    const rowsPerChunk = 30;\r\n    const rowsPerPage = 9;\r\n    const minColumnWidth = isFullScreen ? 100 : 150;\r\n  \r\n    const tableRef = useRef<HTMLTableElement>(null);\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const widthsRef = useRef<number[]>([]);\r\n  \r\n    const comparisonColumns = ['Add To Cart Rate', 'Checkout Rate', 'Purchase Rate', 'Sessions'];\r\n\r\n    useEffect(() => {\r\n      setColumnOrder(columns);\r\n    }, [columns]);\r\n  \r\n    const handleDragStart = (e: React.DragEvent, column: string) => {\r\n      setDraggedColumn(column);\r\n      e.dataTransfer.effectAllowed = 'move';\r\n    };\r\n  \r\n    const handleDragOver = (e: React.DragEvent) => {\r\n      e.preventDefault();\r\n      e.dataTransfer.dropEffect = 'move';\r\n    };\r\n  \r\n    const handleDrop = (e: React.DragEvent, targetColumn: string) => {\r\n      e.preventDefault();\r\n      if (!draggedColumn || draggedColumn === targetColumn) return;\r\n  \r\n      const newOrder = [...columnOrder];\r\n      const draggedIdx = newOrder.indexOf(draggedColumn);\r\n      const targetIdx = newOrder.indexOf(targetColumn);\r\n  \r\n      newOrder.splice(draggedIdx, 1);\r\n      newOrder.splice(targetIdx, 0, draggedColumn);\r\n  \r\n      setColumnOrder(newOrder);\r\n      setDraggedColumn(null);\r\n    };\r\n\r\n    const parsePercentage = (value: string | number): number => {\r\n        // If value is already a number, return it\r\n        if (typeof value === 'number') return value;\r\n        \r\n        // If value is undefined or null, return 0\r\n        if (!value) return 0;\r\n        \r\n        // If value is string, remove % and convert to number\r\n        return parseFloat(value.replace('%', '').trim()) || 0;\r\n      };\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const containerWidth = containerRef.current.clientWidth;\r\n      const totalColumns = columns.length;\r\n      \r\n      let initialWidths: number[];\r\n      if (isFullScreen) {\r\n        const equalWidth = Math.max(minColumnWidth, Math.floor(containerWidth / totalColumns));\r\n        initialWidths = columns.map(() => equalWidth);\r\n      } else {\r\n        initialWidths = columns.map((_, index) => \r\n          index === 0 ? 160 : 150\r\n        );\r\n      }\r\n      \r\n      setColumnWidths(initialWidths);\r\n      widthsRef.current = initialWidths;\r\n    }\r\n  }, [columns.length, isFullScreen]);\r\n\r\n \r\n\r\n\r\n\r\n  const averageValues = useMemo(() => {\r\n    const averages: Record<string, number> = {};\r\n    comparisonColumns.forEach((key) => {\r\n      const validData = data.filter(item => item[key] !== undefined && !isNaN(parsePercentage(item[key] || '0')));\r\n      const average = validData.length > 0\r\n        ? validData.reduce((sum, item) => sum + parsePercentage(item[key] || '0'), 0) / validData.length\r\n        : 0;\r\n\r\n      averages[key] = key === 'Sessions' ? Math.round(average) : parseFloat(average.toFixed(2));\r\n    });\r\n    return averages;\r\n  }, [data]);\r\n\r\n\r\n\r\n  const parsedData = useMemo(() =>\r\n    data.map((item) => ({\r\n      ...item,\r\n      Sessions: Number(item?.Sessions || 0),\r\n      'Add To Cart Rate': parsePercentage(item?.['Add To Cart Rate'] || '0'),\r\n      'Checkout Rate': parsePercentage(item?.['Checkout Rate'] || '0'),\r\n      'Purchase Rate': parsePercentage(item?.['Purchase Rate'] || '0'),\r\n    })), [data]);\r\n\r\n    const sortedData = useMemo(() => {\r\n        if (!sortColumn) return parsedData;\r\n      \r\n        return [...parsedData].sort((a, b) => {\r\n          const aValue = a[sortColumn];\r\n          const bValue = b[sortColumn];\r\n      \r\n          if (sortColumn === 'Date') {\r\n            const parseDateString = (dateStr: string) => {\r\n              const [day, month, year] = dateStr.split('-');\r\n              return new Date(`${year}-${month}-${day}`);\r\n            };\r\n      \r\n            const aDate = parseDateString(aValue);\r\n            const bDate = parseDateString(bValue);\r\n      \r\n            return sortDirection === 'asc'\r\n              ? aDate.getTime() - bDate.getTime()\r\n              : bDate.getTime() - aDate.getTime();\r\n          }\r\n      \r\n          // Handle numeric sorting for other columns\r\n          const aNum = typeof aValue === 'number'\r\n            ? aValue\r\n            : parseFloat((aValue || '0').toString().replace('%', '').trim());\r\n          const bNum = typeof bValue === 'number'\r\n            ? bValue\r\n            : parseFloat((bValue || '0').toString().replace('%', '').trim());\r\n      \r\n          if (aNum < bNum) return sortDirection === 'asc' ? -1 : 1;\r\n          if (aNum > bNum) return sortDirection === 'asc' ? 1 : -1;\r\n          return 0;\r\n        });\r\n      }, [parsedData, sortColumn, sortDirection]);\r\n\r\n  const isNumericColumn = (column: string) => {\r\n    return [\r\n      'Date',\r\n\r\n    ].includes(column);\r\n  };\r\n\r\n  const handleSort = (column: string) => {\r\n    if (!isNumericColumn(column)) return;\r\n  \r\n    if (sortColumn === column) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortColumn(column);\r\n      setSortDirection('asc');\r\n    } \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFullScreen) {\r\n      setLoadedRows(sortedData.slice(0, rowsPerChunk));\r\n    }\r\n  }, [isFullScreen, sortedData, rowsPerChunk]);\r\n\r\n  const loadMoreRows = () => {\r\n    if (isFullScreen && loadedRows.length < sortedData.length) {\r\n      const nextChunk = sortedData.slice(\r\n        loadedRows.length,\r\n        loadedRows.length + rowsPerChunk\r\n      );\r\n      setLoadedRows(prev => [...prev, ...nextChunk]);\r\n    }\r\n  };\r\n\r\n  const handleScroll = (event: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n    const target = event.currentTarget;\r\n    if (target.scrollHeight - target.scrollTop <= target.clientHeight + 100) {\r\n      loadMoreRows();\r\n    }\r\n  };\r\n\r\n  const displayRows = useMemo(() => {\r\n    if (isFullScreen) {\r\n      return loadedRows;\r\n    }\r\n    return sortedData.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage);\r\n  }, [isFullScreen, loadedRows, sortedData, currentPage, rowsPerPage]);\r\n\r\n  const pageCount = Math.ceil(sortedData.length / rowsPerPage);\r\n\r\n  const goToPage = (page: number) => {\r\n    const pageNumber = Math.max(1, Math.min(page, pageCount));\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const columnPairs = {\r\n    'Add To Cart': 'Add To Cart Rate',\r\n    'Checkouts': 'Checkout Rate',\r\n    'Purchases': 'Purchase Rate'\r\n  };\r\n  const renderHeader = (column: string, colIndex: number) => {\r\n    const isComparisonCol = comparisonColumns.includes(column);\r\n\r\n    return (\r\n      <th\r\n        key={column}\r\n        className={`\r\n          relative font-bold p-1 text-gray-800 text-sm border-b-2\r\n          capitalize border-r border-gray-300\r\n          ${isNumericColumn(column) ? 'cursor-pointer' : ''}\r\n          ${colIndex === 0 && !isFullScreen ? 'sticky left-0 z-30 bg-gray-100' : ''}\r\n          ${draggedColumn === column ? 'opacity-50' : ''}\r\n          hover:bg-gray-200 transition-colors duration-200\r\n        `}\r\n        style={{\r\n          width: colIndex === 0 ? '180px' : `${columnWidths[colIndex]}px`,\r\n        }}\r\n        draggable\r\n        onDragStart={(e) => handleDragStart(e, column)}\r\n        onDragOver={handleDragOver}\r\n        onDrop={(e) => handleDrop(e, column)}\r\n      >\r\n        <div onClick={() => handleSort(column)} className=\"flex flex-col items-center\">\r\n          <div  className=\"flex items-center justify-center gap-2 mb-1\">\r\n            <GripVertical className=\"w-4 h-4 text-gray-400 cursor-grab\" />\r\n            <span >{column}</span>\r\n            {isNumericColumn(column) && (\r\n              <span className=\"ml-2\">\r\n                {sortColumn === column ? (\r\n                  sortDirection === 'asc' ? (\r\n                    <ArrowUp className=\"w-4 h-4 text-blue-600\" />\r\n                  ) : (\r\n                    <ArrowDown className=\"w-4 h-4 text-blue-600\" />\r\n                  )\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </span>\r\n            )}\r\n          </div>\r\n          {isComparisonCol && averageValues[column] !== undefined && (\r\n            <span className=\"text-xs text-gray-500\">\r\n              avg: {column === 'Sessions'\r\n                ? Math.round(averageValues[column])\r\n                : averageValues[column]?.toFixed(2)}\r\n              {column !== 'Sessions' ? '%' : ''}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </th>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={containerRef}\r\n        className=\"rounded-md overflow-x-auto relative border\"\r\n        style={{\r\n          width: '100%',\r\n          maxHeight: isFullScreen ? 'calc(100vh - 105px)' : 'calc(100vh - 200px)',\r\n          overflowX: isFullScreen ? 'hidden' : 'auto',\r\n        }}\r\n        onScroll={isFullScreen ? handleScroll : undefined}\r\n      >\r\n        <table\r\n          ref={tableRef}\r\n          className=\"w-full text-center shadow-lg rounded-lg border border-gray-200\"\r\n          style={{\r\n            tableLayout: 'fixed',\r\n            width: isFullScreen ? '100%' : 'auto',\r\n            borderCollapse: 'separate',\r\n            borderSpacing: 0,\r\n          }}\r\n        >\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              {columnOrder.map((column, index) => renderHeader(column, index))}\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {displayRows.map((item, rowIndex) => (\r\n              <tr\r\n                key={rowIndex}\r\n                className={`${\r\n                  rowIndex % 2 === 0 ? 'bg-gray-50' : 'bg-white'\r\n                } hover:bg-gray-100 transition-colors duration-200`}\r\n              >\r\n                {columnOrder.map((column, colIndex) => {\r\n                  const cellValue = item[column];\r\n                  const isComparisonColumn = comparisonColumns.includes(column);\r\n                  const isPairedColumn = column in columnPairs;\r\n\r\n                  let colorClass = 'text-gray-800';\r\n                  if (isComparisonColumn) {\r\n                    colorClass = getConditionalColors(cellValue as number, averageValues[column]);\r\n                  } else if (isPairedColumn) {\r\n                    const rateColumn = columnPairs[column as keyof typeof columnPairs];\r\n                    const rateValue = item[rateColumn] as number;\r\n                    colorClass = getConditionalColors(rateValue, averageValues[rateColumn]);\r\n                  }\r\n\r\n                  return (\r\n                    <td\r\n                      key={`${rowIndex}-${column}`}\r\n                      className={`p-3 text-sm font-normal border-r border-gray-300 ${colorClass} ${\r\n                        colIndex === 0 && !isFullScreen\r\n                          ? 'sticky left-0 z-20 bg-inherit'\r\n                          : ''\r\n                      }`}\r\n                      style={{\r\n                        width: colIndex === 0 ? '150px' : `${columnWidths[colIndex]}px`,\r\n                      }}\r\n                    >\r\n                      <div className=\"flex items-center justify-center gap-2\">\r\n                        {column.includes('Rate')\r\n                          ? `${(cellValue as number).toFixed(2)}%`\r\n                          : cellValue}\r\n                      </div>\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n      {!isFullScreen && (\r\n        <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-between gap-4\">\r\n          <div className=\"text-sm text-muted-foreground\">\r\n          Showing {((currentPage - 1) * rowsPerPage) + 1} to {Math.min(currentPage * rowsPerPage, sortedData.length)} of {sortedData.length} entries\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n              onClick={() => goToPage(1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <ChevronsLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"h-8 w-8 p-0\"\r\n              onClick={() => goToPage(currentPage - 1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <div className=\"flex items-center justify-center text-sm font-medium\">\r\n              Page {currentPage} of {pageCount}\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"h-8 w-8 p-0\"\r\n              onClick={() => goToPage(currentPage + 1)}\r\n              disabled={currentPage === pageCount}\r\n            >\r\n              <ChevronRight className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n              onClick={() => goToPage(pageCount)}\r\n              disabled={currentPage === pageCount}\r\n            >\r\n              <ChevronsRight className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(NewReportTable);","import * as React from \"react\"\r\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\r\n\r\nconst Sheet = SheetPrimitive.Root\r\n\r\nconst SheetTrigger = SheetPrimitive.Trigger\r\n\r\nconst SheetClose = SheetPrimitive.Close\r\n\r\nconst SheetPortal = SheetPrimitive.Portal\r\n\r\nconst SheetOverlay = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Overlay\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n))\r\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\r\n\r\nconst sheetVariants = cva(\r\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out\",\r\n  {\r\n    variants: {\r\n      side: {\r\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\r\n        bottom:\r\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\r\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\r\n        right:\r\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      side: \"right\",\r\n    },\r\n  }\r\n)\r\n\r\ninterface SheetContentProps\r\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\r\n    VariantProps<typeof sheetVariants> {}\r\n\r\nconst SheetContent = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Content>,\r\n  SheetContentProps\r\n>(({ side = \"right\", className, children, ...props }, ref) => (\r\n  <SheetPortal>\r\n    <SheetOverlay />\r\n    <SheetPrimitive.Content\r\n      ref={ref}\r\n      className={cn(sheetVariants({ side }), className)}\r\n      {...props}\r\n    >\r\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\r\n        <Cross2Icon className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </SheetPrimitive.Close>\r\n      {children}\r\n    </SheetPrimitive.Content>\r\n  </SheetPortal>\r\n))\r\nSheetContent.displayName = SheetPrimitive.Content.displayName\r\n\r\nconst SheetHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-2 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nSheetHeader.displayName = \"SheetHeader\"\r\n\r\nconst SheetFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nSheetFooter.displayName = \"SheetFooter\"\r\n\r\nconst SheetTitle = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSheetTitle.displayName = SheetPrimitive.Title.displayName\r\n\r\nconst SheetDescription = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSheetDescription.displayName = SheetPrimitive.Description.displayName\r\n\r\nexport {\r\n  Sheet,\r\n  SheetPortal,\r\n  SheetOverlay,\r\n  SheetTrigger,\r\n  SheetClose,\r\n  SheetContent,\r\n  SheetHeader,\r\n  SheetFooter,\r\n  SheetTitle,\r\n  SheetDescription,\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Sheet, SheetContent, SheetHeader, SheetTitle, SheetDescription, SheetTrigger } from \"@/components/ui/sheet\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Search, Settings2, GripVertical, Pin, PinOff } from \"lucide-react\";\r\n\r\ninterface ColumnManagementSheetProps {\r\n  visibleColumns: string[];\r\n  columnOrder: string[];\r\n  frozenColumns?: string[];\r\n  onVisibilityChange: (columns: string[]) => void;\r\n  onOrderChange: (order: string[]) => void;\r\n  onFrozenChange?: (columns: string[]) => void;\r\n}\r\n\r\nconst ColumnManagementSheet: React.FC<ColumnManagementSheetProps> = ({ \r\n  visibleColumns, \r\n  columnOrder,\r\n  frozenColumns = [],\r\n  onVisibilityChange,\r\n  onOrderChange,\r\n  onFrozenChange\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [draggedColumn, setDraggedColumn] = useState<string | null>(null);\r\n  const [dropTargetColumn, setDropTargetColumn] = useState<string | null>(null);\r\n\r\n  const filteredColumns = columnOrder.filter(column =>\r\n    column.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleDragStart = (column: string) => {\r\n    setDraggedColumn(column);\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent, column: string) => {\r\n    e.preventDefault();\r\n    if (column !== draggedColumn) {\r\n      setDropTargetColumn(column);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (targetColumn: string) => {\r\n    if (!draggedColumn || draggedColumn === targetColumn) return;\r\n\r\n    const newOrder = [...columnOrder];\r\n    const draggedIdx = newOrder.indexOf(draggedColumn);\r\n    const targetIdx = newOrder.indexOf(targetColumn);\r\n\r\n    newOrder.splice(draggedIdx, 1);\r\n    newOrder.splice(targetIdx, 0, draggedColumn);\r\n\r\n    onOrderChange(newOrder);\r\n    setDraggedColumn(null);\r\n    setDropTargetColumn(null);\r\n  };\r\n\r\n  const toggleColumnVisibility = (column: string) => {\r\n    const newVisibleColumns = visibleColumns.includes(column)\r\n      ? visibleColumns.filter(col => col !== column)\r\n      : [...visibleColumns, column];\r\n    onVisibilityChange(newVisibleColumns);\r\n  };\r\n\r\n  const toggleColumnFreeze = (column: string) => {\r\n    if (!onFrozenChange || column === 'Campaign') return; // Campaign column is always frozen\r\n    \r\n    const newFrozenColumns = frozenColumns.includes(column)\r\n      ? frozenColumns.filter(col => col !== column)\r\n      : [...frozenColumns, column];\r\n    onFrozenChange(newFrozenColumns);\r\n  };\r\n\r\n  return (\r\n    <Sheet>\r\n      <SheetTrigger asChild>\r\n        <Button variant=\"outline\" size=\"sm\" className=\"ml-2\">\r\n          <Settings2 className=\"w-4 h-4 mr-2\" />\r\n          Manage Columns\r\n        </Button>\r\n      </SheetTrigger>\r\n      <SheetContent className=\"w-[400px] sm:w-[540px]\">\r\n        <SheetHeader>\r\n          <SheetTitle>Column Management</SheetTitle>\r\n          <SheetDescription>\r\n            Select columns to display, drag to reorder, and pin columns to freeze them\r\n          </SheetDescription>\r\n        </SheetHeader>\r\n        \r\n        <div className=\"mt-4 space-y-4\">\r\n          <div className=\"flex items-center space-x-2 px-1\">\r\n            <Search className=\"w-4 h-4 text-slate-400\" />\r\n            <Input\r\n              placeholder=\"Search columns...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"h-8\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"max-h-[calc(100vh-200px)] overflow-y-auto\">\r\n            {filteredColumns.map(column => (\r\n              <div\r\n                key={column}\r\n                draggable\r\n                onDragStart={() => handleDragStart(column)}\r\n                onDragOver={(e) => handleDragOver(e, column)}\r\n                onDrop={() => handleDrop(column)}\r\n                className={`flex items-center space-x-3 p-3 border-b border-slate-200 hover:bg-slate-50 cursor-move\r\n                  ${dropTargetColumn === column ? 'bg-slate-100' : ''}`}\r\n              >\r\n                <GripVertical className=\"w-4 h-4 text-slate-400\" />\r\n                <Checkbox\r\n                  id={`col-${column}`}\r\n                  checked={visibleColumns.includes(column)}\r\n                  onCheckedChange={() => toggleColumnVisibility(column)}\r\n                />\r\n                <label\r\n                  htmlFor={`col-${column}`}\r\n                  className=\"flex-1 text-sm font-medium leading-none cursor-pointer\"\r\n                >\r\n                  {column}\r\n                </label>\r\n                {onFrozenChange && (\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                    className={`px-2 ${column === 'Campaign' ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                    onClick={() => toggleColumnFreeze(column)}\r\n                    disabled={column === 'Campaign'}\r\n                  >\r\n                    {frozenColumns.includes(column) || column === 'Campaign' ? (\r\n                      <Pin className=\"w-4 h-4 text-blue-500\" />\r\n                    ) : (\r\n                      <PinOff className=\"w-4 h-4\" />\r\n                    )}\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </SheetContent>\r\n    </Sheet>\r\n  );\r\n};\r\n\r\nexport default ColumnManagementSheet;\r\n","import { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { format } from \"date-fns\";\r\nimport { RefreshCw, X, Maximize, Minimize } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\"\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport NewReportTable from \"./NewReportTable\";\r\nimport ColumnManagementSheet from \"@/pages/AnalyticsDashboard/Components/ColumnManagementSheet\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ninterface EcommerceMetric {\r\n  \"Date\": string\r\n  \"Add To Carts\": string\r\n  \"Checkout\": string\r\n  \"Sessions\": string\r\n  \"Purchases\": string\r\n  \"Purchase Rate\": string\r\n  \"Add To Cart Rate\": string\r\n  \"Checkout Rate\": string\r\n}\r\n\r\ninterface EcommerceMetricsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst EcommerceMetricsPage: React.FC<EcommerceMetricsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const compareFrom = useSelector((state: RootState) => state.date.compareFrom);\r\n  const compareTo = useSelector((state: RootState) => state.date.compareTo);\r\n  \r\n  const [filteredData, setFilteredData] = useState<EcommerceMetric[]>([]);\r\n  const [data, setData] = useState<EcommerceMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n\r\n  const compareDate = useMemo(() => ({\r\n    from: compareFrom,\r\n    to: compareTo\r\n  }), [compareFrom, compareTo]);\r\n\r\n  const startDate = date?.from ? format(new Date(date.from), \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(new Date(date.to), \"yyyy-MM-dd\") : \"\";\r\n  const compareStartDate = compareDate?.from ? format(new Date(compareDate.from), \"yyyy-MM-dd\") : \"\";\r\n  const compareEndDate = compareDate?.to ? format(new Date(compareDate.to), \"yyyy-MM-dd\") : \"\";\r\n  \r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [filters, setFilters] = useState<FilterItem[]>([]);\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n  const user = useSelector((state: RootState) => state.user.user)\r\n  const dispatch = useDispatch();\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n\r\n  // Consolidate date range effects\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined,\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined\r\n      }));\r\n    }\r\n  }, [propDateRange, dispatch]);\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const fetchMetrics = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const dateRanges = [];\r\n\r\n      // Always add primary date range\r\n      if (startDate && endDate) {\r\n        dateRanges.push({ \r\n          startDate: startDate, \r\n          endDate: endDate \r\n        });\r\n      }\r\n\r\n      // Add comparison date range if available and compare is enabled\r\n      if (compareStartDate && compareEndDate) {\r\n        dateRanges.push({\r\n          startDate: compareStartDate,\r\n          endDate: compareEndDate\r\n        });\r\n      }\r\n\r\n      // Only fetch if we have at least one date range\r\n      if (dateRanges.length > 0) {\r\n        const DailyAnalyticsResponse = await axiosInstance.post(\r\n          `/api/analytics/atcreport/${brandId}`,\r\n          {\r\n            dateRanges: dateRanges,\r\n            userId: user?.id,\r\n          },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        const fetchedRanges = DailyAnalyticsResponse.data.ranges || [];\r\n    \r\n        // More flexible data handling\r\n        if (fetchedRanges.length > 0) {\r\n          // Check if the first range contains daily data or consolidated data\r\n          const isConsolidatedData = fetchedRanges[0].Date \r\n          \r\n          if (isConsolidatedData) {\r\n            // Consolidated data scenario\r\n            setData(fetchedRanges);\r\n            setFilteredData(fetchedRanges);\r\n          } else {\r\n            // Daily data scenario\r\n            setData(fetchedRanges[0]?.data || []);\r\n            setFilteredData(fetchedRanges[0]?.data || []);\r\n          }\r\n\r\n          // Update columns intelligently\r\n          const firstRangeData = isConsolidatedData ? fetchedRanges : (fetchedRanges[0]?.data || []);\r\n          if (firstRangeData.length > 0) {\r\n            const firstItem = firstRangeData[0];\r\n            const allColumns = Object.keys(firstItem);\r\n            \r\n            if (selectedColumns.length === 0) {\r\n              setSelectedColumns(allColumns);\r\n            } else {\r\n              setSelectedColumns((prevSelected) =>\r\n                prevSelected.filter((col) => allColumns.includes(col))\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching e-commerce metrics data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [startDate, endDate, compareStartDate, compareEndDate, brandId, user?.id]);\r\n\r\n  // Consolidate to single useEffect for fetching metrics\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n    const intervalId = setInterval(fetchMetrics, 15 * 60 * 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchMetrics]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchMetrics();\r\n  };\r\n\r\n  const [visibleColumns, setVisibleColumns] = useState<string[]>(selectedColumns);\r\n  const [columnOrder, setColumnOrder] = useState<string[]>(selectedColumns);\r\n\r\n  const handleVisibilityChange = (columns: string[]) => {\r\n    setVisibleColumns(columns);\r\n  };\r\n  \r\n  const handleOrderChange = (newOrder: string[]) => {\r\n    setColumnOrder(newOrder);\r\n    setVisibleColumns(newOrder);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setVisibleColumns(selectedColumns);\r\n    setColumnOrder(selectedColumns);\r\n  }, [selectedColumns]);\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n\r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof EcommerceMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result);\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate'];\r\n  \r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index));\r\n  };\r\n\r\n  if(isLoading){\r\n    return <Loader isLoading={isLoading} />\r\n  }\r\n\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <h2 className=\"text-lg font-medium\">Daily E-Commerce Analytics</h2>\r\n              <Ga4Logo />\r\n            </div>\r\n            <div className=\"flex flex-wrap items-center gap-3\">\r\n              {isFullScreen && <DatePickerWithRange />}\r\n              <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <ColumnManagementSheet\r\n                visibleColumns={visibleColumns}\r\n                columnOrder={columnOrder}\r\n                onVisibilityChange={handleVisibilityChange}\r\n                onOrderChange={handleOrderChange}\r\n              />\r\n              <FilterComponent\r\n                columns={numericColumns}\r\n                onFiltersChange={applyFilters}\r\n                filters={filters}\r\n                setFilters={setFilters}\r\n              />\r\n              <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          {filters.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {filters.map((filter, index) => (\r\n                <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                  <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                  <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                    <X className=\"h-3 w-3\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"rounded-md overflow-hidden\">\r\n            {isLoading ? (\r\n              <TableSkeleton />\r\n            ) : (\r\n              <NewReportTable columns={columnOrder} data={memoizedFilteredData} isFullScreen={isFullScreen} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EcommerceMetricsPage;","\r\nimport { AlertCircle, Mail, ArrowRight } from 'lucide-react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport axios from 'axios';\r\nfunction NoGA4AcessPage() {\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n    const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL\r\n    const handleGoogleLogin = async () => {\r\n        try {\r\n    \r\n          const response = await axios.get(`${baseURL}/api/auth/google?context=brandSetup`, { withCredentials: true });\r\n          const { authUrl } = response.data;\r\n    \r\n          window.location.href = authUrl;\r\n        } catch (error) {\r\n          console.error('Error getting Google Auth URL:', error);\r\n        }\r\n      }\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center p-4\">\r\n      <div className=\"max-w-md w-full bg-white rounded-2xl shadow-xl p-8\">\r\n        {/* Header Section */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"bg-red-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <Mail className=\"w-8 h-8 text-red-600\" />\r\n          </div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">\r\n            No GA4 Access Found\r\n          </h1>\r\n          <p className=\"text-gray-600\">\r\n            The current Google account doesn't have access to any GA4 properties\r\n          </p>\r\n        </div>\r\n\r\n        {/* Current Account Info */}\r\n        <div className=\"bg-gray-50 rounded-lg p-4 mb-6\">\r\n          <div className=\"flex items-start gap-3\">\r\n            <AlertCircle className=\"w-5 h-5 text-amber-500 mt-0.5\" />\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Currently signed in as:</p>\r\n              <p className=\"font-medium text-gray-900\">{user?.email}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Action Section */}\r\n        <div className=\"space-y-4\">\r\n          <p className=\"text-sm text-gray-600\">\r\n            Please sign in with a Google account that has access to GA4 properties to continue.\r\n          </p>\r\n          \r\n          <button \r\n            className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-lg transition-colors flex items-center justify-center gap-2 group\"\r\n            onClick={handleGoogleLogin}\r\n          >\r\n            Sign in with a different account\r\n            <ArrowRight className=\"w-4 h-4 group-hover:translate-x-1 transition-transform\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoGA4AcessPage;","import { useState, useEffect } from 'react';\r\nimport axios, { AxiosError } from 'axios';\r\nimport { Search, Check } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport {FacebookLogo, GoogleLogo, Ga4Logo} from \"@/data/logo\";\r\n\r\n\r\ninterface PlatformModalProps {\r\n  platform: string;\r\n  open: boolean;\r\n  onOpenChange: (open: boolean) => void;\r\n  brandId: string;\r\n  onSuccess?: (platform: string, accountName: string, accountId: string) => void;\r\n}\r\n\r\ninterface GoogleAdsAccount {\r\n  name: string;\r\n  clientId: string;\r\n  hidden?: boolean;\r\n}\r\n\r\ninterface GoogleAnalyticsAccount {\r\n  propertyName: string;\r\n  propertyId: string;\r\n}\r\n\r\ninterface FacebookAdsAccount {\r\n  adname: string;\r\n  id: string;\r\n}\r\n\r\nexport default function PlatformModal({\r\n  platform,\r\n  open,\r\n  onOpenChange,\r\n  brandId,\r\n  onSuccess\r\n}: PlatformModalProps) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [googleAdsAccounts, setGoogleAdsAccounts] = useState<GoogleAdsAccount[]>([]);\r\n  const [googleAnalyticsAccounts, setGoogleAnalyticsAccounts] = useState<GoogleAnalyticsAccount[]>([]);\r\n  const [facebookAdsAccounts, setFacebookAdsAccounts] = useState<FacebookAdsAccount[]>([]);\r\n  const [showLoginButton, setShowLoginButton] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [connectedAccounts, setConnectedAccounts] = useState<string[]>([]);\r\n\r\n  const baseURL = import.meta.env.PROD ? import.meta.env.VITE_API_URL : import.meta.env.VITE_LOCAL_API_URL;\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const userId = user?.id;\r\n  console.log(userId);\r\n\r\n  useEffect(() => {\r\n    const fetchConnectedAccounts = async () => {\r\n      try {\r\n        const response = await axios.get(`${baseURL}/api/brands/${brandId}`, {\r\n          withCredentials: true,\r\n        });\r\n        const brand = response.data;\r\n        \r\n        const connectedIds: string[] = [];\r\n        if (brand.fbAdAccounts?.length) connectedIds.push(...brand.fbAdAccounts);\r\n        if (brand.googleAdAccount) connectedIds.push(brand.googleAdAccount);\r\n        if (brand.ga4Account?.PropertyID) connectedIds.push(brand.ga4Account.PropertyID);\r\n     \r\n        setConnectedAccounts(connectedIds);\r\n      } catch (error) {\r\n        console.error('Error fetching connected accounts:', error);\r\n      }\r\n    };\r\n\r\n    if (open && brandId) {\r\n      fetchConnectedAccounts();\r\n    }\r\n  }, [brandId, open]);\r\n\r\n  useEffect(() => {\r\n    const fetchAccounts = async () => {\r\n      if (!open) return;\r\n      \r\n      setLoading(true);\r\n      try {\r\n        let endpoint = '';\r\n        let accountsSetter: any = null;\r\n\r\n        switch (platform.toLowerCase()) {\r\n          case 'google ads':\r\n            endpoint = '/api/setup/google-accounts';\r\n            accountsSetter = setGoogleAdsAccounts;\r\n            break;\r\n          case 'google analytics':\r\n            endpoint = '/api/setup/ga4-propertyIds';\r\n            accountsSetter = setGoogleAnalyticsAccounts;\r\n            break;\r\n          case 'facebook':\r\n            endpoint = '/api/setup/fb-ad-accounts';\r\n            accountsSetter = setFacebookAdsAccounts;\r\n            break;\r\n        }\r\n        console.log(`Calling API: ${baseURL}${endpoint} with userId: ${userId}`);\r\n\r\n        if (!endpoint) {\r\n          throw new Error('Invalid platform');\r\n        }\r\n        const response = await axios.post(\r\n          `${baseURL}${endpoint}`,\r\n          { userId },\r\n          { withCredentials: true }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          setShowLoginButton(false);\r\n          if (platform.toLowerCase() === 'google ads') {\r\n            accountsSetter(response.data?.clientAccounts.filter((account: GoogleAdsAccount) => !account.hidden));\r\n          } else if (platform.toLowerCase() === 'google analytics') {\r\n            accountsSetter(response.data.propertiesList || []);\r\n          } else if (platform.toLowerCase() === 'facebook') {\r\n            accountsSetter(response.data.adAccounts || []);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        handleError(error as AxiosError, setShowLoginButton);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAccounts();\r\n  }, [platform, userId, open]);\r\n\r\n  const handleError = (error: unknown, setShowLoginButton: (value: boolean) => void) => {\r\n    const axiosError = error as AxiosError;\r\n\r\n    if (axiosError.response) {\r\n      const { status, data } = axiosError.response;\r\n      const code = axiosError.code;\r\n      if (status === 400) {\r\n        setShowLoginButton(true);\r\n      } else if (status === 403) {\r\n        setShowLoginButton(true);\r\n      } else if (status === 401 || code === 'TOKEN_EXPIRED') {\r\n        alert('Your Google session has expired. Please log in again.');\r\n        setShowLoginButton(true);\r\n      } else {\r\n        console.error('Unhandled Error Status:', status);\r\n        console.error('Error Message:', data);\r\n      }\r\n    } else if (axiosError.request) {\r\n      console.error('No response received:', axiosError.request);\r\n    } else {\r\n      console.error('Unexpected Error:', axiosError.message);\r\n    }\r\n  };\r\n\r\n  const updateBrandWithAccount = async (accountId: string, accountName: string) => {\r\n    try {\r\n      let updateData = {};\r\n      \r\n      switch (platform.toLowerCase()) {\r\n        case 'facebook':\r\n          updateData = { fbAdAccounts: [accountId] };\r\n          break;\r\n        case 'google ads':\r\n          updateData = { googleAdAccount: accountId };\r\n          break;\r\n        case 'google analytics':\r\n          updateData = { ga4Account: { PropertyID: accountId } };\r\n          break;\r\n      }\r\n\r\n      const response = await axios.patch(\r\n        `${baseURL}/api/brands/update/${brandId}`,\r\n        updateData,\r\n        { withCredentials: true }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        onSuccess?.(platform, accountName, accountId);\r\n        onOpenChange(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating brand:', error);\r\n    }\r\n  };\r\n\r\n  const handleConnect = async (account: GoogleAdsAccount | GoogleAnalyticsAccount | FacebookAdsAccount) => {\r\n    let accountId: string;\r\n    let displayName: string;\r\n\r\n    if ('clientId' in account) {\r\n      accountId = account.clientId;\r\n      displayName = `${account.name} (${accountId})`;\r\n    } else if ('propertyId' in account) {\r\n      accountId = account.propertyId;\r\n      displayName = `${account.propertyName} (${accountId})`;\r\n    } else if ('id' in account) {\r\n      accountId = account.id;\r\n      displayName = `${account.adname}`;\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    await updateBrandWithAccount(accountId, displayName);\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      const response = await axios.get(`${baseURL}/api/auth/google?context=brandSetup`, { withCredentials: true });\r\n      const { authUrl } = response.data;\r\n      window.location.href = authUrl;\r\n    } catch (error) {\r\n      console.error('Error getting Google Auth URL:', error);\r\n    }\r\n  };\r\n\r\n  const handleFbLogin = async () => {\r\n    try {\r\n      const response = await axios.get(`${baseURL}/api/auth/facebook`, { withCredentials: true });\r\n      if (response.data.success) {\r\n        window.location.href = response.data.authURL;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting Facebook Auth URL:', error);\r\n    }\r\n  };\r\n\r\n  const filteredAccounts = () => {\r\n    let accounts: any[] = [];\r\n    \r\n    switch (platform.toLowerCase()) {\r\n      case 'google ads':\r\n        accounts = googleAdsAccounts;\r\n        break;\r\n      case 'google analytics':\r\n        accounts = googleAnalyticsAccounts;\r\n        break;\r\n      case 'facebook':\r\n        accounts = facebookAdsAccounts;\r\n        break;\r\n    }\r\n\r\n    return accounts.filter((account) => {\r\n      const searchField = 'clientId' in account ? account.name \r\n        : 'propertyName' in account ? account.propertyName \r\n        : account.adname;\r\n      return searchField.toLowerCase().includes(searchTerm.toLowerCase());\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogContent className=\"sm:max-w-[600px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Connect {platform} Account</DialogTitle>\r\n        </DialogHeader>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {loading ? (\r\n            <div className=\"flex justify-center py-4\">Loading...</div>\r\n          ) : showLoginButton ? (\r\n            <Button\r\n              size=\"sm\"\r\n              onClick={platform.toLowerCase() === 'facebook' ? handleFbLogin : handleGoogleLogin}\r\n              className=\"flex items-center gap-2 bg-white text-black border border-green-800 hover:bg-green-50\"\r\n            >\r\n              {platform.toLowerCase() === 'google ads' && (\r\n                <>\r\n                  <GoogleLogo height=\"1rem\" width=\"1rem\" />\r\n                  Connect to your Google Ads account\r\n                </>\r\n              )}\r\n              {platform.toLowerCase() === 'google analytics' && (\r\n                <>\r\n                  <Ga4Logo height=\"1rem\" width=\"1rem\" />\r\n                  Connect to your GA4 account\r\n                </>\r\n              )}\r\n              {platform.toLowerCase() === 'facebook' && (\r\n                <>\r\n                  <FacebookLogo height=\"1rem\" width=\"1rem\" />\r\n                  Connect to your Facebook account\r\n                </>\r\n              )}\r\n            </Button>\r\n          ) : (\r\n            <>\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Search accounts...\"\r\n                  className=\"pl-10\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"max-h-[50vh] overflow-auto\">\r\n                {filteredAccounts()?.map((account) => {\r\n                  const isGoogleAds = platform.toLowerCase() === 'google ads';\r\n                  const isFacebook = platform.toLowerCase() === 'facebook';\r\n\r\n                  const accountId = isGoogleAds\r\n                    ? (account as GoogleAdsAccount).clientId\r\n                    : isFacebook\r\n                      ? (account as FacebookAdsAccount).id\r\n                      : (account as GoogleAnalyticsAccount).propertyId;\r\n\r\n                  const accountName = isGoogleAds\r\n                    ? (account as GoogleAdsAccount).name\r\n                    : isFacebook\r\n                      ? (account as FacebookAdsAccount).adname\r\n                      : (account as GoogleAnalyticsAccount).propertyName;\r\n\r\n                  const platformLogo = isGoogleAds ? (\r\n                    <GoogleLogo height=\"1rem\" width=\"1rem\" />\r\n                  ) : isFacebook ? (\r\n                    <FacebookLogo height=\"1rem\" width=\"1rem\" />\r\n                  ) : (\r\n                    <Ga4Logo height=\"1rem\" width=\"1rem\" />\r\n                  );\r\n\r\n                  const isConnected = connectedAccounts.includes(accountId);\r\n\r\n                  return (\r\n                    <div\r\n                      key={accountId}\r\n                      className=\"flex items-center justify-between p-2 rounded hover:bg-gray-50\"\r\n                    >\r\n                      <span>\r\n                        <div className=\"flex flex-row items-center gap-3\">\r\n                          {platformLogo}\r\n                          {isFacebook\r\n                            ? `${accountName}`\r\n                            : `${accountName} (${accountId})`}\r\n                        </div>\r\n                      </span>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => handleConnect(account)}\r\n                        disabled={isConnected}\r\n                        className={isConnected ? \"bg-gray-400\" : \"bg-blue-600\"}\r\n                      >\r\n                        {isConnected && <Check className=\"h-4 w-4 mr-2\" />}\r\n                        {isConnected ? 'Connected' : 'Connect'}\r\n                      </Button>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}","import { useState } from 'react';\r\nimport { AlertTriangle, BarChart3, LineChart, TrendingUp, ArrowRight, Facebook, PieChart } from 'lucide-react';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card } from \"@/components/ui/card\";\r\nimport PlatformModal from '@/components/dashboard_component/PlatformModal';\r\n\r\nconst platformConfigs = {\r\n  'google analytics': {\r\n    title: \"Google analytics\",\r\n    description: \"Unlock powerful insights for your store\",\r\n    icon: <PieChart className=\"h-16 w-16 text-blue-500 animate-bounce\" />,\r\n    benefits: [\r\n      {\r\n        icon: <BarChart3 className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Real-time Analytics\",\r\n        description: \"Track visitor behavior as it happens\"\r\n      },\r\n      {\r\n        icon: <LineChart className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Performance Metrics\",\r\n        description: \"Monitor your store's key metrics\"\r\n      },\r\n      {\r\n        icon: <TrendingUp className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Growth Insights\",\r\n        description: \"Make data-driven decisions\"\r\n      }\r\n    ],\r\n    buttonText: \"Connect GA4 Now\",\r\n    guideText: \"Need help setting up GA4?\"\r\n  },\r\n  'google ads': {\r\n    title: \"Google Ads\",\r\n    description: \"Supercharge your advertising performance\",\r\n    icon: <AlertTriangle className=\"h-16 w-16 text-red-500 animate-bounce\" />,\r\n    benefits: [\r\n      {\r\n        icon: <BarChart3 className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Campaign Tracking\",\r\n        description: \"Monitor ad performance in real-time\"\r\n      },\r\n      {\r\n        icon: <LineChart className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Conversion Analytics\",\r\n        description: \"Track ROI and conversions\"\r\n      },\r\n      {\r\n        icon: <TrendingUp className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Budget Optimization\",\r\n        description: \"Optimize spending across campaigns\"\r\n      }\r\n    ],\r\n    buttonText: \"Connect Google Ads\",\r\n    guideText: \"New to Google Ads?\"\r\n  },\r\n  facebook: {\r\n    title: \"Facebook Ads\",\r\n    description: \"Scale your social media advertising\",\r\n    icon: <Facebook className=\"h-16 w-16 text-blue-600 animate-bounce\" />,\r\n    benefits: [\r\n      {\r\n        icon: <BarChart3 className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Audience Insights\",\r\n        description: \"Understand your target audience\"\r\n      },\r\n      {\r\n        icon: <LineChart className=\"h-8 w-8 text-primary\" />,\r\n        title: \"Ad Performance\",\r\n        description: \"Track engagement and reach\"\r\n      },\r\n      {\r\n        icon: <TrendingUp className=\"h-8 w-8 text-primary\" />,\r\n        title: \"ROAS Tracking\",\r\n        description: \"Measure advertising return\"\r\n      }\r\n    ],\r\n    buttonText: \"Connect Facebook Ads\",\r\n    guideText: \"First time with Facebook Ads?\"\r\n  }\r\n};\r\n\r\ntype PlatformKeys = 'google analytics' | 'google ads' | 'facebook';\r\n\r\ninterface ConnectPlatformProps {\r\n  platform?: PlatformKeys;\r\n  brandId: string;\r\n  onSuccess?: (platform: string, accountName: string, accountId: string) => void;\r\n}\r\n\r\nconst ConnectPlatform: React.FC<ConnectPlatformProps> = ({ \r\n  platform = 'google analytics',\r\n  brandId,\r\n  onSuccess \r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const config = platformConfigs[platform];\r\n\r\n  const handleConnect = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"min-h-screen bg-gradient-to-b from-background to-secondary/20 flex items-center justify-center p-4\">\r\n        <div className=\"max-w-3xl mx-auto w-full space-y-8\">\r\n          {/* Header Section */}\r\n          <div className=\"text-center space-y-4\">\r\n            <div className=\"flex justify-center\">\r\n              {config.icon}\r\n            </div>\r\n            <h1 className=\"text-4xl font-bold tracking-tight\">Connect {config.title}</h1>\r\n            <p className=\"text-xl text-muted-foreground\">\r\n              {config.description}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Main Content */}\r\n          <Card className=\"p-6 bg-card/50 backdrop-blur-sm\">\r\n            <div className=\"space-y-6\">\r\n              <p className=\"text-lg text-center\">\r\n                You haven't connected {config.title} yet. You're missing out on valuable insights about your store's performance!\r\n              </p>\r\n\r\n              {/* Benefits Grid */}\r\n              <div className=\"grid md:grid-cols-3 gap-4 my-8\">\r\n                {config.benefits.map((benefit, index) => (\r\n                  <div key={index} className=\"flex flex-col items-center text-center p-4 space-y-2\">\r\n                    {benefit.icon}\r\n                    <h3 className=\"font-semibold\">{benefit.title}</h3>\r\n                    <p className=\"text-sm text-muted-foreground\">{benefit.description}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* CTA Button */}\r\n              <div className=\"flex justify-center\">\r\n                <Button \r\n                  size=\"lg\" \r\n                  className=\"group\"\r\n                  onClick={handleConnect}\r\n                >\r\n                  {config.buttonText}\r\n                  <ArrowRight className=\"ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n\r\n          {/* Footer Note */}\r\n          <p className=\"text-center text-sm text-muted-foreground\">\r\n            {config.guideText}{\" \"}\r\n            <a href=\"#\" className=\"text-primary hover:underline\">\r\n              Check out our guide\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <PlatformModal\r\n        platform={config.title}\r\n        open={isModalOpen}\r\n        onOpenChange={setIsModalOpen}\r\n        brandId={brandId}\r\n        onSuccess={onSuccess}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConnectPlatform;","import { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { format } from \"date-fns\";\r\nimport {  RefreshCw, X, Maximize, Minimize } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { TableSkeleton } from \"@/components/dashboard_component/TableSkeleton\"\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { FilterComponent, FilterItem } from \"@/components/dashboard_component/FilterReport\"\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport NewReportTable from \"./NewReportTable\";\r\nimport ColumnManagementSheet from \"@/pages/AnalyticsDashboard/Components/ColumnManagementSheet\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ninterface DaywiseMetric {\r\n  \"Day\": string\r\n  \"Add To Carts\": string\r\n  \"Checkout\": string\r\n  \"Sessions\": string\r\n  \"Purchases\": string\r\n  \"Purchase Rate\": string\r\n  \"Add To Cart Rate\": string\r\n  \"Checkout Rate\": string\r\n}\r\n\r\n  \r\ninterface DaywiseMetricProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst DaywiseMetricsPage: React.FC<DaywiseMetricProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const [filteredData, setFilteredData] = useState<DaywiseMetric[]>([]);\r\n  const [data, setData] = useState<DaywiseMetric[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { brandId } = useParams();\r\n\r\n  \r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const [selectedColumns, setSelectedColumns] = useState<string[]>([]);\r\n  const [filters, setFilters] = useState<FilterItem[]>([]);\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n  const user = useSelector((state: RootState) => state.user.user)\r\n  const dispatch = useDispatch();\r\n  const axiosInstance = createAxiosInstance();\r\n \r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const [visibleColumns, setVisibleColumns] = useState<string[]>(selectedColumns);\r\n  const [columnOrder, setColumnOrder] = useState<string[]>(selectedColumns);\r\n\r\n  const handleVisibilityChange = (columns: string[]) => {\r\n    setVisibleColumns(columns);\r\n  };\r\n  \r\n  const handleOrderChange = (newOrder: string[]) => {\r\n    setColumnOrder(newOrder);\r\n    setVisibleColumns(newOrder); // Ensure visibleColumns is also updated\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setVisibleColumns(selectedColumns);\r\n    setColumnOrder(selectedColumns);\r\n  }, [selectedColumns]);\r\n\r\n  const fetchMetrics = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n\r\n      const DailyAnalyticsResponse = await axiosInstance.post(\r\n        `/api/analytics/dayAtcReport/${brandId}`,\r\n        {\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n          userId: user?.id,\r\n        },\r\n        { withCredentials: true }\r\n      );\r\n\r\n      const fetchedData = DailyAnalyticsResponse.data.data || [];\r\n      setData(fetchedData);\r\n      setFilteredData(fetchedData);\r\n\r\n      if (fetchedData.length > 0) {\r\n        if (selectedColumns.length === 0) {\r\n          const allColumns = Object.keys(fetchedData[0]);\r\n          setSelectedColumns(allColumns);\r\n        } else {\r\n          const newColumns = Object.keys(fetchedData[0]);\r\n          setSelectedColumns((prevSelected) =>\r\n            prevSelected.filter((col) => newColumns.includes(col))\r\n          );\r\n        }\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching day wise metrics data:', error);\r\n     \r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [startDate, endDate, brandId]);\r\n\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n    const intervalId = setInterval(fetchMetrics, 15 * 60 * 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchMetrics]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchMetrics();\r\n  };\r\n\r\n\r\n  const applyFilters = useCallback((filters: FilterItem[]) => {\r\n    let result = [...data];\r\n    \r\n    filters.forEach(filter => {\r\n      result = result.filter(item => {\r\n        const value = item[filter.column as keyof DaywiseMetric] as string;\r\n        if (['>', '<', '='].includes(filter.operator)) {\r\n          const numValue = parseFloat(value);\r\n          const filterValue = parseFloat(filter.value);\r\n          switch (filter.operator) {\r\n            case '>': return numValue > filterValue;\r\n            case '<': return numValue < filterValue;\r\n            case '=': return numValue === filterValue;\r\n            default: return true;\r\n          }\r\n        }\r\n        return true; // Default case\r\n      });\r\n    });\r\n\r\n    setFilteredData(result); // Update filtered data\r\n  }, [data]);\r\n\r\n  const memoizedFilteredData = useMemo(() => filteredData, [filteredData]);\r\n\r\n  const numericColumns = ['Add To Cart', 'Checkouts', 'Sessions', 'Purchases', 'Purchase Rate', 'Add To Cart Rate', 'Checkout Rate'];\r\n  const removeFilter = (index: number) => {\r\n    setFilters(filters.filter((_, i) => i !== index));\r\n  };\r\n  if(isLoading){\r\n    return <Loader isLoading={isLoading} />\r\n  }\r\n  return (\r\n    <Card className={`mx-4 ${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n    <CardContent >\r\n      <div className=\"space-y-4\">\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Day wise E-Commerce Analytics</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n            \r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                   \r\n                  />\r\n                </div>}\r\n            <Button onClick={handleManualRefresh} disabled={isLoading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <ColumnManagementSheet\r\n                visibleColumns={visibleColumns}\r\n                columnOrder={columnOrder}\r\n                onVisibilityChange={handleVisibilityChange}\r\n                onOrderChange={handleOrderChange}\r\n              />\r\n            <FilterComponent\r\n              columns={numericColumns}\r\n              onFiltersChange={applyFilters}\r\n              filters={filters}\r\n              setFilters={setFilters}\r\n            />\r\n             <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        {filters.length > 0 && (\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {filters.map((filter, index) => (\r\n              <div key={index} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\">\r\n                <span>{`${filter.column} ${filter.operator} ${filter.value}`}</span>\r\n                <button onClick={() => removeFilter(index)} className=\"ml-1 ring-offset-background rounded-full outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" aria-label=\"Remove filter\">\r\n                  <X className=\"h-3 w-3\" />\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n          {isLoading ? (\r\n            <TableSkeleton />\r\n          ) : (\r\n            <NewReportTable columns={columnOrder} data={memoizedFilteredData} isFullScreen={isFullScreen} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  </Card>\r\n  );\r\n};\r\n\r\nexport default DaywiseMetricsPage;","\"use client\"\r\n\r\nimport type React from \"react\"\r\nimport { MoreHorizontal } from \"lucide-react\"\r\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface TabProps {\r\n  label: string\r\n  value: string\r\n  isActive: boolean\r\n  onClick: (value: string) => void\r\n}\r\n\r\nconst Tab: React.FC<TabProps> = ({ label, value, isActive, onClick }) => (\r\n  <button\r\n    className={cn(\r\n      \"px-4 py-2 text-sm font-medium whitespace-nowrap transition-colors duration-200 border-b-2\",\r\n      isActive\r\n        ? \"border-blue-500 text-blue-600\"\r\n        : \"border-transparent text-gray-600 hover:text-gray-900 hover:border-gray-300\",\r\n    )}\r\n    onClick={() => onClick(value)}\r\n    aria-selected={isActive}\r\n    role=\"tab\"\r\n  >\r\n    {label}\r\n  </button>\r\n)\r\n\r\ninterface FixedTabsWithMoreProps {\r\n  tabs: { label: string; value: string }[]\r\n  activeTab: string\r\n  onTabChange: (value: string) => void\r\n  visibleTabCount?: number\r\n}\r\n\r\nexport const CustomTabs: React.FC<FixedTabsWithMoreProps> = ({\r\n  tabs,\r\n  activeTab,\r\n  onTabChange,\r\n  visibleTabCount = 7, // Default to showing 7 tabs\r\n}) => {\r\n  const visibleTabs = tabs.slice(0, visibleTabCount)\r\n  const hiddenTabs = tabs.slice(visibleTabCount)\r\n\r\n  const activeTabIndex = tabs.findIndex((tab) => tab.value === activeTab)\r\n  if (activeTabIndex >= visibleTabCount && visibleTabs.length > 0) {\r\n    const activeHiddenTab = hiddenTabs.find((tab) => tab.value === activeTab)\r\n\r\n    if (activeHiddenTab) {\r\n      // Modified logic: Remove from the first visible tab instead of the last\r\n      const newHiddenTabs = hiddenTabs.filter((tab) => tab.value !== activeHiddenTab.value)\r\n      // Add the first visible tab to the hidden tabs\r\n      newHiddenTabs.unshift(visibleTabs[0])\r\n      // Create new visible tabs by removing the first one and adding the active tab to the end\r\n      const newVisibleTabs = [...visibleTabs.slice(1), activeHiddenTab]\r\n\r\n      return (\r\n        <div className=\"relative flex justify-center items-center border-b border-gray-200 w-full\">\r\n          <div className=\"flex justify-center items-center overflow-x-hidden\">\r\n            {newVisibleTabs.map((tab) => (\r\n              <Tab\r\n                key={tab.value}\r\n                label={tab.label}\r\n                value={tab.value}\r\n                isActive={tab.value === activeTab}\r\n                onClick={onTabChange}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          {newHiddenTabs.length > 0 && (\r\n            <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button variant=\"ghost\" size=\"sm\" className=\"h-9 px-2 ml-1\">\r\n                  <MoreHorizontal className=\"h-4 w-4 mr-1\" />\r\n                  <span className=\"text-xs font-medium\">More</span>\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent align=\"end\" className=\"w-48\">\r\n                {newHiddenTabs.map((tab) => (\r\n                  <DropdownMenuItem\r\n                    key={tab.value}\r\n                    className={cn(\"cursor-pointer\", tab.value === activeTab && \"bg-blue-50 text-blue-600\")}\r\n                    onClick={() => onTabChange(tab.value)}\r\n                  >\r\n                    {tab.label}\r\n                  </DropdownMenuItem>\r\n                ))}\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n          )}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  // Default rendering when active tab is visible or no swapping needed\r\n  return (\r\n    <div className=\"relative flex justify-center items-center border-b border-gray-200 w-full\">\r\n      <div className=\"flex justify-center items-center overflow-x-hidden\">\r\n        {visibleTabs.map((tab) => (\r\n          <Tab\r\n            key={tab.value}\r\n            label={tab.label}\r\n            value={tab.value}\r\n            isActive={tab.value === activeTab}\r\n            onClick={onTabChange}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {hiddenTabs.length > 0 && (\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-9 px-2 ml-1\">\r\n              <MoreHorizontal className=\"h-4 w-4 mr-1\" />\r\n              <span className=\"text-xs font-medium\">More</span>\r\n            </Button>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent align=\"end\" className=\"w-48\">\r\n            {hiddenTabs.map((tab) => (\r\n              <DropdownMenuItem\r\n                key={tab.value}\r\n                className={cn(\"cursor-pointer\", tab.value === activeTab && \"bg-blue-50 text-blue-600\")}\r\n                onClick={() => onTabChange(tab.value)}\r\n              >\r\n                {tab.label}\r\n              </DropdownMenuItem>\r\n            ))}\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\n","import { CalendarIcon, AlertTriangle, Clock } from \"lucide-react\"\r\nimport { DatePickerWithRange } from \"./DatePickerWithRange\"\r\n\r\nexport default function MissingDateWarning() {\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-slate-50 p-6 overflow-hidden relative  flex justify-center items-center\">\r\n\r\n            <div className=\"max-w-3xl mx-auto relative\">\r\n                {/* Warning header */}\r\n                <div className=\"mb-8 text-center\">\r\n                    <div className=\"inline-flex items-center justify-center gap-2 mb-4 bg-amber-100 px-4 py-2 rounded-full\">\r\n                        <AlertTriangle className=\"h-5 w-5 text-amber-500\" />\r\n                        <span className=\"text-amber-700 font-semibold text-sm\">Action Required</span>\r\n                    </div>\r\n\r\n                    <h1 className=\"text-3xl md:text-4xl font-bold text-slate-800 mb-3\">\r\n                        Date Range <span className=\"text-amber-500\">Missing</span>\r\n                    </h1>\r\n\r\n                    <p className=\"text-slate-600 max-w-xl mx-auto\">\r\n                        Please select a date range to continue. We need this information to display your data correctly.\r\n                    </p>\r\n                </div>\r\n\r\n                {/* Main warning card */}\r\n                <div className=\"bg-white rounded-xl shadow-md border-l-4 border-amber-400 overflow-hidden\">\r\n                    <div className=\"p-6\">\r\n                        <div className=\"space-y-6\">\r\n                            {/* Date picker */}\r\n                            <div className=\"bg-slate-50 rounded-lg p-4 border border-slate-200\">\r\n                                <div className=\"flex items-center justify-between mb-4\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <CalendarIcon className=\"h-5 w-5 text-slate-500\" />\r\n                                        <h3 className=\"font-medium text-slate-700\">Select Dates</h3>\r\n                                    </div>\r\n\r\n                                    <div className=\"text-xs text-slate-500 flex items-center gap-1\">\r\n                                        <Clock className=\"h-3 w-3\" />\r\n                                        <span>Last 24 months available</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <DatePickerWithRange />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo, useState } from 'react';\r\nimport DailyEcommerceMetrics from '@/pages/ReportPage/component/EcommerceMetricsPage';\r\nimport CollapsibleSidebar from '../Dashboard/CollapsibleSidebar';\r\nimport { TableSkeleton } from '@/components/dashboard_component/TableSkeleton';\r\nimport { useParams } from 'react-router-dom';\r\nimport {ShoppingCart } from 'lucide-react';\r\nimport { useTokenError } from '@/context/TokenErrorContext';\r\nimport NoGA4AcessPage from './NoGA4AccessPage.';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport ConnectPlatform from './ConnectPlatformPage';\r\nimport Header from '@/components/dashboard_component/Header';\r\nimport DaywiseMetricsPage from './component/DaywiseMetricsPage';\r\nimport { CustomTabs } from '../ConversionReportPage/components/CustomTabs';\r\nimport HelpDeskModal from '@/components/dashboard_component/HelpDeskModal';\r\nimport MissingDateWarning from '@/components/dashboard_component/Missing-Date-Waning';\r\n\r\nconst ReportsPage: React.FC = () => {\r\n\r\n  const isLoading = false;\r\n  const { brandId } = useParams<{ brandId: string }>();\r\n  const brands = useSelector((state: RootState) => state.brand.brands);\r\n  const selectedBrand = brands.find((brand) => brand._id === brandId);\r\n  const hasGA4Account = selectedBrand?.ga4Account ?? false;\r\n  const { tokenError } = useTokenError();\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n\r\n  const dateRange = {\r\n    from: date.from ? new Date(date.from) : undefined,\r\n    to: date.to ? new Date(date.to) : undefined\r\n  }\r\n  const [activeTab, setActiveTab] = useState('daily');\r\n\r\n  const tabs = [\r\n    { label: 'Daily Metrics', value: 'daily' },\r\n    { label: 'Day wise Metrics', value: 'day wise' },\r\n  ];\r\n\r\n\r\n  const handleTabChange = (value: string) => {\r\n    setActiveTab(value);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-auto\">\r\n        {tokenError ? (\r\n          <NoGA4AcessPage />\r\n        ) : !hasGA4Account ? (\r\n          <>\r\n            <ConnectPlatform\r\n              platform=\"google analytics\"\r\n              brandId={brandId ?? ''}\r\n              onSuccess={(platform, accountName, accountId) => {\r\n                console.log(`Successfully connected ${platform} account: ${accountName} (${accountId})`);\r\n              }} /> </>\r\n        ) :(!dateRange.from || !dateRange.to) ? <MissingDateWarning /> : (\r\n          <>\r\n            {/* Existing page content */}\r\n            <Header title='E-Commerce Insighhts' Icon={ShoppingCart} showDatePicker={true} />\r\n            <div className=\"bg-white px-6 sticky top-0 z-10\">\r\n              <CustomTabs tabs={tabs} activeTab={activeTab} onTabChange={handleTabChange} />\r\n            </div>\r\n            {isLoading ? (\r\n              <TableSkeleton />\r\n            ) : (\r\n              <section className=\"my-3\">\r\n                {activeTab === 'daily' && (\r\n                  <DailyEcommerceMetrics dateRange={dateRange} />\r\n                )}\r\n                {activeTab === 'day wise' && (\r\n                  <DaywiseMetricsPage dateRange={dateRange} />\r\n                )}\r\n              </section>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      <HelpDeskModal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportsPage;","import { Button } from \"@/components/ui/button\"\r\nimport { ChevronLeft, ChevronRight, ChevronsLeft, ChevronsRight, ArrowUp, ArrowDown, Minus } from \"lucide-react\"\r\nimport { useMemo, useState, useEffect } from \"react\"\r\nimport { COLORS } from \"@/data/constant\"\r\n\r\nexport interface MonthlyData {\r\n  Month: string\r\n  [key: string]: number | string\r\n}\r\n\r\nexport interface RowData {\r\n  [key: string]: number | string | MonthlyData[]\r\n}\r\n\r\ninterface ConversionTableProps {\r\n  data: RowData[]\r\n  primaryColumn: string\r\n  secondaryColumns?: string[]\r\n  monthlyDataKey: string\r\n  monthlyMetrics: string[]\r\n  isFullScreen: boolean\r\n  rows?: number\r\n  isAdsTable?: boolean\r\n  locale: string\r\n}\r\n\r\nexport default function ConversionTable({\r\n  data,\r\n  primaryColumn,\r\n  secondaryColumns,\r\n  monthlyDataKey,\r\n  monthlyMetrics,\r\n  isFullScreen,\r\n  rows,\r\n  isAdsTable, locale\r\n}: ConversionTableProps) {\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [loadedRows, setLoadedRows] = useState<Array<{ dataIndex: number; metricIndex: number }>>([])\r\n  const rowsPerPage = rows ? rows : 8\r\n  const rowsPerChunk = 30\r\n\r\n  const getTableHeight = () => {\r\n    if (isFullScreen) {\r\n      if (isAdsTable) {\r\n        return \"max-h-[calc(100vh-90px)]\"\r\n      }\r\n      return \"max-h-[calc(100vh-130px)]\"\r\n    }\r\n    return \"max-h-[450px]\"\r\n  }\r\n\r\n  const months = useMemo(() => {\r\n    if (!Array.isArray(data)) {\r\n      console.error(\"Data is not an array:\", data)\r\n      return []\r\n    }\r\n\r\n    const getMonthName = (monthNumber: string): string => {\r\n      const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n      return months[Number.parseInt(monthNumber) - 1]\r\n    }\r\n\r\n    const allMonths = new Set<string>()\r\n    data.forEach((row) => {\r\n      const monthlyData = row[monthlyDataKey] as MonthlyData[] | undefined\r\n      if (Array.isArray(monthlyData)) {\r\n        monthlyData.forEach((month) => {\r\n          if (month?.Month) {\r\n            const year = month.Month.slice(0, 4)\r\n            const monthNum = month.Month.slice(4)\r\n            allMonths.add(`${getMonthName(monthNum)}-${year}`)\r\n          }\r\n        })\r\n      }\r\n    })\r\n    return Array.from(allMonths).reverse()\r\n  }, [data, monthlyDataKey])\r\n\r\n  const allRows = useMemo(() => {\r\n    const rows: Array<{ dataIndex: number; metricIndex: number }> = []\r\n    data.forEach((_, dataIndex) => {\r\n      monthlyMetrics.forEach((_, metricIndex) => {\r\n        rows.push({ dataIndex, metricIndex })\r\n      })\r\n    })\r\n    return rows\r\n  }, [data, monthlyMetrics])\r\n\r\n  const loadMoreRows = () => {\r\n    setLoadedRows((prevRows) => [...prevRows, ...allRows.slice(prevRows.length, prevRows.length + rowsPerChunk)])\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isFullScreen) {\r\n      setLoadedRows(allRows.slice(0, rowsPerChunk))\r\n    }\r\n  }, [isFullScreen, allRows])\r\n\r\n  const handleScroll = (event: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n    const { scrollTop, scrollHeight, clientHeight } = event.currentTarget\r\n    if (scrollHeight - scrollTop <= clientHeight + 100) {\r\n      loadMoreRows()\r\n    }\r\n  }\r\n\r\n  const displayRows = useMemo(() => {\r\n    if (isFullScreen) {\r\n      return loadedRows\r\n    }\r\n    return allRows.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage)\r\n  }, [isFullScreen, allRows, loadedRows, currentPage, rowsPerPage])\r\n\r\n  const thresholds = useMemo(() => {\r\n    let totalSessions = 0,\r\n      totalConvRate = 0,\r\n      sessionCount = 0\r\n    let totalSpend = 0,\r\n      totalPurchaseROAS = 0,\r\n      spendCount = 0\r\n    let totalCost = 0,\r\n      totalConvValuePerCost = 0,\r\n      costCount = 0\r\n\r\n    data.forEach((row) => {\r\n      if (typeof row[\"Total Sessions\"] === \"number\" && typeof row[\"Avg Conv. Rate\"] === \"number\") {\r\n        totalSessions += Number(row[\"Total Sessions\"])\r\n        totalConvRate += Number(row[\"Avg Conv. Rate\"])\r\n        sessionCount++\r\n      }\r\n\r\n      if (typeof row[\"Total Spend\"] === \"number\" && typeof row[\"Total Purchase ROAS\"] === \"number\") {\r\n        totalSpend += Number(row[\"Total Spend\"])\r\n        totalPurchaseROAS += Number(row[\"Total Purchase ROAS\"])\r\n        spendCount++\r\n      }\r\n\r\n      if (typeof row[\"Total Cost\"] === \"number\" && typeof row[\"Conv. Value / Cost\"] === \"number\") {\r\n        totalCost += Number(row[\"Total Cost\"])\r\n        totalConvValuePerCost += Number(row[\"Conv. Value / Cost\"])\r\n        costCount++\r\n      }\r\n    })\r\n\r\n    return {\r\n      avgSessions: sessionCount > 0 ? totalSessions / sessionCount : 0,\r\n      avgConvRate: sessionCount > 0 ? totalConvRate / sessionCount : 0,\r\n      avgSpend: spendCount > 0 ? totalSpend / spendCount : 0,\r\n      avgPurchaseROAS: spendCount > 0 ? totalPurchaseROAS / spendCount : 0,\r\n      avgCost: costCount > 0 ? totalCost / costCount : 0,\r\n      avgConvValuePerCost: costCount > 0 ? totalConvValuePerCost / costCount : 0,\r\n    }\r\n  }, [data])\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      setCurrentPage(1)\r\n    }\r\n  }, [isFullScreen])\r\n\r\n  const getMetricColor = ({\r\n    sessions,\r\n    convRate,\r\n    spend,\r\n    purchaseROAS,\r\n    cost,\r\n    convValuePerCost,\r\n  }: {\r\n    sessions?: number\r\n    convRate?: number\r\n    spend?: number\r\n    purchaseROAS?: number\r\n    cost?: number\r\n    convValuePerCost?: number\r\n  }) => {\r\n    const isHighSessions = sessions !== undefined && sessions >= thresholds.avgSessions\r\n    const isGoodConversion = convRate !== undefined && convRate >= thresholds.avgConvRate\r\n    const isHighSpent = spend !== undefined && spend >= thresholds.avgSpend\r\n    const isGoodROAS = purchaseROAS !== undefined && purchaseROAS >= thresholds.avgPurchaseROAS\r\n    const isHighCost = cost !== undefined && cost >= thresholds.avgCost\r\n    const isGoodConvValuePerCost = convValuePerCost !== undefined && convValuePerCost >= thresholds.avgConvValuePerCost\r\n\r\n    // Prioritizing Sessions & Conversion Rate\r\n    if (isHighSessions && isGoodConversion)\r\n      return {\r\n        bg: COLORS.success.bg,\r\n        text: COLORS.success.dark,\r\n        indicator: \"positive\",\r\n        sessionIndicator: \"up\",\r\n        conversionIndicator: \"up\",\r\n      }\r\n\r\n    if (isHighSpent && isGoodROAS)\r\n      return {\r\n        bg: COLORS.success.bg,\r\n        text: COLORS.success.dark,\r\n        indicator: \"positive\",\r\n        spendIndicator: \"up\",\r\n        roasIndicator: \"up\",\r\n      }\r\n\r\n    if (isHighCost && isGoodConvValuePerCost)\r\n      return {\r\n        bg: COLORS.success.bg,\r\n        text: COLORS.success.dark,\r\n        indicator: \"positive\",\r\n        costIndicator: \"up\",\r\n        valueIndicator: \"up\",\r\n      }\r\n\r\n    // Mixed positive/negative - more up than down\r\n    if (isHighSessions && !isGoodConversion)\r\n      return {\r\n        bg: COLORS.warning.bg,\r\n        text: COLORS.warning.dark,\r\n        indicator: \"neutral-up\",\r\n        sessionIndicator: \"up\",\r\n        conversionIndicator: \"down\",\r\n      }\r\n\r\n    if (isHighSpent && !isGoodROAS)\r\n      return {\r\n        bg: COLORS.warning.bg,\r\n        text: COLORS.warning.dark,\r\n        indicator: \"neutral-up\",\r\n        spendIndicator: \"up\",\r\n        roasIndicator: \"down\",\r\n      }\r\n\r\n    if (isHighCost && !isGoodConvValuePerCost)\r\n      return {\r\n        bg: COLORS.warning.bg,\r\n        text: COLORS.warning.dark,\r\n        indicator: \"neutral-up\",\r\n        costIndicator: \"up\",\r\n        valueIndicator: \"down\",\r\n      }\r\n\r\n    // Mixed positive/negative - more down than up\r\n    if (!isHighSessions && isGoodConversion)\r\n      return {\r\n        bg: COLORS.neutral.bg,\r\n        text: COLORS.neutral.dark,\r\n        indicator: \"neutral-down\",\r\n        sessionIndicator: \"down\",\r\n        conversionIndicator: \"up\",\r\n      }\r\n\r\n    if (!isHighSpent && isGoodROAS)\r\n      return {\r\n        bg: COLORS.neutral.bg,\r\n        text: COLORS.neutral.dark,\r\n        indicator: \"neutral-down\",\r\n        spendIndicator: \"down\",\r\n        roasIndicator: \"up\",\r\n      }\r\n\r\n    if (!isHighCost && isGoodConvValuePerCost)\r\n      return {\r\n        bg: COLORS.neutral.bg,\r\n        text: COLORS.neutral.dark,\r\n        indicator: \"neutral-down\",\r\n        costIndicator: \"down\",\r\n        valueIndicator: \"up\",\r\n      }\r\n\r\n    // Default case - all negative\r\n    return {\r\n      bg: COLORS.danger.bg,\r\n      text: COLORS.danger.dark,\r\n      indicator: \"negative\",\r\n      sessionIndicator: \"down\",\r\n      conversionIndicator: \"down\",\r\n      spendIndicator: \"down\",\r\n      roasIndicator: \"down\",\r\n      costIndicator: \"down\",\r\n      valueIndicator: \"down\",\r\n    }\r\n  }\r\n\r\n  const renderIndicator = (direction: string) => {\r\n    switch (direction) {\r\n      case \"up\":\r\n        return <ArrowUp className=\"h-3 w-3\" style={{ color: COLORS.success.main }} />\r\n      case \"down\":\r\n        return <ArrowDown className=\"h-3 w-3\" style={{ color: COLORS.danger.main }} />\r\n      default:\r\n        return <Minus className=\"h-3 w-3\" style={{ color: COLORS.text.muted }} />\r\n    }\r\n  }\r\n\r\n  const renderCell = (value: number | string, type?: \"spend\" | \"percentage\" | \"default\" | \"sessions\") => {\r\n    if (typeof value === \"number\") {\r\n      switch (type) {\r\n        case \"spend\":\r\n          return Math.round(value).toLocaleString(locale)\r\n        case \"percentage\":\r\n          return `${Number.parseFloat(value.toLocaleString(locale)).toFixed(2)}%`\r\n        case \"sessions\":\r\n          return Math.round(value).toLocaleString(locale)\r\n        default:\r\n          return Number.parseFloat(value.toLocaleString(locale)).toFixed(2)\r\n      }\r\n    }\r\n    return value\r\n  }\r\n\r\n  const renderMonthCell = (monthData: MonthlyData | undefined, metric: string) => {\r\n    if (!monthData) {\r\n      return (\r\n        <td\r\n          className=\"w-[100px] text-right whitespace-nowrap p-3 text-sm font-medium border-r border-b border-slate-300 bg-white\"\r\n          style={{ color: COLORS.text.muted }}\r\n        >\r\n          <span style={{ color: COLORS.text.muted }}>—</span>\r\n        </td>\r\n      )\r\n    }\r\n\r\n    const value = monthData[metric]\r\n    let colorStyle = { bg: \"white\", text: COLORS.text.primary, indicator: \"\" }\r\n    let directionIndicator = \"\"\r\n\r\n    if (\r\n      (metric === \"Sessions\" || metric === \"Conv. Rate\") &&\r\n      typeof monthData[\"Sessions\"] === \"number\" &&\r\n      typeof monthData[\"Conv. Rate\"] === \"number\"\r\n    ) {\r\n      const metricStyle = getMetricColor({\r\n        sessions: Number(monthData[\"Sessions\"]),\r\n        convRate: Number(monthData[\"Conv. Rate\"]),\r\n      })\r\n      colorStyle = metricStyle\r\n\r\n    \r\n    }\r\n\r\n    if (\r\n      (metric === \"Spend\" || metric === \"Purchase ROAS\") &&\r\n      typeof monthData[\"Spend\"] === \"number\" &&\r\n      typeof monthData[\"Purchase ROAS\"] === \"number\"\r\n    ) {\r\n      const metricStyle = getMetricColor({\r\n        spend: Number(monthData[\"Spend\"]),\r\n        purchaseROAS: Number(monthData[\"Purchase ROAS\"]),\r\n      })\r\n      colorStyle = metricStyle\r\n    }\r\n\r\n    if (\r\n      (metric === \"Cost\" || metric === \"Conv. Value/ Cost\") &&\r\n      typeof monthData[\"Cost\"] === \"number\" &&\r\n      typeof monthData[\"Conv. Value/ Cost\"] === \"number\"\r\n    ) {\r\n      const metricStyle = getMetricColor({\r\n        cost: Number(monthData[\"Cost\"]),\r\n        convValuePerCost: Number(monthData[\"Conv. Value/ Cost\"]),\r\n      })\r\n      colorStyle = metricStyle\r\n    }\r\n\r\n    return (\r\n      <td\r\n        className=\"w-[100px] text-right whitespace-nowrap p-3 text-sm font-medium border-r border-b border-slate-300\"\r\n        style={{\r\n          backgroundColor: colorStyle.bg,\r\n          color: colorStyle.text,\r\n          transition: \"background-color 0.2s ease-in-out\",\r\n          lineHeight: \"1.4\",\r\n        }}\r\n      >\r\n        <div className=\"flex items-center justify-end gap-1.5\">\r\n          {directionIndicator && renderIndicator(directionIndicator)}\r\n          <span>\r\n            {renderCell(\r\n              value,\r\n              metric === \"Sessions\"\r\n                ? \"sessions\"\r\n                : metric.toLowerCase().includes(\"rate\")\r\n                  ? \"percentage\"\r\n                  : metric.toLowerCase().includes(\"spend\") || metric.toLowerCase().includes(\"cost\")\r\n                    ? \"spend\"\r\n                    : \"default\",\r\n            )}\r\n          </span>\r\n        </div>\r\n        {metric === \"Conv. Rate\" && monthData[\"Purchases\"] !== undefined && (\r\n          <div\r\n            className=\"text-xs mt-1\"\r\n            style={{ color: COLORS.text.secondary }}\r\n          >{`Purchases: ${monthData[\"Purchases\"].toLocaleString(locale) ?? 0}`}</div>\r\n        )}\r\n        {metric === \"Cost\" && monthData[\"Clicks\"] !== undefined && (\r\n          <div\r\n            className=\"text-xs mt-1\"\r\n            style={{ color: COLORS.text.secondary }}\r\n          >{`clicks: ${monthData[\"Clicks\"] ?? 0}`}</div>\r\n        )}\r\n        {metric === \"Conv. Value/ Cost\" && monthData[\"Conversion Rate\"] !== undefined && (\r\n          <div\r\n            className=\"text-xs mt-1\"\r\n            style={{ color: COLORS.text.secondary }}\r\n          >{`conv. rate: ${monthData[\"Conversion Rate\"].toLocaleString(locale) ?? 0}%`}</div>\r\n        )}\r\n        {metric === \"Purchase ROAS\" && monthData[\"Purchase Conversion Value\"] !== undefined && (\r\n          <div\r\n            className=\"text-xs mt-1\"\r\n            style={{ color: COLORS.text.secondary }}\r\n          >{`PCV: ${monthData[\"Purchase Conversion Value\"].toLocaleString(locale) ?? 0}`}</div>\r\n        )}\r\n      </td>\r\n    )\r\n  }\r\n\r\n\r\n  const renderMetricValue = (row: RowData, column: string, currentMetric: string, columnIndex: number) => {\r\n    const value = row[column]\r\n\r\n    if (typeof value !== \"number\") {\r\n      return (\r\n        <td\r\n          className=\"sticky top-0 min-w-[130px] p-3 text-sm font-medium border-r border-b border-slate-300 bg-white\"\r\n          style={{ left: `${130 + 100 + columnIndex * 130}px` }}\r\n        >\r\n          {\"\"}\r\n        </td>\r\n      )\r\n    }\r\n\r\n    let colorStyle = { bg: \"white\", text: COLORS.text.primary, indicator: \"\" }\r\n    let directionIndicator = \"\"\r\n\r\n    // Check if the current metric and column match specific conditions for color\r\n    if (currentMetric && column) {\r\n      if (column.includes(\"Sessions\") || column.includes(\"Rate\")) {\r\n        const sessions = row[\"Total Sessions\"] as number\r\n        const convRate = row[\"Avg Conv. Rate\"] as number\r\n        const metricStyle = getMetricColor({ sessions, convRate })\r\n        colorStyle = metricStyle\r\n\r\n        if (currentMetric.toLowerCase() === \"sessions\") {\r\n          directionIndicator = metricStyle.sessionIndicator || \"\"\r\n        } else if (currentMetric.toLowerCase() === \"conv. rate\") {\r\n          directionIndicator = metricStyle.conversionIndicator || \"\"\r\n        }\r\n      }\r\n    }\r\n\r\n    if (currentMetric && column) {\r\n      if (column.includes(\"Spend\") || column.includes(\"ROAS\")) {\r\n        const spend = row[\"Total Spend\"] as number\r\n        const purchaseROAS = row[\"Total Purchase ROAS\"] as number\r\n        const metricStyle = getMetricColor({ spend, purchaseROAS })\r\n        colorStyle = metricStyle\r\n\r\n        if (currentMetric.toLowerCase() === \"spend\") {\r\n          directionIndicator = metricStyle.spendIndicator || \"\"\r\n        } else if (currentMetric.toLowerCase() === \"purchase roas\") {\r\n          directionIndicator = metricStyle.roasIndicator || \"\"\r\n        }\r\n      }\r\n    }\r\n\r\n    if (currentMetric && column) {\r\n      if (column.includes(\"Cost\") || column.includes(\"Conv. Value / Cost\")) {\r\n        const cost = row[\"Total Cost\"] as number\r\n        const convValuePerCost = row[\"Conv. Value / Cost\"] as number\r\n        const metricStyle = getMetricColor({ cost, convValuePerCost })\r\n        colorStyle = metricStyle\r\n\r\n        if (currentMetric.toLowerCase() === \"cost\") {\r\n          directionIndicator = metricStyle.costIndicator || \"\"\r\n        } else if (currentMetric.toLowerCase() === \"conv. value/ cost\") {\r\n          directionIndicator = metricStyle.valueIndicator || \"\"\r\n        }\r\n      }\r\n    }\r\n\r\n    const totalPurchases = typeof row[\"Total Purchases\"] === \"number\" ? row[\"Total Purchases\"].toLocaleString(locale) : null\r\n    const totalConvValue = typeof row[\"Total Conv. Value\"] === \"number\" ? row[\"Total Conv. Value\"].toLocaleString(locale) : null\r\n    const totalPCV = typeof row[\"Total PCV\"] === \"number\" ? row[\"Total PCV\"].toLocaleString(locale) : null\r\n\r\n    return (\r\n      <td\r\n        className=\"sticky top-0 min-w-[130px] p-3 text-sm font-medium border-r border-b border-slate-200\"\r\n        style={{\r\n          left: `${130 + 100 + columnIndex * 130}px`,\r\n          backgroundColor: colorStyle.bg,\r\n          color: colorStyle.text,\r\n          transition: \"background-color 0.2s ease-in-out\",\r\n        }}\r\n      >\r\n       {currentMetric.toLowerCase() === \"cost\" && column === \"Total Cost\" ? (\r\n          <div className=\"flex flex-col\">\r\n            <div className=\"flex items-center gap-1.5\">\r\n              {directionIndicator && renderIndicator(directionIndicator)}\r\n              <span>{renderCell(value, \"spend\")}</span>\r\n            </div>\r\n          </div>\r\n        ) : currentMetric.toLowerCase() === \"conv. value/ cost\" && column === \"Conv. Value / Cost\" ? (\r\n          <div className=\"flex flex-col\">\r\n            <div className=\"flex items-center gap-1.5\">\r\n              {directionIndicator && renderIndicator(directionIndicator)}\r\n              <span>{renderCell(value)}</span>\r\n            </div>\r\n            {totalConvValue && (\r\n              <span className=\"text-xs mt-0.5\" style={{ color: COLORS.text.muted }}>\r\n                Total Conv. Value: {totalConvValue}\r\n              </span>\r\n            )}\r\n          </div>\r\n        ) : currentMetric.toLowerCase() === \"sessions\" && column.includes(\"Sessions\") ? (\r\n          <div className=\"flex items-center gap-1.5\">\r\n            {directionIndicator && renderIndicator(directionIndicator)}\r\n            <span>{renderCell(value, \"sessions\")}</span>\r\n          </div>\r\n        ) : currentMetric.toLowerCase() === \"conv. rate\" && column.includes(\"Rate\") ? (\r\n          <div className=\"flex flex-col\">\r\n            <div className=\"flex items-center gap-1.5\">\r\n              {directionIndicator && renderIndicator(directionIndicator)}\r\n              <span>{renderCell(value, \"percentage\")}</span>\r\n            </div>\r\n            {totalPurchases && (\r\n              <span className=\"text-xs mt-0.5\" style={{ color: COLORS.text.muted }}>\r\n                Total Purchases: {totalPurchases}\r\n              </span>\r\n            )}\r\n          </div>\r\n        ) : currentMetric.toLowerCase() === \"spend\" && column.includes(\"Total Spend\") ? (\r\n          <div className=\"flex items-center gap-1.5\">\r\n            {directionIndicator && renderIndicator(directionIndicator)}\r\n            <span>{renderCell(value, \"spend\")}</span>\r\n          </div>\r\n        ) : currentMetric.toLowerCase() === \"purchase roas\" && column.includes(\"Total Purchase ROAS\") ? (\r\n          <div className=\"flex flex-col\">\r\n            <div className=\"flex items-center gap-1.5\">\r\n              {directionIndicator && renderIndicator(directionIndicator)}\r\n              <span>{renderCell(value)}</span>\r\n            </div>\r\n            {totalPCV && (\r\n              <span className=\"text-xs mt-0.5\" style={{ color: COLORS.text.muted }}>\r\n                PCV: {totalPCV}\r\n              </span>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </td>\r\n    )\r\n  }\r\n\r\n  const renderMetricRow = (row: RowData, metricIndex: number) => {\r\n    const metric = monthlyMetrics[metricIndex]\r\n\r\n    // Determine the background color for both primary and metric columns\r\n    let colorStyle = { bg: \"white\", text: COLORS.text.primary, indicator: \"\" }\r\n    let directionIndicator = \"\"\r\n\r\n    if (secondaryColumns) {\r\n      const sessions = row[\"Total Sessions\"] as number\r\n      const convRate = row[\"Avg Conv. Rate\"] as number\r\n      const spend = row[\"Total Spend\"] as number\r\n      const purchaseROAS = row[\"Total Purchase ROAS\"] as number\r\n      const cost = row[\"Total Cost\"] as number\r\n      const convValuePerCost = row[\"Conv. Value / Cost\"] as number\r\n\r\n      if (metric === \"Sessions\" || metric === \"Conv. Rate\") {\r\n        const metricStyle = getMetricColor({ sessions, convRate })\r\n        colorStyle = metricStyle\r\n\r\n        if (metric === \"Sessions\") {\r\n          directionIndicator = metricStyle.sessionIndicator || \"\"\r\n        } else if (metric === \"Conv. Rate\") {\r\n          directionIndicator = metricStyle.conversionIndicator || \"\"\r\n        }\r\n      } else if (metric === \"Spend\" || metric === \"Purchase ROAS\") {\r\n        const metricStyle = getMetricColor({ spend, purchaseROAS })\r\n        colorStyle = metricStyle\r\n\r\n        if (metric === \"Spend\") {\r\n          directionIndicator = metricStyle.spendIndicator || \"\"\r\n        } else if (metric === \"Purchase ROAS\") {\r\n          directionIndicator = metricStyle.roasIndicator || \"\"\r\n        }\r\n      } else if (metric === \"Cost\" || metric === \"Conv. Value/ Cost\") {\r\n        const metricStyle = getMetricColor({ cost, convValuePerCost })\r\n        colorStyle = metricStyle\r\n\r\n        if (metric === \"Cost\") {\r\n          directionIndicator = metricStyle.costIndicator || \"\"\r\n        } else if (metric === \"Conv. Value/ Cost\") {\r\n          directionIndicator = metricStyle.valueIndicator || \"\"\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <tr key={`${row[primaryColumn]}-${metric}`} className=\"hover:bg-slate-50 transition-colors duration-150 border-b border-slate-300\">\r\n        <td\r\n          className=\"sticky left-0 min-w-[130px] max-w-[200px] p-3 text-sm font-medium border-r border-b border-slate-300\"\r\n          style={{\r\n            backgroundColor: colorStyle.bg,\r\n            color: colorStyle.text,\r\n            transition: \"background-color 0.2s ease-in-out\",\r\n            letterSpacing: \"-0.01em\",\r\n          }}\r\n        >\r\n          {metricIndex === 0\r\n            ? typeof row[primaryColumn] === \"string\" || typeof row[primaryColumn] === \"number\"\r\n              ? renderCell(row[primaryColumn])\r\n              : \"\"\r\n            : null}\r\n        </td>\r\n        <td\r\n          className=\"sticky left-[130px] min-w-[100px] whitespace-nowrap p-3 text-sm font-medium border-r border-b border-slate-300\"\r\n          style={{\r\n            backgroundColor: colorStyle.bg,\r\n            color: colorStyle.text,\r\n            transition: \"background-color 0.2s ease-in-out\",\r\n          }}\r\n        >\r\n          <div className=\"flex items-center gap-1.5\">\r\n            {directionIndicator && renderIndicator(directionIndicator)}\r\n            <span>{metric}</span>\r\n          </div>\r\n        </td>\r\n        {secondaryColumns?.map((column, index) => renderMetricValue(row, column, metric, index))}\r\n        {months.map((month) => {\r\n          const getMonthNumber = (monthName: string): number => {\r\n            const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n            return months.indexOf(monthName) + 1\r\n          }\r\n          const [monthName, year] = month.split(\"-\")\r\n          const monthNum = getMonthNumber(monthName)\r\n          const monthFormat = `${year}${monthNum.toString().padStart(2, \"0\")}`\r\n\r\n          const monthData = (row[monthlyDataKey] as MonthlyData[]).find((m) => m.Month === monthFormat)\r\n          return renderMonthCell(monthData, metric)\r\n        })}\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  const totalRows = allRows.length\r\n  const totalPages = Math.ceil(totalRows / rowsPerPage)\r\n  const goToPage = (page: number) => {\r\n    const pageNumber = Math.max(1, Math.min(page, totalPages))\r\n    setCurrentPage(pageNumber)\r\n  }\r\n\r\n  const renderColumnHeader = (column: string, index: number) => {\r\n    let thresholdValue = \"\"\r\n    if (column === \"Total Sessions\") {\r\n      thresholdValue = `(avg: ${Math.round(thresholds.avgSessions).toLocaleString()})`\r\n    } else if (column === \"Avg Conv. Rate\") {\r\n      thresholdValue = `(avg: ${thresholds.avgConvRate.toFixed(2)}%)`\r\n    } else if (column === \"Total Spend\") {\r\n      thresholdValue = `(avg: ${Math.round(thresholds.avgSpend).toLocaleString()})`\r\n    } else if (column === \"Total Purchase ROAS\") {\r\n      thresholdValue = `(avg: ${thresholds.avgPurchaseROAS.toFixed(2)})`\r\n    } else if (column === \"Total Cost\") {\r\n      thresholdValue = `(avg: ${Math.round(thresholds.avgCost).toLocaleString()})`\r\n    } else if (column === \"Conv. Value / Cost\") {\r\n      thresholdValue = `(avg: ${thresholds.avgConvValuePerCost.toFixed(2)})`\r\n    }\r\n\r\n    return (\r\n      <th\r\n        key={column}\r\n        className=\"sticky top-0 min-w-[130px] w-[150px] z-20 px-3 py-3 text-left text-sm font-medium border-r border-b border-slate-300 shadow-sm\"\r\n        style={{\r\n          left: `${130 + 100 + index * 130}px`,\r\n          background: \"linear-gradient(to bottom, #F8FAFC, #F3F4F6)\",\r\n          color: COLORS.text.primary,\r\n          letterSpacing: \"-0.01em\",\r\n          borderBottom: `2px solid ${COLORS.border.dark}`,\r\n        }}\r\n      >\r\n        <div className=\"flex flex-col\">\r\n          <span>{column}</span>\r\n          {thresholdValue && (\r\n            <span className=\"text-xs font-normal mt-0.5\" style={{ color: COLORS.text.secondary }}>\r\n              {thresholdValue}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </th>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div\r\n      id=\"age-report-table\"\r\n      className=\"w-full rounded-xl overflow-hidden border border-slate-300 shadow-lg bg-white flex flex-col\"\r\n      style={{\r\n        boxShadow: \"0 4px 6px -1px rgba(0, 0, 0, 0.05), 0 2px 4px -1px rgba(0, 0, 0, 0.03)\",\r\n      }}\r\n    >\r\n      <div\r\n        className={`relative overflow-x-auto ${getTableHeight()} scrollbar-thin`}\r\n        onScroll={isFullScreen ? handleScroll : undefined}\r\n      >\r\n        <table className=\"w-full table-auto\">\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                className=\"sticky left-0 top-0 min-w-[130px] w-[150px] z-20 px-3 py-3 text-left text-sm font-medium border-r border-b border-slate-200 shadow-sm\"\r\n                style={{\r\n                  background: COLORS.background.headerGradient,\r\n                  color: COLORS.text.primary,\r\n                  letterSpacing: \"-0.01em\",\r\n                  borderBottom: `2px solid ${COLORS.border.dark}`,\r\n                }}\r\n              >\r\n                {primaryColumn}\r\n              </th>\r\n              <th\r\n                className=\"sticky left-[130px] top-0 min-w-[100px] w-[150px] z-20 px-3 py-3 text-left text-sm font-medium border-r border-b border-slate-200 shadow-sm\"\r\n                style={{\r\n                  background: COLORS.background.headerGradient,\r\n                  color: COLORS.text.primary,\r\n                  letterSpacing: \"-0.01em\",\r\n                  borderBottom: `2px solid ${COLORS.border.dark}`,\r\n                }}\r\n              >\r\n                Metric\r\n              </th>\r\n              {secondaryColumns?.map((column, index) => renderColumnHeader(column, index))}\r\n              {months.map((month) => (\r\n                <th\r\n                  key={month}\r\n                  className=\"sticky top-0 min-w-[100px] z-10 px-3 py-3 text-right text-sm font-medium whitespace-nowrap border-r border-b border-slate-200 shadow-sm\"\r\n                  style={{\r\n                    background: \"linear-gradient(to bottom, #F8FAFC, #F3F4F6)\",\r\n                    color: COLORS.text.primary,\r\n                    letterSpacing: \"-0.01em\",\r\n                    borderBottom: `2px solid ${COLORS.border.dark}`,\r\n                  }}\r\n                >\r\n                  {month}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"divide-y divide-slate-300\">\r\n            {displayRows.length > 0 ? (\r\n              displayRows.map(({ dataIndex, metricIndex }) => {\r\n                console.log(`Rendering row at index: dataIndex=${dataIndex}, metricIndex=${metricIndex}`)\r\n                if (dataIndex < data.length && metricIndex < monthlyMetrics.length) {\r\n                  return renderMetricRow(data[dataIndex], metricIndex)\r\n                }\r\n                console.warn(`Skipping invalid row: dataIndex=${dataIndex}, metricIndex=${metricIndex}`)\r\n                return null\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td\r\n                  colSpan={2 + (secondaryColumns?.length || 0) + months.length}\r\n                  className=\"p-4 text-center text-gray-500\"\r\n                >\r\n                  No data to display\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {!isFullScreen && (\r\n        <div\r\n          className=\"border-t border-slate-200 px-3 py-2.5 flex items-center justify-between\"\r\n          style={{ background: \"linear-gradient(to bottom, white, #F4F4F4)\" }}\r\n        >\r\n          <div className=\"text-sm font-medium\" style={{ color: COLORS.text.secondary }}>\r\n            Showing {(currentPage - 1) * rowsPerPage + 1}-{Math.min(currentPage * rowsPerPage, totalRows)} of{\" \"}\r\n            {totalRows} rows\r\n          </div>\r\n          <div className=\"flex gap-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n              style={{\r\n                borderColor: COLORS.border.main,\r\n                color: COLORS.primary.main,\r\n                background: \"white\",\r\n                boxShadow: \"0 1px 2px rgba(0,0,0,0.05)\",\r\n                borderRadius: \"6px\",\r\n                transition: \"all 0.15s ease\",\r\n              }}\r\n              onClick={() => goToPage(1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <ChevronsLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"h-8 w-8 p-0\"\r\n              style={{\r\n                borderColor: COLORS.border.main,\r\n                color: COLORS.primary.main,\r\n                background: \"white\",\r\n                boxShadow: \"0 1px 2px rgba(0,0,0,0.05)\",\r\n                borderRadius: \"6px\",\r\n                transition: \"all 0.15s ease\",\r\n              }}\r\n              onClick={() => goToPage(currentPage - 1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <div\r\n              className=\"flex items-center justify-center text-sm font-medium px-2\"\r\n              style={{ color: COLORS.text.primary }}\r\n            >\r\n              Page {currentPage} of {totalPages}\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"h-8 w-8 p-0\"\r\n              style={{\r\n                borderColor: COLORS.border.main,\r\n                color: COLORS.primary.main,\r\n                background: \"white\",\r\n                boxShadow: \"0 1px 2px rgba(0,0,0,0.05)\",\r\n                borderRadius: \"6px\",\r\n                transition: \"all 0.15s ease\",\r\n              }}\r\n              onClick={() => goToPage(currentPage + 1)}\r\n              disabled={currentPage === totalPages}\r\n            >\r\n              <ChevronRight className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n              style={{\r\n                borderColor: COLORS.border.main,\r\n                color: COLORS.primary.main,\r\n                background: \"white\",\r\n                boxShadow: \"0 1px 2px rgba(0,0,0,0.05)\",\r\n                borderRadius: \"6px\",\r\n                transition: \"all 0.15s ease\",\r\n              }}\r\n              onClick={() => goToPage(totalPages)}\r\n              disabled={currentPage === totalPages}\r\n            >\r\n              <ChevronsRight className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface FilterValue {\r\n  value: number;\r\n  operator: string;\r\n}\r\n\r\ninterface ConversionFiltersState {\r\n  [componentId: string]: {\r\n    [key: string]: FilterValue | null;\r\n  };\r\n}\r\n\r\nconst initialState: ConversionFiltersState = {};\r\n\r\nconst conversionFiltersSlice = createSlice({\r\n  name: 'conversionFilters',\r\n  initialState,\r\n  reducers: {\r\n    setFilter: (\r\n      state,\r\n      action: PayloadAction<{\r\n        componentId: string;\r\n        column: string;\r\n        filter: FilterValue | null;\r\n      }>\r\n    ) => {\r\n      const { componentId, column, filter } = action.payload;\r\n      \r\n      // Only create new reference if needed\r\n      if (!state[componentId]) {\r\n        state[componentId] = {};\r\n      }\r\n      \r\n      // Only update if value actually changed\r\n      if (JSON.stringify(state[componentId][column]) !== JSON.stringify(filter)) {\r\n        state[componentId][column] = filter;\r\n      }\r\n    },\r\n    \r\n    clearFilters: (state, action: PayloadAction<string>) => {\r\n      const componentId = action.payload;\r\n      // Only delete if filters exist\r\n      if (Object.keys(state[componentId] || {}).length > 0) {\r\n        state[componentId] = {};\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setFilter, clearFilters } = conversionFiltersSlice.actions;\r\nexport default conversionFiltersSlice.reducer;","import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { useState } from \"react\";\r\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\r\nimport { Filter } from \"lucide-react\";\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport { clearFilters, setFilter } from \"@/store/slices/ConversionFilterSlice\";\r\n// Define all possible filterable columns\r\nconst FILTERABLE_COLUMNS = [\r\n  \"Total Sessions\", \r\n  \"Avg Conv Rate\", \r\n  \"Total Cost\", \r\n  \"Conv. Value / Cost\"\r\n] as const;\r\n\r\ntype FilterableColumn = typeof FILTERABLE_COLUMNS[number];\r\n\r\ninterface FilterValue {\r\n  value: number;\r\n  operator: string;\r\n}\r\n\r\ninterface FilterConversionsProps {\r\n  componentId: string;\r\n  availableColumns?: readonly FilterableColumn[];\r\n}\r\n\r\nexport default function FilterConversions({ \r\n  componentId, \r\n  availableColumns = FILTERABLE_COLUMNS \r\n}: FilterConversionsProps) {\r\n  const dispatch = useDispatch();\r\n  \r\n  // Dynamic filter retrieval\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {}\r\n  );\r\n\r\n  const [selectedColumn, setSelectedColumn] = useState<FilterableColumn>(availableColumns[0]);\r\n  const [operator, setOperator] = useState<string>(\">\");\r\n  const [value, setValue] = useState<number | undefined>(undefined);\r\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\r\n\r\n  const handleAddFilter = () => {\r\n    if (value === undefined || isNaN(value)) {\r\n      alert(\"Please enter a valid value\");\r\n      return;\r\n    }\r\n\r\n    const filterValue = { value, operator };\r\n\r\n    // Dispatch a generic filter action\r\n    dispatch(setFilter({ \r\n      componentId, \r\n      column: selectedColumn, \r\n      filter: filterValue \r\n    }));\r\n\r\n    setDropdownOpen(false);\r\n  };\r\n\r\n  const handleClearFilters = () => {\r\n    dispatch(clearFilters(componentId));\r\n    setSelectedColumn(availableColumns[0]);\r\n    setOperator(\">\");\r\n    setValue(undefined);\r\n    setDropdownOpen(false);\r\n  };\r\n\r\n  // Check if any filter is applied\r\n  const isFilterApplied = Object.values(filters).some(filter => filter !== null);\r\n\r\n  // Generate tooltip text for applied filters\r\n  const filterTooltip = Object.entries(filters)\r\n    .filter(([_, filter]) => filter !== null)\r\n    .map(([column, filter]) => \r\n      `${column}: ${filter?.operator} ${filter?.value}`\r\n    )\r\n    .join(\", \");\r\n\r\n  return (\r\n    <TooltipProvider>\r\n      <Tooltip open={isFilterApplied}>\r\n        <DropdownMenu open={dropdownOpen} onOpenChange={setDropdownOpen}>\r\n          <DropdownMenuTrigger asChild>\r\n            <TooltipTrigger>\r\n              <Button variant=\"outline\" size=\"icon\">\r\n                <Filter className={`h-4 w-4 ${isFilterApplied ? 'text-blue-500' : ''}`} />\r\n              </Button>\r\n            </TooltipTrigger>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent className=\"w-80 p-4 flex flex-col gap-4\">\r\n            <Select \r\n              onValueChange={(value) => setSelectedColumn(value as FilterableColumn)} \r\n              value={selectedColumn}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select Column\" />\r\n              </SelectTrigger>\r\n              <SelectContent id=\"metric-dropdown\">\r\n                {availableColumns.map(column => (\r\n                  <SelectItem key={column} value={column}>\r\n                    {column}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n\r\n            <Select onValueChange={setOperator} value={operator}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select Operator\" />\r\n              </SelectTrigger>\r\n              <SelectContent  id=\"condition-dropdown\">\r\n                <SelectItem value=\">\">{'Greater Than ( > )'}</SelectItem>\r\n                <SelectItem value=\">=\">{'Greater Than or Equal To ( >= )'}</SelectItem>\r\n                <SelectItem value=\"<\">{'Less Than ( < )'}</SelectItem>\r\n                <SelectItem value=\"<=\">{'Less Than or Equal To ( <= )'}</SelectItem>\r\n                <SelectItem value=\"==\">{'Equal To ( == )'}</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n\r\n            <Input\r\n            id=\"value-input\"\r\n              type=\"number\"\r\n              placeholder=\"Enter Value\"\r\n              value={value === undefined ? \"\" : value}\r\n              onChange={(e) => setValue(parseFloat(e.target.value))}\r\n              className=\"w-full\"\r\n            />\r\n\r\n            <div id=\"Apply the Filter\" className=\"flex flex-row gap-2 items-center justify-center w-full\">\r\n              <Button onClick={handleAddFilter} className=\"w-full\">\r\n                Add Filter\r\n              </Button>\r\n              <Button id=\"clear-button\" variant=\"destructive\" className=\"w-full\" onClick={handleClearFilters}>\r\n                Clear\r\n              </Button>\r\n            </div>\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n\r\n        <TooltipContent>\r\n          {filterTooltip}\r\n        </TooltipContent>\r\n      </Tooltip>\r\n    </TooltipProvider>\r\n  );\r\n}\r\n\r\n// Export the types for potential use in other components\r\nexport type { FilterableColumn, FilterValue };","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { GoogleLogo } from \"@/data/logo\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport FilterConversions from \"@/pages/ConversionReportPage/components/Filter\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ntype AdAccountData = {\r\n  accountId: string;\r\n  accountName: string;\r\n  searchTerms: Array<{\r\n    \"Search Term\": string;\r\n    \"Total Cost\": number;\r\n    \"Conv. Value / Cost\": number;\r\n    \"Total Conv. Value\": number;\r\n    MonthlyData?: Array<{ Month: string; [key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n  error?: string;\r\n};\r\n\r\nexport type ApiResponse = {\r\n  reportType: string;\r\n  data: AdAccountData[];\r\n};\r\n\r\ninterface SearchtermBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst SearchTerm: React.FC<SearchtermBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const locale = useSelector((state:RootState)=>state.locale.locale)\r\n\r\n  const user = useSelector((state: RootState) => state.user.user, shallowEqual);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const componentId = 'google-ads-search-term'; // Add a unique component identifier\r\n\r\n  // Get filters from Redux\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {}, shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Cost\": \"costFilter\",\r\n          \"Conv. Value / Cost\": \"convValuePerCostFilter\",\r\n        }[column] || column;\r\n  \r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]); // Only re-compute when filters change\r\n  \r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axiosInstance.post(`/api/segment/searchTerm/${brandId}`, {\r\n        userId: user?.id,\r\n        startDate,\r\n        endDate,\r\n        ...transformedFilters, \r\n      });\r\n  \r\n      setApiResponse({\r\n        reportType: \"Search Term\",\r\n        data: response.data?.data || [],\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, user?.id, transformedFilters]);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); // Refresh every 15 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined,\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined\r\n      }));\r\n    }\r\n  }, [propDateRange, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen && propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined,\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined\r\n      }));\r\n    }\r\n  }, [isFullScreen, propDateRange, dispatch]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Search Term\";\r\n  const secondaryColumns = [\"Total Cost\", \"Conv. Value / Cost\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Cost\", \"Conv. Value/ Cost\"];\r\n\r\n  return (\r\n<>\r\n      {loading ? (\r\n      <Loader isLoading={loading}/>\r\n      ) : (\r\n        apiResponse?.data && apiResponse.data.map((account, _) => (\r\n          <div className={`${isFullScreen ? 'fixed inset-0 z-50 m-0 overflow-auto bg-white' : ''}`}>\r\n          <Card key={account.accountId} className=\"mb-4\">\r\n\r\n            <CardContent>\r\n                 \r\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n            <h3 className=\"text-lg font-semibold mb-4 mt-2 flex items-center\">\r\n                <span className=\"mr-2\"><GoogleLogo /></span> \r\n                <span className=\"\">{account.accountName}</span>\r\n              </h3>\r\n              <div className=\"flex flex-wrap items-center gap-3\">\r\n              {isFullScreen && \r\n                <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange />\r\n                </div>\r\n              }\r\n              <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <FilterConversions \r\n                componentId={componentId}\r\n                availableColumns={[\"Total Cost\", \"Conv. Value / Cost\"]}\r\n              />\r\n              <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n              </Button>\r\n            </div>\r\n            </div>\r\n              \r\n              {account.error ? (\r\n                <p className=\"text-red-500\">Error: {account.error}</p>\r\n              ) : account.searchTerms.length === 0 ? (\r\n                <p className=\"text-gray-500\">No search term data available for this account</p>\r\n              ) : (\r\n                <div className=\"rounded-md overflow-hidden\">\r\n                  <ConversionTable\r\n                    data={account.searchTerms}\r\n                    primaryColumn={primaryColumn}\r\n                    secondaryColumns={secondaryColumns}\r\n                    monthlyDataKey={monthlyDataKey}\r\n                    monthlyMetrics={monthlyMetrics}\r\n                    isFullScreen={isFullScreen}\r\n                    locale={locale}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n          </div>\r\n        ))\r\n      )}\r\n\r\n      {apiResponse?.data && apiResponse.data.length === 0 && !loading && (\r\n        <Card>\r\n          <CardContent>\r\n            <p className=\"text-gray-500 text-center py-4\">No search term data available</p>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchTerm;","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { GoogleLogo } from \"@/data/logo\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport FilterConversions from \"@/pages/ConversionReportPage/components/Filter\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ntype AdAccountData = {\r\n  accountId: string;\r\n  accountName: string;\r\n  ageRanges: Array<{\r\n    \"Age Range\": string,\r\n    \"Total Cost\": number;\r\n    \"Conv. Value / Cost\": number;\r\n    \"Total Conv. Value\": number;\r\n    MonthlyData?: Array<{ Month: string; [key: string]: any }>;\r\n\r\n    [key: string]: any;\r\n  }>;\r\n  error?: string;\r\n};\r\n\r\nexport type ApiResponse = {\r\n  reportType: string;\r\n  data: AdAccountData[];\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst Age: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const locale = useSelector((state:RootState)=>state.locale.locale)\r\n  const dispatch = useDispatch();\r\n  \r\n  \r\n  const user = useSelector((state: RootState)=>state.user.user , shallowEqual)\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const componentId = 'google-ads-age';\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Cost\": \"costFilter\",\r\n          \"Conv. Value / Cost\": \"convValuePerCostFilter\",\r\n        }[column] || column;\r\n  \r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]); // Only re-compute when filters change\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n\r\n      const response = await axiosInstance.post(`/api/segment/age/${brandId}`, {\r\n        userId: user?.id, startDate: startDate, endDate: endDate, ...transformedFilters\r\n      }, { withCredentials: true })\r\n\r\n      const fetchedData = response.data || [];\r\n\r\n      setApiResponse(fetchedData);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate,transformedFilters, user?.id]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Age Range\";\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const secondaryColumns = [\"Total Cost\", \"Conv. Value / Cost\"];\r\n  const monthlyMetrics = [\"Cost\",\"Conv. Value/ Cost\"];\r\n\r\n  return (\r\n<>\r\n      {loading ? (\r\n        <Loader isLoading={loading}/>\r\n      ) : (\r\n        apiResponse?.data && apiResponse.data.map((account, _) => (\r\n          <div className={`${isFullScreen ? 'fixed inset-0 z-50 m-0 overflow-auto bg-white' : ''}`}>\r\n          <Card key={account.accountId} className=\"mb-4\">\r\n\r\n            <CardContent>\r\n                 \r\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n            <h3 className=\"text-lg font-semibold mb-4 mt-2 flex items-center\">\r\n                <span className=\"mr-2\"><GoogleLogo /></span> \r\n                <span className=\"\">{account.accountName}</span>\r\n              </h3>\r\n              <div className=\"flex flex-wrap items-center gap-3\">\r\n              {isFullScreen && \r\n                <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange />\r\n                </div>\r\n              }\r\n              <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n                <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n              </Button>\r\n              <FilterConversions \r\n                componentId={componentId}\r\n                availableColumns={[\"Total Cost\", \"Conv. Value / Cost\"]}\r\n              />\r\n              <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n              </Button>\r\n            </div>\r\n            </div>\r\n              \r\n              {account.error ? (\r\n                <p className=\"text-red-500\">Error: {account.error}</p>\r\n              ) : account.ageRanges.length === 0 ? (\r\n                <p className=\"text-gray-500\">No Age data available for this account</p>\r\n              ) : (\r\n                <div className=\"rounded-md overflow-hidden\">\r\n                  <ConversionTable\r\n                    data={account.ageRanges}\r\n                    primaryColumn={primaryColumn}\r\n                    secondaryColumns={secondaryColumns}\r\n                    monthlyDataKey={monthlyDataKey}\r\n                    monthlyMetrics={monthlyMetrics}\r\n                    isFullScreen={isFullScreen}\r\n                    locale={locale}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n          </div>\r\n        ))\r\n      )}\r\n\r\n      {apiResponse?.data && apiResponse.data.length === 0 && !loading && (\r\n        <Card>\r\n          <CardContent>\r\n            <p className=\"text-gray-500 text-center py-4\">No Age data available</p>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Age;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { GoogleLogo } from \"@/data/logo\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport FilterConversions from \"@/pages/ConversionReportPage/components/Filter\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype AdAccountData = {\r\n  accountId: string;\r\n  accountName: string;\r\n  genders: Array<{\r\n    \"Gender\": string;\r\n    \"Total Cost\": number;\r\n    \"Conv. Value / Cost\": number;\r\n    \"Total Conv. Value\": number;\r\n    MonthlyData?: Array<{ Month: string; [key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n  error?: string;\r\n};\r\n\r\nexport type ApiResponse = {\r\n  reportType: string;\r\n  data: AdAccountData[];\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst Gender: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  \r\n  \r\n  const user = useSelector((state: RootState)=>state.user.user);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const componentId = \"google-ads-gender\";\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Cost\": \"costFilter\",\r\n          \"Conv. Value / Cost\": \"convValuePerCostFilter\",\r\n        }[column] || column;\r\n  \r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]); // Only re-compute when filters change\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n\r\n      const response = await axiosInstance.post(`/api/segment/gender/${brandId}`, {\r\n        userId: user?.id, startDate: startDate, endDate: endDate, ...transformedFilters\r\n      }, { withCredentials: true })\r\n\r\n      const fetchedData = response.data || [];\r\n\r\n      setApiResponse(fetchedData);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, transformedFilters , user?.id]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Gender\";\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const secondaryColumns = [\"Total Cost\", \"Conv. Value / Cost\"];\r\n  const monthlyMetrics = [\"Cost\",\"Conv. Value/ Cost\"];\r\n  const locale = useSelector((state:RootState)=>state.locale.locale)\r\n\r\n  return (\r\n    <>\r\n    {loading ? (\r\n      <Loader isLoading={loading}/>\r\n    ) : (\r\n      apiResponse?.data && apiResponse.data.map((account, _) => (\r\n        <div className={`${isFullScreen ? 'fixed inset-0 z-50 m-0 overflow-auto bg-white' : ''}`}>\r\n        <Card key={account.accountId} className=\"mb-4\">\r\n\r\n          <CardContent>\r\n               \r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <h3 className=\"text-lg font-semibold mb-4 mt-2 flex items-center\">\r\n              <span className=\"mr-2\"><GoogleLogo /></span> \r\n              <span className=\"\">{account.accountName}</span>\r\n            </h3>\r\n            <div className=\"flex flex-wrap items-center gap-3\">\r\n            {isFullScreen && \r\n              <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                <DatePickerWithRange />\r\n              </div>\r\n            }\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions \r\n              componentId={componentId}\r\n              availableColumns={[\"Total Cost\", \"Conv. Value / Cost\"]}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n          </div>\r\n            \r\n            {account.error ? (\r\n              <p className=\"text-red-500\">Error: {account.error}</p>\r\n            ) : account.genders.length === 0 ? (\r\n              <p className=\"text-gray-500\">No gender data available for this account</p>\r\n            ) : (\r\n              <div className=\"rounded-md overflow-hidden\">\r\n                <ConversionTable\r\n                  data={account.genders}\r\n                  primaryColumn={primaryColumn}\r\n                  secondaryColumns={secondaryColumns}\r\n                  monthlyDataKey={monthlyDataKey}\r\n                  monthlyMetrics={monthlyMetrics}\r\n                  isFullScreen={isFullScreen}\r\n                  locale={locale}\r\n                />\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n        </div>\r\n      ))\r\n    )}\r\n\r\n    {apiResponse?.data && apiResponse.data.length === 0 && !loading && (\r\n      <Card>\r\n        <CardContent>\r\n          <p className=\"text-gray-500 text-center py-4\">No gender data available</p>\r\n        </CardContent>\r\n      </Card>\r\n    )}\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Gender;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { GoogleLogo } from \"@/data/logo\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport FilterConversions from \"@/pages/ConversionReportPage/components/Filter\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ntype AdAccountData = {\r\n  accountId: string;\r\n  accountName: string;\r\n  keywords: Array<{\r\n    \"Keyword\": string;\r\n    \"Total Cost\": number;\r\n    \"Conv. Value / Cost\": number;\r\n    \"Total Conv. Value\": number;\r\n    MonthlyData?: Array<{ Month: string; [key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n  error?: string;\r\n};\r\n\r\nexport type ApiResponse = {\r\n  reportType: string;\r\n  data: AdAccountData[];\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst Keyword: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  \r\n  \r\n  const user = useSelector((state: RootState)=>state.user.user);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const componentId = \"google-ads-keyword\";\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Cost\": \"costFilter\",\r\n          \"Conv. Value / Cost\": \"convValuePerCostFilter\",\r\n        }[column] || column;\r\n  \r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]); // Only re-compute when filters change\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n\r\n      const response = await axiosInstance.post(`/api/segment/keyword/${brandId}`, {\r\n        userId: user?.id, startDate: startDate, endDate: endDate, ...transformedFilters\r\n      }, { withCredentials: true })\r\n\r\n      const fetchedData = response.data || [];\r\n\r\n      setApiResponse(fetchedData);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, transformedFilters , user?.id]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Keyword\";\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const secondaryColumns = [\"Total Cost\", \"Conv. Value / Cost\"];\r\n  const monthlyMetrics = [\"Cost\",\"Conv. Value/ Cost\"];\r\n  const locale = useSelector((state:RootState)=>state.locale.locale)\r\n\r\n  return (\r\n    <>\r\n    {loading ? (\r\n      <Loader isLoading={loading}/>\r\n    ) : (\r\n      apiResponse?.data && apiResponse.data.map((account, _) => (\r\n        <div className={`${isFullScreen ? 'fixed inset-0 z-50 m-0 overflow-auto bg-white' : ''}`}>\r\n        <Card key={account.accountId} className=\"mb-4\">\r\n\r\n          <CardContent>\r\n               \r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <h3 className=\"text-lg font-semibold mb-4 mt-2 flex items-center\">\r\n              <span className=\"mr-2\"><GoogleLogo /></span> \r\n              <span className=\"\">{account.accountName}</span>\r\n            </h3>\r\n            <div className=\"flex flex-wrap items-center gap-3\">\r\n            {isFullScreen && \r\n              <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                <DatePickerWithRange />\r\n              </div>\r\n            }\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions \r\n              componentId={componentId}\r\n              availableColumns={[\"Total Cost\", \"Conv. Value / Cost\"]}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n          </div>\r\n            \r\n            {account.error ? (\r\n              <p className=\"text-red-500\">Error: {account.error}</p>\r\n            ) : account.keywords.length === 0 ? (\r\n              <p className=\"text-gray-500\">No keyword data available for this account</p>\r\n            ) : (\r\n              <div className=\"rounded-md overflow-hidden\">\r\n                <ConversionTable\r\n                  data={account.keywords}\r\n                  primaryColumn={primaryColumn}\r\n                  secondaryColumns={secondaryColumns}\r\n                  monthlyDataKey={monthlyDataKey}\r\n                  monthlyMetrics={monthlyMetrics}\r\n                  isFullScreen={isFullScreen}\r\n                  locale={locale}\r\n                />\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n        </div>\r\n      ))\r\n    )}\r\n\r\n    {apiResponse?.data && apiResponse.data.length === 0 && !loading && (\r\n      <Card>\r\n        <CardContent>\r\n          <p className=\"text-gray-500 text-center py-4\">No keyword data available</p>\r\n        </CardContent>\r\n      </Card>\r\n    )}\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Keyword;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { GoogleLogo } from \"@/data/logo\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport FilterConversions from \"@/pages/ConversionReportPage/components/Filter\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype AdAccountData = {\r\n  accountId: string;\r\n  accountName: string;\r\n  products: Array<{\r\n    \"Product\": string;\r\n    \"Total Cost\": number;\r\n    \"Conv. Value / Cost\": number;\r\n    \"Total Conv. Value\": number;\r\n    MonthlyData?: Array<{ Month: string; [key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n  error?: string;\r\n};\r\n\r\nexport type ApiResponse = {\r\n  reportType: string;\r\n  data: AdAccountData[];\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst Product: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const [date, setDate] = useState<DateRange | undefined>(propDateRange);\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  \r\n  \r\n  const user = useSelector((state: RootState)=>state.user.user);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n\r\n      const response = await axiosInstance.post(`/api/segment/product/${brandId}`, {\r\n        userId: user?.id, startDate: startDate, endDate: endDate, \r\n      }, { withCredentials: true })\r\n\r\n      const fetchedData = response.data || [];\r\n\r\n      setApiResponse(fetchedData);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate,]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 15 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    setDate(propDateRange);\r\n  }, [propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Product\";\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const secondaryColumns = [\"Total Cost\", \"Conv. Value / Cost\"];\r\n  const monthlyMetrics = [\"Cost\",\"Conv. Value/ Cost\"];\r\n\r\n  const componentId = \"google-ads-product\";\r\n  const locale = useSelector((state:RootState)=>state.locale.locale)\r\n\r\n  return (\r\n    <>\r\n    {loading ? (\r\n     <Loader isLoading={loading}/>\r\n    ) : (\r\n      apiResponse?.data && apiResponse.data.map((account, _) => (\r\n        <div className={`${isFullScreen ? 'fixed inset-0 z-50 m-0 overflow-auto bg-white' : ''}`}>\r\n        <Card key={account.accountId} className=\"mb-4\">\r\n\r\n          <CardContent>\r\n               \r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <h3 className=\"text-lg font-semibold mb-4 mt-2 flex items-center\">\r\n              <span className=\"mr-2\"><GoogleLogo /></span> \r\n              <span className=\"\">{account.accountName}</span>\r\n            </h3>\r\n            <div className=\"flex flex-wrap items-center gap-3\">\r\n            {isFullScreen && \r\n              <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                <DatePickerWithRange />\r\n              </div>\r\n            }\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions \r\n              componentId={componentId}\r\n              availableColumns={[\"Total Cost\", \"Conv. Value / Cost\"]}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n          </div>\r\n            \r\n            {account.error ? (\r\n              <p className=\"text-red-500\">Error: {account.error}</p>\r\n            ) : account.products.length === 0 ? (\r\n              <p className=\"text-gray-500\">No product data available for this account</p>\r\n            ) : (\r\n              <div className=\"rounded-md overflow-hidden\">\r\n                <ConversionTable\r\n                  data={account.products}\r\n                  primaryColumn={primaryColumn}\r\n                  secondaryColumns={secondaryColumns}\r\n                  monthlyDataKey={monthlyDataKey}\r\n                  monthlyMetrics={monthlyMetrics}\r\n                  isFullScreen={isFullScreen}\r\n                  locale={locale}\r\n                />\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n        </div>\r\n      ))\r\n    )}\r\n\r\n    {apiResponse?.data && apiResponse.data.length === 0 && !loading && (\r\n      <Card>\r\n        <CardContent>\r\n          <p className=\"text-gray-500 text-center py-4\">No product data available</p>\r\n        </CardContent>\r\n      </Card>\r\n    )}\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useState, useRef, useMemo } from 'react';\r\nimport CollapsibleSidebar from '../Dashboard/CollapsibleSidebar';\r\nimport { SquareChartGantt } from 'lucide-react';\r\nimport SearchTerm from './components/SearchTerm';\r\nimport { CustomTabs } from '../ConversionReportPage/components/CustomTabs';\r\nimport Age from './components/Age';\r\nimport Gender from './components/Gender';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport Header from '@/components/dashboard_component/Header';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTokenError } from '@/context/TokenErrorContext';\r\nimport NoGA4AcessPage from '../ReportPage/NoGA4AccessPage.';\r\nimport ConnectPlatform from '../ReportPage/ConnectPlatformPage';\r\nimport HelpDeskModal from '@/components/dashboard_component/HelpDeskModal';\r\nimport Keyword from './components/Keyword';\r\nimport Product from './components/Product';\r\n\r\n\r\nconst GoogleAdsDashboard: React.FC = () => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const [activeTab, setActiveTab] = useState('searchterm');\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const brands = useSelector((state: RootState) => state.brand.brands);\r\n  const { brandId } = useParams<{ brandId: string }>();\r\n  const selectedBrand = brands.find((brand) => brand._id === brandId);\r\n  const hasGoogleAdAccount = selectedBrand?.googleAdAccount && selectedBrand?.googleAdAccount.length > 0 \r\n    ? true\r\n    : false;\r\n  const { tokenError } = useTokenError();\r\n\r\n\r\n  const tabs = [\r\n    { label: 'Search Term', value: 'searchterm' },\r\n    { label: 'Keyword', value: 'keyword' },\r\n    { label: 'Age', value: 'age' },\r\n    { label: 'Gender', value: 'gender' },\r\n    { label: 'Product', value: 'product' }\r\n  ];\r\n\r\n\r\n  const handleTabChange = (value: string) => {\r\n    setActiveTab(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n        {tokenError ? (\r\n          <NoGA4AcessPage />\r\n        ) : !hasGoogleAdAccount ? (\r\n          <>\r\n            <ConnectPlatform\r\n              platform=\"google ads\"\r\n              brandId={brandId ?? ''}\r\n              onSuccess={(platform, accountName, accountId) => {\r\n                console.log(`Successfully connected ${platform} account: ${accountName} (${accountId})`);\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* Header */}\r\n            <div className=\"flex-none\">\r\n              <Header showDatePicker={true} Icon={SquareChartGantt} title='Google Ads Reports' />\r\n              {/* Tabs */}\r\n              <div className=\"bg-white px-6 sticky top-0 z-10\">\r\n                <CustomTabs tabs={tabs} activeTab={activeTab} onTabChange={handleTabChange} />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Scrollable Content */}\r\n            <div ref={containerRef} className=\"flex-1 overflow-auto\">\r\n              <div className=\"px-6 py-4 space-y-6\">\r\n                {activeTab === 'searchterm' && (\r\n                  <div id=\"searchterm\">\r\n                    <SearchTerm dateRange={{\r\n                      from: date.from ? new Date(date.from) : undefined,\r\n                      to: date.to ? new Date(date.to) : undefined\r\n                    }} />\r\n                  </div>\r\n                )}\r\n                 {activeTab === 'keyword' && (\r\n                  <div id=\"keyword\">\r\n                    <Keyword dateRange={{\r\n                      from: date.from ? new Date(date.from) : undefined,\r\n                      to: date.to ? new Date(date.to) : undefined\r\n                    }} />\r\n                  </div>\r\n                )}\r\n                {activeTab === 'age' && (\r\n                  <div id=\"age\" >\r\n                    <Age dateRange={{\r\n                      from: date.from ? new Date(date.from) : undefined,\r\n                      to: date.to ? new Date(date.to) : undefined\r\n                    }} />\r\n                  </div>\r\n                )}\r\n                {activeTab === 'gender' && (\r\n                  <div id=\"gender\" >\r\n                    <Gender dateRange={{\r\n                      from: date.from ? new Date(date.from) : undefined,\r\n                      to: date.to ? new Date(date.to) : undefined\r\n                    }} />\r\n                  </div>\r\n                )}\r\n               \r\n                {activeTab === 'product' && (\r\n                  <div id=\"product\">\r\n                    <Product dateRange={{\r\n                      from: date.from ? new Date(date.from) : undefined,\r\n                      to: date.to ? new Date(date.to) : undefined\r\n                    }} />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <HelpDeskModal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleAdsDashboard;","\r\nimport React, { useMemo, useState } from 'react';\r\nimport {\r\n  Tooltip,\r\n  TooltipContent,\r\n  TooltipProvider,\r\n  TooltipTrigger,\r\n} from \"@/components/ui/tooltip\";\r\nimport { PerformanceSummaryProps, CategoryData } from '@/interfaces';\r\n\r\n\r\n\r\nconst PerformanceSummary: React.FC<PerformanceSummaryProps> = ({\r\n  data,\r\n  primaryColumn,\r\n  metricConfig\r\n}) => {\r\n  const [expandedCategory, setExpandedCategory] = useState<string | null>(null);\r\n\r\n  const thresholds = useMemo(() => {\r\n    const metrics: Record<string, number> = {\r\n      [metricConfig.primary.key]: 0,\r\n      [metricConfig.secondary.key]: 0\r\n    };\r\n    let count = 0;\r\n\r\n    data.forEach(row => {\r\n      const primaryMetric = row[metricConfig.primary.key];\r\n      const secondaryMetric = row[metricConfig.secondary.key];\r\n\r\n      if (\r\n        typeof primaryMetric === 'number' &&\r\n        typeof secondaryMetric === 'number'\r\n      ) {\r\n        metrics[metricConfig.primary.key] += Number(primaryMetric);\r\n        metrics[metricConfig.secondary.key] += Number(secondaryMetric);\r\n        count++;\r\n      }\r\n    });\r\n\r\n    return {\r\n      [metricConfig.primary.key]: metrics[metricConfig.primary.key] / count,\r\n      [metricConfig.secondary.key]: metrics[metricConfig.secondary.key] / count\r\n    };\r\n  }, [data, metricConfig]);\r\n\r\n  const categories: CategoryData[] = useMemo(() => {\r\n    const categorizedItems: Record<string, (string | number)[]> = {\r\n      'Top Performers': [],\r\n      [`High ${metricConfig.primary.name}`]: [],\r\n      [`High ${metricConfig.secondary.name}`]: [],\r\n      'Underperformers': []\r\n    };\r\n\r\n    data.forEach(row => {\r\n      const primaryMetric = Number(row[metricConfig.primary.key]);\r\n      const secondaryMetric = Number(row[metricConfig.secondary.key]);\r\n      const primaryValue = String(row[primaryColumn]);\r\n\r\n      const isHighPrimary = primaryMetric >= thresholds[metricConfig.primary.key];\r\n      const isHighSecondary = secondaryMetric >= thresholds[metricConfig.secondary.key];\r\n\r\n      if (isHighPrimary && isHighSecondary) {\r\n        categorizedItems['Top Performers'].push(primaryValue);\r\n      } else if (isHighPrimary && !isHighSecondary) {\r\n        categorizedItems[`High ${metricConfig.primary.name}`].push(primaryValue);\r\n      } else if (!isHighPrimary && isHighSecondary) {\r\n        categorizedItems[`High ${metricConfig.secondary.name}`].push(primaryValue);\r\n      } else {\r\n        categorizedItems['Underperformers'].push(primaryValue);\r\n      }\r\n    });\r\n\r\n    return [\r\n      {\r\n        name: 'Top Performers',\r\n        color: 'text-green-700',\r\n        bgColor: 'bg-[#D7FFDF]',\r\n        count: categorizedItems['Top Performers'].length,\r\n        items: categorizedItems['Top Performers'],\r\n        description: `Above average in both ${metricConfig.primary.name} (>${thresholds[metricConfig.primary.key].toFixed(2)}) and ${metricConfig.secondary.name} (>${thresholds[metricConfig.secondary.key].toFixed(2)})`\r\n      },\r\n      {\r\n        name: `High ${metricConfig.primary.name}`,\r\n        color: 'text-blue-700',\r\n        bgColor: 'bg-[#EFF6FF]',\r\n        count: categorizedItems[`High ${metricConfig.primary.name}`].length,\r\n        items: categorizedItems[`High ${metricConfig.primary.name}`],\r\n        description: `High ${metricConfig.primary.name} (>${thresholds[metricConfig.primary.key].toFixed(2)}) but below average ${metricConfig.secondary.name} (<${thresholds[metricConfig.secondary.key].toFixed(2)})`\r\n      },\r\n      {\r\n        name: `High ${metricConfig.secondary.name}`,\r\n        color: 'text-yellow-700',\r\n        bgColor: 'bg-[#FFFBEB]',\r\n        count: categorizedItems[`High ${metricConfig.secondary.name}`].length,\r\n        items: categorizedItems[`High ${metricConfig.secondary.name}`],\r\n        description: `High ${metricConfig.secondary.name} (>${thresholds[metricConfig.secondary.key].toFixed(2)}) but below average ${metricConfig.primary.name} (<${thresholds[metricConfig.primary.key].toFixed(2)})`\r\n      },\r\n      {\r\n        name: 'Underperformers',\r\n        color: 'text-red-700',\r\n        bgColor: 'bg-[#FFF1F2]',\r\n        count: categorizedItems['Underperformers'].length,\r\n        items: categorizedItems['Underperformers'],\r\n        description: `Below average in both ${metricConfig.primary.name} (<${thresholds[metricConfig.primary.key].toFixed(2)}) and ${metricConfig.secondary.name} (<${thresholds[metricConfig.secondary.key].toFixed(2)})`\r\n      }\r\n    ];\r\n  }, [data, thresholds, primaryColumn, metricConfig]);\r\n\r\n  return (\r\n    <TooltipProvider>\r\n      <div id=\"age-report-performance\" className=\"space-y-4 py-2.5\">\r\n        <div className=\"border border-gray-300 rounded-lg overflow-hidden\">\r\n          <div className=\"flex items-stretch h-9\">\r\n            {categories.map((category) => (\r\n              <Tooltip key={category.name}>\r\n                <TooltipTrigger asChild>\r\n                  <div\r\n                    className={`relative flex-grow ${category.bgColor} border-r last:border-r-0 border-gray-300 cursor-pointer transition-all duration-300 ease-in-out hover:opacity-90`}\r\n                    onClick={() => setExpandedCategory(expandedCategory === category.name ? null : category.name)}\r\n                  >\r\n                    <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                      <span className={`text-xs font-medium ${category.color} ${expandedCategory === category.name ? 'underline' : ''}`}>\r\n                        {category.name} ({category.count})\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent className=\"max-w-xs p-4 bg-gray-900 text-white border-0 shadow-lg\">\r\n                  <div>\r\n                    \r\n                    {/* Category name and larger color sample */}\r\n                    <div  className=\"flex items-center gap-3 mb-3\">\r\n                      <div className={`w-8 h-8 rounded-lg ${category.bgColor} border border-white/20 flex items-center justify-center`}>\r\n                        <div className={`w-4 h-4 rounded-md ${category.color.replace('text-', 'bg-')}`} />\r\n                      </div>\r\n                      <p className=\"font-medium text-lg text-white\">\r\n                        {category.name}\r\n                      </p>\r\n                    </div>\r\n\r\n                    {/* Description */}\r\n                    <p className=\"text-sm text-gray-200\">{category.description}</p>\r\n                  </div>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            ))}\r\n          </div>\r\n          {expandedCategory && (\r\n            <div className=\"p-4 bg-white border-t border-gray-200\">\r\n              <h3 className={`text-lg font-semibold mb-2 flex items-center gap-2 ${categories.find(c => c.name === expandedCategory)?.color}`}>\r\n                {expandedCategory}\r\n                <span className={`w-3 h-3 rounded-lg ${categories.find(c => c.name === expandedCategory)?.bgColor} border border-gray-200`} />\r\n              </h3>\r\n              <ul className=\"grid grid-cols-4 list-disc pl-5 max-h-40 overflow-y-auto gap-4\">\r\n                {categories.find(c => c.name === expandedCategory)?.items.map((item, index) => (\r\n                  <li key={index} className=\"text-sm mb-1 break-words w-full\">\r\n                    {item}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </TooltipProvider>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default PerformanceSummary;","export const privacyPolicySections = [\r\n  {\r\n    title: \"1. Introduction\",\r\n    content: [\r\n      \"Welcome to Messold (\\\"we,\\\" \\\"our,\\\" or \\\"us\\\"). Your privacy is important to us. This Privacy Policy explains how we collect, use, share, and protect your information when you use our Parallels application.\"\r\n    ]\r\n  },\r\n  {\r\n    title: \"2. Information We Collect\",\r\n    content: [\r\n      \"Our application accesses and processes the following user data from Google and Meta:\",\r\n      [\r\n        \"Google Ads Data: We access advertising campaign performance and spend data.\",\r\n        \"Google Analytics Data: We access read-only analytics data and may edit settings.\",\r\n        \"Meta Ads Data: We access ad account data, campaign insights, and interest-based targeting information.\",\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    title: \"3. How We Use Google and Meta User Data\",\r\n    content: [\r\n      [\r\n        \"To provide analytics and advertising insights.\",\r\n        \"To display relevant reports and campaign performance data.\",\r\n        \"To personalize the user experience.\",\r\n        \"To enhance and improve our services through data analysis.\"\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    title: \"4. Data Sharing & Disclosure\",\r\n    content: [\r\n      \"We do not sell, rent, or trade your personal information. However, we may share your data:\",\r\n      [\r\n        \"With authorized service providers assisting in hosting, analytics, or customer support.\",\r\n        \"For legal compliance if required by law.\",\r\n        \"With your consent.\"\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    title: \"5. Data Retention & Deletion\",\r\n    content: [\r\n      \"Users can request:\",\r\n      [\r\n        \"Deletion of their data by contacting us at info@messold.com.\",\r\n        \"Access to stored data via email.\",\r\n        \"Revocation of Meta data access via Facebook's security settings.\"\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    title: \"6. Data Security\",\r\n    content: [\r\n      \"We take appropriate security measures including encryption, access control, and regular security audits.\"\r\n    ]\r\n  },\r\n  {\r\n    title: \"7. User Rights & Control\",\r\n    content: [\r\n      \"You have the right to:\",\r\n      [\r\n        \"Revoke our application's access via Google Security Settings.\",\r\n        \"Revoke our application's access via Meta App Settings.\",\r\n        \"Request access, correction, or deletion of your data.\",\r\n        \"Opt-out of non-essential data collection.\"\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    title: \"8. Compliance with Google API Services Policy & Meta Platform Terms\",\r\n    content: [\r\n      \"We comply with the Google API Services User Data Policy, including the Limited Use requirements.\",\r\n      \"We comply with Meta's Platform Terms and ensure that we process Platform Data only as described in this policy and in accordance with applicable laws.\"\r\n    ]\r\n  },\r\n  {\r\n    title: \"9. GDPR/CCPA Compliance\",\r\n    content: [\r\n      \"Residents of the EEA or California have additional rights, including:\",\r\n      [\r\n        \"The right to access, correct, or delete your data.\",\r\n        \"The right to data portability.\",\r\n        \"The right to restrict or object to data processing.\"\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    title: \"10. Updates to This Privacy Policy\",\r\n    content: [\r\n      \"We may update this Privacy Policy periodically. Any significant changes will be communicated via email or within the application.\"\r\n    ]\r\n  },\r\n  {\r\n    title: \"11. Contact Us\",\r\n    content: [\r\n      \"If you have any questions, contact us at:\",\r\n      \"Email: info@messold.com\"\r\n    ]\r\n  }\r\n];\r\n\r\nexport const metricConfigs = {\r\n    sessionsAndConversion: {\r\n      primary: {\r\n        key: 'Total Sessions',\r\n        name: 'Sessions'\r\n      },\r\n      secondary: {\r\n        key: 'Avg Conv. Rate',\r\n        name: 'Conversion'\r\n      }\r\n    },\r\n    spendAndRoas: {\r\n      primary: {\r\n        key: 'Total Spend',\r\n        name: 'Spend'\r\n      },\r\n      secondary: {\r\n        key: 'Total Purchase ROAS',\r\n        name: 'Purchase ROAS'\r\n      }\r\n    }\r\n  };","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\r\nimport { Settings } from \"lucide-react\";\r\nimport { setLocale } from \"@/store/slices/LocalSlice\";\r\nimport { RootState } from \"@/store\";\r\n\r\ninterface NumberFormatSelectorProps {\r\n  size?: \"icon\" | \"default\" | \"sm\" | \"lg\";\r\n  variant?: \"outline\" | \"link\" | \"default\" | \"destructive\" | \"secondary\" | \"ghost\";\r\n  iconSize?: string;\r\n  className?: string;\r\n}\r\n\r\nconst NumberFormatSelector = ({ \r\n  size = \"icon\", \r\n  variant = \"outline\",\r\n  iconSize = \"h-4 w-4\",\r\n  className = \"\"\r\n}: NumberFormatSelectorProps) => {\r\n  const dispatch = useDispatch();\r\n  const locale = useSelector((state: RootState) => state.locale.locale);\r\n\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <Button \r\n          variant={variant as \"outline\" | \"link\" | \"default\" | \"destructive\" | \"secondary\" | \"ghost\"} \r\n          size={size as \"icon\" | \"default\" | \"sm\" | \"lg\"} \r\n          className={className}\r\n        >\r\n          <Settings className={iconSize} />\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-56\">\r\n        <div className=\"grid gap-3\">\r\n          <h3 className=\"font-medium text-sm\">Number Format Preferences</h3>\r\n          <div className=\"flex flex-col space-y-2\">\r\n            <label className=\"flex items-center space-x-2 cursor-pointer text-sm\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"locale\"\r\n                value=\"en-IN\"\r\n                checked={locale === \"en-IN\"}\r\n                onChange={() => dispatch(setLocale(\"en-IN\"))}\r\n                className=\"form-radio\"\r\n              />\r\n              <span>Indian</span>\r\n            </label>\r\n            <label className=\"flex items-center space-x-2 cursor-pointer text-sm\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"locale\"\r\n                value=\"en-US\"\r\n                checked={locale === \"en-US\"}\r\n                onChange={() => dispatch(setLocale(\"en-US\"))}\r\n                className=\"form-radio\"\r\n              />\r\n              <span>International</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default NumberFormatSelector;","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/data/logo\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { RootState } from \"@/store\";\r\nimport PerformanceSummary from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        audienceData: Array<{\r\n            \"Audience Segments\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\":number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedAudienceData: Array<{\r\n        \"Audience Segments\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst AudienceFbReport : React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const user = useSelector((state : RootState) =>state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId:string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/meta/report/audience/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n      \r\n      useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [fullScreenAccount, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    const blendedAudienceData = apiResponse?.blendedAudienceData;\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Audience Segments\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n    const locale = useSelector((state:RootState) => state.locale.locale)\r\n\r\n  \r\n    if(loading){\r\n        return <Loader isLoading={loading}/>\r\n    }\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Audience Segments Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    {(blendedAudienceData && blendedAudienceData.length > 0)&&(\r\n                         <Card\r\n   \r\n                         className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                     >\r\n                         <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                             <div className=\"flex items-center justify-between\">\r\n                                 <div className=\"flex items-center gap-2\">\r\n                                     <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                     <div className=\"text-lg font-medium\">\r\n                                         Blended Summary\r\n                                     </div>\r\n                                 </div>\r\n                                 <div className=\"flex items-center space-x-2\">\r\n                                     {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                         <DatePickerWithRange\r\n                                             \r\n                                         />\r\n                                     </div>}\r\n                                     <NumberFormatSelector />\r\n                                     <Button\r\n                                         onClick={handleManualRefresh}\r\n                                         disabled={loading}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                     </Button>\r\n                                     <Button\r\n                                         onClick={() => toggleFullScreen('blended-summary')}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         {fullScreenAccount === 'blended-summary' ? (\r\n                                             <Minimize className=\"h-4 w-4\" />\r\n                                         ) : (\r\n                                             <Maximize className=\"h-4 w-4\" />\r\n                                         )}\r\n                                     </Button>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                         <CardContent className=\"p-0\">\r\n                             <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                             <PerformanceSummary\r\n                                        data={blendedAudienceData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                 <ConversionTable\r\n                                     data={Array.isArray(blendedAudienceData) ? blendedAudienceData : [blendedAudienceData]}\r\n                                     primaryColumn={primaryColumn}\r\n                                     secondaryColumns={secondaryColumns}\r\n                                     monthlyDataKey={monthlyDataKey}\r\n                                     monthlyMetrics={monthlyMetrics}\r\n                                     isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                     locale={locale}\r\n                                 />\r\n                             </div>\r\n                         </CardContent>\r\n                     </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                    {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n                                               \r\n                                            />\r\n                                        </div>}\r\n                                        <NumberFormatSelector />\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                <PerformanceSummary\r\n                                        data={account.audienceData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={account.audienceData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                       locale={locale}\r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\nexport default AudienceFbReport;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent} from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/data/logo\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport PerformanceSummary from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        placementData: Array<{\r\n            \"Placements\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\": number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedPlacementData: Array<{\r\n        \"Placements\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst PlacementFbReport: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state : RootState) =>state.date.from)\r\n    const dateTo = useSelector((state : RootState)=>state.date.to)\r\n    const date = useMemo(() => ({\r\n        from: dateFrom,\r\n        to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n\r\n\r\n    const user = useSelector((state : RootState)=>state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId: string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/meta/report/placement/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n      \r\n      useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [fullScreenAccount, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    const blendedPlacementData = apiResponse?.blendedPlacementData;    \r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Placements\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n    const locale = useSelector((state:RootState) => state.locale.locale)\r\n\r\n   \r\n    if(loading){\r\n        return <Loader isLoading={loading}/>\r\n    }\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Placements Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    {(blendedPlacementData && blendedPlacementData.length > 0)&&(\r\n                         <Card\r\n                         className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                     >\r\n                         <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                             <div className=\"flex items-center justify-between\">\r\n                                 <div className=\"flex items-center gap-2\">\r\n                                     <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                     <div className=\"text-lg font-medium\">\r\n                                         Blended Summary\r\n                                     </div>\r\n                                 </div>\r\n                                 <div className=\"flex items-center space-x-2\">\r\n                                     {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                         <DatePickerWithRange\r\n                                             \r\n                                         />\r\n                                     </div>}\r\n                                     <NumberFormatSelector />\r\n                                     <Button\r\n                                         onClick={handleManualRefresh}\r\n                                         disabled={loading}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                     </Button>\r\n                                     <Button\r\n                                         onClick={() => toggleFullScreen('blended-summary')}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         {fullScreenAccount === 'blended-summary' ? (\r\n                                             <Minimize className=\"h-4 w-4\" />\r\n                                         ) : (\r\n                                             <Maximize className=\"h-4 w-4\" />\r\n                                         )}\r\n                                     </Button>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                         <CardContent className=\"p-0\">\r\n                             <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                             <PerformanceSummary\r\n                                        data={blendedPlacementData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                 <ConversionTable\r\n                                     data={Array.isArray(blendedPlacementData) ? blendedPlacementData : [blendedPlacementData]}\r\n                                     primaryColumn={primaryColumn}\r\n                                     secondaryColumns={secondaryColumns}\r\n                                     monthlyDataKey={monthlyDataKey}\r\n                                     monthlyMetrics={monthlyMetrics}\r\n                                     isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                     locale={locale}\r\n                                 />\r\n                             </div>\r\n                         </CardContent>\r\n                     </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n                                               \r\n                                            />\r\n                                        </div>}\r\n                                        <NumberFormatSelector />\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                <PerformanceSummary\r\n                                        data={account.placementData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={account.placementData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                        locale={locale}\r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\nexport default PlacementFbReport;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent} from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/data/logo\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport PerformanceSummary from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        platformData: Array<{\r\n            \"Platforms\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\":number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedPlatformData: Array<{\r\n        \"Platforms\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst PlatformFbReport : React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n        from: dateFrom,\r\n        to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const user  = useSelector((state : RootState)=>state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId:string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n    const locale = useSelector((state:RootState) => state.locale.locale)\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/meta/report/platform/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n      \r\n      useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [fullScreenAccount, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    const blendedPlatformData = apiResponse?.blendedPlatformData;\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Platforms\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n\r\n   \r\n    if(loading){\r\n        return <Loader isLoading={loading}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Platform Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                     {(blendedPlatformData && blendedPlatformData.length > 0)&&(\r\n                         <Card\r\n                         className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                     >\r\n                         <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                             <div className=\"flex items-center justify-between\">\r\n                                 <div className=\"flex items-center gap-2\">\r\n                                     <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                     <div className=\"text-lg font-medium\">\r\n                                         Blended Summary\r\n                                     </div>\r\n                                 </div>\r\n                                 <div className=\"flex items-center space-x-2\">\r\n                                     {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                         <DatePickerWithRange\r\n                                             \r\n                                         />\r\n                                     </div>}\r\n                                     <NumberFormatSelector />\r\n                                     <Button\r\n                                         onClick={handleManualRefresh}\r\n                                         disabled={loading}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                     </Button>\r\n                                     <Button\r\n                                         onClick={() => toggleFullScreen('blended-summary')}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         {fullScreenAccount === 'blended-summary' ? (\r\n                                             <Minimize className=\"h-4 w-4\" />\r\n                                         ) : (\r\n                                             <Maximize className=\"h-4 w-4\" />\r\n                                         )}\r\n                                     </Button>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                         <CardContent className=\"p-0\">\r\n                             <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                             <PerformanceSummary\r\n                                        data={blendedPlatformData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                 <ConversionTable\r\n                                     data={Array.isArray(blendedPlatformData) ? blendedPlatformData : [blendedPlatformData]}\r\n                                     primaryColumn={primaryColumn}\r\n                                     secondaryColumns={secondaryColumns}\r\n                                     monthlyDataKey={monthlyDataKey}\r\n                                     monthlyMetrics={monthlyMetrics}\r\n                                     isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                     locale={locale}\r\n                                 />\r\n                             </div>\r\n                         </CardContent>\r\n                     </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md px-3 pt-2\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                    {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n                                                \r\n                                            />\r\n                                        </div>}\r\n                                        <NumberFormatSelector />\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                     <PerformanceSummary\r\n                                        data={account.platformData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    /> \r\n                                    <ConversionTable\r\n                                        data={account.platformData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                        locale={locale}\r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\nexport default PlatformFbReport;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent} from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/data/logo\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport PerformanceSummary from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        countryData: Array<{\r\n            \"Country\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\":number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedCountryData: Array<{\r\n        \"Country\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst CountryFbReport : React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n\r\n\r\n    const user = useSelector((state : RootState) => state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId:string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/meta/report/country/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n      \r\n      useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [fullScreenAccount, propDateRange]);\r\n\r\n    const blendedCountryData = apiResponse?.blendedCountryData;\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Country\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n    const locale = useSelector((state:RootState) => state.locale.locale)\r\n\r\n   \r\n    if(loading){\r\n        return <Loader isLoading={loading}/>\r\n    }\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Country Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    {(blendedCountryData && blendedCountryData.length > 0)&&(\r\n                         <Card\r\n   \r\n                         className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                     >\r\n                         <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                             <div className=\"flex items-center justify-between\">\r\n                                 <div className=\"flex items-center gap-2\">\r\n                                     <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                     <div className=\"text-lg font-medium\">\r\n                                         Blended Summary\r\n                                     </div>\r\n                                 </div>\r\n                                 <div className=\"flex items-center space-x-2\">\r\n                                     {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                         <DatePickerWithRange\r\n                                             \r\n                                         />\r\n                                     </div>}\r\n                                     <NumberFormatSelector />\r\n                                     <Button\r\n                                         onClick={handleManualRefresh}\r\n                                         disabled={loading}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                     </Button>\r\n                                     <Button\r\n                                         onClick={() => toggleFullScreen('blended-summary')}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         {fullScreenAccount === 'blended-summary' ? (\r\n                                             <Minimize className=\"h-4 w-4\" />\r\n                                         ) : (\r\n                                             <Maximize className=\"h-4 w-4\" />\r\n                                         )}\r\n                                     </Button>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                         <CardContent className=\"p-0\">\r\n                             <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                             <PerformanceSummary\r\n                                        data={blendedCountryData|| []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                 <ConversionTable\r\n                                     data={Array.isArray(blendedCountryData) ? blendedCountryData : [blendedCountryData]}\r\n                                     primaryColumn={primaryColumn}\r\n                                     secondaryColumns={secondaryColumns}\r\n                                     monthlyDataKey={monthlyDataKey}\r\n                                     monthlyMetrics={monthlyMetrics}\r\n                                     isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                     locale={locale}\r\n                                 />\r\n                             </div>\r\n                         </CardContent>\r\n                     </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                    {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n                                               \r\n                                            />\r\n                                        </div>}\r\n                                        <NumberFormatSelector />\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                     <PerformanceSummary\r\n                                        data={account.countryData|| []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={account.countryData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                        locale={locale}\r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\nexport default CountryFbReport;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/data/logo\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport PerformanceSummary from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        deviceData: Array<{\r\n            \"Device\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\":number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedDeviceData: Array<{\r\n        \"Device\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst DeviceFbReport : React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateForm = useSelector((state : RootState)=> state.date.from)\r\n    const dateTo = useSelector((state : RootState)=> state.date.to)\r\n    const date = useMemo(() => ({\r\n        from: dateForm,\r\n        to: dateTo\r\n    }), [dateForm, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n    const user  = useSelector((state :RootState) =>state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId:string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/meta/report/device/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n      \r\n      useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [fullScreenAccount, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    const blendedDeviceData = apiResponse?.blendedDeviceData\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Device\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n    const locale = useSelector((state:RootState)=>state.locale.locale)\r\n\r\n   \r\n    if(loading){\r\n        return <Loader isLoading={loading}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Device Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    {(blendedDeviceData && blendedDeviceData.length > 0)&&(\r\n                         <Card\r\n   \r\n                         className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                     >\r\n                         <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                             <div className=\"flex items-center justify-between\">\r\n                                 <div className=\"flex items-center gap-2\">\r\n                                     <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                     <div className=\"text-lg font-medium\">\r\n                                         Blended Summary\r\n                                     </div>\r\n                                 </div>\r\n                                 <div className=\"flex items-center space-x-2\">\r\n                                     {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                         <DatePickerWithRange\r\n                                             \r\n                                         />\r\n                                     </div>}\r\n                                     <NumberFormatSelector />\r\n                                     <Button\r\n                                         onClick={handleManualRefresh}\r\n                                         disabled={loading}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                     </Button>\r\n                                     <Button\r\n                                         onClick={() => toggleFullScreen('blended-summary')}\r\n                                         size=\"sm\"\r\n                                         variant=\"outline\"\r\n                                         className=\"hover:bg-muted\"\r\n                                     >\r\n                                         {fullScreenAccount === 'blended-summary' ? (\r\n                                             <Minimize className=\"h-4 w-4\" />\r\n                                         ) : (\r\n                                             <Maximize className=\"h-4 w-4\" />\r\n                                         )}\r\n                                     </Button>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                         <CardContent className=\"p-0\">\r\n                             <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                             <PerformanceSummary\r\n                                        data={blendedDeviceData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                 <ConversionTable\r\n                                     data={Array.isArray(blendedDeviceData) ? blendedDeviceData : [blendedDeviceData]}\r\n                                     primaryColumn={primaryColumn}\r\n                                     secondaryColumns={secondaryColumns}\r\n                                     monthlyDataKey={monthlyDataKey}\r\n                                     monthlyMetrics={monthlyMetrics}\r\n                                     isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                     locale={locale}\r\n                                 />\r\n                             </div>\r\n                         </CardContent>\r\n                     </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                    {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange />\r\n                                        </div>}\r\n                                        <NumberFormatSelector />\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                     <PerformanceSummary\r\n                                        data={account.deviceData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={account.deviceData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                        locale={locale}\r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\nexport default DeviceFbReport;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw} from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/data/logo\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport PerformanceSummary from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        genderData: Array<{\r\n            \"Gender\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\": number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedGenderData: Array<{\r\n        \"Gender\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst GenderFbReport: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateForm = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n        from: dateForm,\r\n        to: dateTo\r\n    }), [dateForm, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n\r\n\r\n    const user = useSelector((state: RootState) => state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId: string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/meta/report/gender/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n            dispatch(setDate({\r\n                from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n                to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n            }));\r\n        }\r\n    }, [propDateRange]);\r\n\r\n    useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n            if (propDateRange) {\r\n                dispatch(setDate({\r\n                    from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n                    to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n                }));\r\n            }\r\n        }\r\n    }, [fullScreenAccount, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    const blendedGenderData = apiResponse?.blendedGenderData;\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Gender\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n    const locale = useSelector((state: RootState) => state.locale.locale)\r\n\r\n    \r\n    if(loading){\r\n        return <Loader isLoading={loading}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Gender Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    {(blendedGenderData && blendedGenderData.length > 0) && (\r\n                        <Card\r\n\r\n                            className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md px-3 pt-2\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            Blended Summary\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n\r\n                                            />\r\n                                        </div>}\r\n                                        <NumberFormatSelector />\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen('blended-summary')}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === 'blended-summary' ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                    <PerformanceSummary\r\n                                        data={blendedGenderData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={Array.isArray(blendedGenderData) ? blendedGenderData : [blendedGenderData]}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                        locale={locale}\r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n\r\n                                            />\r\n                                        </div>}\r\n                                     <NumberFormatSelector />\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                    <PerformanceSummary\r\n                                        data={account.genderData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={account.genderData}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                        isAdsTable={true}\r\n                                        locale={locale}\r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\nexport default GenderFbReport;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"@/pages/ConversionReportPage/components/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent} from '@/components/ui/card';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { FacebookLogo } from \"@/data/logo\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport PerformanceSummary from \"@/pages/ConversionReportPage/components/PerformanceSummary\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype ApiResponse = {\r\n    data: Array<{\r\n        account_name: string;\r\n        ageData: Array<{\r\n            \"Age\": string;\r\n            \"Total Spend\": number;\r\n            \"Total Purchase ROAS\": number;\r\n            \"Total PCV\": number;\r\n            MonthlyData?: Array<{\r\n                Month: string;\r\n                spend: number;\r\n                purchase_roas: number;\r\n                purchase_conversion_value: number;\r\n            }>;\r\n        }>;\r\n    }>,\r\n    blendedAgeData: Array<{\r\n        \"Age\": string;\r\n        \"Total Spend\": number;\r\n        \"Total Purchase ROAS\": number;\r\n        \"Total PCV\": number;\r\n        MonthlyData?: Array<{\r\n            Month: string;\r\n            spend: number;\r\n            purchase_roas: number;\r\n            purchase_conversion_value: number;\r\n        }>;\r\n    }>\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst AgeFbReport: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n        from: dateFrom,\r\n        to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [fullScreenAccount, setFullScreenAccount] = useState('');\r\n    const dispatch = useDispatch();\r\n    const locale = useSelector((state : RootState)=>state.locale.locale);\r\n\r\n    const user = useSelector((state: RootState) => state.user.user);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = (accountId: string) => {\r\n        setFullScreenAccount(fullScreenAccount === accountId ? '' : accountId);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            const response = await axiosInstance.post(`/api/meta/report/age/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate,\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate,]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n            dispatch(setDate({\r\n                from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n                to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n            }));\r\n        }\r\n    }, [propDateRange]);\r\n\r\n    useEffect(() => {\r\n        if (!fullScreenAccount) {\r\n            if (propDateRange) {\r\n                dispatch(setDate({\r\n                    from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n                    to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n                }));\r\n            }\r\n        }\r\n    }, [fullScreenAccount, propDateRange]);\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Age\";\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const secondaryColumns = [\"Total Spend\", \"Total Purchase ROAS\"];\r\n    const monthlyMetrics = [\"Spend\", \"Purchase ROAS\"];\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n    const blendedAgeData = apiResponse?.blendedAgeData;\r\n\r\n    if(loading){\r\n        return <Loader isLoading={loading}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Dashboard Header */}\r\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <FacebookLogo />\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold tracking-tight\">Age Insights</h2>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    {(blendedAgeData && blendedAgeData.length > 0) && (\r\n                        <Card\r\n\r\n                            className={`${fullScreenAccount === 'blended-summary' ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md pt-2 px-3\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            Blended Summary\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n\r\n                                            />\r\n                                        </div>}\r\n                                        <NumberFormatSelector />\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen('blended-summary')}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === 'blended-summary' ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                    <PerformanceSummary\r\n                                        data={blendedAgeData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={Array.isArray(blendedAgeData) ? blendedAgeData : [blendedAgeData]}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === 'blended-summary'}\r\n                                        locale={locale}\r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    )}\r\n                    {apiResponse?.data.map((account, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            className={`${fullScreenAccount === account.account_name ? 'fixed inset-0 z-50 m-0 bg-background p-2 overflow-auto' : 'rounded-md'}`}\r\n                        >\r\n                            <div className=\"bg-white rounded-md px-3 pt-2\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <div className=\"h-2 w-2 bg-blue-500 rounded-full\" />\r\n                                        <div className=\"text-lg font-medium\">\r\n                                            {account.account_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        {fullScreenAccount && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                                            <DatePickerWithRange\r\n\r\n                                            />\r\n                                        </div>}\r\n                                        <NumberFormatSelector />\r\n                                        <Button\r\n                                            onClick={handleManualRefresh}\r\n                                            disabled={loading}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => toggleFullScreen(account.account_name)}\r\n                                            size=\"sm\"\r\n                                            variant=\"outline\"\r\n                                            className=\"hover:bg-muted\"\r\n                                        >\r\n                                            {fullScreenAccount === account.account_name ? (\r\n                                                <Minimize className=\"h-4 w-4\" />\r\n                                            ) : (\r\n                                                <Maximize className=\"h-4 w-4\" />\r\n                                            )}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"rounded-b-lg overflow-hidden px-2.5 pb-2.5\">\r\n                                    <PerformanceSummary\r\n                                        data={account.ageData || []}\r\n                                        primaryColumn={primaryColumn}\r\n                                        metricConfig={metricConfigs.spendAndRoas || {}}\r\n                                    />\r\n                                    <ConversionTable\r\n                                        data={Array.isArray(account.ageData) ? account.ageData : [account.ageData]}\r\n                                        primaryColumn={primaryColumn}\r\n                                        secondaryColumns={secondaryColumns}\r\n                                        monthlyDataKey={monthlyDataKey}\r\n                                        monthlyMetrics={monthlyMetrics}\r\n                                        isFullScreen={fullScreenAccount === account.account_name}\r\n                                        locale={locale}\r\n                                    />\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\nexport default AgeFbReport;\r\n","import React, { useMemo, useState } from 'react';\r\nimport { FaMeta } from \"react-icons/fa6\";\r\nimport AudienceFbReport from './component/AudienceFbReport';\r\nimport PlacementFbReport from './component/PlacementFbReport';\r\nimport PlatformFbReport from './component/PlatformFbReport';\r\nimport CountryFbReport from './component/CountryFbReport';\r\nimport DeviceFbReport from './component/DeviceFbReport';\r\nimport GenderFbReport from './component/GenderFbReport';\r\nimport AgeFbReport from './component/AgeFbReport';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport Header from '@/components/dashboard_component/Header';\r\nimport HelpDeskModal from '@/components/dashboard_component/HelpDeskModal';\r\nimport CollapsibleSidebar from '@/pages/Dashboard/CollapsibleSidebar';\r\nimport { CustomTabs } from '@/pages/ConversionReportPage/components/CustomTabs';\r\nimport MissingDateWarning from '@/components/dashboard_component/Missing-Date-Waning';\r\n\r\n\r\n\r\n\r\n\r\nconst FbReportPage: React.FC = () => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n        from: dateFrom,\r\n        to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const [activeTab, setActiveTab] = useState('age');\r\n\r\n    const dateRange = {\r\n        from: date.from ? new Date(date.from) : undefined,\r\n        to: date.to ? new Date(date.to) : undefined\r\n    }\r\n\r\n    const tabs = [\r\n        { label: 'Age', value: 'age' },\r\n        { label: 'Gender', value: 'gender' },\r\n        { label: 'Country', value: 'country' },\r\n        { label: 'Platform', value: 'platform' },\r\n        { label: 'Placement', value: 'placement' },\r\n        { label: 'Impression Device', value: 'impressionDevice' },\r\n        { label: 'Audience Segments', value: 'audienceSegments' }\r\n    ];\r\n\r\n\r\n    const handleTabChange = (value: string) => {\r\n        setActiveTab(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex h-screen bg-gray-100\">\r\n            <CollapsibleSidebar />\r\n            <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n                {(!date.from || !date.to) ? <MissingDateWarning /> :\r\n                 (<>\r\n\r\n                <div className=\"flex-none\">\r\n                    <Header title='Meta Reports' Icon={FaMeta} showDatePicker={true} />\r\n\r\n                    {/* Tabs */}\r\n                    <div className=\"bg-white px-6 sticky top-0 z-10\">\r\n                        <CustomTabs tabs={tabs} activeTab={activeTab} onTabChange={handleTabChange} />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Scrollable Content */}\r\n                <div className=\"flex-1 overflow-auto\">\r\n                    <div className=\"px-6 py-4 space-y-6\">\r\n                        {activeTab === 'audienceSegments' && (\r\n                            <div id=\"audienceSegments\">\r\n                                <AudienceFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                        {activeTab === 'placement' && (\r\n                            <div id=\"placement\">\r\n                                <PlacementFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                        {activeTab === 'platform' && (\r\n                            <div id=\"platform\">\r\n                                <PlatformFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                        {activeTab === 'country' && (\r\n                            <div id=\"country\">\r\n                                <CountryFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                        {activeTab === 'impressionDevice' && (\r\n                            <div id=\"impressionDevice\">\r\n                                <DeviceFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                        {activeTab === 'gender' && (\r\n                            <div id=\"gender\">\r\n                                <GenderFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                        {activeTab === 'age' && (\r\n                            <div id=\"age\">\r\n                                <AgeFbReport dateRange={dateRange} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                </>)}\r\n                <HelpDeskModal />\r\n            </div>\r\n       \r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default FbReportPage;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface CampaignGroup {\r\n  id: string;\r\n  name: string;\r\n  campaigns: string[];\r\n  color: string;\r\n}\r\n\r\ninterface AccountCampaignGroups {\r\n  [accountId: string]: {\r\n    groups: CampaignGroup[];\r\n    selectedCampaigns: string[];\r\n    editingGroupId: string | null;\r\n    expandedGroups: string[];\r\n    isCreatingGroup: boolean;\r\n  };\r\n}\r\n\r\ninterface CampaignGroupsState {\r\n  accounts: AccountCampaignGroups;\r\n}\r\n\r\nconst defaultAccountState = {\r\n  groups: [],\r\n  selectedCampaigns: [],\r\n  editingGroupId: null,\r\n  expandedGroups: [],\r\n  isCreatingGroup: false\r\n};\r\n\r\n// Initialize account state if it doesn't exist\r\nconst initializeAccountState = (state: CampaignGroupsState, accountId: string) => {\r\n  if (!state.accounts) {\r\n    state.accounts = {};\r\n  }\r\n  if (!state.accounts[accountId]) {\r\n    state.accounts[accountId] = { ...defaultAccountState };\r\n  }\r\n};\r\n\r\nconst campaignGroupsSlice = createSlice({\r\n  name: 'campaignGroups',\r\n  initialState: { accounts: {} } as CampaignGroupsState,\r\n  reducers: {\r\n    createGroup: (state, action: PayloadAction<{ accountId: string; name: string; campaigns: string[]; color: string }>) => {\r\n      const { accountId, name, campaigns, color } = action.payload;\r\n      initializeAccountState(state, accountId);\r\n      \r\n      const newGroup: CampaignGroup = {\r\n        id: Date.now().toString(),\r\n        name,\r\n        campaigns,\r\n        color\r\n      };\r\n      state.accounts[accountId].groups.push(newGroup);\r\n      state.accounts[accountId].selectedCampaigns = [];\r\n      state.accounts[accountId].isCreatingGroup = false;\r\n    },\r\n    deleteGroup: (state, action: PayloadAction<{ accountId: string; groupId: string }>) => {\r\n      const { accountId, groupId } = action.payload;\r\n      initializeAccountState(state, accountId);\r\n      state.accounts[accountId].groups = state.accounts[accountId].groups.filter(group => group.id !== groupId);\r\n      if (state.accounts[accountId].editingGroupId === groupId) {\r\n        state.accounts[accountId].editingGroupId = null;\r\n      }\r\n    },\r\n    addCampaignToGroup: (state, action: PayloadAction<{ accountId: string; groupId: string; campaignName: string }>) => {\r\n      const { accountId, groupId, campaignName } = action.payload;\r\n      initializeAccountState(state, accountId);\r\n      const group = state.accounts[accountId].groups.find(g => g.id === groupId);\r\n      if (group && !group.campaigns.includes(campaignName)) {\r\n        group.campaigns.push(campaignName);\r\n      }\r\n    },\r\n    removeCampaignFromGroup: (state, action: PayloadAction<{ accountId: string; groupId: string; campaignName: string }>) => {\r\n      const { accountId, groupId, campaignName } = action.payload;\r\n      initializeAccountState(state, accountId);\r\n      const group = state.accounts[accountId].groups.find(g => g.id === groupId);\r\n      if (group) {\r\n        group.campaigns = group.campaigns.filter(c => c !== campaignName);\r\n      }\r\n    },\r\n    setSelectedCampaigns: (state, action: PayloadAction<{ accountId: string; campaigns: string[] }>) => {\r\n      const { accountId, campaigns } = action.payload;\r\n      initializeAccountState(state, accountId);\r\n      state.accounts[accountId].selectedCampaigns = campaigns;\r\n    },\r\n    toggleEditingGroup: (state, action: PayloadAction<{ accountId: string; groupId: string | null }>) => {\r\n      const { accountId, groupId } = action.payload;\r\n      initializeAccountState(state, accountId);\r\n      state.accounts[accountId].editingGroupId = groupId;\r\n    },\r\n    toggleGroupExpansion: (state, action: PayloadAction<{ accountId: string; groupId: string }>) => {\r\n      const { accountId, groupId } = action.payload;\r\n      initializeAccountState(state, accountId);\r\n      const expandedGroups = state.accounts[accountId].expandedGroups;\r\n      if (expandedGroups.includes(groupId)) {\r\n        state.accounts[accountId].expandedGroups = expandedGroups.filter(id => id !== groupId);\r\n      } else {\r\n        state.accounts[accountId].expandedGroups.push(groupId);\r\n      }\r\n    },\r\n    setIsCreatingGroup: (state, action: PayloadAction<{ accountId: string; isCreating: boolean }>) => {\r\n      const { accountId, isCreating } = action.payload;\r\n      initializeAccountState(state, accountId);\r\n      state.accounts[accountId].isCreatingGroup = isCreating;\r\n      if (!isCreating) {\r\n        state.accounts[accountId].selectedCampaigns = [];\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  createGroup,\r\n  deleteGroup,\r\n  addCampaignToGroup,\r\n  removeCampaignFromGroup,\r\n  setSelectedCampaigns,\r\n  toggleEditingGroup,\r\n  toggleGroupExpansion,\r\n  setIsCreatingGroup\r\n} = campaignGroupsSlice.actions;\r\n\r\nexport default campaignGroupsSlice.reducer;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface CampaignLabelsState {\r\n  labels: {\r\n    [accountId: string]: {\r\n      [campaignId: string]: string[];\r\n    }\r\n  };\r\n  isAddingLabel: boolean;\r\n}\r\n\r\nconst initialState: CampaignLabelsState = {\r\n  labels: {},\r\n  isAddingLabel: false,\r\n};\r\n\r\nconst campaignLabelsSlice = createSlice({\r\n  name: 'campaignLabels',\r\n  initialState,\r\n  reducers: {\r\n    addLabelToCampaign: (\r\n      state, \r\n      action: PayloadAction<{ accountId: string; campaignId: string; label: string }>\r\n    ) => {\r\n      const { accountId, campaignId, label } = action.payload;\r\n      \r\n      // Initialize account if it doesn't exist\r\n      if (!state.labels[accountId]) {\r\n        state.labels[accountId] = {};\r\n      }\r\n      \r\n      // Initialize campaign if it doesn't exist\r\n      if (!state.labels[accountId][campaignId]) {\r\n        state.labels[accountId][campaignId] = [];\r\n      }\r\n      \r\n      // Add label if it doesn't already exist\r\n      if (!state.labels[accountId][campaignId].includes(label)) {\r\n        state.labels[accountId][campaignId].push(label);\r\n      }\r\n    },\r\n    \r\n    removeLabelFromCampaign: (\r\n      state, \r\n      action: PayloadAction<{ accountId: string; campaignId: string; label: string }>\r\n    ) => {\r\n      const { accountId, campaignId, label } = action.payload;\r\n      \r\n      if (state.labels[accountId] && state.labels[accountId][campaignId]) {\r\n        state.labels[accountId][campaignId] = state.labels[accountId][campaignId]\r\n          .filter(l => l !== label);\r\n      }\r\n    },\r\n    \r\n    toggleAddingLabel: (state, action: PayloadAction<boolean>) => {\r\n      state.isAddingLabel = action.payload;\r\n    },\r\n    \r\n    // Optional: Add utility actions for account-level operations\r\n    clearAccountLabels: (state, action: PayloadAction<string>) => {\r\n      const accountId = action.payload;\r\n      if (state.labels[accountId]) {\r\n        state.labels[accountId] = {};\r\n      }\r\n    },\r\n    deleteLabel: (state, action: PayloadAction<{ accountId: string; label: string }>) => {\r\n      const { accountId, label } = action.payload;\r\n      \r\n      if (state.labels[accountId]) {\r\n        Object.keys(state.labels[accountId]).forEach((campaignId) => {\r\n          state.labels[accountId][campaignId] = state.labels[accountId][campaignId].filter(\r\n            (l) => l !== label\r\n          );\r\n          \r\n          // If the campaign has no more labels after deletion, remove it from the object\r\n          if (state.labels[accountId][campaignId].length === 0) {\r\n            delete state.labels[accountId][campaignId];\r\n          }\r\n        });\r\n    \r\n        // If the account has no more campaigns with labels, remove the account entry\r\n        if (Object.keys(state.labels[accountId]).length === 0) {\r\n          delete state.labels[accountId];\r\n        }\r\n      }\r\n    }\r\n,    \r\n    \r\n    // Optional: Copy labels between campaigns in the same account\r\n    copyLabels: (\r\n      state,\r\n      action: PayloadAction<{ \r\n        accountId: string; \r\n        sourceCampaignId: string; \r\n        targetCampaignId: string \r\n      }>\r\n    ) => {\r\n      const { accountId, sourceCampaignId, targetCampaignId } = action.payload;\r\n      \r\n      if (state.labels[accountId] && \r\n          state.labels[accountId][sourceCampaignId]) {\r\n        \r\n        if (!state.labels[accountId][targetCampaignId]) {\r\n          state.labels[accountId][targetCampaignId] = [];\r\n        }\r\n        \r\n        // Copy labels from source to target (avoiding duplicates)\r\n        state.labels[accountId][sourceCampaignId].forEach(label => {\r\n          if (!state.labels[accountId][targetCampaignId].includes(label)) {\r\n            state.labels[accountId][targetCampaignId].push(label);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { \r\n  addLabelToCampaign, \r\n  removeLabelFromCampaign, \r\n  toggleAddingLabel,\r\n  clearAccountLabels,\r\n  copyLabels,deleteLabel\r\n} = campaignLabelsSlice.actions;\r\n\r\nexport default campaignLabelsSlice.reducer;","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport conversionFiltersReducer from \"./slices/ConversionFilterSlice\";\r\nimport brandReducer from \"./slices/BrandSlice.ts\"\r\nimport userReducer from \"./slices/UserSlice.ts\"\r\nimport dateReducer from \"./slices/DateSlice.ts\"\r\nimport campaignGroupsReducer from './slices/CampaignGroupSlice.ts';\r\nimport campaignLabelsReducer from './slices/campaignLabelsSlice.ts';\r\nimport tutorialsReducer from \"./slices/TutorialSlice.ts\"\r\nimport localReducer from \"./slices/LocalSlice.ts\"\r\n\r\n// Combine all reducers\r\nconst rootReducer = combineReducers({\r\n  conversionFilters: conversionFiltersReducer,\r\n  brand: brandReducer, \r\n  user: userReducer, \r\n  date: dateReducer,\r\n  campaignGroups: campaignGroupsReducer,\r\n  campaignLabels: campaignLabelsReducer,\r\n  tutorials: tutorialsReducer,\r\n  locale: localReducer,\r\n});\r\n\r\n// Persist config - specify which slices to persist\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"conversionFilters\", \"brand\", \"user\", \"date\" , \"campaignGroups\", \"campaignLabels\", \"tutorials\",\"locale\"], // Persist both conversionFilters & brand\r\n};\r\n\r\n// Apply persistReducer to the rootReducer\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// Configure Redux store\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        // Explicitly ignore Redux Persist actions to avoid warnings\r\n        ignoredActions: [\"persist/PERSIST\", \"persist/REHYDRATE\", \"persist/REGISTER\"],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// Define types for Redux state & dispatch\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","import { Check, Star } from \"lucide-react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst pricingPlans = [\r\n    {\r\n        id: \"FREE\",\r\n        title: \"Free Plan\",\r\n        price: \"Free\",\r\n        description: \"Perfect for getting started with analytics\",\r\n        features: [\r\n            \"Basic Analytics Dashboard\",\r\n            \"Shopify Integration\",\r\n            \"Daily Data Updates\",\r\n            \"Basic Reports\",\r\n            \"Email Support\",\r\n        ],\r\n        buttonText: \"Get Started\",\r\n    },\r\n    {\r\n        id: \"STARTUP\",\r\n        title: \"Startup Plan\",\r\n        price: \"$10\",\r\n        period: \"/month\",\r\n        description: \"Ideal for growing businesses\",\r\n        features: [\r\n            \"Everything in Free Plan\",\r\n            \"Real-time Analytics\",\r\n            \"Custom Dashboards\",\r\n            \"Advanced Reports\",\r\n            \"Priority Email Support\",\r\n        ],\r\n        isPopular: true,\r\n        buttonText: \"Subscribe Now\",\r\n    },\r\n    {\r\n        id: \"GROWTH\",\r\n        title: \"Growth Plan\",\r\n        price: \"$50\",\r\n        period: \"/month\",\r\n        description: \"For businesses ready to scale\",\r\n        features: [\r\n            \"Everything in Startup Plan\",\r\n            \"AI-Powered Insights\",\r\n            \"White-label Reports\",\r\n            \"Custom Integrations\",\r\n            \"Team Collaboration\",\r\n        ],\r\n        buttonText: \"Subscribe Now\",\r\n    },\r\n]\r\n\r\nfunction Pricing() {\r\n    return (\r\n        <div className=\"grid lg:grid-cols-3 gap-6\">\r\n            {pricingPlans.map((plan) => (\r\n                <div\r\n                    key={plan.id}\r\n                    className={`relative bg-white rounded-xl overflow-hidden border transition-all duration-300 hover:shadow-lg hover:scale-105 ${plan.isPopular ? \"border-slate-200 shadow-md\" : \"border-slate-100\"\r\n                        }`}\r\n                >\r\n                    {/* Card Header */}\r\n                    <div\r\n                        className={`p-6 flex flex-col items-center ${plan.id === \"FREE\"\r\n                            ? \"bg-gradient-to-b from-teal-50 to-white\"\r\n                            : plan.id === \"STARTUP\"\r\n                                ? \"bg-gradient-to-b from-violet-50 to-white\"\r\n                                : \"bg-gradient-to-b from-rose-50 to-white\"\r\n                            }`}\r\n                    >\r\n                        {plan.isPopular && (\r\n                            <div className=\"absolute top-0 left-0 bg-amber-500 text-white text-xs font-semibold py-1 px-3 rounded-br-lg\">\r\n                                <Star className=\"h-3.5 w-3.5 fill-white inline-block mr-1\" /> POPULAR\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Icon and Title in the Same Row */}\r\n                        <h3 className=\"text-xl font-bold text-slate-800\">{plan.title}</h3>\r\n                        {/* Price and Description */}\r\n                        <div className=\"flex items-baseline mt-4\">\r\n                            <span\r\n                                className={`text-4xl font-bold ${plan.id === \"FREE\" ? \"text-teal-600\" : plan.id === \"STARTUP\" ? \"text-violet-600\" : \"text-rose-600\"\r\n                                    }`}\r\n                            >\r\n                                {plan.price}\r\n                            </span>\r\n                            {plan.period && <span className=\"text-slate-500 ml-1\">{plan.period}</span>}\r\n                        </div>\r\n\r\n                        <p className=\"mt-3 text-slate-600 text-sm text-center\">{plan.description}</p>\r\n                    </div>\r\n\r\n                    {/* Divider */}\r\n                    <div className=\"w-full h-px bg-slate-100\"></div>\r\n\r\n                    {/* Features */}\r\n                    <div className=\"p-6 bg-white\">\r\n                        <ul className=\"space-y-4\">\r\n                            {plan.features.map((feature, index) => (\r\n                                <li key={index} className=\"flex items-start\">\r\n                                    <div\r\n                                        className={`flex-shrink-0 rounded-full p-0.5 mt-0.5 ${plan.id === \"FREE\"\r\n                                            ? \"bg-teal-100 text-teal-600\"\r\n                                            : plan.id === \"STARTUP\"\r\n                                                ? \"bg-violet-100 text-violet-600\"\r\n                                                : \"bg-rose-100 text-rose-600\"\r\n                                            }`}\r\n                                    >\r\n                                        <Check className=\"h-4 w-4\" />\r\n                                    </div>\r\n                                    <span className=\"ml-3 text-slate-700 text-sm\">{feature}</span>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        {/* Button */}\r\n                        <div className=\"mt-8\">\r\n                            <Link to=\"https://parallelsapp-production.up.railway.app/\">\r\n                            <button\r\n                                className={`w-full py-3 px-4 rounded-lg font-medium transition-all duration-200 ${plan.id === \"FREE\"\r\n                                    ? \"bg-teal-600 hover:bg-teal-700 text-white\"\r\n                                    : plan.id === \"STARTUP\"\r\n                                        ? \"bg-violet-600 hover:bg-violet-700 text-white\"\r\n                                        : \"bg-rose-600 hover:bg-rose-700 text-white\"\r\n                                    }`}\r\n                            >\r\n                                {plan.buttonText}\r\n                            </button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pricing\r\n","import { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport {\r\n    Building2,\r\n    Mail,\r\n    Shield,\r\n    HelpCircle,\r\n    Plus,\r\n    Settings,\r\n    Trash2,\r\n} from 'lucide-react';\r\nimport CollapsibleSidebar from '../Dashboard/CollapsibleSidebar';\r\nimport { RootState } from '@/store';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Pricing from '../Pricing/Pricing';\r\nimport { baseURL } from '@/data/constant';\r\n\r\nfunction ProfilePage() {\r\n    const [activeTab, setActiveTab] = useState('brands');\r\n    const user = useSelector((state: RootState) => state.user.user);\r\n    const userbrands = user?.brands;\r\n    const brands = useSelector((state: RootState) => state.brand.brands);\r\n\r\n    const userBrandNames = userbrands?.map((brandId) => {\r\n        const brand = brands.find((b) => b._id === brandId);\r\n        return brand ? brand.name : \"Unknown Brand\";\r\n    })\r\n\r\n    const handleZohoLogin = async () => {\r\n        try {\r\n          const response = await axios.get(`${baseURL}/api/auth/zoho`);\r\n          const { authUrl } = response.data;\r\n    \r\n          window.location.href = authUrl;\r\n        } catch (error) {\r\n          console.error('Error getting Zoho Auth URL:', error);\r\n        }\r\n      }\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className=\"flex h-screen\"> {/* Set a fixed width for the sidebar */}\r\n            <CollapsibleSidebar />\r\n            <div className=\"flex-1 h-screen overflow-auto\">\r\n                <div className=\"min-h-screen bg-slate-50\">\r\n                    <div className=\"container mx-auto px-4 py-4\">\r\n                        <div className=\"bg-white rounded-xl shadow-sm\">\r\n                            {/* Profile Header */}\r\n                            <div className=\"p-6 border-b border-slate-200\">\r\n                                <div className=\"flex items-start gap-6\">\r\n                                    <div className=\"h-24 w-24 rounded-full bg-slate-100 flex items-center justify-center\">\r\n                                        <span className=\"text-4xl font-bold text-slate-600\">{user?.username[0]}</span>\r\n                                    </div>\r\n                                    <div className=\"flex-1\">\r\n                                        <div className=\"flex items-center gap-4\">\r\n                                            <h2 className=\"text-2xl font-semibold text-slate-800\">{user?.username}</h2>\r\n                                            {user?.isAdmin && (\r\n                                                <Badge className=\"bg-teal-100 text-teal-700 px-3 py-1 rounded-full\">\r\n                                                    <Shield className=\"h-4 w-4 mr-1\" />\r\n                                                    Administrator\r\n                                                </Badge>\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"mt-4 grid grid-cols-2 gap-4\">\r\n                                            <div className=\"flex items-center gap-2 text-slate-600\">\r\n                                                <Mail className=\"h-4 w-4\" />\r\n                                                <span>{user?.email}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Navigation */}\r\n                            <div className=\"border-b border-slate-200\">\r\n                                <div className=\"flex px-6\">\r\n                                    {['Brands', 'Pricing','Support',].map((tab) => (\r\n                                        <button\r\n                                            key={tab}\r\n                                            onClick={() => setActiveTab(tab.toLowerCase())}\r\n                                            className={`px-6 py-4 font-medium text-sm transition-colors relative ${activeTab === tab.toLowerCase()\r\n                                                ? 'text-teal-600'\r\n                                                : 'text-slate-600 hover:text-slate-900'\r\n                                                }`}\r\n                                        >\r\n                                            {tab}\r\n                                            {activeTab === tab.toLowerCase() && (\r\n                                                <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-teal-600\"></div>\r\n                                            )}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Content */}\r\n                            {activeTab.toLowerCase() === 'brands' &&\r\n                                <div className=\"p-6\">\r\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                                        <Button onClick={()=> navigate(\"/brand-setup\")} variant=\"outline\" className=\"text-slate-700\">\r\n                                            <Plus className=\"h-5 w-5 mr-2\" />\r\n                                            Add New Brand\r\n                                        </Button>\r\n                                        {userBrandNames?.map((brand) => (\r\n                                            <div\r\n                                                key={brand}\r\n                                                className=\"bg-white rounded-lg border border-slate-200 p-5 hover:shadow-md transition-shadow\"\r\n                                            >\r\n                                                <div className=\"flex items-center justify-between mb-4\">\r\n                                                    <div className=\"flex items-center gap-3\">\r\n                                                        <div className=\"h-10 w-10 rounded-full bg-slate-100 flex items-center justify-center\">\r\n                                                            <Building2 className=\"h-5 w-5 text-teal-600\" />\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <h3 className=\"font-medium text-slate-900\">{brand}</h3>\r\n                                                            <span className=\"text-sm text-slate-500\">Connected</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <Button variant=\"ghost\" size=\"icon\" className=\"text-slate-600\">\r\n                                                        <Settings className=\"h-4 w-4\" />\r\n                                                    </Button>\r\n                                                </div>\r\n                                                <div className=\"space-y-4\">\r\n                                                    <div className=\"flex items-center justify-between text-sm\">\r\n                                                        <span className=\"text-slate-600\">Integration Status</span>\r\n                                                        <Badge className=\"bg-teal-100 text-teal-700\">Active</Badge>\r\n                                                    </div>\r\n                                                    <div className=\"flex items-center justify-between\">\r\n                                                        <Button variant=\"outline\" size=\"sm\" className=\"text-slate-700\">\r\n                                                            Manage\r\n                                                        </Button>\r\n                                                        <Button\r\n                                                            variant=\"ghost\"\r\n                                                            size=\"icon\"\r\n                                                            className=\"text-red-600 hover:text-red-700\"\r\n                                                        >\r\n                                                            <Trash2 className=\"h-4 w-4\" />\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            }\r\n                             {activeTab.toLowerCase() === \"pricing\" && (\r\n                                <div className=\"p-5\">\r\n                                   <Pricing />\r\n                                </div>\r\n                            )}\r\n                            {activeTab.toLowerCase() === \"support\" && user?.isAdmin && (\r\n                                <div className=\"py-8 flex gap-4 items-center justify-center\">\r\n                                    <Button onClick={handleZohoLogin} className=\"bg-teal-600 hover:bg-teal-700\">\r\n                                        <HelpCircle className=\"h-5 w-5 mr-2\" />\r\n                                        Connect Zoho Help Desk\r\n                                    </Button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;","import React,{ useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { RootState } from '@/store';\r\nimport { setFirstTimeLogin, queueTutorials, completeFirstTimeLogin } from '@/store/slices/TutorialSlice';\r\nimport { getAllTutorialsForPath } from './TutorialConfig';\r\n\r\ninterface TutorialManagerProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst TutorialManager: React.FC<TutorialManagerProps> = ({ children }) => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const currentPath = location.pathname;\r\n  \r\n  const isFirstTimeLogin = useSelector((state: RootState) => state.tutorials.isFirstTimeLogin);\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  \r\n  const isTutorialActive = useSelector((state: RootState) => state.tutorials.isTutorialActive);\r\n  const tutorialQueue = useSelector((state: RootState) => state.tutorials.tutorialQueue);\r\n  const activeTutorial = useSelector((state: RootState) => state.tutorials.activeTutorial);\r\n\r\n  // Track if we've already started tutorials in this session to prevent restart\r\n  const hasStartedTutorialsRef = React.useRef(false);\r\n\r\n  // Check if it's the user's first login based on login count\r\n  useEffect(() => {\r\n    if (user && !hasStartedTutorialsRef.current) {\r\n      // Set isFirstTimeLogin to true if loginCount equals 1\r\n      const isFirstLogin = user.loginCount === 1;\r\n      \r\n      console.log('User login status:', { \r\n        loginCount: user.loginCount, \r\n        isFirstLogin \r\n      });\r\n      \r\n      dispatch(setFirstTimeLogin(isFirstLogin));\r\n    }\r\n  }, [user, dispatch]);\r\n\r\n  useEffect(() => {\r\n    // Log queue changes\r\n    console.log('Tutorial queue updated:', {\r\n      active: activeTutorial,\r\n      queueLength: tutorialQueue.length,\r\n      queue: tutorialQueue\r\n    });\r\n  }, [activeTutorial, tutorialQueue]);\r\n\r\n  // Monitor when tutorials are stopped/completed\r\n  useEffect(() => {\r\n    // If we had a tutorial active and now we don't, mark first-time login as complete\r\n    if (hasStartedTutorialsRef.current && activeTutorial === null && !isTutorialActive) {\r\n      console.log('Tutorial session ended, marking first-time login as complete');\r\n      dispatch(completeFirstTimeLogin());\r\n    }\r\n  }, [activeTutorial, isTutorialActive, dispatch]);\r\n\r\n  // Start appropriate tutorials based on path when needed\r\n  useEffect(() => {\r\n    // Only queue tutorials once per session to prevent restart\r\n    if (hasStartedTutorialsRef.current) {\r\n      return;\r\n    }\r\n    \r\n    // Check if we have what we need to start tutorials\r\n    const shouldQueueTutorials = isFirstTimeLogin && \r\n                               user && \r\n                               !isTutorialActive && \r\n                               tutorialQueue.length === 0;\r\n    \r\n    console.log('Tutorial conditions:', {\r\n      isFirstTimeLogin,\r\n      hasUser: !!user,\r\n      isTutorialActive,\r\n      queueLength: tutorialQueue.length,\r\n      shouldQueueTutorials\r\n    });\r\n    \r\n    if (shouldQueueTutorials) {\r\n      // Add a delay to ensure DOM is fully rendered\r\n      const timer = setTimeout(() => {\r\n        // Get all tutorials for this path in the correct order\r\n        const allTutorials = getAllTutorialsForPath(currentPath);\r\n        \r\n        console.log('Available tutorials for path:', {\r\n          path: currentPath,\r\n          allTutorials\r\n        });\r\n        \r\n        if (allTutorials.length > 0) {\r\n          // Get all tutorial IDs for this path\r\n          const tutorialIds = allTutorials.map(tutorial => tutorial.id);\r\n          \r\n          console.log('Queueing tutorials:', tutorialIds);\r\n          dispatch(queueTutorials(tutorialIds));\r\n          \r\n          // Mark that we've started tutorials in this session\r\n          hasStartedTutorialsRef.current = true;\r\n        } else {\r\n          console.log('No tutorials available for this path');\r\n        }\r\n      }, 1500);\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isFirstTimeLogin, user, currentPath, isTutorialActive, tutorialQueue, dispatch]);\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default TutorialManager;","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { driver as driverJS, Driver } from 'driver.js';\r\nimport 'driver.js/dist/driver.css';\r\nimport { RootState } from '@/store';\r\nimport { nextTutorial,  setTutorialStep, queueTutorials } from '@/store/slices/TutorialSlice';\r\nimport { getTutorialSteps, getRelatedTutorials } from './TutorialConfig';\r\n\r\nconst TutorialDriver: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const driverInstanceRef = useRef<Driver | null>(null);\r\n  \r\n  const activeTutorial = useSelector((state: RootState) => state.tutorials.activeTutorial);\r\n  const isTutorialActive = useSelector((state: RootState) => state.tutorials.isTutorialActive);\r\n  const activeTutorialStep = useSelector((state: RootState) => state.tutorials.activeTutorialStep);\r\n  const tutorialQueue = useSelector((state: RootState) => state.tutorials.tutorialQueue);\r\n  \r\n  // Create a new driver instance when tutorial changes\r\n  useEffect(() => {\r\n    if (activeTutorial && isTutorialActive) {\r\n      console.log(`Starting tutorial: ${activeTutorial}, Queue: [${tutorialQueue.join(', ')}]`);\r\n      \r\n      const steps = getTutorialSteps(activeTutorial);\r\n      \r\n      if (steps && steps.length > 0) {\r\n        // Clean up any existing driver instance\r\n        if (driverInstanceRef.current) {\r\n          driverInstanceRef.current.destroy();\r\n          driverInstanceRef.current = null;\r\n        }\r\n        \r\n        // Start the driver with the steps for this tutorial\r\n        setTimeout(() => {\r\n          // Find all elements before creating driver to ensure they exist\r\n          let allElementsExist = true;\r\n          steps.forEach(step => {\r\n            const element = document.querySelector(step.element);\r\n            if (!element) {\r\n              console.warn(`Element ${step.element} not found for tutorial ${activeTutorial}`);\r\n              allElementsExist = false;\r\n            }\r\n          });\r\n          \r\n          if (!allElementsExist) {\r\n            console.warn(`Not all elements for tutorial ${activeTutorial} exist on the page. Moving to next tutorial.`);\r\n            dispatch(nextTutorial());\r\n            return;\r\n          }\r\n          \r\n          // Create a new driver instance with the steps\r\n          const driverInstance = driverJS({\r\n            showProgress: true,\r\n            smoothScroll: true,\r\n            animate: true,\r\n            allowClose: true,\r\n            stagePadding: 10,\r\n            steps: steps,\r\n            onHighlightStarted: (element) => {\r\n              const currentStepIndex = steps.findIndex(step => step.element === element?.id);\r\n              dispatch(setTutorialStep(currentStepIndex >= 0 ? currentStepIndex : 0));\r\n            },\r\n          \r\n            onDestroyed: () => {\r\n              // Clear the reference\r\n              driverInstanceRef.current = null;\r\n              \r\n              // Check if there are related tutorials to queue\r\n              const relatedTutorials = getRelatedTutorials(activeTutorial);\r\n              \r\n              if (relatedTutorials.length > 0) {\r\n                console.log(`Queueing related tutorials: ${relatedTutorials.join(', ')}`);\r\n                // Queue any related tutorials before moving to next\r\n                dispatch(queueTutorials(relatedTutorials));\r\n              }\r\n              \r\n              // Move to the next tutorial in queue\r\n              console.log('Moving to next tutorial');\r\n              dispatch(nextTutorial());\r\n            }\r\n          });\r\n          \r\n          // Start from the active step\r\n          if (activeTutorialStep > 0 && activeTutorialStep < steps.length) {\r\n            // Use proper API method to navigate to a specific step\r\n            driverInstance.highlight(steps[activeTutorialStep]);\r\n          } else {\r\n            driverInstance.drive();\r\n          }\r\n          \r\n          // Store the instance reference\r\n          driverInstanceRef.current = driverInstance;\r\n          \r\n        }, 500); // Longer delay to ensure elements are rendered\r\n      } else {\r\n        console.error(`No steps defined for tutorial: ${activeTutorial}`);\r\n        dispatch(nextTutorial());\r\n      }\r\n    }\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      if (driverInstanceRef.current) {\r\n        driverInstanceRef.current.destroy();\r\n        driverInstanceRef.current = null;\r\n      }\r\n    };\r\n  }, [activeTutorial, isTutorialActive, dispatch]);\r\n  \r\n  // This component doesn't render anything visible\r\n  return null;\r\n};\r\n\r\nexport default TutorialDriver;","import { Button } from \"@/components/ui/button\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction CTA() {\r\n  return (\r\n    <section className=\"w-full py-12 md:py-8 lg:py-16 gradient-bg text-white\">\r\n      <div className=\"container px-4 md:px-6\">\r\n        <div className=\"flex flex-col items-center justify-center space-y-4 text-center\">\r\n          <div className=\"space-y-2\">\r\n            <h2 className=\"text-3xl font-bold tracking-tighter md:text-4xl\">\r\n              You’ve made it this far—why stop now?\r\n            </h2>\r\n            <p className=\"max-w-[900px] md:text-xl\">\r\n              Let’s take your marketing to the next level. Start your 14-day free trial today.\r\n            </p>\r\n          </div>\r\n          <div className=\"flex flex-col gap-2 min-[400px]:flex-row\">\r\n            <Link to=\"/login\">\r\n            <Button size=\"lg\" variant=\"secondary\" className=\"bg-white text-primary hover:bg-blue-50\">\r\n              Start Free Trial\r\n            </Button>\r\n            </Link>\r\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-black hover:bg-blue-50\">\r\n              Schedule a Demo\r\n            </Button>\r\n          </div>\r\n          <p className=\"text-sm text-blue-100\">\r\n            Got questions?{\" \"}\r\n            <Link to=\"#\" className=\"text-white underline underline-offset-2\">\r\n              Chat with our sales team\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CTA\r\n","import { cn } from \"@/lib/utils\";\r\nimport { BarChart3, CalendarRange, DollarSign, Folder, Layers, LineChart, Mail, Users } from \"lucide-react\"\r\n\r\nconst Feature = ({\r\n    title,\r\n    description,\r\n    icon,\r\n    index,\r\n}: {\r\n    title: string;\r\n    description: string;\r\n    icon: React.ReactNode;\r\n    index: number;\r\n}) => {\r\n    return (\r\n        <div\r\n            className={cn(\r\n                \"flex flex-col lg:border-r  py-10 relative group/feature dark:border-neutral-800\",\r\n                (index === 0 || index === 4) && \"lg:border-l dark:border-neutral-800\",\r\n                index < 4 && \"lg:border-b dark:border-neutral-800\"\r\n            )}\r\n        >\r\n            {index < 4 && (\r\n                <div className=\"opacity-0 group-hover/feature:opacity-100 transition duration-200 absolute inset-0 h-full w-full bg-gradient-to-t from-gray-200 dark:from-neutral-800 to-transparent pointer-events-none\" />\r\n            )}\r\n            {index >= 4 && (\r\n                <div className=\"opacity-0 group-hover/feature:opacity-100 transition duration-200 absolute inset-0 h-full w-full bg-gradient-to-b from-gray-200 dark:from-neutral-800 to-transparent pointer-events-none\" />\r\n            )}\r\n            <div className=\"mb-4 relative z-10 px-10 text-neutral-600 dark:text-neutral-400\">\r\n                {icon}\r\n            </div>\r\n            <div className=\"text-lg font-bold mb-2 relative z-10 px-10\">\r\n                <div className=\"absolute left-0 inset-y-0 h-6 group-hover/feature:h-8 w-1 rounded-tr-full rounded-br-full bg-neutral-300 dark:bg-neutral-700 group-hover/feature:bg-blue-500 transition-all duration-200 origin-center\" />\r\n                <span className=\"group-hover/feature:translate-x-2 transition duration-200 inline-block text-neutral-800 dark:text-neutral-100\">\r\n                    {title}\r\n                </span>\r\n            </div>\r\n            <p className=\"text-sm text-neutral-600 dark:text-neutral-300 max-w-xs relative z-10 px-10\">\r\n                {description}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst PlatformFeatures = [\r\n    {\r\n        title: \"Unified Dashboard\",\r\n        description: \"View all your marketing data in one place with customizable widgets\",\r\n        icon: <BarChart3 className=\"h-8 w-8 text-primary\" />,\r\n    },\r\n    {\r\n        title: \"Multi-platform Integration\",\r\n        description: \"Connect with Shopify, Meta, Google Ads, and GA4 seamlessly\",\r\n        icon: <Layers className=\"h-8 w-8 text-primary\" />,\r\n    },\r\n    {\r\n        title: \"Performance Tracking\",\r\n        description: \"Monitor business performance across platforms and time periods\",\r\n        icon: <LineChart className=\"h-8 w-8 text-primary\" />,\r\n    },\r\n    {\r\n        title: \"Demographic Analysis\",\r\n        description: \"Track conversions based on location, demographics, brands, and products\",\r\n        icon: <Users className=\"h-8 w-8 text-primary\" />,\r\n    },\r\n    {\r\n        title: \"Automated Email Reports\",\r\n        description: \"Receive regular performance updates directly in your inbox\",\r\n        icon: <Mail className=\"h-8 w-8 text-primary\" />,\r\n    },\r\n    {\r\n        title: \"Campaign Grouping\",\r\n        description: \"Group campaigns by category to analyze performance at a glance\",\r\n        icon: <Folder className=\"h-8 w-8 text-primary\" />,\r\n    },\r\n    {\r\n        title: \"Compare Date Ranges\",\r\n        description: \"Easily compare analytics across different time periods\",\r\n        icon: <CalendarRange className=\"h-8 w-8 text-primary\" />,\r\n    },\r\n    {\r\n        title: \"Easy & Transparent Pricing\",\r\n        description: \"Simple, no-surprise pricing plans to fit every business\",\r\n        icon: <DollarSign className=\"h-8 w-8 text-primary\" />,\r\n    }\r\n];\r\n\r\nfunction Features() {\r\n    return (\r\n        <section id=\"features\" className=\"w-full py-12 md:py-8 lg:py-16 bg-slate-100 px-4\">\r\n            <div className=\"container px-4 md:px-6\">\r\n                <div className=\"flex flex-col items-center justify-center space-y-4 text-center mb-5\">\r\n                    <div className=\"space-y-2\">\r\n                        <h2 className=\"text-2xl font-bold tracking-tighter md:text-4xl lg:text-3xl gradient-text\">\r\n                            Smarter Marketing, Better Results\r\n                        </h2>\r\n                        <p className=\"max-w-[900px] text-muted-foreground md:text-lg\">\r\n                            Track performance, scale campaigns, and maximize ROI—all with ease.\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4  relative z-10 pt-6 max-w-7xl mx-auto\">\r\n                    {PlatformFeatures.map((feature, index) => (\r\n                        <Feature key={feature.title} {...feature} index={index} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Features\r\n\r\n","import Logo from \"@/assets/messold-icon.png\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n      <footer className=\"w-full border-t bg-slate-900 text-white\">\r\n        <div className=\"container px-6 py-8 flex justify-center items-center\">\r\n          <div className=\"flex flex-col items-center space-y-3\">\r\n            {/* Logo & Brand Name */}\r\n            <div className=\"flex items-center gap-2 font-semibold text-2xl tracking-tight\">\r\n            <img src={Logo} alt=\"Messold Logo\" className=\"h-8 w-8\" />\r\n              <span className=\"text-slate-100\">Parallels</span>\r\n            </div>\r\n  \r\n            {/* Tagline */}\r\n            <p className=\"text-sm text-slate-400 text-center max-w-sm\">\r\n              The all-in-one marketing platform for growing businesses.\r\n            </p>\r\n  \r\n            {/* Navigation Links */}\r\n            <nav className=\"flex space-x-4 text-sm font-medium\">\r\n              <Link\r\n                to=\"/privacy-policy\"\r\n                className=\"text-slate-400 transition hover:text-blue-400\"\r\n              >\r\n                Privacy Policy\r\n              </Link>\r\n              <span className=\"text-slate-500\">|</span>\r\n              <Link\r\n                to=\"#\"\r\n                className=\"text-slate-400 transition hover:text-blue-400\"\r\n              >\r\n                Terms of Service\r\n              </Link>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n  \r\n\r\nexport default Footer","import { Button } from \"@/components/ui/button\"\r\nimport { ArrowRight } from \"lucide-react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { Area, AreaChart, ResponsiveContainer, XAxis, YAxis } from \"recharts\";\r\n\r\nconst generateLast30Days = () => {\r\n    const data = [];\r\n    const today = new Date();\r\n    \r\n    let baseValue = 25000; // Start at a lower value\r\n\r\n    for (let i = 0; i < 30; i++) {\r\n        const date = new Date(today);\r\n        date.setDate(date.getDate() - (29 - i)); // Ensure chronological order\r\n        const day = date.getDate();\r\n\r\n        // Gradual increase over time\r\n        baseValue += Math.random() * 1500 + 500; // Ensure an upward movement\r\n\r\n        // Large fluctuations for some days\r\n        const fluctuation = (Math.random() > 0.7 ? Math.random() * 10000 - 5000 : Math.random() * 3000 - 1500);\r\n\r\n        const value = Math.round(baseValue + fluctuation);\r\n\r\n        data.push({\r\n            name: day,\r\n            value: Math.max(value, 5000), // Ensure it never goes too low\r\n        });\r\n    }\r\n\r\n    return data;\r\n};\r\n\r\n\r\nconst data = generateLast30Days();\r\n\r\nfunction HeroSection() {\r\n    return (\r\n      <div className=\"relative min-h-screen w-full overflow-hidden gradient-bg\">\r\n        {/* Gradient effects */}\r\n        <div className=\"pointer-events-none absolute inset-0 bg-[radial-gradient(circle_at_50%_120%,rgba(120,119,198,0.3),rgba(255,255,255,0))]\" />\r\n        \r\n        <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"py-12\">\r\n            {/* Top badge */}\r\n           \r\n            {/* Main content grid */}\r\n            <div className=\"grid gap-12 lg:grid-cols-2 lg:gap-8\">\r\n              <div className=\"flex flex-col justify-center items-start\">\r\n              <div className=\"mb-8 flex justify-center\">\r\n              <div className=\"animate-fade-in rounded-full border border-[#1E1B4B]/20 bg-[#0E0E2C] px-3 py-1 text-sm text-slate-300 backdrop-blur-sm\">\r\n                <span className=\"mr-2 inline-block text-indigo-500\">✦</span>\r\n                Unified Marketing Analytics Platform\r\n              </div>\r\n            </div>\r\n  \r\n                <h1 className=\"text-center text-4xl font-bold tracking-tight text-white lg:text-left lg:text-6xl\">\r\n                  <span className=\"block mb-2\">All Your Marketing Data,  One Place.</span>\r\n                </h1>\r\n  \r\n                <p className=\"mt-6 text-center text-lg text-slate-200 lg:text-left\">\r\n                  Connect Shopify, Meta, Google Ads, and GA4 in one dashboard. Track performance, analyze conversions, and get automated email reports.\r\n                </p>\r\n  \r\n                <div className=\"mt-8 flex flex-col items-center gap-4 sm:flex-row lg:justify-start\">\r\n                <Link to=\"/login\">\r\n                  <Button size=\"lg\" className=\"w-full bg-white text-black hover:bg-blue-100 sm:w-auto\">\r\n                    Start Free Trial <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n                  </Button>\r\n                  </Link>\r\n                  <Button size=\"lg\" variant=\"outline\" className=\"w-full border-slate-800 text-black hover:bg-blue-100 sm:w-auto\">\r\n                    View Demo\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n  \r\n              {/* Dashboard Preview */}\r\n              <div className=\"relative\">\r\n            <div className=\"relative rounded-2xl border border-slate-800 bg-[#0A0A1B] p-4\">\r\n              {/* Window Controls */}\r\n              <div className=\"mb-6 flex items-center justify-between\">\r\n                <div className=\"flex gap-2\">\r\n                  <div className=\"h-3 w-3 rounded-full bg-[#FF5F57]\" />\r\n                  <div className=\"h-3 w-3 rounded-full bg-[#FFBD2E]\" />\r\n                  <div className=\"h-3 w-3 rounded-full bg-[#28C840]\" />\r\n                </div>\r\n                <div className=\"flex items-center gap-2 rounded-full bg-slate-800/50 px-3 py-1\">\r\n                  <div className=\"h-2 w-2 rounded-full bg-emerald-500\" />\r\n                  <span className=\"text-xs text-slate-300\">Last 30 days</span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Analytics Content */}\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <h2 className=\"text-xl font-semibold text-slate-300\">Analytics Overview</h2>\r\n                  <Button variant=\"outline\" size=\"sm\" className=\"border-slate-800\">\r\n                    Export\r\n                  </Button>\r\n                </div>\r\n\r\n                {/* Metrics Grid */}\r\n                <div className=\"grid grid-cols-3 gap-4 text-slate-100\">\r\n                  <div className=\"rounded-lg bg-slate-800/50 p-4\">\r\n                    <div className=\"text-sm text-slate-400\">Revenue</div>\r\n                    <div className=\"mt-1 text-2xl font-bold\">$48.2K</div>\r\n                    <div className=\"mt-2 text-sm text-emerald-400\">+12.4%</div>\r\n                  </div>\r\n                  <div className=\"rounded-lg bg-slate-800/50 p-4\">\r\n                    <div className=\"text-sm text-slate-400\">Orders</div>\r\n                    <div className=\"mt-1 text-2xl font-bold\">2,567</div>\r\n                    <div className=\"mt-2 text-sm text-emerald-400\">+8.2%</div>\r\n                  </div>\r\n                  <div className=\"rounded-lg bg-slate-800/50 p-4\">\r\n                    <div className=\"text-sm text-slate-400\">Customers</div>\r\n                    <div className=\"mt-1 text-2xl font-bold\">1.2M</div>\r\n                    <div className=\"mt-2 text-sm text-emerald-400\">+4.7%</div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Chart Placeholder */}\r\n                <div className=\"h-[300px] rounded-lg bg-slate-800/30 p-4\">\r\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <AreaChart data={data}>\r\n                      <defs>\r\n                        <linearGradient id=\"colorValue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                          <stop offset=\"5%\" stopColor=\"#6366f1\" stopOpacity={0.3} />\r\n                          <stop offset=\"95%\" stopColor=\"#6366f1\" stopOpacity={0} />\r\n                        </linearGradient>\r\n                      </defs>\r\n                      <XAxis\r\n                        dataKey=\"name\"\r\n                        axisLine={false}\r\n                        tickLine={false}\r\n                        tick={{ fill: '#64748b', fontSize: 12 }}\r\n                        interval=\"preserveStartEnd\"\r\n                      />\r\n                      <YAxis\r\n                        axisLine={false}\r\n                        tickLine={false}\r\n                        tick={{ fill: '#64748b', fontSize: 12 }}\r\n                        tickFormatter={(value) => `$${value / 1000}k`}\r\n                      />\r\n                      <Area\r\n                        type=\"monotone\"\r\n                        dataKey=\"value\"\r\n                        stroke=\"#6366f1\"\r\n                        strokeWidth={2}\r\n                        fill=\"url(#colorValue)\"\r\n                      />\r\n                    </AreaChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Floating Achievement Card */}\r\n            <div className=\"absolute -right-4 bottom-20\">\r\n              <div className=\"rounded-2xl border border-green-500/20 bg-green-400/20 p-4 shadow-xl\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <div className=\"h-2 w-2 rounded-full bg-green-500\" />\r\n                  <span className=\"text-sm font-medium text-green-500\">New Milestone!</span>\r\n                </div>\r\n                <p className=\"mt-1 text-xs text-green-300\">Revenue target achieved</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\nexport default HeroSection;","import { Button } from \"@/components/ui/button\";\r\nimport Logo from \"@/assets/messold-icon.png\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport axios from \"axios\";\r\nimport { clearUser } from \"@/store/slices/UserSlice\";\r\nimport { resetBrand } from \"@/store/slices/BrandSlice\";\r\nimport { baseURL } from \"@/data/constant\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n        const response = await axios.post(`${baseURL}/api/auth/logout`, {}, { withCredentials: true });\r\n        if (response.status === 200) {\r\n            dispatch(clearUser());\r\n            dispatch(resetBrand());\r\n            navigate('/');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error logging out:', error);\r\n    }\r\n};\r\n  return (\r\n    <header className=\"sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\r\n      <div className=\"container px-10 flex h-16 items-center justify-between\">\r\n        <Link to=\"/\">\r\n          <div className=\"flex items-center gap-2 font-bold text-xl\">\r\n            <img src={Logo} alt=\"Messold Logo\" className=\"h-8 w-8\" />\r\n            <span>Parallels</span>\r\n          </div>\r\n        </Link>\r\n        <nav className=\"hidden md:flex gap-6\">\r\n          <Link to=\"#features\" className=\"text-sm font-medium hover:text-primary\">\r\n            Features\r\n          </Link>\r\n          <Link to=\"#integrations\" className=\"text-sm font-medium hover:text-primary\">\r\n            Integrations\r\n          </Link>\r\n          <Link to=\"#analytics\" className=\"text-sm font-medium hover:text-primary\">\r\n            Analytics\r\n          </Link>\r\n        </nav>\r\n        <div className=\"flex items-center gap-4\">\r\n          {user ? (\r\n            <div className=\"flex items-center gap-3\">\r\n              <Link to=\"/dashboard\" className=\"text-sm font-medium hover:text-primary\">\r\n                Dashboard\r\n              </Link>\r\n              <Button variant=\"outline\" onClick={handleLogout}>Log Out</Button>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <Link to=\"/login\" className=\"text-sm font-medium hover:text-primary\">\r\n                Log in\r\n              </Link>\r\n              <Link to=\"/login\" >\r\n              <Button>Get Started</Button>\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import CTA from './components/CTA'\r\nimport Features from './components/Features'\r\nimport Footer from './components/Footer'\r\nimport HeroSection from './components/HeroSection'\r\nimport Navbar from './components/Navbar'\r\n\r\nfunction LandingPage() {\r\n  return (\r\n    <div className=\"flex min-h-screen flex-col gradient-bg\">\r\n   <Navbar />\r\n   <main className=\"flex-1\">\r\n    <HeroSection />\r\n    <Features />\r\n    <CTA />\r\n   </main>\r\n   <Footer />\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default LandingPage","import Footer from \"./Footer\";\r\nimport Navbar from \"./Navbar\";\r\nimport { privacyPolicySections } from \"@/data\";\r\n\r\nfunction PrivacyPolicy() {\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-50 to-gray-100 text-slate-800\">\r\n      <Navbar />\r\n      <div className=\"max-w-4xl mx-auto p-6 my-5\">\r\n        <div className=\"bg-white shadow-lg rounded-2xl p-8\">\r\n          <h1 className=\"text-4xl font-extrabold text-center text-gray-900 mb-6\">Privacy Policy</h1>\r\n          \r\n          {privacyPolicySections.map((section) => (\r\n            <section key={section.title} className=\"mb-6 border-b pb-4 last:border-none\">\r\n              <h2 className=\"text-2xl font-semibold text-gray-900 mb-2\">{section.title}</h2>\r\n              {section.content.map((para: string | string[]) => (\r\n                typeof para === \"string\" ? (\r\n                  <p key={`${section.title}-${para.slice(0, 20)}`} className=\"text-gray-700 mb-2\">{para}</p>\r\n                ) : (\r\n                  <ul key={`${section.title}-list-${para[0]?.slice(0, 20)}`} className=\"list-disc pl-5 text-gray-700\">\r\n                    {para.map((item) => (\r\n                      <li key={`${section.title}-item-${item.slice(0, 20)}`}>{item}</li>\r\n                    ))}\r\n                  </ul>\r\n                )\r\n              ))}\r\n            </section>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrivacyPolicy;\r\n","// ExcelDownload.tsx\r\nimport * as XLSX from 'xlsx-js-style';\r\nimport { Button } from '@/components/ui/button';\r\nimport { FileDown } from 'lucide-react';\r\n\r\nexport interface ExcelStyle {\r\n  patternType: string;\r\n  fgColor: { rgb: string };\r\n}\r\n\r\nexport interface ExcelStyles {\r\n  green: ExcelStyle;\r\n  blue: ExcelStyle;\r\n  yellow: ExcelStyle;\r\n  red: ExcelStyle;\r\n  header: ExcelStyle;\r\n}\r\n\r\nexport interface ExcelThresholds {\r\n  avgSessions: number;\r\n  avgConvRate: number;\r\n}\r\n\r\nexport interface MonthlyData {\r\n  Month: string;\r\n  [key: string]: number | string;\r\n}\r\n\r\nexport interface RowData {\r\n  [key: string]: number | string | MonthlyData[];\r\n}\r\n\r\ninterface ExcelDownloadProps {\r\n  data: RowData[];\r\n  fileName: string;\r\n  primaryColumn: string;\r\n  secondaryColumns: string[];\r\n  monthlyDataKey: string;\r\n  monthlyMetrics: string[];\r\n  buttonClassName?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst defaultStyles: ExcelStyles = {\r\n  green: { patternType: 'solid', fgColor: { rgb: \"DCFCE7\" } },\r\n  blue: { patternType: 'solid', fgColor: { rgb: \"DBEAFE\" } },\r\n  yellow: { patternType: 'solid', fgColor: { rgb: \"FEF9C3\" } },\r\n  red: { patternType: 'solid', fgColor: { rgb: \"FEF2F2\" } },\r\n  header: { patternType: 'solid', fgColor: { rgb: \"F1F5F9\" } }\r\n};\r\n\r\nexport const calculateThresholds = (data: RowData[]): ExcelThresholds => {\r\n  let totalSessions = 0;\r\n  let totalConvRate = 0;\r\n  let count = 0;\r\n\r\n  data.forEach(row => {\r\n    if (typeof row['Total Sessions'] === 'number' && typeof row['Avg Conv. Rate'] === 'number') {\r\n      totalSessions += Number(row['Total Sessions']);\r\n      totalConvRate += Number(row['Avg Conv. Rate']);\r\n      count++;\r\n    }\r\n  });\r\n\r\n  return {\r\n    avgSessions: totalSessions / count,\r\n    avgConvRate: totalConvRate / count\r\n  };\r\n};\r\n\r\nconst getCellStyle = (\r\n  metric: string,\r\n  sessions: number | undefined,\r\n  convRate: number | undefined,\r\n  thresholds: ExcelThresholds,\r\n  styles: ExcelStyles\r\n) => {\r\n  if (\r\n    (metric === 'Sessions' || metric === 'Conv. Rate') &&\r\n    typeof sessions === 'number' &&\r\n    typeof convRate === 'number'\r\n  ) {\r\n    const isHighSessions = sessions >= thresholds.avgSessions;\r\n    const isGoodConversion = convRate >= thresholds.avgConvRate;\r\n\r\n    if (isHighSessions && isGoodConversion) return styles.green;\r\n    if (isHighSessions && !isGoodConversion) return styles.blue;\r\n    if (!isHighSessions && isGoodConversion) return styles.yellow;\r\n    return styles.red;\r\n  }\r\n  return undefined;\r\n};\r\n\r\nconst applyExcelStyles = (\r\n  worksheet: XLSX.WorkSheet,\r\n  data: RowData[],\r\n  months: string[],\r\n  secondaryColumns: string[],\r\n  monthlyDataKey: string,\r\n  monthlyMetrics: string[],\r\n  styles: ExcelStyles,\r\n  thresholds: ExcelThresholds\r\n) => {\r\n  const range = XLSX.utils.decode_range(worksheet['!ref'] || 'A1');\r\n\r\n  // Style header row\r\n  for (let C = range.s.c; C <= range.e.c; C++) {\r\n    const headerCell = XLSX.utils.encode_cell({ r: 0, c: C });\r\n    if (!worksheet[headerCell]) worksheet[headerCell] = { v: '' };\r\n    worksheet[headerCell].s = {\r\n      fill: styles.header,\r\n      font: { bold: true, color: { rgb: \"64748B\" } },\r\n      alignment: { horizontal: 'left' }\r\n    };\r\n  }\r\n\r\n  // Style data cells\r\n  data.forEach((row, dataIndex) => {\r\n    monthlyMetrics.forEach((metric, metricIndex) => {\r\n      const actualRow = dataIndex * monthlyMetrics.length + metricIndex + 2;\r\n\r\n      // Apply styles for each cell\r\n      const startCol = 2;\r\n      const endCol = months.length + secondaryColumns.length + 1;\r\n\r\n      for (let col = startCol; col <= endCol; col++) {\r\n        const cellRef = XLSX.utils.encode_cell({\r\n          r: actualRow - 1,\r\n          c: col\r\n        });\r\n\r\n        if (!worksheet[cellRef]) worksheet[cellRef] = { v: '' };\r\n\r\n        let cellStyle: any = {\r\n          font: { color: { rgb: \"000000\" } },\r\n          alignment: { horizontal: 'right' },\r\n          format: metric === 'Conv. Rate' ? '0.00%' : '#,##0'\r\n        };\r\n\r\n        let sessions: number | undefined;\r\n        let convRate: number | undefined;\r\n\r\n        if (col < startCol + secondaryColumns.length) {\r\n          sessions = row['Total Sessions'] as number;\r\n          convRate = row['Avg Conv. Rate'] as number;\r\n        } else {\r\n          const monthIndex = col - (startCol + secondaryColumns.length);\r\n          const monthKey = months[monthIndex];\r\n          const monthlyData = (row[monthlyDataKey] as MonthlyData[]).find(\r\n            m => `${m.Month.slice(0, 4)}-${m.Month.slice(4)}` === monthKey\r\n          );\r\n\r\n          if (monthlyData) {\r\n            sessions = monthlyData['Sessions'] as number;\r\n            convRate = monthlyData['Conv. Rate'] as number;\r\n          }\r\n        }\r\n\r\n        const fillStyle = getCellStyle(metric, sessions, convRate, thresholds, styles);\r\n        if (fillStyle) {\r\n          cellStyle.fill = fillStyle;\r\n        }\r\n\r\n        worksheet[cellRef].s = cellStyle;\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst ExcelDownload: React.FC<ExcelDownloadProps> = ({\r\n  data,\r\n  fileName,\r\n  primaryColumn,\r\n  secondaryColumns,\r\n  monthlyDataKey,\r\n  monthlyMetrics,\r\n  buttonClassName = '',\r\n  disabled = false,\r\n}) => {\r\n  const handleDownload = () => {\r\n    const workbook = XLSX.utils.book_new();\r\n    const sheetData: Array<Array<string | number | null>> = [];\r\n    const thresholds = calculateThresholds(data);\r\n\r\n    // Get all months\r\n    const months = Array.from(new Set(\r\n      data.flatMap(row => \r\n        (row[monthlyDataKey] as MonthlyData[]).map(m => \r\n          `${m.Month.slice(0, 4)}-${m.Month.slice(4)}`\r\n        )\r\n      )\r\n    )).sort().reverse();\r\n\r\n    // Create header row\r\n    const headerRow = [\r\n      primaryColumn,\r\n      'Metric',\r\n      ...secondaryColumns,\r\n      ...months,\r\n    ];\r\n    sheetData.push(headerRow);\r\n\r\n    // Create rows\r\n    data.forEach(row => {\r\n      monthlyMetrics.forEach(metric => {\r\n        const rowData: Array<string | number | null> = [];\r\n        \r\n        rowData.push(metric === monthlyMetrics[0] ? (row[primaryColumn] as string | number) : '');\r\n        rowData.push(metric);\r\n\r\n        secondaryColumns.forEach(column => {\r\n          const value = row[column] as number | string | undefined;\r\n          rowData.push(typeof value === 'number' ? Number(value.toFixed(2)) : null);\r\n        });\r\n\r\n        months.forEach(month => {\r\n          const monthData = (row[monthlyDataKey] as MonthlyData[]).find(\r\n            m => `${m.Month.slice(0, 4)}-${m.Month.slice(4)}` === month\r\n          );\r\n          const value = monthData ? monthData[metric] : null;\r\n          rowData.push(typeof value === 'number' ? Number(value.toFixed(2)) : null);\r\n        });\r\n\r\n        sheetData.push(rowData);\r\n      });\r\n    });\r\n\r\n    const worksheet = XLSX.utils.aoa_to_sheet(sheetData);\r\n    \r\n    // Apply styles\r\n    applyExcelStyles(\r\n      worksheet,\r\n      data,\r\n      months,\r\n      secondaryColumns,\r\n      monthlyDataKey,\r\n      monthlyMetrics,\r\n      defaultStyles,\r\n      thresholds\r\n    );\r\n\r\n    // Set column widths\r\n    const colWidths = [\r\n      { wch: 20 },\r\n      { wch: 12 },\r\n      ...secondaryColumns.map(() => ({ wch: 15 })),\r\n      ...months.map(() => ({ wch: 12 }))\r\n    ];\r\n    worksheet['!cols'] = colWidths;\r\n\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Conversion Data');\r\n    XLSX.writeFile(workbook, `${fileName}.xlsx`);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n    id='download-button'\r\n      onClick={handleDownload}\r\n      size=\"icon\"\r\n      variant=\"outline\"\r\n      className={buttonClassName}\r\n      disabled={disabled} \r\n    >\r\n      <FileDown className=\"h-4 w-4\" />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ExcelDownload;","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;// eslint-disable-line\r\n    [key: string]: any;\r\n  }>;// eslint-disable-line\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst DeviceTypeConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'device-conversion'\r\n\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const locale = useSelector((state: RootState) => state.locale.locale);\r\n\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const axiosInstance = createAxiosInstance();\r\n  // Use optional chaining to safely access date properties\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n        const response = await axiosInstance.post(`/api/analytics/deviceTypeConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  \r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Device\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  if (loading) {\r\n    return <Loader isLoading={loading} />\r\n  }\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Device based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                   \r\n                  />\r\n                </div>}\r\n                <NumberFormatSelector />\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n                locale={locale}\r\n              />\r\n            </div>\r\n        </div>\r\n\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DeviceTypeConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\n\r\nconst GenderConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'gender-conversion'\r\n\r\n  const user = useSelector((state: RootState)=>state.user.user)\r\n  const locale = useSelector((state: RootState)=>state.locale.locale);\r\n  const { brandId } = useParams();\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n        const response = await axiosInstance.post(`/api/analytics/genderConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);;\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Gender\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  if (loading) {\r\n    return <Loader isLoading={loading} />\r\n  }\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Gender based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                   \r\n                  />\r\n                </div>}\r\n                <NumberFormatSelector  />\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n                locale={locale}\r\n              />\r\n            </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GenderConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst AgeConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  const componentId = 'age-conversion';\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {}, shallowEqual\r\n  );\r\n  const locale = useSelector((state:RootState)=>state.locale.locale);\r\n  const user = useSelector((state: RootState) => state.user.user, shallowEqual);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n   \r\n      const response = await axiosInstance.post(`/api/analytics/ageConversionReport/${brandId}`, {\r\n        userId: user?.id, \r\n        startDate: startDate, \r\n        endDate: endDate, \r\n        ...transformedFilters  \r\n      }, { withCredentials: true });\r\n\r\n      const fetchedData = response.data || [];\r\n\r\n      setApiResponse(fetchedData);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Age\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"]; \r\n\r\n  if(loading){\r\n    return <Loader isLoading={loading} />\r\n  }\r\n\r\n  return (\r\n    <Card id=\"age-report\" className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent >\r\n\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Age based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                    defaultDate={{\r\n                      from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                      to: new Date()\r\n                    }}\r\n                  />\r\n                </div>}\r\n                <NumberFormatSelector />\r\n            <Button id=\"refresh\" onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <div id=\"filters\">\r\n            <FilterConversions componentId={componentId} /> \r\n            </div>\r\n  \r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button id=\"expand-button\" onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n                locale={locale}\r\n              />\r\n            </div>\r\n        </div>\r\n\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AgeConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst InterestConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'interest-conversion'\r\n\r\n  const user = useSelector((state: RootState) =>state.user.user);\r\n  const locale = useSelector((state: RootState)=>state.locale.locale);\r\n  const { brandId } = useParams();\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n    \r\n        const response = await axiosInstance.post(`/api/analytics/interestConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Interest\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  if (loading) {\r\n    return <Loader isLoading={loading} />\r\n  }\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Interest based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                   \r\n                  />\r\n                </div>}\r\n                <NumberFormatSelector  />\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId}/>\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n                locale={locale}\r\n              />\r\n            </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InterestConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ntype ApiResponse = {\r\n    reportType: string;\r\n    data: Array<{\r\n        DeviceType: string;\r\n        MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n        [key: string]: any;\r\n    }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst OperatingSystemConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n    const componentId = 'operatingSystem-conversion'\r\n\r\n    const user = useSelector((state: RootState) => state.user.user );\r\n    const locale = useSelector((state: RootState)=>state.locale.locale);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = () => {\r\n        setIsFullScreen(!isFullScreen);\r\n    };\r\n\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const filters = useSelector((state: RootState) => \r\n        state.conversionFilters[componentId] || {} , shallowEqual\r\n      );\r\n\r\n      const transformedFilters = useMemo(() => {\r\n        return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n          if (filter) {\r\n            const apiColumnName = {\r\n              \"Total Sessions\": \"sessionsFilter\",\r\n              \"Avg Conv Rate\": \"convRateFilter\",\r\n            }[column] || column;\r\n    \r\n            acc[apiColumnName] = filter;\r\n          }\r\n          return acc;\r\n        }, {});\r\n      }, [filters]);\r\n\r\n      \r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axiosInstance.post(`/api/analytics/operatingSystemConversionReport/${brandId}`, {\r\n                userId: user?.id,\r\n                startDate,\r\n                endDate,  ...transformedFilters  // Spread the transformed filters\r\n            });\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); \r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n    \r\n      useEffect(() => {\r\n        if (!isFullScreen) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [isFullScreen, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Operating System\";\r\n    const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n    if (loading) {\r\n        return <Loader isLoading={loading} />\r\n    }\r\n\r\n    return (\r\n        <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''} overflow-auto`}>\r\n            <CardContent>\r\n                <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                        <h2 className=\"text-lg font-medium\">Operating System based Conversion</h2>\r\n                        <Ga4Logo />\r\n                    </div>\r\n                    <div className=\"flex flex-wrap items-center gap-3\">\r\n                        {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                            <DatePickerWithRange\r\n                               \r\n                            />\r\n                        </div>}\r\n                        <NumberFormatSelector />\r\n                        <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                        </Button>\r\n                        <FilterConversions componentId={componentId} />\r\n                        <ExcelDownload\r\n                            data={apiResponse?.data || []}\r\n                            fileName={`${primaryColumn}_Conversion_Report`}\r\n                            primaryColumn={primaryColumn}\r\n                            secondaryColumns={secondaryColumns}\r\n                            monthlyDataKey={monthlyDataKey}\r\n                            monthlyMetrics={monthlyMetrics}\r\n                            disabled={loading}\r\n                        />\r\n                        <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                            {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"rounded-md overflow-hidden\">\r\n                        <div>\r\n                            <PerformanceSummary\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n                            />\r\n                            <ConversionTable\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                secondaryColumns={secondaryColumns}\r\n                                monthlyDataKey={monthlyDataKey}\r\n                                monthlyMetrics={monthlyMetrics}\r\n                                isFullScreen={isFullScreen}\r\n                                locale={locale}\r\n                            />\r\n                        </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default OperatingSystemConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '@/store';\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype ApiResponse = {\r\n    reportType: string;\r\n    data: Array<{\r\n        DeviceType: string;\r\n        MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n        [key: string]: any;\r\n    }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\n\r\nconst BrowserConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n  \r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n    const componentId = 'browser-conversion';\r\n    const locale = useSelector((state:RootState) => state.locale.locale)\r\n    const user = useSelector((state:RootState) => state.user.user);\r\n    const { brandId } = useParams();\r\n\r\n    const toggleFullScreen = () => {\r\n        setIsFullScreen(!isFullScreen);\r\n    };\r\n\r\n    const { sessionsFilter, convRateFilter } = useSelector((state: RootState) =>\r\n        state.conversionFilters[componentId] || { sessionsFilter: null, convRateFilter: null }\r\n    );\r\n\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const filters = useSelector((state: RootState) => \r\n        state.conversionFilters[componentId] || {} ,shallowEqual\r\n      );\r\n      const transformedFilters = useMemo(() => {\r\n        return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n          if (filter) {\r\n            const apiColumnName = {\r\n              \"Total Sessions\": \"sessionsFilter\",\r\n              \"Avg Conv Rate\": \"convRateFilter\",\r\n            }[column] || column;\r\n    \r\n            acc[apiColumnName] = filter;\r\n          }\r\n          return acc;\r\n        }, {});\r\n      }, [filters]);\r\n      \r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axiosInstance.post(`/api/analytics/browserConversionReport/${brandId}`, {\r\n                userId: user?.id,\r\n                startDate,\r\n                endDate, sessionsFilter, convRateFilter\r\n            });\r\n            const fetchedData = response.data || [];\r\n            setApiResponse(fetchedData);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); // Refresh every 5 minutes\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n    \r\n      useEffect(() => {\r\n        if (!isFullScreen) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [isFullScreen, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Browser\";\r\n    const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n    if(loading){\r\n        return <Loader isLoading={loading} /> \r\n    }\r\n\r\n    return (\r\n        <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n            <CardContent>\r\n\r\n                <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                        <h2 className=\"text-lg font-medium\">Browser based Conversion</h2>\r\n                        <Ga4Logo />\r\n                    </div>\r\n                    <div className=\"flex flex-wrap items-center gap-3\">\r\n                        {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                            <DatePickerWithRange\r\n                                defaultDate={{\r\n                                    from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                                    to: new Date()\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                        <NumberFormatSelector/>\r\n                        <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                        </Button>\r\n                        <FilterConversions componentId={componentId} />\r\n                        <ExcelDownload\r\n                            data={apiResponse?.data || []}\r\n                            fileName={`${primaryColumn}_Conversion_Report`}\r\n                            primaryColumn={primaryColumn}\r\n                            secondaryColumns={secondaryColumns}\r\n                            monthlyDataKey={monthlyDataKey}\r\n                            monthlyMetrics={monthlyMetrics}\r\n                            disabled={loading}\r\n                        />\r\n                        <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                            {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"rounded-md overflow-hidden\">\r\n                   \r\n                        <div>\r\n                            <PerformanceSummary data={apiResponse?.data || []} primaryColumn={primaryColumn} metricConfig={metricConfigs.sessionsAndConversion || {}} />\r\n                            <ConversionTable\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                secondaryColumns={secondaryColumns}\r\n                                monthlyDataKey={monthlyDataKey}\r\n                                monthlyMetrics={monthlyMetrics}\r\n                                isFullScreen={isFullScreen}\r\n                                locale = {locale}\r\n                            />\r\n                        </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default BrowserConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype ApiResponse = {\r\n    reportType: string;\r\n    data: Array<{\r\n        DeviceType: string;\r\n        MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n        [key: string]: any;\r\n    }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\n\r\nconst SourceConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n    const componentId = 'source-conversion'\r\n    const locale = useSelector((state: RootState)=> state.locale.locale)\r\n    const user = useSelector((state: RootState)=> state.user.user )\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = () => {\r\n        setIsFullScreen(!isFullScreen);\r\n    };\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const filters = useSelector((state: RootState) => \r\n        state.conversionFilters[componentId] || {} , shallowEqual\r\n      );\r\n\r\n      const transformedFilters = useMemo(() => {\r\n        return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n          if (filter) {\r\n            const apiColumnName = {\r\n              \"Total Sessions\": \"sessionsFilter\",\r\n              \"Avg Conv Rate\": \"convRateFilter\",\r\n            }[column] || column;\r\n    \r\n            acc[apiColumnName] = filter;\r\n          }\r\n          return acc;\r\n        }, {});\r\n      }, [filters]);\r\n      \r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axiosInstance.post(`/api/analytics/sourceConversionReport/${brandId}`, {\r\n                userId: user?.id,\r\n                startDate,\r\n                endDate, ...transformedFilters\r\n            });\r\n            const fetchedData = response.data || [];\r\n            setApiResponse(fetchedData);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); // Refresh every 5 minutes\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n    \r\n      useEffect(() => {\r\n        if (!isFullScreen) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [isFullScreen, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Source\";\r\n    const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n    if(loading){\r\n        return <Loader isLoading={loading} />\r\n    }\r\n\r\n    return (\r\n        <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n            <CardContent>\r\n\r\n                <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                        <h2 className=\"text-lg font-medium\">Source based Conversion</h2>\r\n                        <Ga4Logo />\r\n                    </div>\r\n                    <div className=\"flex flex-wrap items-center gap-3\">\r\n                        {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                            <DatePickerWithRange\r\n                            \r\n                            />\r\n                        </div>}\r\n                        <NumberFormatSelector />\r\n                        <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                        </Button>\r\n                        <FilterConversions componentId={componentId} />\r\n                        <ExcelDownload\r\n                            data={apiResponse?.data || []}\r\n                            fileName={`${primaryColumn}_Conversion_Report`}\r\n                            primaryColumn={primaryColumn}\r\n                            secondaryColumns={secondaryColumns}\r\n                            monthlyDataKey={monthlyDataKey}\r\n                            monthlyMetrics={monthlyMetrics}\r\n                            disabled={loading}\r\n                        />\r\n                        <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                            {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"rounded-md overflow-hidden\">\r\n                        <div>\r\n                            <PerformanceSummary data={apiResponse?.data || []} primaryColumn={primaryColumn} metricConfig={metricConfigs.sessionsAndConversion || {}} />\r\n                            <ConversionTable\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                secondaryColumns={secondaryColumns}\r\n                                monthlyDataKey={monthlyDataKey}\r\n                                monthlyMetrics={monthlyMetrics}\r\n                                isFullScreen={isFullScreen}\r\n                                locale={locale}\r\n                            />\r\n                        </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SourceConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ntype ApiResponse = {\r\n    reportType: string;\r\n    data: Array<{\r\n        DeviceType: string;\r\n        MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n        [key: string]: any;\r\n    }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst PageTitleConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n    const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n    const componentId = 'pageTitle-conversion'\r\n    const locale = useSelector((state : RootState)=> state.locale.locale)\r\n    const user = useSelector((state: RootState) => state.user.user , shallowEqual);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = () => {\r\n        setIsFullScreen(!isFullScreen);\r\n    };\r\n\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const filters = useSelector((state: RootState) => \r\n        state.conversionFilters[componentId] || {} , shallowEqual\r\n      );\r\n\r\n      const transformedFilters = useMemo(() => {\r\n        return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n          if (filter) {\r\n            const apiColumnName = {\r\n              \"Total Sessions\": \"sessionsFilter\",\r\n              \"Avg Conv Rate\": \"convRateFilter\",\r\n            }[column] || column;\r\n    \r\n            acc[apiColumnName] = filter;\r\n          }\r\n          return acc;\r\n        }, {});\r\n      }, [filters]);\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n        \r\n            const response = await axiosInstance.post(`/api/analytics/pageTitleConversionReport/${brandId}`, {\r\n                userId: user?.id, startDate: startDate, endDate: endDate, ...transformedFilters\r\n            }, { withCredentials: true })\r\n\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); // Refresh every 10 minutes\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n    \r\n      useEffect(() => {\r\n        if (!isFullScreen) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [isFullScreen, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Page Title\";\r\n    const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n    if(loading) {\r\n        return <Loader isLoading={loading} />\r\n    }\r\n    return (\r\n        <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''} overflow-auto`}>\r\n            <CardContent>\r\n                <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                        <h2 className=\"text-lg font-medium\">Page Title based Conversion</h2>\r\n                        <Ga4Logo />\r\n                    </div>\r\n                    <div className=\"flex flex-wrap items-center gap-3\">\r\n                        {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                            <DatePickerWithRange\r\n                               \r\n                            />\r\n                        </div>}\r\n                        <NumberFormatSelector />\r\n                        <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                        </Button>\r\n                        <FilterConversions componentId={componentId} />\r\n                        <ExcelDownload\r\n                            data={apiResponse?.data || []}\r\n                            fileName={`${primaryColumn}_Conversion_Report`}\r\n                            primaryColumn={primaryColumn}\r\n                            secondaryColumns={secondaryColumns}\r\n                            monthlyDataKey={monthlyDataKey}\r\n                            monthlyMetrics={monthlyMetrics}\r\n                            disabled={loading}\r\n                        />\r\n                        <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                            {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"rounded-md overflow-hidden\">\r\n                        <div>\r\n                            <PerformanceSummary\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n                            />\r\n                            <ConversionTable\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                secondaryColumns={secondaryColumns}\r\n                                monthlyDataKey={monthlyDataKey}\r\n                                monthlyMetrics={monthlyMetrics}\r\n                                isFullScreen={isFullScreen}\r\n                                locale={locale}\r\n                            />\r\n                        </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PageTitleConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ntype ApiResponse = {\r\n    reportType: string;\r\n    data: Array<{\r\n        DeviceType: string;\r\n        MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n        [key: string]: any;\r\n    }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n    dateRange: DateRange | undefined;\r\n}\r\n\r\nconst PagePathConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n      from: dateFrom,\r\n      to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n      const dispatch = useDispatch();\r\n    const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n    const componentId = 'pagePath-conversion'\r\n\r\n    const user  = useSelector((state: RootState) => state.user.user);\r\n    const locale = useSelector((state: RootState) => state.locale.locale);\r\n    const { brandId } = useParams();\r\n    const toggleFullScreen = () => {\r\n        setIsFullScreen(!isFullScreen);\r\n    };\r\n\r\n    const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n    const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n\r\n    const filters = useSelector((state: RootState) => \r\n        state.conversionFilters[componentId] || {} , shallowEqual\r\n      );\r\n\r\n      const transformedFilters = useMemo(() => {\r\n        return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n          if (filter) {\r\n            const apiColumnName = {\r\n              \"Total Sessions\": \"sessionsFilter\",\r\n              \"Avg Conv Rate\": \"convRateFilter\",\r\n            }[column] || column;\r\n    \r\n            acc[apiColumnName] = filter;\r\n          }\r\n          return acc;\r\n        }, {});\r\n      }, [filters]);\r\n      \r\n    const fetchData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axiosInstance.post(`/api/analytics/pagePathConversionReport/${brandId}`, {\r\n                userId: user?.id,\r\n                startDate,\r\n                endDate,  ...transformedFilters \r\n            });\r\n            const fetchedData = response.data || [];\r\n\r\n            setApiResponse(fetchedData);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); // Refresh every 5 minutes\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n      }, [propDateRange]);\r\n    \r\n      useEffect(() => {\r\n        if (!isFullScreen) {\r\n          if (propDateRange) {\r\n          dispatch(setDate({\r\n            from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n            to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n          }));\r\n        }\r\n        }\r\n      }, [isFullScreen, propDateRange]);\r\n\r\n    const handleManualRefresh = () => {\r\n        fetchData();\r\n    };\r\n\r\n    // Extract columns dynamically from the API response\r\n    const primaryColumn = \"Page Path\";\r\n    const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n    const monthlyDataKey = \"MonthlyData\";\r\n    const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n    if (loading) {\r\n        return <Loader isLoading={loading} />\r\n    }\r\n\r\n    return (\r\n        <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''} overflow-auto`}>\r\n            <CardContent>\r\n                <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                        <h2 className=\"text-lg font-medium\">Page path based Conversion</h2>\r\n                        <Ga4Logo />\r\n                    </div>\r\n                    <div className=\"flex flex-wrap items-center gap-3\">\r\n                        {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                            <DatePickerWithRange\r\n                               \r\n                            />\r\n                        </div>}\r\n                        <NumberFormatSelector />\r\n                        <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n                            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n                        </Button>\r\n                        <FilterConversions componentId={componentId} />\r\n                        <ExcelDownload\r\n                            data={apiResponse?.data || []}\r\n                            fileName={`${primaryColumn}_Conversion_Report`}\r\n                            primaryColumn={primaryColumn}\r\n                            secondaryColumns={secondaryColumns}\r\n                            monthlyDataKey={monthlyDataKey}\r\n                            monthlyMetrics={monthlyMetrics}\r\n                            disabled={loading}\r\n                        />\r\n                        <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n                            {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"rounded-md overflow-hidden\">\r\n                        <div>\r\n                            <PerformanceSummary\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n                            />\r\n                            <ConversionTable\r\n                                data={apiResponse?.data || []}\r\n                                primaryColumn={primaryColumn}\r\n                                secondaryColumns={secondaryColumns}\r\n                                monthlyDataKey={monthlyDataKey}\r\n                                monthlyMetrics={monthlyMetrics}\r\n                                isFullScreen={isFullScreen}\r\n                                locale={locale}\r\n                            />\r\n                        </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PagePathConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst LandingPageConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'landingPage-conversion'\r\n\r\n  const locale = useSelector((state: RootState) => state.locale.locale)\r\n  const user = useSelector((state: RootState) => state.user.user, shallowEqual);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen); \r\n  };\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) =>\r\n    state.conversionFilters[componentId] || {}, shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axiosInstance.post(`/api/analytics/pageConversionReport/${brandId}`, {\r\n        userId: user?.id,\r\n        startDate,\r\n        endDate, ...transformedFilters  // Spread the transformed filters\r\n      });\r\n      const fetchedData = response.data || [];\r\n      setApiResponse(fetchedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n        dispatch(setDate({\r\n          from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n          to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n        }));\r\n      }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Landing Page\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  if (loading) {\r\n    return <Loader isLoading={loading} />\r\n  }\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''} overflow-auto`}>\r\n      <CardContent>\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Landing Page based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n            {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n              <DatePickerWithRange\r\n               \r\n              />\r\n            </div>}\r\n            <NumberFormatSelector  />\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n                locale={locale}\r\n              />\r\n            </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LandingPageConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\n\r\nconst RegionConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'region-conversion'\r\n  const locale = useSelector((state : RootState)=> state.locale.locale);\r\n  const user = useSelector((state: RootState)=> state.user.user);\r\n  const { brandId } = useParams();\r\n\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n  \r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n        const response = await axiosInstance.post(`/api/analytics/regionConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 3 *60 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Region\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  if (loading) {\r\n    return <Loader isLoading={loading} />\r\n  }\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Region based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                  \r\n                  />\r\n                </div>}\r\n                <NumberFormatSelector />\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n\r\n            <div>\r\n              <PerformanceSummary data={apiResponse?.data || []} primaryColumn={primaryColumn} metricConfig={metricConfigs.sessionsAndConversion || {}}/>\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n                locale={locale}\r\n              />\r\n            </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RegionConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst CityTypeConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'city-conversion';\r\n  \r\n  const user  = useSelector((state:RootState) =>state.user.user);\r\n  const locale = useSelector((state:RootState)=>state.locale.locale);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n        const response = await axiosInstance.post(`/api/analytics/cityConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n     \r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"City\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  if(loading){\r\n    return <Loader isLoading={loading} />\r\n  }\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''} overflow-auto`}>\r\n      <CardContent>\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">City based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                  />\r\n                </div>}\r\n                <NumberFormatSelector />\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n             <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n                locale={locale}\r\n              />\r\n            </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CityTypeConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst CountryConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'country-conversion';\r\n  const locale = useSelector((state:RootState) =>state.locale.locale);\r\n  const user = useSelector((state: RootState)=> state.user.user , shallowEqual);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n        const response = await axiosInstance.post(`/api/analytics/countryConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  const primaryColumn = \"Country\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  if(loading){\r\n    return <Loader isLoading={loading} />\r\n  }\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Country based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                  />\r\n                </div>}\r\n                <NumberFormatSelector />\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n            <div>\r\n              <PerformanceSummary\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                metricConfig={metricConfigs.sessionsAndConversion || {}}\r\n              />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n                locale={locale}\r\n              />\r\n            </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CountryConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from '@/store';\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\n\r\nconst CampaignConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'campaign-conversion';\r\n  const locale = useSelector((state: RootState) => state.locale.locale);\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) =>\r\n    state.conversionFilters[componentId] || {}, shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axiosInstance.post(`/api/analytics/campaignConversionReport/${brandId}`, {\r\n        userId: user?.id,\r\n        startDate,\r\n        endDate, ...transformedFilters  // Spread the transformed filters\r\n      });\r\n      const fetchedData = response.data || [];\r\n      setApiResponse(fetchedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n        dispatch(setDate({\r\n          from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n          to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n        }));\r\n      }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Campaign\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  if(loading){\r\n    return <Loader isLoading={loading} />\r\n  }\r\n\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Campaign based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n            {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n              <DatePickerWithRange\r\n                defaultDate={{\r\n                  from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                  to: new Date()\r\n                }}\r\n              />\r\n            </div>}\r\n            <NumberFormatSelector />\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n            <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n            <div>\r\n              <PerformanceSummary data={apiResponse?.data || []} primaryColumn={primaryColumn} metricConfig={metricConfigs.sessionsAndConversion || {}} />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n                locale={locale}\r\n              />\r\n            </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CampaignConversion;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport ConversionTable from \"./Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Ga4Logo } from \"@/data/logo\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Maximize, Minimize, RefreshCw } from \"lucide-react\";\r\nimport { DateRange } from \"react-day-picker\";\r\nimport createAxiosInstance from \"./axiosInstance\";\r\nimport PerformanceSummary from \"./PerformanceSummary\";\r\nimport ExcelDownload from \"./ExcelDownload\";\r\nimport FilterConversions from \"./Filter\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport { DatePickerWithRange } from \"@/components/dashboard_component/DatePickerWithRange\";\r\nimport { setDate } from \"@/store/slices/DateSlice\";\r\nimport { metricConfigs } from \"@/data\";\r\nimport NumberFormatSelector from \"@/components/dashboard_component/NumberFormatSelector\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\n\r\ntype ApiResponse = {\r\n  reportType: string;\r\n  data: Array<{\r\n    DeviceType: string;\r\n    MonthlyData?: Array<{ Month: string;[key: string]: any }>;\r\n    [key: string]: any;\r\n  }>;\r\n};\r\n\r\ninterface CityBasedReportsProps {\r\n  dateRange: DateRange | undefined;\r\n}\r\n\r\nconst ChannelConversion: React.FC<CityBasedReportsProps> = ({ dateRange: propDateRange }) => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n\r\n  const dispatch = useDispatch();\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isFullScreen, setIsFullScreen] = useState<boolean>(false);\r\n  const componentId = 'channel-conversion'\r\n  const locale = useSelector((state:RootState) => state.locale.locale);\r\n  const user = useSelector((state: RootState) => state.user.user) ;\r\n  const { brandId } = useParams();\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n  const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n  const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n  const axiosInstance = createAxiosInstance();\r\n\r\n  const filters = useSelector((state: RootState) => \r\n    state.conversionFilters[componentId] || {} , shallowEqual\r\n  );\r\n\r\n  const transformedFilters = useMemo(() => {\r\n    return Object.entries(filters).reduce<Record<string, any>>((acc, [column, filter]) => {\r\n      if (filter) {\r\n        const apiColumnName = {\r\n          \"Total Sessions\": \"sessionsFilter\",\r\n          \"Avg Conv Rate\": \"convRateFilter\",\r\n        }[column] || column;\r\n\r\n        acc[apiColumnName] = filter;\r\n      }\r\n      return acc;\r\n    }, {});\r\n  }, [filters]);\r\n\r\nconst fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n    \r\n        const response = await axiosInstance.post(`/api/analytics/channelConversionReport/${brandId}`, {\r\n            userId: user?.id,\r\n            startDate,\r\n            endDate,  ...transformedFilters  // Spread the transformed filters\r\n        });\r\n        const fetchedData = response.data || [];\r\n        setApiResponse(fetchedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n}, [brandId, startDate, endDate, transformedFilters, user?.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); // Refresh every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n  }, [propDateRange]);\r\n\r\n  useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (propDateRange) {\r\n      dispatch(setDate({\r\n        from: propDateRange.from ? propDateRange.from.toISOString() : undefined, // Convert Date to string\r\n        to: propDateRange.to ? propDateRange.to.toISOString() : undefined // Convert Date to string\r\n      }));\r\n    }\r\n    }\r\n  }, [isFullScreen, propDateRange]);\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchData();\r\n  };\r\n\r\n  // Extract columns dynamically from the API response\r\n  const primaryColumn = \"Channel\";\r\n  const secondaryColumns = [\"Total Sessions\", \"Avg Conv. Rate\"];\r\n  const monthlyDataKey = \"MonthlyData\";\r\n  const monthlyMetrics = [\"Sessions\", \"Conv. Rate\"];\r\n\r\n  if (loading) {\r\n    return <Loader isLoading={loading} />\r\n  }\r\n  return (\r\n    <Card className={`${isFullScreen ? 'fixed inset-0 z-50 m-0' : ''}`}>\r\n      <CardContent>\r\n\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <h2 className=\"text-lg font-medium\">Channel based Conversion</h2>\r\n            <Ga4Logo />\r\n          </div>\r\n          <div className=\"flex flex-wrap items-center gap-3\">\r\n          {isFullScreen && <div className=\"transition-transform duration-300 ease-in-out hover:scale-105\">\r\n                  <DatePickerWithRange\r\n                    defaultDate={{\r\n                      from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n                      to: new Date()\r\n                    }}\r\n                  />\r\n                </div>}\r\n                <NumberFormatSelector />\r\n            <Button onClick={handleManualRefresh} disabled={loading} size=\"icon\" variant=\"outline\">\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n            <FilterConversions componentId={componentId} />\r\n              <ExcelDownload\r\n              data={apiResponse?.data || []}\r\n              fileName={`${primaryColumn}_Conversion_Report`}\r\n              primaryColumn={primaryColumn}\r\n              secondaryColumns={secondaryColumns}\r\n              monthlyDataKey={monthlyDataKey}\r\n              monthlyMetrics={monthlyMetrics}\r\n              disabled={loading}\r\n            />\r\n            <Button onClick={toggleFullScreen} size=\"icon\" variant=\"outline\">\r\n              {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-md overflow-hidden\">\r\n            <div>\r\n              <PerformanceSummary data={apiResponse?.data || []} primaryColumn={primaryColumn} metricConfig={metricConfigs.sessionsAndConversion || {}} />\r\n              <ConversionTable\r\n                data={apiResponse?.data || []}\r\n                primaryColumn={primaryColumn}\r\n                secondaryColumns={secondaryColumns}\r\n                monthlyDataKey={monthlyDataKey}\r\n                monthlyMetrics={monthlyMetrics}\r\n                isFullScreen={isFullScreen}\r\n                locale={locale}\r\n              />\r\n            </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChannelConversion;\r\n","import React, { useState,useMemo } from 'react';\r\nimport CollapsibleSidebar from '../Dashboard/CollapsibleSidebar';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Radar } from 'lucide-react';\r\nimport { useTokenError } from '@/context/TokenErrorContext';\r\nimport NoGA4AcessPage from '../ReportPage/NoGA4AccessPage.';\r\nimport DeviceTypeConversion from './components/DeviceConversion';\r\nimport GenderConversion from './components/GenderConversion';\r\nimport AgeConversion from './components/AgeConversion';\r\nimport { CustomTabs } from './components/CustomTabs';\r\nimport InterestConversion from './components/InterestConversion';\r\nimport OperatingSystemConversion from './components/OperatingSystemConversion';\r\nimport BrowserConversion from './components/BrowserConversion';\r\nimport SourceConversion from './components/SourceConversion';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from \"@/store/index.ts\";\r\nimport Header from '@/components/dashboard_component/Header';\r\nimport ConnectPlatform from '../ReportPage/ConnectPlatformPage';\r\nimport HelpDeskModal from '@/components/dashboard_component/HelpDeskModal';\r\nimport PageTitleConversion from './components/PageTitleConversion';\r\nimport PagePathConversion from './components/PagePathConversion';\r\nimport LandingPageConversion from './components/LandingPageConversion';\r\nimport RegionConversion from './components/RegionConversion';\r\nimport CityTypeConversion from './components/CityConversion';\r\nimport CountryConversion from './components/CountryConversion';\r\nimport CampaignConversion from './components/CampaignConversion';\r\nimport ChannelConversion from './components/ChannelConversion';\r\nimport MissingDateWarning from '@/components/dashboard_component/Missing-Date-Waning';\r\n\r\nconst ConversionLens: React.FC = () => {\r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n  const { brandId } = useParams<{ brandId: string }>();\r\n  const brands = useSelector((state: RootState) => state.brand.brands);\r\n  const selectedBrand = brands.find((brand) => brand._id === brandId);\r\n  const hasGA4Account = selectedBrand?.ga4Account ?? false;\r\n  const { tokenError } = useTokenError();\r\n\r\n  const [activeTab, setActiveTab] = useState('age');\r\n \r\n\r\n  const tabs = [\r\n    { label: 'Age', value: 'age' },\r\n    { label: 'Gender', value: 'gender' },\r\n    { label: 'Interest', value: 'interest' },\r\n    { label: 'Device', value: 'device' },\r\n    { label: 'Operating System', value: 'operatingSystem' },\r\n    { label: 'Browser', value: 'browser' },\r\n    { label: 'Source', value: 'source' },\r\n    { label: 'Channel', value: 'channel' },\r\n    { label: 'Campaign', value: 'campaign' },\r\n    { label: 'Country', value: 'country' },\r\n    { label: 'City', value: 'city' },\r\n    { label: 'Region', value: 'region' },\r\n    { label: 'Landing Page', value: 'landingPage' },\r\n    { label: 'Page Path', value: 'pagePath' },\r\n    { label: 'Page Title', value: 'pageTitle' }\r\n  ];\r\n\r\n\r\n\r\n  const handleTabChange = (value: string) => {\r\n    setActiveTab(value);\r\n  };\r\n\r\n  if (tokenError) {\r\n    return <NoGA4AcessPage />;\r\n  }\r\n\r\n\r\n  if (!hasGA4Account) {\r\n    return <ConnectPlatform\r\n      platform=\"google analytics\"\r\n      brandId={brandId ?? ''}\r\n      onSuccess={(platform, accountName, accountId) => {\r\n        console.log(`Successfully connected ${platform} account: ${accountName} (${accountId})`);\r\n      }} />;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <CollapsibleSidebar />\r\n      \r\n         <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n         {(!date.from || !date.to) ? (\r\n          <MissingDateWarning />\r\n        ) : (\r\n          <>\r\n            {/* Header */}\r\n            <div className=\"flex-none\">\r\n              <Header\r\n                title=\"Conversion Lens\"\r\n                Icon={Radar}\r\n                showDatePicker={true}\r\n              />\r\n\r\n              <div id=\"report-tab\" className=\"bg-white px-6 sticky top-0 z-10 w-full\">\r\n                <CustomTabs tabs={tabs} activeTab={activeTab} onTabChange={handleTabChange} />\r\n              </div>\r\n            </div>\r\n            {/* Scrollable Content */}\r\n            <div className=\"flex-1 overflow-auto\">\r\n              <div className=\"px-6 py-4 space-y-6\">\r\n                {activeTab === 'age' && <div id=\"age-conversion-report\">\r\n                  <AgeConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n                {activeTab === 'gender' && <div id=\"gender\">\r\n                  <GenderConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n\r\n                {activeTab === 'interest' && <div id=\"interest\">\r\n                  <InterestConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n\r\n                {activeTab === 'device' && <div id=\"device\" >\r\n                  <DeviceTypeConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n                {activeTab === 'operatingSystem' && <div id=\"operatingSystem\" >\r\n                  <OperatingSystemConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n                {activeTab === 'browser' && <div id=\"browser\">\r\n                  <BrowserConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n\r\n                {activeTab === 'source' && <div id=\"source\" >\r\n                  <SourceConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n\r\n                {activeTab === 'channel' && <div id=\"channel\" >\r\n                  <ChannelConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n\r\n                {activeTab === 'campaign' && <div id=\"campaign\">\r\n                  <CampaignConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n                {activeTab === 'country' && <div id=\"country\">\r\n                  <CountryConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n                {activeTab === 'city' && <div id=\"city\">\r\n                  <CityTypeConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n\r\n                {activeTab === 'region' && <div id=\"region\" >\r\n                  <RegionConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n                {activeTab === 'landingPage' && <div id=\"landingPage\" >\r\n                  <LandingPageConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n                {activeTab === 'pagePath' && <div id=\"pagePath\">\r\n                  <PagePathConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n\r\n                {activeTab === 'pageTitle' && <div id=\"pageTitle\" >\r\n                  <PageTitleConversion dateRange={{\r\n                    from: date.from ? new Date(date.from) : undefined,\r\n                    to: date.to ? new Date(date.to) : undefined\r\n                  }} />\r\n                </div>}\r\n              </div>\r\n              <HelpDeskModal />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n     \r\n      </div>\r\n      );\r\n};\r\n\r\n      export default ConversionLens;","import React, { useState, useEffect, useRef, useMemo } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Card } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport { FacebookLogo } from \"@/data/logo\"\r\nimport {\r\n  ChevronDown,\r\n  ChevronRight,\r\n  Tag,\r\n  Filter,\r\n  Plus,\r\n  LayoutGrid,\r\n  SlidersHorizontal,\r\n  Check,\r\n  Maximize,\r\n  Minimize,\r\n  Edit,\r\n  X,\r\n} from \"lucide-react\"\r\nimport type { RootState } from \"@/store\"\r\nimport { addLabelToCampaign, removeLabelFromCampaign } from \"@/store/slices/campaignLabelsSlice\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\r\nimport ColumnManagementSheet from \"@/pages/AnalyticsDashboard/Components/ColumnManagementSheet\"\r\n\r\n// Enhanced label colors with better contrast and visual hierarchy\r\nconst LABEL_COLORS = [\r\n  \"bg-red-100 text-red-800 border border-red-200 hover:bg-red-200\",\r\n  \"bg-blue-100 text-blue-800 border border-blue-200 hover:bg-blue-200\",\r\n  \"bg-green-100 text-green-800 border border-green-200 hover:bg-green-200\",\r\n  \"bg-yellow-100 text-yellow-800 border border-yellow-200 hover:bg-yellow-200\",\r\n  \"bg-purple-100 text-purple-800 border border-purple-200 hover:bg-purple-200\",\r\n  \"bg-pink-100 text-pink-800 border border-pink-200 hover:bg-pink-200\",\r\n  \"bg-indigo-100 text-indigo-800 border border-indigo-200 hover:bg-indigo-200\",\r\n  \"bg-orange-100 text-orange-800 border border-orange-200 hover:bg-orange-200\",\r\n]\r\n\r\n// Using a single fixed width for all columns except Campaign and Labels\r\nconst DEFAULT_COLUMN_WIDTH = \"85px\"\r\n\r\ninterface Campaign {\r\n  campaignName: string\r\n  [key: string]: string | number\r\n}\r\n\r\ninterface MetaCampaignTableProps {\r\n  data: {\r\n    account_name: string\r\n    account_id: string\r\n    campaigns: Campaign[]\r\n  }\r\n  height: string\r\n  type?: string\r\n}\r\n\r\n// New interface for grouped campaigns\r\ninterface GroupedCampaign {\r\n  label: string\r\n  campaigns: Campaign[]\r\n  isExpanded: boolean\r\n}\r\n\r\nconst MetaCampaignTable: React.FC<MetaCampaignTableProps> = ({ data, height, type }) => {\r\n  const dispatch = useDispatch()\r\n  const [draggedCampaign, setDraggedCampaign] = useState<string | null>(null)\r\n  const [dragOverCampaign, setDragOverCampaign] = useState<string | null>(null)\r\n  const [isFullScreen, setIsFullScreen] = useState(false)\r\n  const [draggedColumn, setDraggedColumn] = useState<string | null>(null)\r\n  const [dragOverColumn, setDragOverColumn] = useState<string | null>(null)\r\n  const [editingLabel, setEditingLabel] = useState<string | null>(null)\r\n  const [editLabelValue, setEditLabelValue] = useState(\"\")\r\n  const [isEditMode, setIsEditMode] = useState(false)\r\n\r\n  const [visibleColumns, setVisibleColumns] = useState<string[]>([])\r\n  const [columnOrder, setColumnOrder] = useState<string[]>([])\r\n  const [frozenColumns, setFrozenColumns] = useState<string[]>([\"Campaign\", \"Labels\"])\r\n\r\n  const [isGroupingEnabled, setIsGroupingEnabled] = useState(true)\r\n  const [groupedCampaigns, setGroupedCampaigns] = useState<GroupedCampaign[]>([])\r\n  const [ungroupedCampaigns, setUngroupedCampaigns] = useState<Campaign[]>([])\r\n  const [statusFilter, setStatusFilter] = useState<'all' | 'active' | 'paused'>('all')\r\n\r\n  const tableRef = useRef<HTMLDivElement>(null)\r\n  const columnRefs = useRef<{ [key: string]: HTMLTableCellElement | null }>({})\r\n  const newLabelInputRef = useRef<HTMLInputElement>(null)\r\n\r\n  const { labels } = useSelector((state: RootState) => state.campaignLabels)\r\n\r\n  const accountLabels = useMemo(() => {\r\n    return data.account_id ? labels[data.account_id] || {} : {};\r\n  }, [labels, data.account_id])\r\n\r\n  const PREDEFINED_LABELS = [\"TOFU\", \"MOFU\", \"BOFU\", \"TOFU+MOFU\"]\r\n\r\n  // Get all unique labels across all campaigns\r\n  const allUniqueLabels = useMemo(() => {\r\n    const uniqueLabels = new Set<string>()\r\n    Object.values(accountLabels).forEach((labelArray) => {\r\n      labelArray?.forEach((label) => {\r\n        uniqueLabels.add(label)\r\n      })\r\n    })\r\n    return Array.from(uniqueLabels)\r\n  }, [accountLabels])\r\n\r\n  const hasAnyLabels = useMemo(() => {\r\n    return allUniqueLabels.length > 0\r\n  }, [allUniqueLabels])\r\n\r\n  // Filter campaigns by status\r\n  const filterCampaignsByStatus = (campaigns: Campaign[]) => {\r\n    if (statusFilter === 'all') return campaigns;\r\n    return campaigns.filter(campaign => {\r\n      // Check all possible status property names and formats\r\n      const statusValue = campaign.status || campaign.Status || '';\r\n      const status = String(statusValue).toLowerCase();\r\n\r\n      return statusFilter === 'active' ? status === 'active' : status === 'paused';\r\n    });\r\n  };\r\n\r\n  // Filter campaigns before processing\r\n  const filteredCampaigns = useMemo(() => {\r\n    return filterCampaignsByStatus(data.campaigns);\r\n  }, [data.campaigns, statusFilter]);\r\n\r\n  // Initialize column state\r\n  useEffect(() => {\r\n    if (data.campaigns.length > 0) {\r\n      const columns = Object.keys(data.campaigns[0])\r\n      // Always include Labels column\r\n      const initialColumns = columns.filter((col) => col !== \"Labels\")\r\n      const initialVisibleColumns = [...initialColumns, \"Labels\"]\r\n      setVisibleColumns(initialVisibleColumns)\r\n\r\n      // Create column order with Campaign first, then Labels, then others\r\n      const baseColumns = [...initialColumns].filter((col) => col !== \"Campaign\" && col !== \"campaignName\")\r\n      const orderedColumns = [\"Campaign\", \"Labels\", ...baseColumns, \"campaignName\"]\r\n      setColumnOrder(orderedColumns)\r\n    }\r\n  }, [data.campaigns])\r\n\r\n\r\n  // Group campaigns by labels\r\n  useEffect(() => {\r\n    if (isGroupingEnabled && hasAnyLabels) {\r\n      // Create a map to group campaigns by label\r\n      const labelMap: { [key: string]: Campaign[] } = {}\r\n\r\n      // Initialize each label with an empty array\r\n      allUniqueLabels.forEach((label) => {\r\n        labelMap[label] = []\r\n      })\r\n\r\n      // Group campaigns by labels\r\n      const unGrouped: Campaign[] = []\r\n\r\n      filteredCampaigns.forEach((campaign) => {\r\n        const campaignLabels = accountLabels[campaign.Campaign] || []\r\n\r\n        if (campaignLabels.length > 0) {\r\n          // Add campaign to each of its label groups\r\n          campaignLabels.forEach((label) => {\r\n            labelMap[label].push(campaign)\r\n          })\r\n        } else {\r\n          // Add to ungrouped\r\n          unGrouped.push(campaign)\r\n        }\r\n      })\r\n\r\n      // Convert to array format with expanded state\r\n      const grouped = Object.entries(labelMap)\r\n        .filter(([, campaigns]) => campaigns.length > 0) // Only include groups with campaigns\r\n        .map(([label, campaigns]) => ({\r\n          label,\r\n          campaigns,\r\n          isExpanded: true,\r\n        }))\r\n\r\n      setGroupedCampaigns(grouped)\r\n      setUngroupedCampaigns(unGrouped)\r\n    } else {\r\n      setGroupedCampaigns([])\r\n      setUngroupedCampaigns(filteredCampaigns)\r\n    }\r\n  }, [filteredCampaigns, accountLabels, isGroupingEnabled, hasAnyLabels, allUniqueLabels])\r\n\r\n  const labelColorMap = React.useMemo(() => {\r\n    const map = new Map<string, string>()\r\n    let colorIndex = 0\r\n\r\n    allUniqueLabels.forEach((label) => {\r\n      map.set(label, LABEL_COLORS[colorIndex % LABEL_COLORS.length])\r\n      colorIndex++\r\n    })\r\n\r\n    return map\r\n  }, [allUniqueLabels])\r\n\r\n  // Calculate left position for frozen columns\r\n  const getLeftPosition = (columnIndex: number): number => {\r\n    let position = 0\r\n\r\n    // Get only the visible columns in the correct order\r\n    const visibleOrderedColumns = columnOrder.filter((col) => visibleColumns.includes(col))\r\n\r\n    for (let i = 0; i < columnIndex; i++) {\r\n      const column = visibleOrderedColumns[i]\r\n      if (frozenColumns.includes(column)) {\r\n        const columnElement = columnRefs.current[column]\r\n        if (columnElement) {\r\n          position += columnElement.offsetWidth\r\n        }\r\n      }\r\n    }\r\n\r\n    return position\r\n  }\r\n\r\n  const handleAddLabel = (campaignId: string, label: string) => {\r\n    if (label) {\r\n      dispatch(\r\n        addLabelToCampaign({\r\n          accountId: data.account_id,\r\n          campaignId,\r\n          label,\r\n        }),\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  const handleRemoveLabel = (campaignId: string, label: string) => {\r\n    dispatch(\r\n      removeLabelFromCampaign({\r\n        accountId: data.account_id,\r\n        campaignId,\r\n        label,\r\n      }),\r\n    )\r\n  }\r\n\r\n  const handleCreateNewLabel = (campaignId: string) => {\r\n    if (editLabelValue) {\r\n      handleAddLabel(campaignId, editLabelValue)\r\n      setEditLabelValue(\"\")\r\n      setEditingLabel(null)\r\n    }\r\n  }\r\n\r\n  // Get column style based on column name\r\n  const getColumnStyle = (column: string) => {\r\n    if (column === \"Campaign\") {\r\n      return { width: \"auto\", minWidth: \"200px\" }\r\n    }\r\n    if (column === \"Labels\") {\r\n      return { width: \"auto\", minWidth: \"150px\" }\r\n    }\r\n\r\n    // All other columns get the fixed width\r\n    return {\r\n      width: DEFAULT_COLUMN_WIDTH,\r\n      minWidth: DEFAULT_COLUMN_WIDTH,\r\n    }\r\n  }\r\n\r\n  // Campaign drag and drop handlers\r\n  const handleDragStart = (campaignId: string) => {\r\n    setDraggedCampaign(campaignId)\r\n  }\r\n\r\n  const handleDragOver = (e: React.DragEvent, campaignId: string) => {\r\n    e.preventDefault()\r\n    if (campaignId !== draggedCampaign) {\r\n      setDragOverCampaign(campaignId)\r\n    }\r\n  }\r\n\r\n  const handleDrop = (targetCampaignId: string) => {\r\n    if (!draggedCampaign || draggedCampaign === targetCampaignId) return\r\n\r\n    // Reorder campaigns logic would go here\r\n    // For now, just reset the state\r\n    setDraggedCampaign(null)\r\n    setDragOverCampaign(null)\r\n\r\n    // Note: In a real implementation, you would dispatch an action to update the order in your Redux store\r\n    console.log(`Dragged ${draggedCampaign} and dropped on ${targetCampaignId}`)\r\n  }\r\n\r\n  const handleDragEnd = () => {\r\n    setDraggedCampaign(null)\r\n    setDragOverCampaign(null)\r\n  }\r\n\r\n  // Column drag and drop handlers\r\n  const handleColumnDragStart = (columnName: string) => {\r\n    setDraggedColumn(columnName)\r\n  }\r\n\r\n  const handleColumnDragOver = (e: React.DragEvent, columnName: string) => {\r\n    e.preventDefault()\r\n    if (columnName !== draggedColumn) {\r\n      setDragOverColumn(columnName)\r\n    }\r\n  }\r\n\r\n  const handleColumnDrop = (targetColumnName: string) => {\r\n    if (!draggedColumn || draggedColumn === targetColumnName) return\r\n\r\n    // Reorder columns\r\n    const draggedIndex = columnOrder.indexOf(draggedColumn)\r\n    const targetIndex = columnOrder.indexOf(targetColumnName)\r\n\r\n    if (draggedIndex !== -1 && targetIndex !== -1) {\r\n      const newColumnOrder = [...columnOrder]\r\n      newColumnOrder.splice(draggedIndex, 1)\r\n      newColumnOrder.splice(targetIndex, 0, draggedColumn)\r\n      setColumnOrder(newColumnOrder)\r\n    }\r\n\r\n    setDraggedColumn(null)\r\n    setDragOverColumn(null)\r\n  }\r\n\r\n  const handleColumnDragEnd = () => {\r\n    setDraggedColumn(null)\r\n    setDragOverColumn(null)\r\n  }\r\n\r\n  // Toggle full screen mode\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen)\r\n  }\r\n\r\n  // Toggle group expansion\r\n  const toggleGroupExpansion = (labelIndex: number) => {\r\n    const updatedGroups = [...groupedCampaigns]\r\n    updatedGroups[labelIndex].isExpanded = !updatedGroups[labelIndex].isExpanded\r\n    setGroupedCampaigns(updatedGroups)\r\n  }\r\n\r\n  // Calculate summary values for a group\r\n  const calculateGroupSummary = (campaigns: Campaign[]) => {\r\n    const summary: { [key: string]: number | string } = {}\r\n\r\n    // Get columns that should be visible in the summary\r\n    const summaryColumns = columnOrder.filter(\r\n      (col) => visibleColumns.includes(col) && col !== \"Campaign\" && col !== \"Labels\",\r\n    )\r\n\r\n    // Define different calculation methods for specific columns\r\n    const calculationMethods: { [key: string]: (values: number[], campaigns: Campaign[]) => number } = {\r\n      \"Conversion Rate\": (_, campaigns) => {\r\n        const totalLinkClicks = campaigns.reduce((sum, campaign) => sum + Number(campaign[\"Link Click\"] || 0), 0)\r\n        const totalPurchases = campaigns.reduce((sum, campaign) => sum + Number(campaign[\"Purchases\"] || 0), 0)\r\n        if (totalLinkClicks === 0) return 0\r\n\r\n        const conversionRate = (totalPurchases / totalLinkClicks) * 100\r\n        return conversionRate\r\n      },\r\n      \"CPM (Reach Based)\": (_, campaigns) => {\r\n        const totalreach = campaigns.reduce((sum, campaign) => sum + Number(campaign[\"Reach\"] || 0), 0)\r\n        const totalSpend = campaigns.reduce((sum, campaign) => sum + Number(campaign[\"Amount spend\"] || 0), 0)\r\n\r\n        const cpmReachBased = totalSpend / (totalreach / 1000)\r\n        return cpmReachBased\r\n      },\r\n      \"Audience Saturation Score\": (_, campaigns) => {\r\n        const totaloutboundctr = campaigns.reduce((sum, campaign) => sum + Number(campaign[\"Outbound CTR\"] || 0), 0)\r\n        const totalFrequency = campaigns.reduce((sum, campaign) => sum + Number(campaign[\"Frequency\"] || 0), 0)\r\n        if (totaloutboundctr === 0) return 0\r\n\r\n        const audienceScore = (totalFrequency / totaloutboundctr) * 100\r\n        return audienceScore\r\n      },\r\n      \"Reach v/s Unique Click\": (_, campaigns) => {\r\n        const totalUniqueClicks = campaigns.reduce(\r\n          (sum, campaign) => sum + Number(campaign[\"Unique Link Click\"] || 0),\r\n          0,\r\n        )\r\n        const totalreach = campaigns.reduce((sum, campaign) => sum + Number(campaign[\"Reach\"] || 0), 0)\r\n        if (totalUniqueClicks === 0) return 0\r\n\r\n        const reachVsUniqueClick = totalreach / totalUniqueClicks\r\n        return reachVsUniqueClick\r\n      },\r\n      \"High-Intent Click Rate\": (_, campaigns) => {\r\n        const totalAddToCart = campaigns.reduce((sum, campaign) => sum + Number(campaign[\"Add To Cart (ATC)\"] || 0), 0)\r\n        const totalCheckoutInitiated = campaigns.reduce(\r\n          (sum, campaign) => sum + Number(campaign[\"Checkout Initiate (CI)\"] || 0),\r\n          0,\r\n        )\r\n        const totalLandingPageView = campaigns.reduce(\r\n          (sum, campaign) => sum + Number(campaign[\"Landing Page View\"] || 0),\r\n          0,\r\n        )\r\n        const totalLinkClicks = campaigns.reduce((sum, campaign) => sum + Number(campaign[\"Link Click\"] || 0), 0)\r\n        if (totalLinkClicks === 0) return 0\r\n\r\n        const highIntentClickRate =\r\n          ((totalAddToCart + totalCheckoutInitiated + totalLandingPageView) / totalLinkClicks) * 100\r\n        return highIntentClickRate\r\n      },\r\n      HookRate: (_, campaigns) => {\r\n        const threeSecondsView = campaigns.reduce(\r\n          (sum, campaign) => sum + Number(campaign[\"Three Seconds View\"] || 0),\r\n          0,\r\n        )\r\n        const totalimpressions = campaigns.reduce((sum, campaign) => sum + Number(campaign[\"Impressions\"] || 0), 0)\r\n        if (totalimpressions === 0) return 0\r\n\r\n        const hookrate = (threeSecondsView / totalimpressions) * 100\r\n        return hookrate\r\n      },\r\n      DEFAULT: (values, _) => values.reduce((sum, val) => sum + val, 0),\r\n    }\r\n\r\n    // Then modify how you call these methods:\r\n    summaryColumns.forEach((column) => {\r\n      const values = campaigns.map((campaign) => Number(campaign[column] || 0)).filter((value) => !isNaN(value))\r\n\r\n      const calculateMethod = calculationMethods[column] || calculationMethods[\"DEFAULT\"]\r\n      summary[column] = calculateMethod(values, campaigns).toFixed(2)\r\n    })\r\n\r\n    return summary\r\n  }\r\n\r\n  const getTableHeight = () => {\r\n    if (isFullScreen) {\r\n      return \"max-h-[calc(100vh-100px)]\"\r\n    }\r\n    return height\r\n  }\r\n\r\n  const renderLabelDropdown = (campaign: Campaign) => {\r\n    const campaignLabels = accountLabels[campaign.Campaign] || []\r\n\r\n    return (\r\n      <DropdownMenu>\r\n        <DropdownMenuTrigger asChild>\r\n          <Button variant=\"outline\" size=\"sm\" className=\"h-7 w-full justify-between\">\r\n            <div className=\"flex items-center gap-1 overflow-hidden\">\r\n              <Tag className=\"h-3.5 w-3.5 text-slate-500 shrink-0\" />\r\n              <span className=\"truncate\">\r\n                {campaignLabels.length > 0\r\n                  ? `${campaignLabels.length} label${campaignLabels.length > 1 ? \"s\" : \"\"}`\r\n                  : \"Add label\"}\r\n              </span>\r\n            </div>\r\n            <ChevronDown className=\"h-3.5 w-3.5 opacity-70\" />\r\n          </Button>\r\n        </DropdownMenuTrigger>\r\n        <DropdownMenuContent align=\"start\" className=\"w-56\">\r\n          <div className=\"p-2\">\r\n            <div className=\"text-xs font-medium text-slate-500 mb-2\">Predefined labels</div>\r\n            {PREDEFINED_LABELS.map((label) => {\r\n              const isSelected = campaignLabels.includes(label)\r\n              return (\r\n                <DropdownMenuItem\r\n                  key={label}\r\n                  className=\"flex items-center gap-2 cursor-pointer\"\r\n                  onClick={() => {\r\n                    if (isSelected) {\r\n                      handleRemoveLabel(campaign.campaignName, label)\r\n                    } else {\r\n                      handleAddLabel(campaign.campaignName, label)\r\n                    }\r\n                  }}\r\n                >\r\n                  <Badge\r\n                    className={`bg-slate-100 text-slate-800 border border-slate-200 hover:bg-slate-200 text-xs py-0.5 px-2 w-full`}\r\n                  >\r\n                    {label}\r\n                  </Badge>\r\n                </DropdownMenuItem>\r\n              )\r\n            })}\r\n\r\n            {allUniqueLabels.length > 0 && (\r\n              <>\r\n                <DropdownMenuSeparator />\r\n                <div className=\"text-xs font-medium text-slate-500 my-2\">Custom labels</div>\r\n                {allUniqueLabels\r\n                  .filter((label) => !PREDEFINED_LABELS.includes(label))\r\n                  .map((label) => {\r\n                    const isSelected = campaignLabels.includes(label)\r\n                    return (\r\n                      <DropdownMenuItem\r\n                        key={label}\r\n                        className=\"flex items-center gap-2 cursor-pointer\"\r\n                        onClick={() => {\r\n                          if (isSelected) {\r\n                            handleRemoveLabel(campaign.campaignName, label)\r\n                          } else {\r\n                            handleAddLabel(campaign.campaignName, label)\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Badge className={`${labelColorMap.get(label)} text-xs py-0.5 px-2`}>{label}</Badge>\r\n                      </DropdownMenuItem>\r\n                    )\r\n                  })}\r\n              </>\r\n            )}\r\n\r\n            <DropdownMenuSeparator />\r\n\r\n            {editingLabel === campaign.Campaign ? (\r\n              <div className=\"flex items-center gap-1 px-2 py-1\">\r\n                <Input\r\n                  ref={newLabelInputRef}\r\n                  value={editLabelValue}\r\n                  onChange={(e) => setEditLabelValue(e.target.value)}\r\n                  placeholder=\"New label name\"\r\n                  className=\"h-7 text-xs\"\r\n                  autoFocus\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === \"Enter\") {\r\n                      handleCreateNewLabel(campaign.campaignName)\r\n                    } else if (e.key === \"Escape\") {\r\n                      setEditingLabel(null)\r\n                      setEditLabelValue(\"\")\r\n                    }\r\n                  }}\r\n                />\r\n                <Button size=\"sm\" className=\"h-7 px-2\" onClick={() => handleCreateNewLabel(campaign.campaignName)}>\r\n                  <Check className=\"h-3.5 w-3.5\" />\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <DropdownMenuItem\r\n                className=\"flex items-center gap-2 cursor-pointer\"\r\n                onClick={(e) => {\r\n                  e.preventDefault()\r\n                  setEditingLabel(campaign.campaignName)\r\n                  setEditLabelValue(\"\")\r\n                  setTimeout(() => {\r\n                    newLabelInputRef.current?.focus()\r\n                  }, 0)\r\n                }}\r\n              >\r\n                <Plus className=\"h-3.5 w-3.5 text-slate-500\" />\r\n                <span className=\"text-sm\">Create new label</span>\r\n              </DropdownMenuItem>\r\n            )}\r\n          </div>\r\n        </DropdownMenuContent>\r\n      </DropdownMenu>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <TooltipProvider>\r\n      <Card className={`overflow-hidden ${isFullScreen ? \"fixed inset-0 z-50\" : \"\"} border-slate-200 shadow-md`}>\r\n        <div className=\"flex items-center justify-between p-3 border-b bg-gradient-to-r from-slate-50 to-white\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <FacebookLogo height={\"1rem\"} width={\"1rem\"} />\r\n            <div className=\"text-base font-semibold text-slate-800\">\r\n              Campaign Performance <span>({data.account_name})</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  className={`gap-1 font-medium ${statusFilter !== 'all' ? \"bg-blue-50 text-blue-600 border-blue-200\" : \"\"}`}\r\n                >\r\n                  <Filter className={`h-4 w-4 ${statusFilter !== 'all' ? \"text-blue-600\" : \"text-slate-500\"}`} />\r\n                  {statusFilter === 'all' ? 'All Status' :\r\n                    statusFilter === 'active' ? 'Active' : 'Paused'}\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent align=\"end\" className=\"w-32\">\r\n                <DropdownMenuItem\r\n                  onClick={() => setStatusFilter('all')}\r\n                  className={statusFilter === 'all' ? \"bg-blue-50\" : \"\"}\r\n                >\r\n                  All Status\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem\r\n                  onClick={() => setStatusFilter('active')}\r\n                  className={statusFilter === 'active' ? \"bg-blue-50\" : \"\"}\r\n                >\r\n                  Active\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem\r\n                  onClick={() => setStatusFilter('paused')}\r\n                  className={statusFilter === 'paused' ? \"bg-blue-50\" : \"\"}\r\n                >\r\n                  Paused\r\n                </DropdownMenuItem>\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={() => setIsEditMode(!isEditMode)}\r\n                  size=\"sm\"\r\n                  className={`gap-1 font-medium ${isEditMode ? \"bg-blue-50 text-blue-600 border-blue-200\" : \"\"}`}\r\n                  disabled={!isGroupingEnabled}\r\n                >\r\n                  <Edit className={`h-4 w-4 ${isEditMode ? \"text-blue-600\" : \"text-slate-500\"}`} />\r\n                </Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent>{isEditMode ? \"Exit Edit Mode\" : \"Edit Labels\"}</TooltipContent>\r\n            </Tooltip>\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={() => setIsGroupingEnabled(!isGroupingEnabled)}\r\n                  size=\"sm\"\r\n                  className=\"gap-1 font-medium\"\r\n                >\r\n                  {isGroupingEnabled ? (\r\n                    <>\r\n                      <LayoutGrid className=\"h-4 w-4 text-blue-600\" />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <LayoutGrid className=\"h-4 w-4 text-slate-500\" />\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent>{isGroupingEnabled ? \"Disable Grouping\" : \"Enable Grouping\"}</TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <div>\r\n                  <ColumnManagementSheet\r\n                    visibleColumns={visibleColumns}\r\n                    columnOrder={columnOrder}\r\n                    frozenColumns={frozenColumns}\r\n                    onVisibilityChange={setVisibleColumns}\r\n                    onOrderChange={setColumnOrder}\r\n                    onFrozenChange={setFrozenColumns}\r\n                  />\r\n                </div>\r\n              </TooltipTrigger>\r\n              <TooltipContent>Manage Columns</TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\" size=\"sm\" onClick={toggleFullScreen} className=\"font-medium\">\r\n                  {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                </Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent>{isFullScreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\"}</TooltipContent>\r\n            </Tooltip>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"p-3\">\r\n          <div\r\n            ref={tableRef}\r\n            className={`overflow-auto ${getTableHeight()} bg-white rounded-lg border border-slate-200 shadow-sm`}\r\n          >\r\n            <table className=\"w-full border-collapse text-xs relative\">\r\n              <thead className=\"bg-slate-50 sticky top-0 z-20\">\r\n                <tr>\r\n                  {columnOrder\r\n                    .filter((column) => visibleColumns.includes(column))\r\n                    .filter((column) => !isGroupingEnabled || column !== \"campaignName\")\r\n                    .map((column, index) => {\r\n                      const isFrozen = frozenColumns.includes(column)\r\n                      const leftPos = isFrozen ? `${getLeftPosition(index)}px` : undefined\r\n                      const columnStyle = getColumnStyle(column)\r\n\r\n                      return (\r\n                        <th\r\n                          key={column}\r\n                          ref={(el) => (columnRefs.current[column] = el)}\r\n                          className={`text-left p-2 font-medium text-slate-700 border-b border-r ${isFrozen ? \"sticky z-20 bg-slate-50\" : \"\"\r\n                            } ${dragOverColumn === column ? \"bg-blue-50\" : \"\"}`}\r\n                          style={{\r\n                            left: leftPos,\r\n                            ...columnStyle,\r\n                          }}\r\n                          draggable\r\n                          onDragStart={() => handleColumnDragStart(column)}\r\n                          onDragOver={(e) => handleColumnDragOver(e, column)}\r\n                          onDrop={() => handleColumnDrop(column)}\r\n                          onDragEnd={handleColumnDragEnd}\r\n                        >\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <span>{column}</span>\r\n                            <SlidersHorizontal className=\"h-3 w-3 text-slate-400 cursor-grab\" />\r\n                          </div>\r\n                        </th>\r\n                      )\r\n                    })}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {/* Render grouped campaigns */}\r\n                {isGroupingEnabled &&\r\n                  groupedCampaigns.map((group, groupIndex) => (\r\n                    <React.Fragment key={`group-${group.label}`}>\r\n                      {/* Label group header/summary row */}\r\n                      <tr className=\"bg-gradient-to-r from-slate-100 to-slate-50 font-medium hover:bg-slate-100 transition-colors\">\r\n                        {columnOrder\r\n                          .filter((column) => visibleColumns.includes(column))\r\n                          .filter((column) => !isGroupingEnabled || column !== \"campaignName\")\r\n                          .map((column, index) => {\r\n                            const isFrozen = frozenColumns.includes(column)\r\n                            const leftPos = isFrozen ? `${getLeftPosition(index)}px` : undefined\r\n                            const columnStyle = getColumnStyle(column)\r\n                            const summary = calculateGroupSummary(group.campaigns)\r\n\r\n                            if (column === \"Campaign\") {\r\n                              return (\r\n                                <td\r\n                                  key={column}\r\n                                  className={`p-2 border-r sticky z-10 bg-gradient-to-r from-slate-100 to-slate-50`}\r\n                                  style={{\r\n                                    left: leftPos,\r\n                                    ...columnStyle,\r\n                                  }}\r\n                                >\r\n                                  <div className=\"flex items-center\">\r\n                                    <button\r\n                                      onClick={() => toggleGroupExpansion(groupIndex)}\r\n                                      className=\"mr-2 focus:outline-none rounded-full p-0.5 hover:bg-slate-200 transition-colors\"\r\n                                    >\r\n                                      {group.isExpanded ? (\r\n                                        <ChevronDown className=\"h-4 w-4 text-slate-600\" />\r\n                                      ) : (\r\n                                        <ChevronRight className=\"h-4 w-4 text-slate-600\" />\r\n                                      )}\r\n                                    </button>\r\n                                    <span className=\"font-medium text-slate-700\">\r\n                                      Group: {group.campaigns.length} campaigns\r\n                                    </span>\r\n                                  </div>\r\n                                </td>\r\n                              )\r\n                            }\r\n\r\n                            if (column === \"Labels\") {\r\n                              return (\r\n                                <td\r\n                                  key={column}\r\n                                  className={`p-2 border-r ${isFrozen\r\n                                      ? \"sticky z-10 bg-gradient-to-r from-slate-100 to-slate-50\"\r\n                                      : \"bg-gradient-to-r from-slate-100 to-slate-50\"\r\n                                    }`}\r\n                                  style={{\r\n                                    left: leftPos,\r\n                                    ...columnStyle,\r\n                                  }}\r\n                                >\r\n                                  <div className=\"flex items-center gap-2\">\r\n                                    <Badge\r\n                                      className={`${labelColorMap.get(group.label)} w-fit flex items-center gap-1 cursor-default text-xs py-0.5 px-2 rounded-md`}\r\n                                    >\r\n                                      {group.label}\r\n                                    </Badge>\r\n                                    {isEditMode && (\r\n                                      <Button\r\n                                        variant=\"ghost\"\r\n                                        size=\"sm\"\r\n                                        className=\"h-6 w-6 p-0 rounded-full hover:bg-red-50\"\r\n                                        onClick={() => {\r\n                                          // Remove this label from all campaigns in this group\r\n                                          group.campaigns.forEach((campaign) => {\r\n                                            handleRemoveLabel(campaign.campaignName, group.label)\r\n                                          })\r\n                                        }}\r\n                                      >\r\n                                        <X className=\"h-3.5 w-3.5 text-red-500\" />\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                </td>\r\n                              )\r\n                            }\r\n\r\n                            return (\r\n                              <td\r\n                                key={column}\r\n                                className={`p-2 border-r ${isFrozen\r\n                                    ? \"sticky z-10 bg-gradient-to-r from-slate-100 to-slate-50\"\r\n                                    : \"bg-gradient-to-r from-slate-100 to-slate-50\"\r\n                                  } font-semibold`}\r\n                                style={{\r\n                                  left: leftPos,\r\n                                  ...columnStyle,\r\n                                }}\r\n                              >\r\n                                <div>{summary[column]}</div>\r\n                              </td>\r\n                            )\r\n                          })}\r\n                      </tr>\r\n\r\n                      {/* Individual campaigns in the group */}\r\n                      {group.isExpanded &&\r\n                        group.campaigns.map((campaign, index) => (\r\n                          <tr\r\n                            key={`group-${group.label}-campaign-${campaign.Campaign}-${index}`}\r\n                            className={`border-b border-2 hover:bg-slate-50 transition-colors ${dragOverCampaign === campaign.campaignName ? \"bg-blue-50\" : \"\"\r\n                              }`}\r\n                            draggable\r\n                            onDragStart={() => handleDragStart(campaign.campaignName)}\r\n                            onDragOver={(e) => handleDragOver(e, campaign.campaignName)}\r\n                            onDrop={() => handleDrop(campaign.campaignName)}\r\n                            onDragEnd={handleDragEnd}\r\n                          >\r\n                            {columnOrder\r\n                              .filter((column) => visibleColumns.includes(column))\r\n                              .filter((column) => !isGroupingEnabled || column !== \"campaignName\")\r\n                              .map((column, index) => {\r\n                                const isFrozen = frozenColumns.includes(column)\r\n                                const leftPos = isFrozen ? `${getLeftPosition(index)}px` : undefined\r\n                                const columnStyle = getColumnStyle(column)\r\n\r\n                                if (column === \"Campaign\") {\r\n                                  return (\r\n                                    <td\r\n                                      key={column}\r\n                                      className={`p-2 border-r sticky bg-white z-10`}\r\n                                      style={{\r\n                                        left: leftPos,\r\n                                        paddingLeft: \"30px\",\r\n                                        ...columnStyle,\r\n                                      }}\r\n                                    >\r\n                                      <div className=\"flex items-center justify-between gap-2\">\r\n                                        <span className=\"font-medium\">{campaign.Campaign}</span>\r\n                                        {type === \"blended-summary\" && campaign.accountName && (\r\n                                          <span className=\"text-xs px-2 py-0.5 bg-gray-100 text-gray-700 rounded whitespace-nowrap\">\r\n                                            {campaign.accountName}\r\n                                          </span>\r\n                                        )}\r\n\r\n                                      </div>\r\n                                    </td>\r\n                                  )\r\n                                }\r\n\r\n                                if (column === \"Labels\") {\r\n                                  return (\r\n                                    <td\r\n                                      key={column}\r\n                                      className={`p-2 border-r ${isFrozen ? \"sticky z-10 bg-white\" : \"\"}`}\r\n                                      style={{\r\n                                        left: leftPos,\r\n                                        ...columnStyle,\r\n                                      }}\r\n                                    >\r\n                                      {isEditMode && isGroupingEnabled ? (\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                          <Badge\r\n                                            className={`${labelColorMap.get(group.label)} w-fit flex items-center gap-1 text-xs py-0.5 px-2 rounded-md`}\r\n                                          >\r\n                                            {group.label}\r\n                                          </Badge>\r\n                                          <Button\r\n                                            variant=\"ghost\"\r\n                                            size=\"sm\"\r\n                                            className=\"h-6 w-6 p-0 rounded-full hover:bg-red-50\"\r\n                                            onClick={() => handleRemoveLabel(campaign.campaignName, group.label)}\r\n                                          >\r\n                                            <X className=\"h-3.5 w-3.5 text-red-500\" />\r\n                                          </Button>\r\n                                          <DropdownMenu>\r\n                                            <DropdownMenuTrigger asChild>\r\n                                              <Button variant=\"outline\" size=\"sm\" className=\"h-7\">\r\n                                                Change\r\n                                              </Button>\r\n                                            </DropdownMenuTrigger>\r\n                                            <DropdownMenuContent align=\"start\" className=\"w-56\">\r\n                                              <div className=\"p-2\">\r\n                                                {allUniqueLabels\r\n                                                  .filter((label) => label !== group.label)\r\n                                                  .map((label) => (\r\n                                                    <DropdownMenuItem\r\n                                                      key={label}\r\n                                                      className=\"flex items-center gap-2 cursor-pointer\"\r\n                                                      onClick={() => {\r\n                                                        handleRemoveLabel(campaign.campaignName, group.label)\r\n                                                        handleAddLabel(campaign.campaignName, label)\r\n                                                      }}\r\n                                                    >\r\n                                                      <Badge\r\n                                                        className={`${labelColorMap.get(label)} text-xs py-0.5 px-2`}\r\n                                                      >\r\n                                                        {label}\r\n                                                      </Badge>\r\n                                                    </DropdownMenuItem>\r\n                                                  ))}\r\n                                                <DropdownMenuSeparator />\r\n                                                <DropdownMenuItem\r\n                                                  className=\"flex items-center gap-2 cursor-pointer\"\r\n                                                  onClick={(e) => {\r\n                                                    e.preventDefault()\r\n                                                    setEditingLabel(campaign.campaignName)\r\n                                                    setEditLabelValue(\"\")\r\n                                                    setTimeout(() => {\r\n                                                      newLabelInputRef.current?.focus()\r\n                                                    }, 0)\r\n                                                  }}\r\n                                                >\r\n                                                  <Plus className=\"h-3.5 w-3.5 text-slate-500\" />\r\n                                                  <span className=\"text-sm\">Create new label</span>\r\n                                                </DropdownMenuItem>\r\n                                                {editingLabel === campaign.Campaign && (\r\n                                                  <div className=\"flex items-center gap-1 px-2 py-1 mt-2\">\r\n                                                    <Input\r\n                                                      ref={newLabelInputRef}\r\n                                                      value={editLabelValue}\r\n                                                      onChange={(e) => setEditLabelValue(e.target.value)}\r\n                                                      placeholder=\"New label name\"\r\n                                                      className=\"h-7 text-xs\"\r\n                                                      autoFocus\r\n                                                      onKeyDown={(e) => {\r\n                                                        if (e.key === \"Enter\") {\r\n                                                          handleCreateNewLabel(campaign.campaignName)\r\n                                                          handleRemoveLabel(campaign.campaignName, group.label)\r\n                                                        } else if (e.key === \"Escape\") {\r\n                                                          setEditingLabel(null)\r\n                                                          setEditLabelValue(\"\")\r\n                                                        }\r\n                                                      }}\r\n                                                    />\r\n                                                    <Button\r\n                                                      size=\"sm\"\r\n                                                      className=\"h-7 px-2\"\r\n                                                      onClick={() => {\r\n                                                        handleCreateNewLabel(campaign.campaignName)\r\n                                                        handleRemoveLabel(campaign.campaignName, group.label)\r\n                                                      }}\r\n                                                    >\r\n                                                      <Check className=\"h-3.5 w-3.5\" />\r\n                                                    </Button>\r\n                                                  </div>\r\n                                                )}\r\n                                              </div>\r\n                                            </DropdownMenuContent>\r\n                                          </DropdownMenu>\r\n                                        </div>\r\n                                      ) : (\r\n                                        renderLabelDropdown(campaign)\r\n                                      )}\r\n                                    </td>\r\n                                  )\r\n                                }\r\n\r\n                                return (\r\n                                  <td\r\n                                    key={column}\r\n                                    className={`p-2 border-r ${isFrozen ? \"sticky z-10 bg-white\" : \"\"}`}\r\n                                    style={{\r\n                                      left: leftPos,\r\n                                      ...columnStyle,\r\n                                    }}\r\n                                  >\r\n                                    <div>{campaign[column]}</div>\r\n                                  </td>\r\n                                )\r\n                              })}\r\n                          </tr>\r\n                        ))}\r\n                    </React.Fragment>\r\n                  ))}\r\n\r\n                {/* Ungrouped campaigns section */}\r\n                {isGroupingEnabled && ungroupedCampaigns.length > 0 && (\r\n                  <tr className=\"bg-gradient-to-r from-gray-100 to-gray-50 font-medium hover:bg-gray-100 transition-colors\">\r\n                    {columnOrder\r\n                      .filter((column) => visibleColumns.includes(column))\r\n                      .filter((column) => !isGroupingEnabled || column !== \"campaignName\")\r\n                      .map((column, index) => {\r\n                        const isFrozen = frozenColumns.includes(column)\r\n                        const leftPos = isFrozen ? `${getLeftPosition(index)}px` : undefined\r\n                        const columnStyle = getColumnStyle(column)\r\n\r\n                        if (column === \"Campaign\") {\r\n                          return (\r\n                            <td\r\n                              key={column}\r\n                              className={`p-2 border-r sticky z-10 bg-gradient-to-r from-gray-100 to-gray-50`}\r\n                              style={{\r\n                                left: leftPos,\r\n                                ...columnStyle,\r\n                              }}\r\n                            >\r\n                              <div className=\"font-medium text-slate-700 flex items-center\">\r\n                                <Filter className=\"h-4 w-4 mr-2 text-slate-500\" />\r\n                                Unlabeled: {ungroupedCampaigns.length} campaigns\r\n                              </div>\r\n                            </td>\r\n                          )\r\n                        }\r\n\r\n                        if (column === \"Labels\") {\r\n                          return (\r\n                            <td\r\n                              key={column}\r\n                              className={`p-2 border-r ${isFrozen ? \"sticky z-10 bg-gradient-to-r from-slate-100 to-slate-50\" : \"\"}`}\r\n                              style={{\r\n                                left: leftPos,\r\n                                ...columnStyle,\r\n                              }}\r\n                            >\r\n                              -\r\n                            </td>\r\n                          )\r\n                        }\r\n\r\n                        // Calculate summary for ungrouped campaigns\r\n                        const summary = calculateGroupSummary(ungroupedCampaigns)\r\n\r\n                        return (\r\n                          <td\r\n                            key={column}\r\n                            className={`p-2 border-r ${isFrozen\r\n                                ? \"sticky z-10 bg-gradient-to-r from-gray-100 to-gray-50\"\r\n                                : \"bg-gradient-to-r from-gray-100 to-gray-50\"\r\n                              } font-semibold`}\r\n                            style={{\r\n                              left: leftPos,\r\n                              ...columnStyle,\r\n                            }}\r\n                          >\r\n                            <div>{summary[column]}</div>\r\n                          </td>\r\n                        )\r\n                      })}\r\n                  </tr>\r\n                )}\r\n\r\n                {/* Render ungrouped campaigns or all campaigns when grouping is disabled */}\r\n                {(isGroupingEnabled ? ungroupedCampaigns : filteredCampaigns).map((campaign, index) => (\r\n                  <tr\r\n                    key={`${isGroupingEnabled ? 'ungrouped' : 'all'}-${campaign.Campaign}-${index}`}\r\n                    className={`border-b border-2 hover:bg-slate-50 transition-colors ${dragOverCampaign === campaign.campaignName ? \"bg-blue-50\" : \"\"\r\n                      }`}\r\n                    draggable\r\n                    onDragStart={() => handleDragStart(campaign.campaignName)}\r\n                    onDragOver={(e) => handleDragOver(e, campaign.campaignName)}\r\n                    onDrop={() => handleDrop(campaign.campaignName)}\r\n                    onDragEnd={handleDragEnd}\r\n                  >\r\n                    {columnOrder\r\n                      .filter((column) => visibleColumns.includes(column))\r\n                      .filter((column) => !isGroupingEnabled || column !== \"campaignName\")\r\n                      .map((column, index) => {\r\n                        const isFrozen = frozenColumns.includes(column)\r\n                        const leftPos = isFrozen ? `${getLeftPosition(index)}px` : undefined\r\n                        const columnStyle = getColumnStyle(column)\r\n                        if (column === \"Campaign\") {\r\n                          return (\r\n                            <td\r\n                              key={column}\r\n                              className={`p-2 border-r sticky z-10 bg-white`}\r\n                              style={{\r\n                                left: leftPos,\r\n                                ...columnStyle,\r\n                              }}\r\n                            >\r\n                              <div className=\"flex items-center justify-between gap-2\">\r\n                                <span className=\"font-medium\">{campaign.Campaign}</span>\r\n                                {type === \"blended-summary\" && campaign.accountName && (\r\n                                  <span className=\"text-xs px-2 py-0.5 bg-gray-100 text-gray-700 rounded whitespace-nowrap\">\r\n                                    {campaign.accountName}\r\n                                  </span>\r\n                                )}\r\n\r\n                              </div>\r\n                            </td>\r\n                          )\r\n                        }\r\n\r\n                        if (column === \"Labels\") {\r\n                          return (\r\n                            <td\r\n                              key={column}\r\n                              className={`p-2 border-r ${isFrozen ? \"sticky z-10 bg-white\" : \"\"}`}\r\n                              style={{\r\n                                left: leftPos,\r\n                                ...columnStyle,\r\n                              }}\r\n                            >\r\n                              {renderLabelDropdown(campaign)}\r\n                            </td>\r\n                          )\r\n                        }\r\n\r\n                        return (\r\n                          <td\r\n                            key={column}\r\n                            className={`p-2 border-r ${isFrozen ? \"sticky z-10 bg-white\" : \"\"}`}\r\n                            style={{\r\n                              left: leftPos,\r\n                              ...columnStyle,\r\n                            }}\r\n                          >\r\n                            <div>{campaign[column]}</div>\r\n                          </td>\r\n                        )\r\n                      })}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </TooltipProvider>\r\n  )\r\n}\r\n\r\nexport default MetaCampaignTable\r\n\r\n","import Header from \"@/components/dashboard_component/Header\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\";\r\nimport { FaMeta } from \"react-icons/fa6\";\r\nimport { useEffect, useCallback, useState, useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { format } from \"date-fns\";\r\nimport { ICampaignData } from \"@/interfaces\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\nimport MetaCampaignTable from \"./components/MetaCampaignTable\";\r\nimport MissingDateWarning from \"@/components/dashboard_component/Missing-Date-Waning\";\r\nimport HelpDeskModal from \"@/components/dashboard_component/HelpDeskModal\";\r\n\r\nfunction CampaignPage() {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [metaCampaign, setMetaCampaign] = useState<ICampaignData>();\r\n    const dateFrom = useSelector((state: RootState) => state.date.from);\r\n    const dateTo = useSelector((state: RootState) => state.date.to);\r\n    const date = useMemo(() => ({\r\n        from: dateFrom,\r\n        to: dateTo\r\n    }), [dateFrom, dateTo]);\r\n\r\n    const axiosInstance = createAxiosInstance();\r\n    const { brandId } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const startDate = date?.from ? format(date.from, \"yyyy-MM-dd\") : \"\";\r\n            const endDate = date?.to ? format(date.to, \"yyyy-MM-dd\") : \"\";\r\n            try {\r\n                const response = await axiosInstance.post(\r\n                    `/api/meta/campaign/${brandId}`,\r\n                    { startDate, endDate, },\r\n                    { withCredentials: true }\r\n                );\r\n                const data = response.data;\r\n\r\n                setMetaCampaign(data);\r\n            } catch (error) {\r\n                console.error('Error fetching Facebook ad data:', error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching ad data:', error);\r\n            if (axios.isAxiosError(error) && error.response?.status === 401) {\r\n                alert('Your session has expired. Please log in again.');\r\n                navigate('/');\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [navigate, date, brandId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const intervalId = setInterval(fetchData, 3 * 60 * 60 * 1000); // 3 hours\r\n        return () => clearInterval(intervalId);\r\n    }, [fetchData]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"meta campaign\", metaCampaign)\r\n    }, [])\r\n\r\n    const blendedSummary = metaCampaign?.blendedSummary\r\n    const accountData = metaCampaign?.accountData\r\n\r\n    let height = '';\r\n    if (metaCampaign?.blendedSummary && metaCampaign?.blendedSummary.length > 1) {\r\n        height = 'max-h-[calc(100vh-400px)]';\r\n    } else {\r\n        height = 'max-h-[calc(100vh-210px)]'\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex h-screen bg-gray-100\">\r\n            <CollapsibleSidebar />\r\n            <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n                {(!date.from || !date.to) ? <MissingDateWarning /> :(   (isLoading) ? <Loader isLoading={isLoading}/>  : \r\n                    <>     \r\n                    <div className=\"flex-none\">\r\n                    <Header title='Meta Campaign Trends' Icon={FaMeta} showDatePicker={true} />\r\n                </div>\r\n                <main className=\"p-4 md:p-6 lg:px-8 overflow-auto\">\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                    {(blendedSummary && blendedSummary.length > 0) && (\r\n                        <MetaCampaignTable\r\n                            data={{\r\n                                account_name: \"Blended Summary\",\r\n                                account_id: \"blended_summary\",\r\n                                campaigns: blendedSummary.map(campaign => ({\r\n                                    ...campaign,\r\n                                    Campaign: campaign.campaignName\r\n                                }))\r\n                            }}\r\n                            height={height}\r\n                            type=\"blended-summary\"\r\n                        />\r\n                    )}\r\n                    {(accountData && accountData.map(account => (\r\n                        <MetaCampaignTable\r\n                            key={account.account_id}\r\n                            data={{\r\n                                account_name: account.account_name,\r\n                                account_id: account.account_id,\r\n                                campaigns: account.campaigns.map(campaign => ({\r\n                                    ...campaign,\r\n                                    Campaign: campaign.campaignName\r\n                                }))\r\n                            }}\r\n                            height={height}\r\n                        />\r\n                    )))}\r\n                </div>\r\n                </main>\r\n            \r\n                \r\n                </>\r\n)}\r\n    <HelpDeskModal />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CampaignPage;\r\n\r\n","import React, { useState, useRef } from \"react\"\r\nimport { Card } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { FacebookLogo } from \"@/data/logo\"\r\nimport {\r\n  Maximize,\r\n  Minimize,\r\n  SlidersHorizontal,\r\n} from \"lucide-react\"\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\r\nimport ColumnManagementSheet from \"../../../AnalyticsDashboard/Components/ColumnManagementSheet\"\r\n\r\nconst DEFAULT_COLUMN_WIDTH = \"100px\"\r\n\r\n// Update props interface to match the new data structure\r\ninterface InterestData {\r\n  Interest: string;\r\n  InterestId: string;\r\n  Spend: number;\r\n  Revenue: number;\r\n  Roas: number;\r\n  accounts?: string[];\r\n}\r\n\r\ninterface InterestTableProps {\r\n  data: {\r\n    resultsByAccount: {\r\n      [accountName: string]: {\r\n        adAccountId: string;\r\n        interestMetrics: InterestData[];\r\n      }\r\n    },\r\n    blendedSummary: InterestData[];\r\n  };\r\n  height?: string;\r\n  accountName?: string;\r\n  showAccounts?: boolean;\r\n}\r\n\r\nconst InterestTable: React.FC<InterestTableProps> = ({ data, height = \"max-h-96\", accountName, showAccounts = false }) => {\r\n  const [draggedInterest, setDraggedInterest] = useState<string | null>(null)\r\n  const [dragOverInterest, setDragOverInterest] = useState<string | null>(null)\r\n  const [isFullScreen, setIsFullScreen] = useState(false)\r\n  const [draggedColumn, setDraggedColumn] = useState<string | null>(null)\r\n  const [dragOverColumn, setDragOverColumn] = useState<string | null>(null)\r\n\r\n  const [visibleColumns, setVisibleColumns] = useState<string[]>(\r\n    showAccounts \r\n      ? [\"Interest\", \"Spend\", \"Revenue\", \"Roas\", \"accounts\"]\r\n      : [\"Interest\", \"Spend\", \"Revenue\", \"Roas\"]\r\n  );\r\n  const [columnOrder, setColumnOrder] = useState<string[]>(\r\n    showAccounts \r\n      ? [\"Interest\", \"Spend\", \"Revenue\", \"Roas\", \"accounts\"]\r\n      : [\"Interest\", \"Spend\", \"Revenue\", \"Roas\"]\r\n  );\r\n  const [frozenColumns, setFrozenColumns] = useState<string[]>([\"Interest\"])\r\n\r\n  const tableRef = useRef<HTMLDivElement>(null)\r\n  const columnRefs = useRef<{ [key: string]: HTMLTableCellElement | null }>({})\r\n\r\n  // Determine which data to display based on accountName prop\r\n  const interestData = accountName \r\n    ? data.resultsByAccount[accountName]?.interestMetrics || []\r\n    : data.blendedSummary || []\r\n\r\n  // Get display name for the table header\r\n  const displayName = accountName || \"All Accounts\"\r\n\r\n  // Calculate left position for frozen columns\r\n  const getLeftPosition = (columnIndex: number): number => {\r\n    let position = 0\r\n\r\n    // Get only the visible columns in the correct order\r\n    const visibleOrderedColumns = columnOrder.filter((col) => visibleColumns.includes(col))\r\n\r\n    for (let i = 0; i < columnIndex; i++) {\r\n      const column = visibleOrderedColumns[i]\r\n      if (frozenColumns.includes(column)) {\r\n        const columnElement = columnRefs.current[column]\r\n        if (columnElement) {\r\n          position += columnElement.offsetWidth\r\n        }\r\n      }\r\n    }\r\n\r\n    return position\r\n  }\r\n\r\n  // Get column style based on column name\r\n  const getColumnStyle = (column: string) => {\r\n    if (column === \"Interest\") {\r\n      return { width: \"auto\", minWidth: \"200px\" }\r\n    }\r\n    if (column === \"accounts\") {\r\n      return { width: \"auto\", minWidth: \"120px\" }\r\n    }\r\n    return {\r\n      width: DEFAULT_COLUMN_WIDTH,\r\n      minWidth: DEFAULT_COLUMN_WIDTH,\r\n    }\r\n  }\r\n\r\n  // Campaign drag and drop handlers\r\n  const handleDragStart = (interestId: string) => {\r\n    setDraggedInterest(interestId)\r\n  }\r\n\r\n  const handleDragOver = (e: React.DragEvent, interestId: string) => {\r\n    e.preventDefault()\r\n    if (interestId !== draggedInterest) {\r\n      setDragOverInterest(interestId)\r\n    }\r\n  }\r\n\r\n  const handleDrop = (targetInterestId: string) => {\r\n    if (!draggedInterest || draggedInterest === targetInterestId) return \r\n\r\n    // Reorder campaigns logic would go here\r\n    // For now, just reset the state\r\n    setDraggedInterest(null)\r\n    setDragOverInterest(null)\r\n\r\n    // Note: In a real implementation, you would dispatch an action to update the order in your Redux store\r\n    console.log(`Dragged ${draggedInterest} and dropped on ${targetInterestId}`)\r\n  }\r\n\r\n  const handleDragEnd = () => {\r\n    setDraggedInterest(null)\r\n    setDragOverInterest(null)\r\n  }\r\n\r\n  // Column drag and drop handlers\r\n  const handleColumnDragStart = (columnName: string) => {\r\n    setDraggedColumn(columnName)\r\n  }\r\n\r\n  const handleColumnDragOver = (e: React.DragEvent, columnName: string) => {\r\n    e.preventDefault()\r\n    if (columnName !== draggedColumn) {\r\n      setDragOverColumn(columnName)\r\n    }\r\n  }\r\n\r\n  const handleColumnDrop = (targetColumnName: string) => {\r\n    if (!draggedColumn || draggedColumn === targetColumnName) return\r\n\r\n    // Reorder columns\r\n    const draggedIndex = columnOrder.indexOf(draggedColumn)\r\n    const targetIndex = columnOrder.indexOf(targetColumnName)\r\n\r\n    if (draggedIndex !== -1 && targetIndex !== -1) {\r\n      const newColumnOrder = [...columnOrder]\r\n      newColumnOrder.splice(draggedIndex, 1)\r\n      newColumnOrder.splice(targetIndex, 0, draggedColumn)\r\n      setColumnOrder(newColumnOrder)\r\n    }\r\n\r\n    setDraggedColumn(null)\r\n    setDragOverColumn(null)\r\n  }\r\n\r\n  const handleColumnDragEnd = () => {\r\n    setDraggedColumn(null)\r\n    setDragOverColumn(null)\r\n  }\r\n\r\n  // Toggle full screen mode\r\n  const toggleFullScreen = () => {\r\n    setIsFullScreen(!isFullScreen)\r\n  }\r\n\r\n  const getTableHeight = () => {\r\n    if (isFullScreen) {\r\n      return \"max-h-screen\"\r\n    }\r\n    return height\r\n  }\r\n\r\n  // Format currency values\r\n  const formatCurrency = (value: number) => {\r\n    return new Intl.NumberFormat('en-IN', {\r\n      style: 'currency',\r\n      currency: 'INR',\r\n      minimumFractionDigits: 2\r\n    }).format(value);\r\n  }\r\n\r\n  // Format ROAS values\r\n  const formatRoas = (value: number) => {\r\n    return value.toFixed(2) + 'x';\r\n  }\r\n\r\n  // Format accounts array\r\n  const formatAccounts = (accounts: string[] | undefined) => {\r\n    if (!accounts || accounts.length === 0) return \"-\";\r\n    if (accounts.length <= 2) return accounts.join(\", \");\r\n    return `${accounts[0]}, ${accounts[1]} +${accounts.length - 2} more`;\r\n  }\r\n\r\n  // Render cell content based on column\r\n  const renderCellContent = (interest: InterestData, column: string) => {\r\n    switch(column) {\r\n      case \"Interest\":\r\n        return interest.Interest;\r\n      case \"Spend\":\r\n        return formatCurrency(interest.Spend);\r\n      case \"Revenue\":\r\n        return formatCurrency(interest.Revenue);\r\n      case \"Roas\":\r\n        return formatRoas(interest.Roas);\r\n      case \"accounts\":\r\n        return formatAccounts(interest.accounts);\r\n      default:\r\n        return interest[column as keyof InterestData] || \"-\";\r\n    }\r\n  }\r\n\r\n  if (!interestData || interestData.length === 0) {\r\n    return (\r\n      <Card className=\"p-4\">\r\n        <div className=\"text-center text-slate-500\">No interest data available</div>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <TooltipProvider>\r\n      <Card className={`overflow-hidden ${isFullScreen ? \"fixed inset-0 z-50\" : \"\"} border-slate-200 shadow-md`}>\r\n        <div className=\"flex items-center justify-between p-3 border-b bg-gradient-to-r from-slate-50 to-white\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <FacebookLogo height={\"1rem\"} width={\"1rem\"} />\r\n            <div className=\"text-base font-semibold text-slate-800\">Interest Performance <span>({displayName})</span></div>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\" size=\"sm\" onClick={toggleFullScreen} className=\"font-medium\">\r\n                  {isFullScreen ? <Minimize className=\"h-4 w-4\" /> : <Maximize className=\"h-4 w-4\" />}\r\n                </Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent>{isFullScreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\"}</TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <div>\r\n                  <ColumnManagementSheet\r\n                    visibleColumns={visibleColumns}\r\n                    columnOrder={columnOrder}\r\n                    frozenColumns={frozenColumns}\r\n                    onVisibilityChange={setVisibleColumns}\r\n                    onOrderChange={setColumnOrder}\r\n                    onFrozenChange={setFrozenColumns}\r\n                  />\r\n                </div>\r\n              </TooltipTrigger>\r\n              <TooltipContent>Manage Columns</TooltipContent>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"p-3\">\r\n          <div\r\n            ref={tableRef}\r\n            className={`overflow-auto ${getTableHeight()} bg-white rounded-lg border border-slate-200 shadow-sm`}\r\n          >\r\n            <table className=\"w-full border-collapse text-xs relative\">\r\n              <thead className=\"bg-slate-50 sticky top-0 z-20\">\r\n                <tr>\r\n                  {columnOrder\r\n                    .filter((column) => visibleColumns.includes(column))\r\n                    .map((column, index) => {\r\n                      const isFrozen = frozenColumns.includes(column)\r\n                      const leftPos = isFrozen ? `${getLeftPosition(index)}px` : undefined\r\n                      const columnStyle = getColumnStyle(column)\r\n\r\n                      return (\r\n                        <th\r\n                          key={column}\r\n                          ref={(el) => (columnRefs.current[column] = el)}\r\n                          className={`text-left p-2 font-medium text-slate-700 border-b border-r ${\r\n                            isFrozen ? \"sticky z-20 bg-slate-50\" : \"\"\r\n                          } ${dragOverColumn === column ? \"bg-blue-50\" : \"\"}`}\r\n                          style={{\r\n                            left: leftPos,\r\n                            ...columnStyle,\r\n                          }}\r\n                          draggable\r\n                          onDragStart={() => handleColumnDragStart(column)}\r\n                          onDragOver={(e) => handleColumnDragOver(e, column)}\r\n                          onDrop={() => handleColumnDrop(column)}\r\n                          onDragEnd={handleColumnDragEnd}\r\n                        >\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <span>{column}</span>\r\n                            <SlidersHorizontal className=\"h-3 w-3 text-slate-400 cursor-grab\" />\r\n                          </div>\r\n                        </th>\r\n                      )\r\n                    })}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {interestData.map((interest) => (\r\n                  <tr \r\n                    key={interest.InterestId} \r\n                    className={`border-b hover:bg-slate-50 transition-colors ${\r\n                        dragOverInterest === interest.InterestId ? \"bg-blue-50\" : \"\"\r\n                      }`}\r\n                    draggable\r\n                    onDragStart={() => handleDragStart(interest.InterestId)}\r\n                    onDragOver={(e) => handleDragOver(e, interest.InterestId)}\r\n                    onDrop={() => handleDrop(interest.InterestId)}\r\n                    onDragEnd={handleDragEnd}\r\n                  >\r\n                    {columnOrder\r\n                      .filter((column) => visibleColumns.includes(column))\r\n                      .map((column, colIndex) => {\r\n                        const isFrozen = frozenColumns.includes(column)\r\n                        const leftPos = isFrozen ? `${getLeftPosition(colIndex)}px` : undefined\r\n                        const columnStyle = getColumnStyle(column)\r\n                        \r\n                        return (\r\n                          <td\r\n                            key={`${interest.InterestId}-${column}`}\r\n                            className={`p-2 border-b border-r text-slate-700 ${\r\n                              isFrozen ? \"sticky z-10 bg-inherit\" : \"\"\r\n                            }`}\r\n                            style={{\r\n                              left: leftPos,\r\n                              ...columnStyle,\r\n                            }}\r\n                          >\r\n                            {renderCellContent(interest, column)}\r\n                          </td>\r\n                        )\r\n                      })}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </TooltipProvider>\r\n  )\r\n}\r\n\r\nexport default InterestTable;","import Header from \"@/components/dashboard_component/Header\";\r\nimport CollapsibleSidebar from \"@/pages/Dashboard/CollapsibleSidebar\";\r\nimport { FaMeta } from \"react-icons/fa6\";\r\nimport { useEffect, useCallback, useState, useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/store\";\r\nimport createAxiosInstance from \"@/pages/ConversionReportPage/components/axiosInstance\";\r\nimport { format } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Loader from \"@/components/dashboard_component/loader\";\r\nimport InterestTable from \"./components/InterestTable\";\r\nimport MissingDateWarning from \"@/components/dashboard_component/Missing-Date-Waning\";\r\nimport HelpDeskModal from \"@/components/dashboard_component/HelpDeskModal\";\r\n\r\n// Define interface for interest data structure\r\ninterface InterestMetric {\r\n  Interest: string;\r\n  InterestId: string;\r\n  Spend: number;\r\n  Revenue: number;\r\n  Roas: number;\r\n  accounts?: string[];\r\n}\r\n\r\ninterface AccountData {\r\n  adAccountId: string;\r\n  interestMetrics: InterestMetric[];\r\n}\r\n\r\ninterface MetaInterestData {\r\n  resultsByAccount: {\r\n    [accountName: string]: AccountData;\r\n  };\r\n  blendedSummary: InterestMetric[];\r\n}\r\n\r\nfunction InterestPage() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [metaInterest, setMetaInterest] = useState<MetaInterestData | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  const dateFrom = useSelector((state: RootState) => state.date.from);\r\n  const dateTo = useSelector((state: RootState) => state.date.to);\r\n  const date = useMemo(() => ({\r\n    from: dateFrom,\r\n    to: dateTo\r\n  }), [dateFrom, dateTo]);\r\n\r\n  const axiosInstance = createAxiosInstance();\r\n  const { brandId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    if (!date.from || !date.to) return;\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const startDate = format(date.from, \"yyyy-MM-dd\");\r\n      const endDate = format(date.to, \"yyyy-MM-dd\");\r\n      \r\n      const response = await axiosInstance.post(\r\n        `/api/meta/interest/${brandId}`,\r\n        { startDate, endDate },\r\n        { withCredentials: true }\r\n      );\r\n      \r\n      console.log(\"API Response:\", response.data);\r\n      \r\n      if (response.data && response.data.data) {\r\n        setMetaInterest(response.data.data);\r\n      } else {\r\n        console.error(\"Invalid data structure:\", response.data);\r\n        setError(\"Invalid data structure received from API\");\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching interest data:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        if (error.response?.status === 401) {\r\n          alert('Your session has expired. Please log in again.');\r\n          navigate('/');\r\n        } else {\r\n          setError(`API Error: ${error.response?.data?.message || error.message}`);\r\n        }\r\n      } else {\r\n        setError(\"An unexpected error occurred\");\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [navigate, date, brandId]);\r\n\r\n  useEffect(() => {\r\n    if (date.from && date.to) {\r\n      fetchData();\r\n    }\r\n  }, [fetchData, date]);\r\n\r\n  useEffect(() => {\r\n    // Set up refresh interval\r\n    const intervalId = setInterval(() => {\r\n      if (date.from && date.to) {\r\n        fetchData();\r\n      }\r\n    }, 3 * 60 * 60 * 1000); // 3 hours\r\n    \r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData, date]);\r\n\r\n  // Get available accounts for dropdown with safe access\r\n  const accounts = useMemo(() => {\r\n    if (!metaInterest?.resultsByAccount) {\r\n      console.log(\"No resultsByAccount found in metaInterest:\", metaInterest);\r\n      return [];\r\n    }\r\n    \r\n    const accountKeys = Object.keys(metaInterest.resultsByAccount);\r\n    console.log(\"Found accounts:\", accountKeys);\r\n    \r\n    return accountKeys.filter(account => {\r\n      const hasInterests = metaInterest.resultsByAccount[account]?.interestMetrics?.length > 0;\r\n      console.log(`Account ${account} has interests: ${hasInterests}`);\r\n      return hasInterests;\r\n    });\r\n  }, [metaInterest]);\r\n\r\n  // Calculate height based on number of tables\r\n  const tableHeight = useMemo(() => {\r\n    // Base height for single table\r\n    const baseHeight = 'max-h-[calc(100vh-210px)]';\r\n    \r\n    // If no data or only one account, use base height\r\n    if (!metaInterest?.resultsByAccount) return baseHeight;\r\n    \r\n    const accountCount = Object.keys(metaInterest.resultsByAccount).length;\r\n    \r\n    // Adjust height based on number of accounts\r\n    if (accountCount <= 1) return baseHeight;\r\n    \r\n    // For multiple accounts, reduce height per table\r\n    return 'max-h-[calc(100vh-400px)]';\r\n  }, [metaInterest]);\r\n\r\n  // Check if we have any data to display\r\n  const hasBlendedData = metaInterest?.blendedSummary && metaInterest.blendedSummary.length > 0;\r\n  console.log(\"Has blended data:\", hasBlendedData, metaInterest?.blendedSummary?.length);\r\n  \r\n  const hasAccountData = accounts.length > 0;\r\n  console.log(\"Has account data:\", hasAccountData, accounts.length);\r\n  \r\n  const hasAnyData = hasBlendedData || hasAccountData;\r\n  console.log(\"Has any data:\", hasAnyData);\r\n\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <CollapsibleSidebar />\r\n      <div className=\"flex-1 h-screen overflow-hidden flex flex-col\">\r\n        {(!date.from || !date.to) ? (\r\n          <MissingDateWarning />\r\n        ) : ( (isLoading) ? <Loader isLoading={isLoading}/> :\r\n          <>\r\n            <div className=\"flex-none\">\r\n              <Header \r\n                title='Meta Interest Analysis' \r\n                Icon={FaMeta} \r\n                showDatePicker={true} \r\n              />\r\n            </div>\r\n            <main className=\"p-4 md:p-6 lg:px-8 overflow-auto\">\r\n              {error ? (\r\n                <div className=\"text-center py-12\">\r\n                  <p className=\"text-red-500\">{error}</p>\r\n                  <button \r\n                    onClick={fetchData}\r\n                    className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n                  >\r\n                    Retry\r\n                  </button>\r\n                </div>\r\n              ) : metaInterest ? (\r\n                <div className=\"grid grid-cols-1 gap-6\">\r\n                  {/* Blended Summary Table */}\r\n                  {hasBlendedData && (\r\n                    <InterestTable \r\n                      data={metaInterest} \r\n                      height={tableHeight}\r\n                      showAccounts={true}\r\n                    />\r\n                  )}\r\n                  \r\n                  {/* Individual Account Tables */}\r\n                  {hasAccountData && accounts.map((accountName) => (\r\n                    <InterestTable \r\n                      key={accountName}\r\n                      data={{\r\n                        resultsByAccount: { \r\n                          [accountName]: metaInterest.resultsByAccount[accountName] \r\n                        },\r\n                        blendedSummary: metaInterest.resultsByAccount[accountName].interestMetrics\r\n                      }}\r\n                      height={tableHeight}\r\n                      accountName={accountName}\r\n                      showAccounts={false}\r\n                    />\r\n                  ))}\r\n                  \r\n                  {/* No Data Message */}\r\n                  {!hasAnyData && (\r\n                    <div className=\"text-center py-12\">\r\n                      <p className=\"text-gray-500\">No interest data available. Please try adjusting your date range.</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-12\">\r\n                  <p className=\"text-gray-500\">No interest data available. Please try adjusting your date range.</p>\r\n                </div>\r\n              )}\r\n            </main>\r\n          </>\r\n        )}\r\n        <HelpDeskModal />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InterestPage;","\r\nimport { UserProvider } from './context/UserContext';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport AuthForm from \"./Auth/AuthForm.tsx\";\r\nimport { Toaster } from \"@/components/ui/toaster\"\r\nimport AnalyticsDashboard from './pages/AnalyticsDashboard/AnalyticsDashboard.tsx';\r\nimport GeneralDashboard from './pages/GeneralisedDashboard/GeneralDashboard.tsx';\r\nimport { BrandProvider } from './context/BrandContext.tsx';\r\nimport { ExcelMetricsPage } from './pages/MonthlyAdMetrics/ExcelMetrics.tsx';\r\nimport PerformanceDashboard from './pages/BrandPerformanceDashboard/PerformanceDashboard.tsx';\r\nimport SegmentDashboard from './pages/SegmentDashboard/SegmentDashboard.tsx';\r\nimport GoogleCallback from './Auth/OauthSucces.tsx';\r\nimport ReportsPage from './pages/ReportPage/ReportsPage.tsx';\r\nimport { TokenErrorProvider } from './context/TokenErrorContext.tsx';\r\nimport GoogleAdsDashboard from './pages/GoogleAdsHub/Dashboard.tsx';\r\nimport FbReportPage from './pages/Meta/FbReports/FbReportPage';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './store';\r\nimport ProfilePage from './pages/Profile Page/ProfilePage.tsx';\r\nimport BrandSetupDashboard from './pages/GeneralisedDashboard/BrandSetUpDashboard.tsx';\r\nimport TutorialManager from './components/Tutorial/TutorialManager.tsx';\r\nimport TutorialDriver from './components/Tutorial/TutorialDriver.tsx';\r\nimport LandingPage from './pages/LandingPage/page.tsx';\r\nimport PrivacyPolicy from './pages/LandingPage/components/PrivacyPolicy.tsx';\r\nimport ConversionLens from './pages/ConversionReportPage/ConversionLens.tsx';\r\nimport CampaignPage from './pages/Meta/Campaign Reports/CampaignPage.tsx';\r\nimport InterestPage from './pages/Meta/Interest Reports/InterestReportPage.tsx';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <UserProvider>\r\n          <BrandProvider>\r\n            <TokenErrorProvider>\r\n            \r\n              <Router>\r\n              <TutorialManager>\r\n                <TutorialDriver />\r\n                <Toaster />\r\n                <Routes>\r\n                  <Route path='/' element={<LandingPage />} />\r\n                  <Route path=\"/login\" element={<AuthForm />} />\r\n                  <Route path=\"/dashboard\" element={<GeneralDashboard />} />\r\n                  <Route path=\"/admetrics/:brandId\" element={<AnalyticsDashboard />} />\r\n                  <Route path='/ecommerce-reports/:brandId' element={<ReportsPage />} />\r\n                  <Route path=\"/marketing-insights/:brandId\" element={<ExcelMetricsPage />} />\r\n                  <Route path='/performance-metrics' element={<PerformanceDashboard />} />\r\n                  <Route path='/segment-dashboard/:brandId' element={<SegmentDashboard />} />\r\n                  <Route path='/meta-reports/:brandId' element={<FbReportPage />} />\r\n                  <Route path='/google-reports/:brandId' element={<GoogleAdsDashboard />} />\r\n                  <Route path=\"/conversion-reports/:brandId\" element={<ConversionLens />} />\r\n                  <Route path=\"/callback\" element={<GoogleCallback />} />\r\n                  <Route path =\"/profile\" element = {<ProfilePage />} />\r\n                  <Route path =\"/brand-setup\" element = {<BrandSetupDashboard />} />\r\n                  <Route path =\"/privacy-policy\" element={<PrivacyPolicy />} />\r\n                  <Route path = \"/meta-campaigns/:brandId\" element={<CampaignPage />} />\r\n                  <Route path = \"/meta-interest/:brandId\" element={<InterestPage />} />\r\n                </Routes>\r\n                </TutorialManager>\r\n              </Router>\r\n             \r\n            </TokenErrorProvider>\r\n          </BrandProvider>\r\n        </UserProvider>\r\n        </PersistGate>\r\n        </Provider>\r\n        );\r\n}\r\n\r\n        export default App;\r\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"names":["UserContext","createContext","UserProvider","children","user","setUser","useState","storedUser","showLandingPopup","setShowLandingPopup","useEffect","updateUser","newUser","jsx","useUser","context","useContext","cn","inputs","twMerge","clsx","Input","React.forwardRef","className","type","props","ref","buttonVariants","cva","Button","variant","size","asChild","Comp","Slot","labelVariants","Label","LabelPrimitive.Root","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","toast","t","listeners","memoryState","listener","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","initialState","userSlice","createSlice","clearUser","userReducer","AuthForm","isLogin","setIsLogin","username","setUsername","email","setEmail","password","setPassword","showPassword","setShowPassword","navigate","useNavigate","errors","setErrors","useSelector","useDispatch","toggleForm","validateForm","newErrors","isValid","handleSubmit","e","response","baseURL","axios","userData","error","handleGoogleLogin","authUrl","jsxs","User","Mail","Lock","Eye","EyeOff","FcGoogle","ToastProvider","ToastPrimitives.Provider","ToastViewport","ToastPrimitives.Viewport","toastVariants","Toast","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","Cross2Icon","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","Toaster","toasts","title","description","brandSlice","setSelectedBrandId","setBrands","resetBrand","brandReducer","TooltipProvider","TooltipPrimitive.Provider","Tooltip","TooltipPrimitive.Root","TooltipTrigger","TooltipPrimitive.Trigger","TooltipContent","sideOffset","TooltipPrimitive.Portal","TooltipPrimitive.Content","Logo","ScrollArea","ScrollAreaPrimitive.Root","ScrollAreaPrimitive.Viewport","ScrollBar","ScrollAreaPrimitive.Corner","orientation","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb","COLORS","Ga4Logo","width","height","ShopifyLogo","FacebookLogo","GoogleLogo","WhiteGa4Logo","WhiteGoogleAdsLogo","CollapsibleSidebar","isExpanded","setIsExpanded","isInitialLoad","setIsInitialLoad","location","useLocation","sidebarRef","useRef","selectedBrandId","brands","fetchBrands","useCallback","toggleSidebar","prev","handleLogout","pathParts","getCurrentPathType","handleBrandChange","brandId","currentPathType","allDashboards","Blend","CalendarRange","LineChart","FaMeta","Target","isItemDisabled","item","currentBrand","b","ChevronLeft","ChevronRight","SidebarItem","Store","_a","ChevronUp","ChevronDown","brand","SidebarChild","isAnySubItemSelected","subItem","isMainItemActive","dashboardItemContent","Fragment","subIndex","UserProfile","LogoutButton","path","text","onClick","disabled","isSelected","isOpen","setIsOpen","hasChildren","React","handleToggle","isChildSelected","child","isActive","baseClasses","content","childItem","NavLink","icon","openIcon","closeIcon","tooltipContent","autoOpenOnSelect","_b","grandchild","userProfileContent","User2Icon","logoutContent","LogOut","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","Skeleton","MetricCardSkeleton","MetricCard","label","value","date","formatDate","dateValue","HelpCircle","AdAccountMetricsCard","metrics","isLoading","errorMessage","_","metric","Calendar","classNames","showOutsideDays","DayPicker","ChevronLeftIcon","ChevronRightIcon","Popover","PopoverPrimitive.Root","PopoverTrigger","PopoverPrimitive.Trigger","PopoverContent","align","PopoverPrimitive.Portal","PopoverPrimitive.Content","Checkbox","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","CheckIcon","dateSlice","setDate","clearDate","dateReducer","selectDateRange","createSelector","from","to","DatePickerWithRange","defaultDate","resetToFirstPage","dateRange","initialDate","useMemo","tempDate","setTempDate","compareDate","setCompareDate","setOpen","selectedPreset","setSelectedPreset","isCompareEnabled","setIsCompareEnabled","calendarMode","setCalendarMode","manualFromDate","setManualFromDate","format","manualToDate","setManualToDate","manualCompareFromDate","setManualCompareFromDate","manualCompareToDate","setManualCompareToDate","dates","today","daysSinceSunday","startOfThisWeek","subDays","endOfThisWeek","addDays","startOfThisMonth","endOfThisMonth","startOfLastWeek","endOfLastWeek","quarter","startOfThisQuarter","endOfThisQuarter","lastQuarter","lastQuarterYear","startOfLastQuarter","endOfLastQuarter","parseManualDate","dateString","parsedDate","parse","handleManualDateInput","fromDate","toDate","handleManualCompareDateInput","setPresetRange","presets","subMonths","subYears","startOfYear","endOfYear","handleCalendarSelect","range","formatDateRange","clearDateRange","handleUpdate","CalendarIcon","preset","availableTutorials","tutorialStepsMap","getTutorialsForPath","tutorial","a","getTutorialSteps","tutorialId","getTutorialById","getRelatedTutorials","getAllTutorialsForPath","sortedTutorials","tutorialMap","processTutorial","relatedId","relatedTutorial","result","tutorialRouteMap","tutorialSlice","newTutorials","setFirstTimeLogin","queueTutorials","startTutorial","nextTutorial","setTutorialStep","stopTutorial","completeFirstTimeLogin","resetTutorial","resetAllTutorials","tutorialsReducer","TutorialButton","buttonText","componentId","position","currentPath","isTutorialActive","handleStartTutorial","allTutorials","tutorialIds","componentTutorials","buttonStyles","HeaderTutorialButton","completedTutorials","hasTutorials","allCompleted","localeSlice","setLocale","localReducer","Header","Icon","showDatePicker","showSettings","showRefresh","handleManualRefresh","locale","RefreshCw","Settings","Loader","progress","setProgress","messageIndex","setMessageIndex","isComplete","setIsComplete","loadingMessages","progressInterval","messageInterval","CheckCircle","TokenErrorContext","TokenErrorProvider","tokenError","setTokenError","useTokenError","createAxiosInstance","axiosInstance","Dashboard","setIsLoading","fbAdAccountsMetrics","setFbAdAccountsMetrics","googleAdMetrics","setGoogleAdMetrics","rawMetrics","setRawMetrics","useParams","dateFrom","dateTo","userId","fetchFacebookData","startDate","endDate","fbError","fetchGoogleData","googleError","fetchAdData","fbData","googleData","calculateAggregatedMetrics","intervalId","calculateFacebookMetrics","totalSpent","totalRevenue","totalPurchases","totalClicks","totalImpressions","account","calculateGoogleMetrics","fbMetrics","googleMetrics","formattedMetrics","_c","_d","_e","_f","_g","_h","accountMetrics","fbmetrics","TicketFormSkeleton","TicketForm","onClose","form","setForm","departments","setDepartments","loading","setLoading","submitting","setSubmitting","handleChange","name","MessageSquare","X","AlertCircle","Building","Briefcase","dept","Loader2","Send","HelpDeskModal","isModalOpen","setIsModalOpen","FaHeadset","AnalyticsDashboard","Dialog","DialogPrimitive.Root","DialogTrigger","DialogPrimitive.Trigger","DialogPortal","DialogPrimitive.Portal","DialogOverlay","DialogPrimitive.Overlay","DialogContent","DialogPrimitive.Content","DialogPrimitive.Close","DialogHeader","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","ShopifyModalContent","storeName","setStoreName","handleShopifyLogin","OtherPlatformModalContent","platform","onConnect","connectedId","onRemove","searchTerm","setSearchTerm","googleAdsAccounts","setGoogleAdsAccounts","googleAnalyticsAccounts","setGoogleAnalyticsAccounts","facebookAdsAccounts","setFacebookAdsAccounts","showLoginButton","setShowLoginButton","fetchGoogleAdsAccounts","handleError","fetchGoogleAnalyticsAccounts","fetchFacebookAdsAccounts","axiosError","request","status","data","config","code","authCode","googleAdsErrorMessage","errText","filteredAccounts","handleConnect","accountId","displayName","managerId","handleFbLogin","Search","isGoogleAds","isFacebook","accountName","platformLogo","displayText","Check","platforms","steps","BrandSetup","currentStep","setCurrentStep","openModal","setOpenModal","connectedAccounts","setConnectedAccounts","brandName","setBrandName","brandLogo","setBrandLogo","googleAdsConnections","setGoogleAdsConnections","ga4Id","setGa4Id","fbAdId","setFBAdId","shop","setShop","shopifyAccessToken","setShopifyAccessToken","params","accessToken","shopName","handleLogoUpload","event","file","isConnected","getConnectedId","platformName","conn","canProceed","payload","connection","newBrandId","updatedUser","renderStepContent","Upload","accounts","Building2","step","current","ArrowRight","BrandSetupDashboard","Rocket","METRIC_COLORS","METRIC_BG_COLORS","formatValue","isRoas","change","trend","prevValue","source","ArrowUpIcon","ArrowDownIcon","PerformanceCard","period","performanceData","apiStatus","combinedMetrics","allMetrics","periodLabels","renderSourceCards","cards","sourceMetrics","key","metricData","str","SummaryDashboard","userName","setPerformanceData","setApiStatus","fetchPerformanceData","metaPromise","googlePromise","analyticsPromise","metaResponse","googleResponse","analyticsResponse","GeneralDashboard","BrandContext","BrandProvider","storedBrands","storedSelectedBrandId","DataBuilding","loadingText","setLoadingText","interval","nextIndex","Link","BarChart3","PieChart","TooltipHeader","tooltip","colSpan","rowSpan","isSubHeader","isImportant","Cell","isNumeric","isHeader","isSticky","ExcelMetricsPage","metricsData","setMetricsData","setError","isFullScreen","setIsFullScreen","expandedMonths","setExpandedMonths","toggleFullScreen","getTableHeight","queryParams","err","message","toggleMonth","monthYear","m","formatCurrency","formatPercentage","processedData","safeDivide","numerator","denominator","monthData","processedDailyMetrics","daily","metaSales","sum","googleSales","totalAdSales","totalSales","month","totalSpend","totalROI","metaSpend","googleSpend","metaROAS","googleROAS","renderTable","renderContent","Minimize","Maximize","Download","Table","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableCaption","Select","SelectPrimitive.Root","SelectValue","SelectPrimitive.Value","SelectTrigger","SelectPrimitive.Trigger","SelectPrimitive.Icon","ChevronDownIcon","SelectScrollUpButton","SelectPrimitive.ScrollUpButton","ChevronUpIcon","SelectScrollDownButton","SelectPrimitive.ScrollDownButton","SelectContent","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectLabel","SelectPrimitive.Label","SelectItem","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","SelectPrimitive.ItemText","SelectSeparator","SelectPrimitive.Separator","BrandPerformanceDashboard","selectedBrands","setSelectedBrands","newBrand","setNewBrand","endOfMonth","editingBrand","setEditingBrand","editData","setEditData","achievedMetrics","setAchievedMetrics","getMetaMetrics","fetchMetricsData","handleInputChange","handleSourceChange","handleAddBrand","brandToAdd","newBrandTarget","handleEdit","brandToEdit","handleSaveEdit","handleCancelEdit","handleDelete","calculateMetrics","achievedSpend","achievedSales","remainingSales","achievedROAS","targetDate","remainingDays","requiredSalesPerDay","chartData","PlusCircle","isEditing","Edit2","Trash2","ResponsiveContainer","BarChart","XAxis","YAxis","Bar","PerformanceDashboard","ProductTab","tabs","setTabs","activeTab","setActiveTab","currentPage","setCurrentPage","expandedCategories","setExpandedCategories","filterApplied","setFilterApplied","rowsPerPage","filterData","setFilterData","cacheRef","POLL_INTERVAL","sortColumn","setSortColumn","sortOrder","setSortOrder","handleTabChange","newTabId","fetchTabData","tabId","body","isFilterApplied","tab","updatedBody","cacheKey","cachedData","now","prevTabs","columns","requestBody","handleRowClick","currentTab","rowData","tabColumnMapping","bodyKeyMapping","columnToFetch","bodyKey","valueToSend","filterPayload","toggleCategory","categoryPath","newSet","renderCategoryRow","category","depth","subCategory","handleSort","columnId","prevOrder","getCurrentTabData","sortedData","aValue","bValue","stringA","stringB","startIndex","endIndex","totalPages","categoryColumns","TableSkeleton","idx","Package","Layers","Tag","BarChart2","Filter","column","ArrowUp","ArrowDown","ArrowUpDown","row","i","isIssuesColumn","isProductColumn","isStatusColumn","isNoIssues","getStatusColor","renderCell","statusValue","colorClass","rowIndex","cellIndex","SearchTermTable","searchTerms","setSearchTerms","hasMoreData","setHasMoreData","totalRecords","setTotalRecords","setTotalPages","campaignAdGroupPairs","setCampaignAdGroupPairs","selectedCampaign","setSelectedCampaign","statusOptions","setStatusOptions","selectedAdGroup","setSelectedAdGroup","selectedStatus","setSelectedStatus","Zap","Megaphone","Users","DollarSign","TrendingUp","Percent","MousePointer","CreditCard","sortedSearchTerms","fetchData","handleCampaignChange","handleAdGroupChange","handleStatusChange","filteredAdGroups","pair","adGroup","isSearchTermColumn","searchTermValue","performance","isPerformingWell","metricLabels","ROWS_PER_PAGE","AgeAndGenderMetrics","filters","setFilters","filterOptions","setFilterOptions","setData","showGraph","setShowGraph","graphData","setGraphData","selectedMetrics","setSelectedMetrics","handleMetricChange","cachedAgeRanges","setCachedAgeRanges","cachedGenders","setCachedGenders","requestData","_forceRefresh","apiEndpoint","genderCampaignNames","campaignNames","campaignAdGroupMap","adGroups","prevOptions","ageRanges","genders","statusColor","aggregatedData","processedGraphData","displayKey","baseEntry","typedMetrics","handleFilterChange","filterKey","updatedFilters","sortableColumns","handlePageChange","newPage","validPage","colorPalette","campaign","ag","gender","CartesianGrid","RechartsTooltip","Legend","DropdownMenu","DropdownMenuPrimitive.Root","DropdownMenuTrigger","DropdownMenuPrimitive.Trigger","DropdownMenuSubTrigger","inset","DropdownMenuPrimitive.SubTrigger","DropdownMenuSubContent","DropdownMenuPrimitive.SubContent","DropdownMenuContent","DropdownMenuPrimitive.Portal","DropdownMenuPrimitive.Content","DropdownMenuItem","DropdownMenuPrimitive.Item","DropdownMenuCheckboxItem","checked","DropdownMenuPrimitive.CheckboxItem","DropdownMenuPrimitive.ItemIndicator","DropdownMenuRadioItem","DropdownMenuPrimitive.RadioItem","DotFilledIcon","DropdownMenuLabel","DropdownMenuPrimitive.Label","DropdownMenuSeparator","DropdownMenuPrimitive.Separator","getConditionalColors","average","ReportTable","allTimeData","sortDirection","setSortDirection","filterLabel","setFilterLabel","filterType","setFilterType","columnWidths","setColumnWidths","isResizing","setIsResizing","loadedRows","setLoadedRows","rowsPerChunk","isDateTable","tableRef","containerRef","initializationRef","dataRef","filteredDataRef","comparisonColumns","parsePercentage","headerCells","widths","cell","handleResize","averageValues","averages","validData","allTimeAverageValues","validAllTimeData","rowPerformanceLabels","currentPerformance","isWorstPerformingCurrent","currentLabel","allTimePerformance","allTimeAverage","isWorstPerformingAllTime","handleMouseDown","startX","startWidth","handleMouseMove","moveEvent","delta","newWidth","newWidths","handleMouseUp","parsedData","aNum","bNum","isNumericColumn","handleClickLabel","filteredData","loadMoreRows","nextChunk","handleScroll","target","displayRows","pageCount","goToPage","page","pageNumber","columnPairs","colIndex","isFirstColumn","needsLeftSticky","isComparisonCol","Award","ThumbsDown","cellValue","isComparisonColumn","isPairedColumn","rateColumn","rateValue","ChevronsLeft","ChevronsRight","ReportTable$1","FilterComponent","onFiltersChange","filterColumn","setFilterColumn","filterOperator","setFilterOperator","filterValue","setFilterValue","addFilter","CitySessionPage","propDateRange","setAllTimeData","setFilteredData","selectedColumns","setSelectedColumns","rowsToShow","setRowsToShow","removedColumns","setRemovedColumns","allColumns","toggleColumnSelection","newColumns","col","prevRemoved","fetchMetrics","allTimeResponse","fetchedData","fetchedAllTimeData","prevSelected","sortedSelectedColumns","applyFilters","filter","numValue","memoizedFilteredData","numericColumns","removeFilter","Columns","LandingPageSession","AgeReportPage","GenderReportPage","ChannelSessionPage","fullScreenChangeHandler","AgeGenderMetrics","CityBasedReports","GenderBasedReports","SegmentDashboard","GoogleCallback","googletoken","fbToken","googleRefreshToken","zohoRefreshToken","updateToken","url","token","login","getUser","NewReportTable","columnOrder","setColumnOrder","draggedColumn","setDraggedColumn","minColumnWidth","widthsRef","handleDragStart","handleDragOver","handleDrop","targetColumn","newOrder","draggedIdx","targetIdx","containerWidth","totalColumns","initialWidths","equalWidth","parseDateString","dateStr","day","year","aDate","bDate","renderHeader","GripVertical","NewReportTable$1","Sheet","SheetPrimitive.Root","SheetTrigger","SheetPrimitive.Trigger","SheetPortal","SheetPrimitive.Portal","SheetOverlay","SheetPrimitive.Overlay","sheetVariants","SheetContent","side","SheetPrimitive.Content","SheetPrimitive.Close","SheetHeader","SheetTitle","SheetPrimitive.Title","SheetDescription","SheetPrimitive.Description","ColumnManagementSheet","visibleColumns","frozenColumns","onVisibilityChange","onOrderChange","onFrozenChange","dropTargetColumn","setDropTargetColumn","filteredColumns","toggleColumnVisibility","newVisibleColumns","toggleColumnFreeze","newFrozenColumns","Settings2","Pin","PinOff","EcommerceMetricsPage","compareFrom","compareTo","compareStartDate","compareEndDate","dateRanges","fetchedRanges","isConsolidatedData","firstRangeData","firstItem","setVisibleColumns","handleVisibilityChange","handleOrderChange","NoGA4AcessPage","PlatformModal","onOpenChange","onSuccess","connectedIds","endpoint","accountsSetter","updateBrandWithAccount","updateData","platformConfigs","AlertTriangle","Facebook","ConnectPlatform","benefit","DaywiseMetricsPage","Tab","CustomTabs","onTabChange","visibleTabCount","visibleTabs","hiddenTabs","activeHiddenTab","newHiddenTabs","newVisibleTabs","MoreHorizontal","MissingDateWarning","Clock","ReportsPage","selectedBrand","hasGA4Account","ShoppingCart","DailyEcommerceMetrics","ConversionTable","primaryColumn","secondaryColumns","monthlyDataKey","monthlyMetrics","rows","isAdsTable","months","getMonthName","monthNumber","allMonths","monthlyData","monthNum","allRows","dataIndex","metricIndex","prevRows","scrollTop","scrollHeight","clientHeight","thresholds","totalSessions","totalConvRate","sessionCount","totalPurchaseROAS","spendCount","totalCost","totalConvValuePerCost","costCount","getMetricColor","sessions","convRate","spend","purchaseROAS","cost","convValuePerCost","isHighSessions","isGoodConversion","isHighSpent","isGoodROAS","isHighCost","isGoodConvValuePerCost","renderIndicator","direction","Minus","renderMonthCell","colorStyle","directionIndicator","renderMetricValue","currentMetric","columnIndex","metricStyle","totalConvValue","totalPCV","renderMetricRow","getMonthNumber","monthName","monthFormat","totalRows","renderColumnHeader","thresholdValue","conversionFiltersSlice","setFilter","clearFilters","conversionFiltersReducer","FILTERABLE_COLUMNS","FilterConversions","availableColumns","selectedColumn","setSelectedColumn","operator","setOperator","setValue","dropdownOpen","setDropdownOpen","handleAddFilter","handleClearFilters","filterTooltip","SearchTerm","apiResponse","setApiResponse","shallowEqual","transformedFilters","acc","apiColumnName","Age","Gender","Keyword","Product","GoogleAdsDashboard","hasGoogleAdAccount","SquareChartGantt","PerformanceSummary","metricConfig","expandedCategory","setExpandedCategory","primaryMetric","secondaryMetric","categories","categorizedItems","primaryValue","isHighPrimary","isHighSecondary","c","privacyPolicySections","metricConfigs","NumberFormatSelector","iconSize","AudienceFbReport","fullScreenAccount","setFullScreenAccount","blendedAudienceData","PlacementFbReport","blendedPlacementData","PlatformFbReport","blendedPlatformData","CountryFbReport","blendedCountryData","DeviceFbReport","dateForm","blendedDeviceData","GenderFbReport","blendedGenderData","AgeFbReport","blendedAgeData","FbReportPage","defaultAccountState","initializeAccountState","campaignGroupsSlice","campaigns","color","newGroup","groupId","group","campaignName","g","expandedGroups","isCreating","campaignGroupsReducer","campaignLabelsSlice","campaignId","l","sourceCampaignId","targetCampaignId","addLabelToCampaign","removeLabelFromCampaign","toggleAddingLabel","clearAccountLabels","copyLabels","deleteLabel","campaignLabelsReducer","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","getDefaultMiddleware","persistor","persistStore","badgeVariants","Badge","pricingPlans","Pricing","plan","Star","feature","ProfilePage","userbrands","userBrandNames","handleZohoLogin","Shield","Plus","TutorialManager","isFirstTimeLogin","tutorialQueue","activeTutorial","hasStartedTutorialsRef","isFirstLogin","shouldQueueTutorials","timer","TutorialDriver","driverInstanceRef","activeTutorialStep","allElementsExist","driverInstance","driverJS","element","currentStepIndex","relatedTutorials","CTA","Feature","PlatformFeatures","Folder","Features","Footer","generateLast30Days","baseValue","fluctuation","HeroSection","AreaChart","Area","Navbar","LandingPage","PrivacyPolicy","section","para","defaultStyles","calculateThresholds","getCellStyle","styles","applyExcelStyles","worksheet","XLSX.utils","C","headerCell","actualRow","startCol","endCol","cellRef","cellStyle","monthIndex","monthKey","fillStyle","ExcelDownload","fileName","buttonClassName","handleDownload","workbook","sheetData","headerRow","colWidths","XLSX.writeFile","FileDown","DeviceTypeConversion","GenderConversion","AgeConversion","InterestConversion","OperatingSystemConversion","BrowserConversion","sessionsFilter","convRateFilter","SourceConversion","PageTitleConversion","PagePathConversion","LandingPageConversion","RegionConversion","CityTypeConversion","CountryConversion","CampaignConversion","ChannelConversion","ConversionLens","Radar","LABEL_COLORS","DEFAULT_COLUMN_WIDTH","MetaCampaignTable","draggedCampaign","setDraggedCampaign","dragOverCampaign","setDragOverCampaign","dragOverColumn","setDragOverColumn","editingLabel","setEditingLabel","editLabelValue","setEditLabelValue","isEditMode","setIsEditMode","setFrozenColumns","isGroupingEnabled","setIsGroupingEnabled","groupedCampaigns","setGroupedCampaigns","ungroupedCampaigns","setUngroupedCampaigns","statusFilter","setStatusFilter","columnRefs","newLabelInputRef","labels","accountLabels","PREDEFINED_LABELS","allUniqueLabels","uniqueLabels","labelArray","hasAnyLabels","filterCampaignsByStatus","filteredCampaigns","initialColumns","initialVisibleColumns","orderedColumns","labelMap","unGrouped","campaignLabels","grouped","labelColorMap","map","colorIndex","getLeftPosition","visibleOrderedColumns","columnElement","handleAddLabel","handleRemoveLabel","handleCreateNewLabel","getColumnStyle","handleDragEnd","handleColumnDragStart","columnName","handleColumnDragOver","handleColumnDrop","targetColumnName","draggedIndex","targetIndex","newColumnOrder","handleColumnDragEnd","toggleGroupExpansion","labelIndex","updatedGroups","calculateGroupSummary","summary","summaryColumns","calculationMethods","totalLinkClicks","totalreach","totaloutboundctr","totalFrequency","totalUniqueClicks","totalAddToCart","totalCheckoutInitiated","totalLandingPageView","threeSecondsView","totalimpressions","values","val","calculateMethod","renderLabelDropdown","Edit","LayoutGrid","isFrozen","leftPos","columnStyle","el","SlidersHorizontal","groupIndex","CampaignPage","metaCampaign","setMetaCampaign","blendedSummary","accountData","InterestTable","showAccounts","draggedInterest","setDraggedInterest","dragOverInterest","setDragOverInterest","interestData","interestId","targetInterestId","formatRoas","formatAccounts","renderCellContent","interest","InterestPage","metaInterest","setMetaInterest","accountKeys","hasInterests","tableHeight","baseHeight","hasBlendedData","hasAccountData","hasAnyData","App","Provider","PersistGate","Router","Routes","Route","createRoot","StrictMode"],"mappings":"yyIAiBA,MAAMA,GAAcC,EAAAA,cAA2C,MAAS,EAE3DC,GAAkD,CAAC,CAAE,SAAAC,KAAe,CAC/E,KAAM,CAACC,EAAMC,CAAO,EAAIC,WAAsB,IAAM,CAC5C,MAAAC,EAAa,aAAa,QAAQ,MAAM,EAC9C,OAAOA,EAAa,KAAK,MAAMA,CAAU,EAAI,IAAA,CAC9C,EAEK,CAACC,EAAkBC,CAAmB,EAAIH,WAAS,IAClDF,EAEE,CAACA,EAAK,uBAAyB,CAACA,EAAK,QAAUA,EAAK,OAAO,SAAW,GAF3D,EAGnB,EAGDM,EAAAA,UAAU,IAAM,CACVN,EACF,aAAa,QAAQ,OAAQ,KAAK,UAAUA,CAAI,CAAC,EAEjD,aAAa,WAAW,MAAM,CAChC,EACC,CAACA,CAAI,CAAC,EAGTM,EAAAA,UAAU,IAAM,CACVN,GAAQ,CAACA,EAAK,uBAAyB,CAACA,EAAK,QAAUA,EAAK,OAAO,SAAW,IAChFK,EAAoB,EAAI,CAC1B,EACC,CAACL,CAAI,CAAC,EAEH,MAAAO,EAAcC,GAAyB,CACvCA,GAAW,CAACA,EAAQ,uBAAyB,CAACA,EAAQ,QAAUA,EAAQ,OAAO,SAAW,IAC5FH,EAAoB,EAAI,EAE1BJ,EAAQO,CAAO,CAAA,EAGjB,OACGC,MAAAb,GAAY,SAAZ,CAAqB,MAAO,CAC3B,KAAAI,EACA,QAASO,EACT,iBAAAH,EACA,oBAAAC,CAAA,EAEC,SAAAN,CACH,CAAA,CAEJ,EAEaW,GAAU,IAAM,CACrB,MAAAC,EAAUC,aAAWhB,EAAW,EACtC,GAAIe,IAAY,OACR,MAAA,IAAI,MAAM,4CAA4C,EAEvD,OAAAA,CACT,ECrEO,SAASE,MAAMC,EAAsB,CACnC,OAAAC,GAAQC,GAAKF,CAAM,CAAC,CAC7B,CCEA,MAAMG,GAAQC,EAAM,WAClB,CAAC,CAAE,UAAAC,EAAW,KAAAC,EAAM,GAAGC,CAAA,EAASC,IAE5Bb,EAAA,IAAC,QAAA,CACC,KAAAW,EACA,UAAWP,GACT,6VACAM,CACF,EACA,IAAAG,EACC,GAAGD,CAAA,CAAA,CAIZ,EACAJ,GAAM,YAAc,QChBpB,MAAMM,GAAiBC,GACrB,2VACA,CACE,SAAU,CACR,QAAS,CACP,QACE,6DACF,YACE,+EACF,QACE,2FACF,UACE,yEACF,MAAO,+CACP,KAAM,iDACR,EACA,KAAM,CACJ,QAAS,gBACT,GAAI,8BACJ,GAAI,uBACJ,KAAM,SACR,CACF,EACA,gBAAiB,CACf,QAAS,UACT,KAAM,SACR,CACF,CACF,EAQMC,EAASP,EAAM,WACnB,CAAC,CAAE,UAAAC,EAAW,QAAAO,EAAS,KAAAC,EAAM,QAAAC,EAAU,GAAO,GAAGP,CAAM,EAAGC,IAAQ,CAC1D,MAAAO,EAAOD,EAAUE,GAAO,SAE5B,OAAArB,EAAA,IAACoB,EAAA,CACC,UAAWhB,GAAGU,GAAe,CAAE,QAAAG,EAAS,KAAAC,EAAM,UAAAR,CAAA,CAAW,CAAC,EAC1D,IAAAG,EACC,GAAGD,CAAA,CAAA,CAGV,CACF,EACAI,EAAO,YAAc,SChDrB,MAAMM,GAAgBP,GACpB,4FACF,EAEMQ,GAAQd,EAIZ,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAACwB,GAAA,CACC,IAAAX,EACA,UAAWT,GAAGkB,GAAc,EAAGZ,CAAS,EACvC,GAAGE,CAAA,CACN,CACD,EACDW,GAAM,YAAcC,GAAoB,YCdxC,MAAMC,GAAc,EACdC,GAAqB,IAgB3B,IAAIC,GAAQ,EAEZ,SAASC,IAAQ,CACN,OAAAD,IAAAA,GAAQ,GAAK,OAAO,iBACtBA,GAAM,UACf,CA0BA,MAAME,OAAoB,IAEpBC,GAAoBC,GAAoB,CACxC,GAAAF,GAAc,IAAIE,CAAO,EAC3B,OAGI,MAAAC,EAAU,WAAW,IAAM,CAC/BH,GAAc,OAAOE,CAAO,EACnBE,GAAA,CACP,KAAM,eACN,QAAAF,CAAA,CACD,GACAL,EAAkB,EAEPG,GAAA,IAAIE,EAASC,CAAO,CACpC,EAEaE,GAAU,CAACC,EAAcC,IAA0B,CAC9D,OAAQA,EAAO,KAAM,CACnB,IAAK,YACI,MAAA,CACL,GAAGD,EACH,OAAQ,CAACC,EAAO,MAAO,GAAGD,EAAM,MAAM,EAAE,MAAM,EAAGV,EAAW,CAAA,EAGhE,IAAK,eACI,MAAA,CACL,GAAGU,EACH,OAAQA,EAAM,OAAO,IAAK,GACxB,EAAE,KAAOC,EAAO,MAAM,GAAK,CAAE,GAAG,EAAG,GAAGA,EAAO,KAAU,EAAA,CACzD,CAAA,EAGJ,IAAK,gBAAiB,CACd,KAAA,CAAE,QAAAL,CAAY,EAAAK,EAIpB,OAAIL,EACFD,GAAiBC,CAAO,EAElBI,EAAA,OAAO,QAASE,GAAU,CAC9BP,GAAiBO,EAAM,EAAE,CAAA,CAC1B,EAGI,CACL,GAAGF,EACH,OAAQA,EAAM,OAAO,IAAKG,GACxBA,EAAE,KAAOP,GAAWA,IAAY,OAC5B,CACE,GAAGO,EACH,KAAM,EAAA,EAERA,CACN,CAAA,CAEJ,CACA,IAAK,eACC,OAAAF,EAAO,UAAY,OACd,CACL,GAAGD,EACH,OAAQ,CAAC,CAAA,EAGN,CACL,GAAGA,EACH,OAAQA,EAAM,OAAO,OAAQ,GAAM,EAAE,KAAOC,EAAO,OAAO,CAAA,CAEhE,CACF,EAEMG,GAA2C,CAAA,EAEjD,IAAIC,GAAqB,CAAE,OAAQ,CAAA,GAEnC,SAASP,GAASG,EAAgB,CAClBI,GAAAN,GAAQM,GAAaJ,CAAM,EAC/BG,GAAA,QAASE,GAAa,CAC9BA,EAASD,EAAW,CAAA,CACrB,CACH,CAIA,SAASH,GAAM,CAAE,GAAGzB,GAAgB,CAClC,MAAM8B,EAAKd,KAELe,EAAU/B,GACdqB,GAAS,CACP,KAAM,eACN,MAAO,CAAE,GAAGrB,EAAO,GAAA8B,CAAG,CAAA,CACvB,EACGE,EAAU,IAAMX,GAAS,CAAE,KAAM,gBAAiB,QAASS,EAAI,EAE5D,OAAAT,GAAA,CACP,KAAM,YACN,MAAO,CACL,GAAGrB,EACH,GAAA8B,EACA,KAAM,GACN,aAAeG,GAAS,CACjBA,GAAcD,GACrB,CACF,CAAA,CACD,EAEM,CACL,GAAAF,EACA,QAAAE,EACA,OAAAD,CAAA,CAEJ,CAEA,SAASG,IAAW,CAClB,KAAM,CAACX,EAAOY,CAAQ,EAAIC,WAAsBR,EAAW,EAE3DS,OAAAA,EAAAA,UAAgB,KACdV,GAAU,KAAKQ,CAAQ,EAChB,IAAM,CACL,MAAAG,EAAQX,GAAU,QAAQQ,CAAQ,EACpCG,EAAQ,IACAX,GAAA,OAAOW,EAAO,CAAC,CAC3B,GAED,CAACf,CAAK,CAAC,EAEH,CACL,GAAGA,EACH,MAAAE,GACA,QAAUN,GAAqBE,GAAS,CAAE,KAAM,gBAAiB,QAAAF,EAAS,CAAA,CAE9E,CC3KA,MAAMoB,GAA0B,CAC9B,KAAM,IACR,EAEMC,GAAYC,GAAY,CAC5B,KAAM,OAAA,aACNF,GACA,SAAU,CACR,QAAS,CAAChB,EAAOC,IAAuC,CACtDD,EAAM,KAAOC,EAAO,OACtB,EAEA,UAAYD,GAAU,CACpBA,EAAM,KAAO,IACf,CACF,CACF,CAAC,EAEY,CAAE,QAAA3C,GAAS,UAAA8D,IAAcF,GAAU,QACjCG,GAAAH,GAAU,QCvBzB,SAAwBI,IAAW,CACjC,KAAM,CAACC,EAASC,CAAU,EAAIjE,WAAS,EAAI,EACrC,CAACkE,EAAUC,CAAW,EAAInE,WAAS,EAAE,EACrC,CAACoE,EAAOC,CAAQ,EAAIrE,WAAS,EAAE,EAC/B,CAACsE,EAAUC,CAAW,EAAIvE,WAAS,EAAE,EACrC,CAACwE,EAAcC,CAAe,EAAIzE,WAAS,EAAK,EAChD,CAAE,MAAA4C,GAAUS,KACZqB,EAAWC,KACX,CAACC,EAAQC,CAAS,EAAI7E,EAAS,SAAA,CAAE,SAAU,GAAI,MAAO,GAAI,SAAU,EAAI,CAAA,EACxEF,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxDF,EAAWuC,KAEjB3E,EAAAA,UAAU,IAAM,CACVN,GACF4E,EAAS,YAAY,CACvB,EACC,CAAC5E,EAAM4E,CAAQ,CAAC,EAEnB,MAAMM,EAAa,IAAMf,EAAW,CAACD,CAAO,EAEtCiB,EAAe,IAAM,CACzB,MAAMC,EAAY,CAAE,SAAU,GAAI,MAAO,GAAI,SAAU,IACvD,IAAIC,EAAU,GAEd,MAAI,CAACnB,GAAW,CAACE,EAAS,SACxBgB,EAAU,SAAW,uBACXC,EAAA,IAGPf,EAAM,OAGC,eAAe,KAAKA,CAAK,IACnCc,EAAU,MAAQ,mBACRC,EAAA,KAJVD,EAAU,MAAQ,oBACRC,EAAA,IAMPb,EAGMA,EAAS,OAAS,IAC3BY,EAAU,SAAW,yCACXC,EAAA,KAJVD,EAAU,SAAW,uBACXC,EAAA,IAMZN,EAAUK,CAAS,EACZC,CAAA,EAGHC,EAAe,MAAOC,GAAuB,CAG7C,GAFJA,EAAE,eAAe,EAEb,EAACJ,IAID,GAAA,CACE,IAAAK,EAEE,MAAAC,EACF,gCAGJ,GAAIvB,GAOE,GANJsB,EAAW,MAAME,GAAM,KACrB,GAAGD,CAAO,yBACV,CAAE,MAAAnB,EAAO,SAAAE,CAAS,EAClB,CAAE,gBAAiB,EAAK,CAAA,EAGtBgB,EAAS,KAAK,QAAS,CAEzB,MAAMG,EAAW,CACf,GAAGH,EAAS,KAAK,IAAA,EAEV9C,EAAAzC,GAAQ0F,CAAQ,CAAC,EAEpB7C,EAAA,CACJ,MAAO,oBACP,YAAa,0CACb,QAAS,SAAA,CACV,EACD8B,EAAS,YAAY,CACvB,OAEAY,EAAW,MAAME,GAAM,KACrB,GAAGD,CAAO,mBACV,CAAE,SAAArB,EAAU,MAAAE,EAAO,SAAAE,CAAS,EAC5B,CAAE,gBAAiB,EAAK,CAAA,EAGtBgB,EAAS,KAAK,UACV1C,EAAA,CACJ,MAAO,2BACP,YAAa,uCACb,QAAS,SAAA,CACV,EACDqB,EAAW,EAAI,SAGZyB,EAAO,CACVF,GAAM,aAAaE,CAAK,GAAKA,EAAM,SAC/B9C,EAAA,CACJ,MAAO,QACP,YAAa8C,EAAM,SAAS,KAAK,SAAW,oBAC5C,QAAS,aAAA,CACV,EAEK9C,EAAA,CACJ,MAAO,mBACP,YAAa,+BACb,QAAS,aAAA,CACV,CAEL,CAAA,EAGI+C,EAAoB,SAAY,CAChC,GAAA,CAEF,MAAML,EAAW,MAAME,GAAM,IAAI,iEAA8C,EACzE,CAAE,QAAAI,CAAQ,EAAIN,EAAS,KAE7B,OAAO,SAAS,KAAOM,QAChBF,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,CACvD,CAAA,EAIA,OAACG,EAAA,KAAA,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAtF,MAAC,MAAI,CAAA,UAAU,6CAA6C,MAAO,CAAE,gBAAiB,+KACpF,EAAA,eAAC,OAAI,UAAU,wEACb,gBAAC,MAAA,CAAI,UAAU,6BACb,SAAA,OAAC,KAAA,CAAG,UAAU,0BAA0B,SAA2B,8BAAA,QAClE,IAAA,CAAE,UAAU,UAAU,SAAkE,qEAAA,CAAA,CAC3F,CAAA,CACF,CAAA,EACF,QACC,MAAI,CAAA,UAAU,+FACb,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAtF,MAAC,KAAG,CAAA,UAAU,0BACX,SAAAyD,EAAU,eAAiB,oBAC9B,QACC,IAAE,CAAA,UAAU,OACV,SAAAA,EACG,6CACA,uDACN,SACC,OAAA,CAAK,SAAUoB,EAAc,UAAU,YACrC,SAAA,CAAA,CAACpB,GACA6B,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,OAAC/D,GAAA,CAAM,QAAQ,WAAY,SAAQ,WAAA,EAClC+D,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,CAACtF,EAAAA,IAAAuF,GAAA,CAAK,UAAU,gCAAgC,EAChDvF,EAAA,IAACQ,GAAA,CACC,GAAG,WACH,KAAK,OACL,MAAOmD,EACP,SAAWmB,GAAMlB,EAAYkB,EAAE,OAAO,KAAK,EAC3C,YAAY,sBACZ,SAAU,CAACrB,EACX,UAAU,iEAAA,CACZ,CAAA,EACF,EACCY,EAAO,UAAYrE,EAAA,IAAC,KAAE,UAAU,uBAAwB,WAAO,SAAS,CAAA,EAC3E,EAEDsF,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,OAAC/D,GAAA,CAAM,QAAQ,QAAS,SAAK,QAAA,EAC5B+D,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,CAACtF,EAAAA,IAAAwF,GAAA,CAAK,UAAU,gCAAgC,EAChDxF,EAAA,IAACQ,GAAA,CACC,GAAG,QACH,KAAK,QACL,MAAOqD,EACP,SAAWiB,GAAMhB,EAASgB,EAAE,OAAO,KAAK,EACxC,YAAY,mBACZ,SAAQ,GACR,UAAU,iEAAA,CACZ,CAAA,EACF,EACCT,EAAO,OAASrE,EAAA,IAAC,KAAE,UAAU,uBAAwB,WAAO,MAAM,CAAA,EACrE,EACCsF,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,OAAC/D,GAAA,CAAM,QAAQ,WAAW,SAAQ,WAAA,EACjC+D,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,CAACtF,EAAAA,IAAAyF,GAAA,CAAK,UAAU,gCAAgC,EAChDzF,EAAA,IAACQ,GAAA,CACC,GAAG,WACH,KAAMyD,EAAe,OAAS,WAC9B,MAAOF,EACP,SAAWe,GAAMd,EAAYc,EAAE,OAAO,KAAK,EAC3C,YAAY,sBACZ,SAAQ,GACR,UAAU,iEAAA,CACZ,EACA9E,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMkE,EAAgB,CAACD,CAAY,EAC5C,UAAU,0BAET,SAAAA,EAAgBjE,EAAAA,IAAA0F,GAAI,CAAA,UAAU,UAAU,EAAM1F,EAAA,IAAA2F,GAAO,CAAA,UAAU,UAAU,CAAA,CAC5E,CAAA,EACF,EACCtB,EAAO,UAAYrE,EAAA,IAAC,KAAE,UAAU,uBAAwB,WAAO,SAAS,CAAA,EAC3E,EACAA,EAAAA,IAACgB,GAAO,KAAK,SAAS,UAAU,oBAC7B,SAAAyC,EAAU,UAAY,SAAA,CACzB,CAAA,EACF,EACCzD,EAAAA,IAAA,MAAI,CAAA,UAAU,OACb,SAAAsF,EAAA,KAACtE,EAAA,CACC,QAAQ,UACR,UAAU,oDACV,QAASoE,EAET,SAAA,CAACpF,EAAAA,IAAA4F,GAAA,CAAS,UAAU,UAAU,EAC7B5F,EAAAA,IAAA,QAAK,SAAoB,uBAAA,CAAA,CAAA,CAAA,EAE9B,EACCsF,EAAAA,KAAA,IAAE,CAAA,UAAU,2BACV,SAAA,CAAA7B,EAAU,0BAA4B,4BACvCzD,EAAAA,IAAC,UAAO,QAASyE,EAAY,UAAU,gCACpC,SAAAhB,EAAU,UAAY,SAAA,CACzB,CAAA,EACF,CAAA,CAAA,CACF,CAAA,CACF,GACF,CAEJ,CC7OA,MAAMoC,GAAgBC,GAEhBC,GAAgBtF,EAGpB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAACgG,GAAA,CACC,IAAAnF,EACA,UAAWT,GACT,oIACAM,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDmF,GAAc,YAAcC,GAAyB,YAErD,MAAMC,GAAgBlF,GACpB,4lBACA,CACE,SAAU,CACR,QAAS,CACP,QAAS,uCACT,YACE,iFACJ,CACF,EACA,gBAAiB,CACf,QAAS,SACX,CACF,CACF,EAEMmF,GAAQzF,EAAM,WAIlB,CAAC,CAAE,UAAAC,EAAW,QAAAO,EAAS,GAAGL,CAAM,EAAGC,IAEjCb,EAAA,IAACmG,GAAA,CACC,IAAAtF,EACA,UAAWT,GAAG6F,GAAc,CAAE,QAAAhF,CAAS,CAAA,EAAGP,CAAS,EAClD,GAAGE,CAAA,CAAA,CAGT,EACDsF,GAAM,YAAcC,GAAqB,YAEzC,MAAMC,GAAc3F,EAGlB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAACqG,GAAA,CACC,IAAAxF,EACA,UAAWT,GACT,0dACAM,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDwF,GAAY,YAAcC,GAAuB,YAEjD,MAAMC,GAAa7F,EAGjB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAACuG,GAAA,CACC,IAAA1F,EACA,UAAWT,GACT,wVACAM,CACF,EACA,cAAY,GACX,GAAGE,EAEJ,SAAAZ,EAAAA,IAACwG,GAAW,CAAA,UAAU,SAAU,CAAA,CAAA,CAClC,CACD,EACDF,GAAW,YAAcC,GAAsB,YAE/C,MAAME,GAAahG,EAGjB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC0G,GAAA,CACC,IAAA7F,EACA,UAAWT,GAAG,wCAAyCM,CAAS,EAC/D,GAAGE,CAAA,CACN,CACD,EACD6F,GAAW,YAAcC,GAAsB,YAE/C,MAAMC,GAAmBlG,EAGvB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC4G,GAAA,CACC,IAAA/F,EACA,UAAWT,GAAG,qBAAsBM,CAAS,EAC5C,GAAGE,CAAA,CACN,CACD,EACD+F,GAAiB,YAAcC,GAA4B,YCpGpD,SAASC,IAAU,CAClB,KAAA,CAAE,OAAAC,GAAWhE,KAEnB,cACG+C,GACE,CAAA,SAAA,CAAOiB,EAAA,IAAI,SAAU,CAAE,GAAApE,EAAI,MAAAqE,EAAO,YAAAC,EAAa,OAAA5E,EAAQ,GAAGxB,GAAS,CAEhE,OAAA0E,EAAA,KAACY,GAAgB,CAAA,GAAGtF,EAClB,SAAA,CAAC0E,EAAAA,KAAA,MAAA,CAAI,UAAU,aACZ,SAAA,CAASyB,GAAA/G,EAAAA,IAACyG,IAAY,SAAMM,CAAA,CAAA,EAC5BC,GACEhH,EAAAA,IAAA2G,GAAA,CAAkB,SAAYK,CAAA,CAAA,CAAA,EAEnC,EACC5E,QACAkE,GAAW,EAAA,CAAA,CAAA,EARF5D,CASZ,CAAA,CAEH,QACAqD,GAAc,EAAA,CACjB,CAAA,CAAA,CAEJ,CC7BA,MAAM5C,GAA4B,CAChC,gBAAiB,KACjB,OAAQ,CAAC,CACX,EAEM8D,GAAa5D,GAAY,CAC7B,KAAM,QAAA,aACNF,GACA,SAAU,CACR,mBAAoB,CAAChB,EAAOC,IAAyC,CACnED,EAAM,gBAAkBC,EAAO,OACjC,EACA,UAAW,CAACD,EAAOC,IAAoC,CACrDD,EAAM,OAASC,EAAO,OACxB,EACA,WAAaD,GAAU,CACrBA,EAAM,gBAAkB,KACxBA,EAAM,OAAS,EACjB,CACF,CACF,CAAC,EAEY,CAAE,mBAAA+E,GAAoB,UAAAC,GAAW,WAAAC,EAAA,EAAeH,GAAW,QACzDI,GAAAJ,GAAW,QCrBpBK,GAAkBC,GAElBC,GAAUC,GAEVC,GAAiBC,GAEjBC,GAAiBnH,EAAAA,WAGrB,CAAC,CAAE,UAAAC,EAAW,WAAAmH,EAAa,EAAG,GAAGjH,GAASC,IACzCb,EAAAA,IAAA8H,GAAA,CACC,SAAA9H,EAAA,IAAC+H,GAAA,CACC,IAAAlH,EACA,WAAAgH,EACA,UAAWzH,GACT,qWACAM,CACF,EACC,GAAGE,CAAA,CACN,CAAA,CACF,CACD,EACDgH,GAAe,YAAcG,GAAyB,YC3BtD,MAAeC,GAAA,oCCKTC,GAAaxH,EAAAA,WAGjB,CAAC,CAAE,UAAAC,EAAW,SAAApB,EAAU,GAAGsB,CAAM,EAAGC,IACpCyE,EAAA,KAAC4C,GAAA,CACC,IAAArH,EACA,UAAWT,GAAG,2BAA4BM,CAAS,EAClD,GAAGE,EAEJ,SAAA,CAAAZ,EAAAA,IAACmI,GAAA,CAA6B,UAAU,kCACrC,SAAA7I,CACH,CAAA,QACC8I,GAAU,EAAA,EACXpI,EAAA,IAACqI,GAAA,EAA2B,CAAA,CAAA,CAC9B,CACD,EACDJ,GAAW,YAAcC,GAAyB,YAElD,MAAME,GAAY3H,EAAAA,WAGhB,CAAC,CAAE,UAAAC,EAAW,YAAA4H,EAAc,WAAY,GAAG1H,GAASC,IACpDb,EAAA,IAACuI,GAAA,CACC,IAAA1H,EACA,YAAAyH,EACA,UAAWlI,GACT,gDACAkI,IAAgB,YACd,qDACFA,IAAgB,cACd,uDACF5H,CACF,EACC,GAAGE,EAEJ,SAACZ,EAAAA,IAAAwI,GAAA,CAAoC,UAAU,wCAAyC,CAAA,CAAA,CAC1F,CACD,EACDJ,GAAU,YAAcG,GAAwC,YC3CnD,MAAAvD,GAAiC,gCAIjCyD,GAAS,CACpB,QAAS,CACP,KAAM,UACN,MAAO,UACP,KAAM,UACN,GAAI,SACN,EACA,UAAW,CACT,KAAM,UACN,MAAO,UACP,KAAM,UACN,GAAI,SACN,EACA,QAAS,CACP,KAAM,UACN,KAAM,UACN,GAAI,SACN,EACA,OAAQ,CACN,KAAM,UACN,KAAM,UACN,GAAI,SACN,EACA,QAAS,CACP,KAAM,UACN,KAAM,UACN,GAAI,SACN,EACA,QAAS,CAEP,KAAM,UACN,KAAM,UACN,GAAI,SACN,EACA,KAAM,CACJ,QAAS,UACT,UAAW,UACX,MAAO,SACT,EACA,OAAQ,CACN,KAAM,UACN,KAAM,SACR,EACA,WAAY,CACV,eAAgB,8CAClB,CACF,EChDaC,GAAgC,CAAC,CAAE,MAAAC,EAAQ,UAAW,OAAAC,EAAS,SAAU,IACjFtD,EAAA,KAAA,MAAA,CAAI,QAAQ,YAAY,MAAO,CAAE,OAAAsD,EAAQ,MAAAD,CACtC,EAAA,SAAA,CAAA3I,EAAA,IAAC,OAAK,CAAA,EAAE,KAAK,EAAE,IAAI,MAAM,OAAO,OAAO,OAAO,GAAG,MAAM,KAAK,UAAU,EACrEA,EAAA,IAAA,OAAA,CAAK,EAAE,oJAAoJ,KAAK,UAAU,EAC1KA,EAAA,IAAA,OAAA,CAAK,EAAE,2HAA2H,KAAK,UAAU,EAAQA,EAAA,IAAA,OAAA,CAAK,EAAE,qgBAAqgB,KAAK,UAAU,CAAA,CACzrB,CAAA,EAGS6I,GAAoC,CAAC,CAAE,MAAAF,EAAQ,UAAW,OAAAC,EAAS,aAC5E5I,EAAA,IAAC,MAAA,CAAI,QAAQ,YAAY,MAAO,CAAE,OAAA4I,EAAQ,MAAAD,CAAM,EAC5C,MAAM,6BAA8B,gBAAC,IACjC,CAAA,SAAA,CAAA3I,EAAAA,IAAC,KAAE,SAACA,EAAA,IAAA,OAAA,CAAK,EAAE,k1CAAk1C,KAAK,UAAU,CAAE,CAAA,EAAIA,EAAAA,IAAC,KAAE,SAACA,EAAA,IAAA,OAAA,CAAK,EAAE,k1CAAk1C,KAAK,UAAU,CAAE,CAAA,EAAKA,EAAA,IAAA,OAAA,CAAK,EAAE,iQAAiQ,KAAK,UAAU,EAAGA,EAAA,IAAA,OAAA,CAAK,EAAE,4gBAA4gB,KAAK,UAAU,EAAGA,EAAA,IAAA,OAAA,CAAK,EAAE,4MAA4M,KAAK,UAAU,CAAA,EAC1wH,CAAA,CAAI,EAGC8I,GAAqC,CAAC,CAAE,MAAAH,EAAQ,UAAW,OAAAC,EAAS,aAC7E5I,EAAAA,IAAC,MAAI,CAAA,MAAO,CAAE,OAAA4I,EAAQ,MAAAD,GAAS,KAAK,UAAU,QAAQ,YAClD,SAAC3I,EAAAA,IAAA,OAAA,CAAK,EAAE,gSAAiS,CAAA,CAC7S,CAAA,EAGS+I,GAAmC,CAAC,CAAE,MAAAJ,EAAQ,UAAW,OAAAC,EAAS,SAAU,IACpFtD,EAAA,KAAA,MAAA,CAAI,QAAQ,YAAY,MAAO,CAAE,OAAAsD,EAAQ,MAAAD,CACtC,EAAA,SAAA,CAAA3I,MAAC,QAAK,EAAE,spBAAspB,KAAK,UAAU,OAAO,UAAU,EAC7rBA,EAAA,IAAA,OAAA,CAAK,EAAE,8aAA8a,KAAK,UAAU,EACpcA,EAAA,IAAA,OAAA,CAAK,EAAE,6kBAA6kB,KAAK,UAAU,CAAA,CACxmB,CAAA,EAESgJ,GAAqC,CAAC,CAAE,MAAAL,EAAQ,UAAW,OAAAC,EAAS,aAC7E5I,EAAA,IAAC,MAAA,CACC,MAAM,6BACN,QAAQ,cACR,MAAO,CAAE,MAAA2I,EAAO,OAAAC,CAAO,EACvB,KAAK,UAEL,SAAA5I,EAAA,IAAC,IAAA,CACC,KAAK,UACL,SAAS,UACT,OAAO,OACP,YAAY,IACZ,cAAc,OACd,eAAe,QACf,iBAAiB,KACjB,WAAW,OACX,WAAW,OACX,SAAS,OACT,WAAW,OACX,MAAO,CAAE,aAAc,QAAS,EAEhC,SAAAA,EAAAA,IAAC,KAAE,UAAU,mBACX,eAAC,OAAK,CAAA,EAAE,8UAA8U,CACxV,CAAA,CAAA,CACF,CAAA,CACF,EAGWiJ,GAA2C,CAAC,CAAE,MAAAN,EAAQ,UAAW,OAAAC,EAAS,aACrF5I,EAAA,IAAC,MAAA,CACC,MAAM,6BACN,QAAQ,YACR,MAAO,CAAE,MAAA2I,EAAO,OAAAC,CAAO,EACvB,KAAK,UAEL,SAAA5I,EAAAA,IAAC,OAAK,CAAA,EAAE,giDAAiiD,CAAA,CAAA,CAC3iD,ECtCJ,SAAwBkJ,IAAqB,OAC3C,KAAM,CAACC,EAAYC,CAAa,EAAI3J,WAAS,EAAI,EAC3C,CAAC4J,EAAeC,CAAgB,EAAI7J,WAAS,EAAK,EAClD8J,EAAWC,KACXrF,EAAWC,KACXqF,EAAaC,SAAuB,IAAI,EAExCzH,EAAWuC,KACXmF,EAAkBpF,EAAapC,GAAqBA,EAAM,MAAM,eAAe,EAC/EyH,EAASrF,EAAapC,GAAqBA,EAAM,MAAM,MAAM,EAC7D5C,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAGxD0H,EAAcC,EAAAA,YAAY,SAAY,CACtC,GAAA,CACF,GAAI,EAACvK,GAAA,MAAAA,EAAM,SAAUA,EAAK,OAAO,SAAW,EAAG,CAC7C,QAAQ,KAAK,qCAAqC,EAClD,MACF,CAEM,MAAAwF,EAAW,MAAME,GAAM,KAC3B,GAAGD,EAAO,qBACV,CAAE,SAAUzF,EAAK,MAAO,EACxB,CAAE,gBAAiB,EAAK,CAAA,EAGjB0C,EAAAkF,GAAUpC,EAAS,IAAI,CAAC,EAE7B,CAAC4E,GAAmB5E,EAAS,KAAK,OAAS,IAC7C9C,EAASiF,GAAmBnC,EAAS,KAAK,CAAC,EAAE,GAAG,CAAC,EAE7CsE,IACFlF,EAAS,YAAY,EACrBmF,EAAiB,EAAK,UAGnBnE,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,CAC/C,CAAA,EACC,CAAC5F,GAAA,YAAAA,EAAM,OAAQ0C,EAAU0H,EAAiBN,EAAelF,CAAQ,CAAC,EAErEtE,EAAAA,UAAU,IAAM,CACFgK,GAAA,EACX,CAACA,CAAW,CAAC,EAEhB,MAAME,EAAgB,IAAMX,EAAeY,GAAS,CAACA,CAAI,EAEnDC,EAAe,SAAY,CAC3B,GAAA,EACe,MAAMhF,GAAM,KAAK,GAAGD,EAAO,mBAAoB,CAAA,EAAI,CAAE,gBAAiB,EAAM,CAAA,GAChF,SAAW,MACtB/C,EAASqB,IAAW,EACpBrB,EAASmF,IAAY,EACrBjD,EAAS,GAAG,EAEZmF,EAAiB,EAAI,SAEhBnE,EAAO,CACN,QAAA,MAAM,qBAAsBA,CAAK,CAC3C,CAAA,EAGFtF,EAAAA,UAAU,IAAM,CACd,MAAMqK,EAAYX,EAAS,SAAS,MAAM,GAAG,EACzCW,EAAU,CAAC,GACbjI,EAASiF,GAAmBgD,EAAU,CAAC,CAAC,CAAC,CAE1C,EAAA,CAACX,EAAS,SAAUtH,CAAQ,CAAC,EAGhC,MAAMkI,EAAqB,IAAM,CAC/B,MAAMD,EAAYX,EAAS,SAAS,MAAM,GAAG,EACzC,OAAAW,EAAU,QAAU,EACfA,EAAU,CAAC,EAEb,WAAA,EAIHE,EAAqBC,GAAoB,CAK7C,GAJSpI,EAAAiF,GAAmBmD,CAAO,CAAC,EAIhC,CAAChB,EAAe,CAClB,MAAMiB,EAAkBH,IAGxB,GAAIG,IAAoB,YAAa,CACnCnG,EAAS,YAAY,EACrB,MACF,CAGA,MAAM+F,EAAYX,EAAS,SAAS,MAAM,GAAG,EACzCW,EAAU,QAAU,GACtBA,EAAU,CAAC,EAAIG,EACNlG,EAAA+F,EAAU,KAAK,GAAG,CAAC,GAG5B/F,EAAS,IAAImG,CAAe,IAAID,CAAO,EAAE,CAE7C,CAAA,EAIIE,EAAgB,CACpB,CAAE,KAAM,oBAAqB,KAAM,aAAc,KAAOvK,EAAAA,IAAAwK,GAAA,CAAM,KAAM,EAAI,CAAA,CAAG,EAC3E,CAAE,KAAM,6BAA8B,KAAM,uBAAuBb,CAAe,GAAI,KAAO3J,EAAA,IAAAyK,GAAA,CAAc,KAAM,EAAI,CAAA,CAAG,EACxH,CAAE,KAAM,iBAAkB,KAAM,cAAcd,CAAe,GAAI,KAAO3J,EAAA,IAAA0K,GAAA,CAAU,KAAM,EAAI,CAAA,CAAG,EAC/F,CACE,KAAM,gBACN,KAAM,IACN,WAAO1B,GAAa,EAAA,EACpB,SAAU,CACR,CAAE,KAAM,sBAAuB,KAAM,sBAAsBW,CAAe,EAAG,EAC7E,CAAE,KAAM,kBAAmB,KAAM,uBAAuBA,CAAe,EAAG,CAC5E,CACF,EACA,CACE,KAAM,OACN,KAAM,IACN,WAAOgB,GAAO,EAAA,EACd,SAAU,CACR,CAAE,KAAM,oBAAqB,KAAM,mBAAmBhB,CAAe,EAAG,EACxE,CAAE,KAAM,eAAgB,KAAK,kBAAkBA,CAAe,EAAE,EAChE,CAAE,KAAM,eAAgB,KAAM,iBAAiBA,CAAe,EAAG,CACnE,CACF,EAEA,CAAE,KAAM,iBAAkB,KAAM,mBAAmBA,CAAe,GAAI,KAAO3J,EAAAA,IAAAiJ,GAAA,CAAmB,CAAA,CAAG,EAEnG,CAAE,KAAM,iBAAkB,KAAM,uBAAwB,KAAOjJ,EAAAA,IAAA4K,GAAA,CAAO,KAAM,EAAI,CAAA,CAAG,CAAA,EAG/EC,EAAkBC,GAAc,CAChC,GAAA,CAACnB,EAAwB,MAAA,GAE7B,MAAMoB,EAAenB,EAAO,KAAMoB,GAAMA,EAAE,MAAQrB,CAAe,EAE9D,OAAAmB,EAAK,OAAS,uBAAyBA,EAAK,OAAS,qBACtD,EAACC,GAAA,MAAAA,EAAc,eACf,EAACA,GAAA,MAAAA,EAAc,gBAIV,EAGT,aACGzD,GACC,CAAA,SAAAhC,EAAA,KAAC,MAAA,CACC,IAAKmE,EACL,UAAW,sFAAsFN,EAAa,OAAS,MAAM,GAC7H,MAAO,CAAE,OAAQ,OAAQ,EAEzB,SAAA,CAAC7D,EAAA,KAAA,MAAA,CAAI,UAAW,iDACd,SAAA,CAAAA,OAAC,OAAI,UAAU,mCAAmC,QAAS,IAAMnB,EAAS,YAAY,EACpF,SAAA,CAAAnE,MAAC,OAAI,IAAKgI,GAA4B,IAAI,eAAe,UAAU,UAAU,EAC5EmB,EAAcnJ,EAAAA,IAAA,OAAA,CAAK,UAAU,eAAe,kBAAO,CAAA,EAAU,IAAA,EAChE,EACAA,EAAA,IAAC,OAAA,CACC,UAAW,0GACX,MAAO,CACL,MAAO,OACP,OAAQ,OACR,SAAU,WACV,MAAO,QACP,IAAK,MACL,UAAW,mBACX,OAAQ,EACV,EACA,QAAS+J,EAER,SAAAZ,QAAc8B,GAAY,CAAA,KAAM,GAAI,EAAKjL,EAAA,IAACkL,GAAa,CAAA,KAAM,EAAI,CAAA,CAAA,CACpE,CAAA,EACF,EAEClL,MAAA,MAAA,CAAI,UAAW,0BAA0BmJ,EAAa,uBAAyB,sBAAsB,GACpG,SAAAnJ,EAAA,IAACiI,IAAW,UAAU,SACpB,SAAC3C,OAAA,MAAA,CAAI,UAAU,OAEb,SAAA,CAAAtF,EAAA,IAACmL,GAAA,CACC,KAAMnL,EAAAA,IAACoL,GAAM,CAAA,KAAM,EAAI,CAAA,EACvB,KACEzB,IACI0B,EAAAzB,EAAO,KAAMoB,GAAMA,EAAE,MAAQrB,CAAe,IAA5C,YAAA0B,EAA+C,KAAK,QAAQ,KAAM,OAAQ,gBAC1E,cAEN,WAAAlC,EACA,eAAWmC,GAAU,EAAA,EACrB,gBAAYC,GAAY,EAAA,EACxB,WAAY,CAAC,CAAC5B,EACd,eAAe,cACf,iBAAkB,GAEjB,SAAAC,EAAO,IAAK4B,GACXxL,EAAA,IAACyL,GAAA,CAEC,KAAM,IACN,KAAMD,EAAM,KAAK,QAAQ,KAAM,GAAG,EAClC,QAAS,IAAMpB,EAAkBoB,EAAM,GAAG,EAC1C,WAAY7B,IAAoB6B,EAAM,GAAA,EAJjCA,EAAM,GAAA,CAMd,CAAA,CACH,EAGCjB,EAAc,IAAI,CAACO,EAAM5H,IAAU,OAC5B,MAAAwI,GAAuBL,EAAAP,EAAK,WAAL,YAAAO,EAAe,KAAMM,GAAYpC,EAAS,WAAaoC,EAAQ,MAEtFC,EACHrC,EAAS,SAAS,WAAWuB,EAAK,IAAI,GAAKA,EAAK,OAAS,KAAQY,EAG9DG,EACJvG,EAAA,KAAC,MAAA,CACC,UAAW,sHAAsHwF,EAAK,SAAW,cAAgB,gBAAgB;AAAA,wBAE7Kc,EAAmB,oCAAsC,eAC3D,IAAIf,EAAeC,CAAI,EAAI,gCAAkC,EAAE,GACjE,QAAS,IAAM,CACT,CAACD,EAAeC,CAAI,GAAKA,EAAK,MAAQA,EAAK,OAAS,KAAO,CAACA,EAAK,UACnE3G,EAAS2G,EAAK,IAAI,CAEtB,EAEA,SAAA,CAAA9K,EAAA,IAAC,OAAK,CAAA,UAAU,OAAQ,SAAA8K,EAAK,KAAK,EACjC3B,GAAenJ,EAAAA,IAAA,OAAA,CAAK,UAAU,UAAW,WAAK,KAAK,EACnDmJ,GAAc2B,EAAK,UAAa9K,EAAAA,IAAA,OAAA,CAAK,UAAU,UAAU,CAAA,CAAA,CAAA,EAI9D,cACG,MAEE,CAAA,SAAA,CAACmJ,EA2BA0C,SA1BCrE,GACC,CAAA,SAAA,CAACxH,EAAA,IAAA0H,GAAA,CAAe,QAAO,GAAE,SAAqBmE,EAAA,EAC9CvG,EAAAA,KAACsC,GAAe,CAAA,KAAK,QACnB,SAAA,CAAC5H,EAAAA,IAAA,IAAA,CAAG,WAAK,IAAK,CAAA,EACb8K,EAAK,UAEFxF,EAAAA,KAAAwG,EAAA,SAAA,CAAA,SAAA,CAAC9L,EAAAA,IAAA,MAAA,CAAI,UAAU,iCAAkC,CAAA,EACjDA,EAAAA,IAAC,OAAI,UAAU,OACZ,WAAK,SAAS,IAAI,CAAC2L,EAASI,IAC3B/L,EAAA,IAAC,MAAA,CAEC,UAAU,+DACV,QAAU8E,GAAM,CACdA,EAAE,gBAAgB,EAClBX,EAASwH,EAAQ,IAAI,CACvB,EAEC,SAAQA,EAAA,IAAA,EAPJI,CASR,CAAA,EACH,CAAA,EACF,CAAA,EAEJ,CAAA,CAAA,CACF,EAMD5C,GAAc2B,EAAK,UACjBxF,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,gCAAiC,CAAA,EAC/C8K,EAAK,SAAS,IAAI,CAACa,EAASI,IAC3B/L,EAAA,IAAC,MAAA,CAEC,UAAW,sFACTuJ,EAAS,WAAaoC,EAAQ,KAC1B,gDACA,eACN,qBACA,QAAS,IAAMxH,EAASwH,EAAQ,IAAI,EAEpC,SAAA3L,EAAA,IAAC,OAAM,CAAA,SAAA2L,EAAQ,KAAK,CAAA,EARfI,CAAA,CAUR,CAAA,EACH,CAAA,CAAA,EAjDM7I,CAmDV,CAAA,CAEH,CAAA,CACH,CAAA,CACF,CAAA,EACF,EAEAoC,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACtF,EAAAA,IAAAgM,GAAA,CAAY,WAAA7C,EAAwB,KAAA5J,CAAY,CAAA,EACjDS,EAAAA,IAACiM,GAAa,CAAA,aAAAhC,EAA4B,WAAAd,CAAwB,CAAA,CAAA,EACpE,CAAA,CAAA,CAEJ,CAAA,CAAA,CAEJ,CAYA,SAASsC,GAAa,CACpB,KAAAS,EACA,KAAAC,EACA,QAAAC,EACA,SAAAC,EAAW,GACX,WAAAC,EAAa,GACb,SAAAhN,CACF,EAAmC,CACjC,KAAM,CAACiN,EAAQC,CAAS,EAAI/M,WAAS,EAAK,EACpCgN,EAAcC,GAAM,SAAS,MAAMpN,CAAQ,EAAI,EAE/CqN,EAAe,IAAM,CACrBF,GACQD,EAACxC,GAAS,CAACA,CAAI,CAC3B,EAGI4C,EAAkBF,GAAM,SAAS,QAAQpN,CAAQ,EAAE,KAAMuN,GAAe,OAAA,OAAAxB,EAAAwB,GAAA,YAAAA,EAAO,QAAP,YAAAxB,EAAc,WAAU,EAChGyB,EAAWR,GAAcM,EAE/B/M,EAAAA,UAAU,IAAM,CACViN,GACFN,EAAU,EAAI,CAChB,EACC,CAACM,CAAQ,CAAC,EAEb,MAAMC,EAAc;AAAA,QACdD,EAAW,gDAAkD,eAAe;AAAA,QAC5ET,EAAW,mCAAqC,mBAAmB,GAEnEW,EAEF1H,EAAAA,KAAAwG,EAAA,SAAA,CAAA,SAAA,CAACxG,EAAAA,KAAA,MAAA,CAAI,UAAU,2CACb,SAAA,CAAAtF,EAAAA,IAAC,QAAM,SAAKmM,CAAA,CAAA,EACXM,GAAgBzM,EAAA,IAAA,OAAA,CAAK,UAAU,OAAQ,SAASuM,EAAAvM,EAAAA,IAACsL,GAAU,CAAA,CAAA,EAAMtL,EAAA,IAAAuL,GAAA,CAAY,CAAA,EAAG,CAAA,EACnF,EACCuB,GAAY9M,EAAAA,IAAC,MAAI,CAAA,UAAU,2CAA4C,CAAA,CAC1E,CAAA,CAAA,EAGIiN,EAAYZ,EAChBrM,EAAA,IAAC,OAAI,UAAW+M,EAAc,UAAQ,CAAA,EAEtC/M,EAAA,IAACkN,GAAA,CACC,GAAIhB,EACJ,UAAWa,EACX,QAAUjI,GAAM,EAEVoH,IAAS,MAAQ,CAACA,GAAQA,IAAS,MACrCpH,EAAE,eAAe,EAIf2H,GACWE,IAIXP,GACMA,GAEZ,EAEC,SAAAY,CAAA,CAAA,EAIL,cACG,MACE,CAAA,SAAA,CAAAC,EACAV,GAAUE,GACRnH,OAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,8CAA+C,CAAA,EAC7DV,CAAA,EACH,CAEJ,CAAA,CAAA,CAEJ,CAgBA,SAAS6L,GAAY,CACnB,KAAAgC,EACA,KAAAhB,EACA,WAAAhD,EACA,SAAAiE,EACA,UAAAC,EACA,SAAA/N,EACA,WAAAgN,EACA,eAAAgB,EACA,QAAAlB,EACA,SAAAC,EACA,iBAAAkB,EAAmB,EACrB,EAAqB,CACnB,KAAM,CAAChB,EAAQC,CAAS,EAAI/M,WAAS,EAAK,EACpCgN,EAAcC,GAAM,SAAS,MAAMpN,CAAQ,EAAI,EAE/CqN,EAAe,IAAM,CACrBF,GACQD,EAACxC,GAAS,CAACA,CAAI,CAC3B,EAII4C,EAAkBF,GAAM,SAAS,QAAQpN,CAAQ,EAAE,KAAMuN,GAAe,SACxE,OAAAxB,EAAAwB,GAAA,YAAAA,EAAO,QAAP,MAAAxB,EAAc,WAAmB,IAEjCmC,EAAAX,GAAA,YAAAA,EAAO,QAAP,MAAAW,EAAc,SACTd,GAAM,SAAS,QAAQG,EAAM,MAAM,QAAQ,EAAE,KAAMY,GAAA,OAAoB,OAAApC,EAAAoC,GAAA,YAAAA,EAAY,QAAZ,YAAApC,EAAmB,WAAU,EAEtG,EAAA,CACR,EAEKyB,EAAWR,GAAcM,EAE/B/M,EAAAA,UAAU,IAAM,CACV0N,GAAoBT,GACtBN,EAAU,EAAI,CAChB,EACC,CAACM,EAAUS,CAAgB,CAAC,EAE/B,MAAMP,EACJ1H,EAAA,KAAC,MAAA,CACC,QAAS,IAAM,CAETmH,GACWE,IAIX,CAACN,GAAYD,GACPA,GAEZ,EACA,UAAW,mIACTU,EAAW,oCAAsC,eACnD,IAAIT,EAAW,gCAAkC,EAAE,GAEnD,SAAA,CAACrM,EAAA,IAAA,OAAA,CAAK,UAAU,OAAQ,SAAKmN,EAAA,EAC5BhE,GAAcnJ,EAAA,IAAC,OAAK,CAAA,UAAU,UAAW,SAAKmM,EAAA,EAC9ChD,GAAenJ,EAAAA,IAAA,OAAA,CAAK,UAAU,UAAW,SAAAuM,EAASa,EAAWC,EAAU,CAAA,CAAA,CAAA,EAI5E,cACG,MACE,CAAA,SAAA,CAAClE,EAcA6D,SAbCxF,GACC,CAAA,SAAA,CAACxH,EAAA,IAAA0H,GAAA,CAAe,QAAO,GAAE,SAAQsF,EAAA,EACjC1H,EAAAA,KAACsC,GAAe,CAAA,KAAK,QACnB,SAAA,CAAC5H,EAAAA,IAAA,IAAA,CAAE,UAAW0M,GAAM,SAAS,MAAMpN,CAAQ,EAAI,EAAI,OAAS,GAAK,SAAegO,CAAA,CAAA,EAC/EZ,GAAM,SAAS,IAAIpN,EAAWuN,GAC7BvH,EAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,uCAAwC,CAAA,EACtD6M,CAAA,CAAA,CACH,CACD,CAAA,EACH,CAAA,CAAA,CACF,EAIDN,GAAUpD,GACR7D,OAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,uCAAwC,CAAA,EACtD0M,GAAM,SAAS,IAAIpN,EAAWuN,GAC7B7M,EAAA,IAAC,MAAK,CAAA,SAAA6M,CAAM,CAAA,CACb,CAAA,EACH,CAEJ,CAAA,CAAA,CAEJ,CAOA,SAASb,GAAY,CAAE,WAAA7C,EAAY,KAAA5J,GAA0B,CAC3D,MAAM4E,EAAWC,KACXsJ,EACJpI,EAAA,KAAC,MAAA,CACC,QAAS,IAAMnB,EAAS,UAAU,EAClC,UACE,0IAGF,SAAA,CAAAnE,EAAAA,IAAC,QAAK,UAAU,iCACd,eAAC2N,GAAU,CAAA,KAAM,GAAI,CACvB,CAAA,EACCxE,GAAenJ,EAAAA,IAAA,OAAA,CAAK,UAAU,eAAgB,UAAAT,GAAA,YAAAA,EAAM,WAAY,OAAO,CAAA,CAAA,CAAA,EAI5E,OACGS,EAAA,IAAA,MAAA,CACE,SAACmJ,EAQAuE,SAPClG,GACC,CAAA,SAAA,CAACxH,EAAA,IAAA0H,GAAA,CAAe,QAAO,GAAE,SAAmBgG,EAAA,EAC5C1N,EAAAA,IAAC4H,IAAe,KAAK,QACnB,eAAC,IAAG,CAAA,UAAArI,GAAA,YAAAA,EAAM,WAAY,MAAA,CAAO,CAC/B,CAAA,CAAA,EACF,CAIJ,CAAA,CAEJ,CAOA,SAAS0M,GAAa,CAAE,aAAAhC,EAAc,WAAAd,GAAiC,CACrE,MAAMyE,EACJtI,EAAA,KAAC,MAAA,CACC,QAAS2E,EACT,UACE,0IAGF,SAAA,CAAAjK,EAAAA,IAAC,QAAK,UAAU,iCACd,eAAC6N,GAAO,CAAA,KAAM,GAAI,CACpB,CAAA,EACC1E,GAAcnJ,EAAA,IAAC,OAAK,CAAA,UAAU,mBAAmB,SAAM,SAAA,CAAA,CAAA,CAAA,EAI5D,OACGA,EAAA,IAAA,MAAA,CACE,SAACmJ,EAQAyE,SAPCpG,GACC,CAAA,SAAA,CAACxH,EAAA,IAAA0H,GAAA,CAAe,QAAO,GAAE,SAAckG,EAAA,QACtChG,GAAe,CAAA,KAAK,QACnB,SAAC5H,MAAA,IAAA,CAAE,kBAAM,CACX,CAAA,CAAA,EACF,CAIJ,CAAA,CAEJ,CCjlBA,MAAM8N,GAAOrN,EAGX,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC,MAAA,CACC,IAAAa,EACA,UAAWT,GACT,wDACAM,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDkN,GAAK,YAAc,OAEnB,MAAMC,GAAatN,EAGjB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC,MAAA,CACC,IAAAa,EACA,UAAWT,GAAG,gCAAiCM,CAAS,EACvD,GAAGE,CAAA,CACN,CACD,EACDmN,GAAW,YAAc,aAEzB,MAAMC,GAAYvN,EAGhB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC,KAAA,CACC,IAAAa,EACA,UAAWT,GAAG,4CAA6CM,CAAS,EACnE,GAAGE,CAAA,CACN,CACD,EACDoN,GAAU,YAAc,YAExB,MAAMC,GAAkBxN,EAGtB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC,IAAA,CACC,IAAAa,EACA,UAAWT,GAAG,gCAAiCM,CAAS,EACvD,GAAGE,CAAA,CACN,CACD,EACDqN,GAAgB,YAAc,kBAE9B,MAAMC,GAAczN,EAGlB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAS,EAAAC,UACzB,MAAI,CAAA,IAAAA,EAAU,UAAWT,GAAG,WAAYM,CAAS,EAAI,GAAGE,CAAO,CAAA,CACjE,EACDsN,GAAY,YAAc,cAE1B,MAAMC,GAAa1N,EAGjB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC,MAAA,CACC,IAAAa,EACA,UAAWT,GAAG,6BAA8BM,CAAS,EACpD,GAAGE,CAAA,CACN,CACD,EACDuN,GAAW,YAAc,aCvEzB,SAASC,GAAS,CAChB,UAAA1N,EACA,GAAGE,CACL,EAAyC,CAErC,OAAAZ,EAAA,IAAC,MAAA,CACC,UAAWI,GAAG,yCAA0CM,CAAS,EAChE,GAAGE,CAAA,CAAA,CAGV,CC+BA,MAAMyN,GAA+B,IAEjC/I,EAAA,KAACwI,GAAK,CAAA,UAAU,oFACd,SAAA,CAACxI,EAAAA,KAAAyI,GAAA,CAAW,UAAU,0CACpB,SAAA,CAACzI,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACtF,EAAAA,IAAAoO,GAAA,CAAS,UAAU,sBAAuB,CAAA,EAC3CpO,EAAAA,IAACoO,GAAS,CAAA,UAAU,UAAW,CAAA,CAAA,EACjC,EACApO,EAAAA,IAACoO,GAAS,CAAA,UAAU,eAAgB,CAAA,CAAA,EACtC,QACCF,GACC,CAAA,SAAAlO,EAAA,IAACoO,GAAS,CAAA,UAAU,eAAgB,CAAA,EACtC,CACF,CAAA,CAAA,EAMEE,GAAwC,CAAC,CAAE,MAAAC,EAAO,MAAAC,EAAO,KAAAC,EAAM,KAAAtB,EAAM,eAAAG,KAAqB,CACxF,MAAAoB,EAAcC,GACbA,GACD,OAAOA,GAAc,WACXA,EAAA,IAAI,KAAKA,CAAS,GAEzBA,EAAU,mBAAmB,QAAS,CAAE,MAAO,QAAS,IAAK,UAAW,KAAM,SAAW,CAAA,GAJzE,GAQvB,OAAArJ,EAAA,KAACwI,GAAK,CAAA,UAAU,oFACd,SAAA,CAACxI,EAAAA,KAAAyI,GAAA,CAAW,UAAU,0CACpB,SAAA,CAACzI,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACZ,SAAA,CAAA6H,IAAS,WACPnN,EAAAA,IAAA8I,GAAA,CAAa,MAAM,OAAO,OAAO,OAAO,EACvCqE,IAAS,eACVpE,GAAW,CAAA,MAAM,OAAO,OAAO,MAAO,CAAA,EACrC,KAEH/I,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAyB,SAAMuO,EAAA,EAE7CjB,GACCtN,EAAA,IAACsH,GACC,CAAA,SAAAhC,OAACkC,GACC,CAAA,SAAA,CAAAxH,EAAAA,IAAC0H,IAAe,QAAO,GACrB,SAAC1H,EAAA,IAAA,SAAA,CAAO,UAAU,UAAU,aAAY,cAAcuO,CAAK,GACzD,SAACvO,MAAA4O,GAAA,CAAW,UAAU,uBAAA,CAAwB,CAChD,CAAA,EACF,EACAtJ,EAAAA,KAACsC,GAAe,CAAA,UAAU,gDACxB,SAAA,CAAC5H,EAAA,IAAA,MAAA,CAAI,UAAU,iCAAkC,SAAMuO,EAAA,EACvDvO,EAAAA,IAAC,MAAI,CAAA,UAAU,2BAA4B,CAAA,EAC1CA,EAAA,IAAA,MAAA,CAAI,UAAU,MAAO,SAAesN,EAAA,CAAA,EACvC,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EAEJ,EAEAhI,EAAAA,KAAC,MAAI,CAAA,UAAU,kCACZ,SAAA,CAAAoJ,EAAWD,EAAK,IAAI,EACpBA,EAAK,MAAQA,EAAK,GAAK,MAAQ,GAC/BC,EAAWD,EAAK,EAAE,CAAA,EACrB,CAAA,EACF,QACCP,GACC,CAAA,SAAAlO,EAAA,IAAC,KAAE,UAAU,0DAA2D,WAAM,CAChF,CAAA,CACF,CAAA,CAAA,CAEJ,EAGM6O,GAAwD,CAAC,CAAE,MAAA9H,EAAO,QAAA+H,EAAU,CAAI,EAAA,KAAAL,EAAM,UAAAM,EAAY,GAAO,KAAA5B,EAAM,aAAA6B,KAC/GA,GAAgB,CAACD,EAEjB/O,EAAA,IAAC,WAAQ,UAAW+G,EAAQ,QAAU,GACpC,SAAAzB,EAAA,KAACwI,GAAK,CAAA,UAAU,MACd,SAAA,CAAA9N,EAAAA,IAAC+N,IAAW,SAAC/N,EAAA,IAAA,KAAA,CAAG,UAAU,oDACvB,YAEIsF,EAAA,KAAAwG,EAAA,SAAA,CAAA,SAAA,CAASqB,IAAA,iBACP,MAAI,CAAA,UAAU,UAAU,QAAQ,YAAY,KAAK,UAChD,SAAAnN,EAAA,IAAC,QAAK,EAAE,iSAAiS,EAC3S,EAEAsF,EAAA,KAAC,OAAI,QAAQ,YAAY,UAAU,UACjC,SAAA,CAAAtF,MAAC,QAAK,EAAE,spBAAspB,KAAK,UAAU,OAAO,UAAU,EAC7rBA,EAAA,IAAA,OAAA,CAAK,EAAE,8aAA8a,KAAK,UAAU,EACpcA,EAAA,IAAA,OAAA,CAAK,EAAE,6kBAA6kB,KAAK,UAAU,CAAA,EACtmB,EAEFA,EAAAA,IAAC,QAAM,SAAM+G,CAAA,CAAA,CAAA,CACf,CAAA,CAEJ,CAAA,EACA,QACCmH,GACC,CAAA,SAAAlO,EAAA,IAAC,KAAE,UAAU,uBAAwB,WAAa,CACpD,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EAIDsF,EAAAA,KAAA,UAAA,CAAQ,UAAWyB,EAAQ,QAAU,GACpC,SAAA,CAAA/G,MAAC,KAAG,CAAA,UAAU,yDACX,SAAA+G,GAEIzB,EAAA,KAAAwG,WAAA,CAAA,SAAA,CAASqB,IAAA,iBACP,MAAI,CAAA,UAAU,UAAU,QAAQ,YAAY,KAAK,UAChD,SAAAnN,EAAA,IAAC,QAAK,EAAE,iSAAiS,EAC3S,EAEAsF,EAAA,KAAC,OAAI,QAAQ,YAAY,UAAU,UACjC,SAAA,CAAAtF,MAAC,QAAK,EAAE,spBAAspB,KAAK,UAAU,OAAO,UAAU,EAC7rBA,EAAA,IAAA,OAAA,CAAK,EAAE,8aAA8a,KAAK,UAAU,EACpcA,EAAA,IAAA,OAAA,CAAK,EAAE,6kBAA6kB,KAAK,UAAU,CAAA,EACtmB,EAEFA,EAAAA,IAAC,QAAM,SAAM+G,CAAA,CAAA,CAAA,CAAA,CACf,CAEJ,CAAA,QACC,MAAI,CAAA,UAAU,sEACZ,SACGgI,EAAA,MAAMD,EAAQ,MAAM,EAAE,KAAK,CAAC,EAAE,IAAI,CAACG,EAAG/L,IAAWlD,EAAA,IAAAqO,GAAA,CAAA,EAAwBnL,CAAO,CAAE,EAClF4L,EAAQ,IAAI,CAACI,EAAQhM,IACrBlD,EAAAA,IAAA8L,EAAA,SAAA,CACE,eAACwC,GAAuB,CAAA,MAAOY,EAAO,MAAO,MAAOA,EAAO,MAAO,KAAAT,EAAY,KAAAtB,EAAY,eAAgB+B,EAAO,gBAAhGhM,CAAgH,EACnI,CACD,EAEL,CACF,CAAA,CAAA,ECvKJ,SAASiM,GAAS,CAChB,UAAAzO,EACA,WAAA0O,EACA,gBAAAC,EAAkB,GAClB,GAAGzO,CACL,EAAkB,CAEd,OAAAZ,EAAA,IAACsP,GAAA,CACC,gBAAAD,EACA,UAAWjP,GAAG,OAAQM,CAAS,EAC/B,WAAY,CACV,OAAQ,gEACR,MAAO,YACP,QAAS,iDACT,cAAe,sBACf,IAAK,8BACL,WAAYN,GACVU,GAAe,CAAE,QAAS,UAAW,EACrC,yDACF,EACA,oBAAqB,kBACrB,gBAAiB,mBACjB,MAAO,mCACP,SAAU,OACV,UAAW,iEACX,IAAK,mBACL,KAAMV,GACJ,0NACAQ,EAAM,OAAS,QACX,uKACA,qCACN,EACA,IAAKR,GAAGU,GAAe,CAAE,QAAS,OAAQ,CAAC,EAAG,iEAAiE,EAC/G,gBAAiB,kBACjB,cAAe,gBACf,aACE,sFACF,UAAW,mCACX,YACE,mIACF,aAAc,oCACd,iBACE,iEACF,WAAY,YACZ,GAAGsO,CACL,EACA,WAAY,CACV,SAAU,IAAOpP,EAAAA,IAAAuP,GAAA,CAAgB,UAAU,SAAU,CAAA,EACrD,UAAW,IAAOvP,EAAAA,IAAAwP,GAAA,CAAiB,UAAU,SAAU,CAAA,CACzD,EACC,GAAG5O,CAAA,CAAA,CAGV,CACAuO,GAAS,YAAc,WC1DvB,MAAMM,GAAUC,GAEVC,GAAiBC,GAIjBC,GAAiBpP,EAAM,WAG3B,CAAC,CAAE,UAAAC,EAAW,MAAAoP,EAAQ,QAAS,WAAAjI,EAAa,EAAG,GAAGjH,CAAM,EAAGC,IAC1Db,EAAA,IAAA+P,GAAA,CACC,SAAA/P,EAAA,IAACgQ,GAAA,CACC,IAAAnP,EACA,MAAAiP,EACA,WAAAjI,EACA,UAAWzH,GACT,6aACAM,CACF,EACC,GAAGE,CAAA,CACN,CAAA,CACF,CACD,EACDiP,GAAe,YAAcG,GAAyB,YCvBtD,MAAMC,GAAWxP,EAGf,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAACkQ,GAAA,CACC,IAAArP,EACA,UAAWT,GACT,qQACAM,CACF,EACC,GAAGE,EAEJ,SAAAZ,EAAA,IAACmQ,GAAA,CACC,UAAW/P,GAAG,+CAA+C,EAE7D,SAAAJ,EAAAA,IAACoQ,GAAU,CAAA,UAAU,SAAU,CAAA,CAAA,CACjC,CAAA,CACF,CACD,EACDH,GAAS,YAAcC,GAAuB,YCf9C,MAAM/M,GAA0B,CAC9B,KAAM,IAAI,KAAK,IAAI,KAAO,EAAA,YAAA,EAAe,IAAI,OAAO,SAAY,EAAA,CAAC,EAAE,YAAY,EAC/E,GAAI,IAAI,KAAK,EAAE,YAAY,CAC7B,EAGMkN,GAAYhN,GAAY,CAC5B,KAAM,OAAA,aACNF,GACA,SAAU,CACR,QAAS,CAAChB,EAAOC,IAKV,CAECD,EAAA,KAAOC,EAAO,QAAQ,KACtBD,EAAA,GAAKC,EAAO,QAAQ,GAGpBD,EAAA,YAAcC,EAAO,QAAQ,YAC7BD,EAAA,UAAYC,EAAO,QAAQ,SACnC,EACA,UAAYD,GAAU,CAEpBA,EAAM,KAAO,OACbA,EAAM,GAAK,OACXA,EAAM,YAAc,OACpBA,EAAM,UAAY,MACpB,CACF,CACF,CAAC,EAGY,CAAE,QAAAmO,GAAS,UAAAC,IAAcF,GAAU,QACjCG,GAAAH,GAAU,QCxBnBI,GAAkBC,GACrBvO,GAAqBA,EAAM,KAAK,KAChCA,GAAqBA,EAAM,KAAK,GACjC,CAACwO,EAAMC,KAAQ,CACb,KAAAD,EACA,GAAAC,CAAA,EAEJ,EAEO,SAASC,GAAoB,CAAE,YAAAC,EAAa,iBAAAC,GAA8C,CAC/F,MAAM9O,EAAWuC,KACXwM,EAAYzM,EAAYkM,EAAe,EAGvCQ,EAAcC,EAAAA,QAAQ,IACtBF,EACK,CACL,KAAMA,EAAU,KAAO,IAAI,KAAKA,EAAU,IAAI,EAAI,OAClD,GAAIA,EAAU,GAAK,IAAI,KAAKA,EAAU,EAAE,EAAI,MAAA,EAGzCF,EACH,CACE,KAAMA,EAAY,KAAO,IAAI,KAAKA,EAAY,IAAI,EAAI,OACtD,GAAIA,EAAY,GAAK,IAAI,KAAKA,EAAY,EAAE,EAAI,MAElD,EAAA,OACH,CAACE,EAAWF,CAAW,CAAC,EAErB,CAACK,EAAUC,CAAW,EAAI3R,WAAgCwR,CAAW,EACrE,CAACI,EAAaC,CAAc,EAAI7R,EAAgC,SAAA,EAChE,CAACoD,EAAM0O,CAAO,EAAI9R,WAAS,EAAK,EAChC,CAAC+R,EAAgBC,CAAiB,EAAIhS,WAAwB,IAAI,EAClE,CAACiS,EAAkBC,CAAmB,EAAIlS,WAAS,EAAK,EACxD,CAACmS,EAAcC,CAAe,EAAIpS,WAAmC,SAAS,EAG9E,CAACqS,EAAgBC,CAAiB,EAAItS,EAAA,SAC1C0R,GAAA,MAAAA,EAAU,KAAOa,EAAOb,EAAS,KAAM,YAAY,EAAI,EAAA,EAEnD,CAACc,EAAcC,CAAe,EAAIzS,EAAA,SACtC0R,GAAA,MAAAA,EAAU,GAAKa,EAAOb,EAAS,GAAI,YAAY,EAAI,EAAA,EAE/C,CAACgB,EAAuBC,CAAwB,EAAI3S,WAAS,EAAE,EAC/D,CAAC4S,EAAqBC,CAAsB,EAAI7S,WAAS,EAAE,EAG3D8S,EAAQrB,EAAAA,QAAQ,IAAM,CACpB,MAAAsB,MAAY,KACZC,EAAkBD,EAAM,SACxBE,EAAkBC,GAAQH,EAAOC,CAAe,EAChDG,EAAgBC,GAAQH,EAAiB,CAAC,EAC1CI,GAAmB,IAAI,KAAKN,EAAM,YAAe,EAAAA,EAAM,WAAY,CAAC,EACpEO,EAAiB,IAAI,KAAKP,EAAM,YAAA,EAAeA,EAAM,SAAa,EAAA,EAAG,CAAC,EACtEQ,EAAkBL,GAAQD,EAAiB,CAAC,EAC5CO,EAAgBN,GAAQD,EAAiB,CAAC,EAC1CQ,EAAU,KAAK,MAAMV,EAAM,SAAA,EAAa,CAAC,EACzCW,GAAqB,IAAI,KAAKX,EAAM,cAAeU,EAAU,EAAG,CAAC,EACjEE,GAAmB,IAAI,KAAKZ,EAAM,eAAgBU,EAAU,GAAK,EAAG,CAAC,EAErEG,EAAcb,EAAM,SAAS,EAAI,EAAI,EAAI,KAAK,OAAOA,EAAM,SAAa,EAAA,GAAK,CAAC,EAC9Ec,EAAkBd,EAAM,SAAA,EAAa,EAAIA,EAAM,cAAgB,EAAIA,EAAM,YAAY,EACrFe,GAAqB,IAAI,KAAKD,EAAiBD,EAAc,EAAG,CAAC,EACjEG,GAAmB,IAAI,KAAKF,GAAkBD,EAAc,GAAK,EAAG,CAAC,EAEpE,MAAA,CACL,MAAAb,EACA,gBAAAE,EACA,cAAAE,EACA,iBAAAE,GACA,eAAAC,EACA,gBAAAC,EACA,cAAAC,EACA,mBAAAE,GACA,iBAAAC,GACA,mBAAAG,GACA,iBAAAC,EAAA,CAEJ,EAAG,CAAE,CAAA,EAGCC,EAAkB3J,cAAa4J,GAAyC,CACxE,GAAA,CACF,MAAMC,EAAaC,GAAMF,EAAY,aAAc,IAAI,IAAM,EAC7D,OAAQ,MAAMC,EAAW,QAAS,CAAA,EAAiB,OAAbA,CAAa,MAC7C,CACC,MACT,CACF,EAAG,CAAE,CAAA,EAGCE,EAAwB/J,EAAAA,YAAY,IAAM,CACxC,MAAAgK,EAAWL,EAAgB3B,CAAc,EACzCiC,EAASN,EAAgBxB,CAAY,EAEvC6B,GAAYC,IACd3C,EAAY,CAAE,KAAM0C,EAAU,GAAIC,CAAQ,CAAA,EAC1CtC,EAAkB,IAAI,EAEvB,EAAA,CAACK,EAAgBG,EAAcwB,CAAe,CAAC,EAG5CO,EAA+BlK,EAAAA,YAAY,IAAM,CAC/C,MAAAgK,EAAWL,EAAgBtB,CAAqB,EAChD4B,EAASN,EAAgBpB,CAAmB,EAE9CyB,GAAYC,GACdzC,EAAe,CAAE,KAAMwC,EAAU,GAAIC,CAAQ,CAAA,CAE9C,EAAA,CAAC5B,EAAuBE,EAAqBoB,CAAe,CAAC,EAI1DQ,EAAiBnK,EAAAA,YAAY,CAAC6G,EAAYC,IAAa,CACvDgB,IAAiB,WAEnBR,EADiB,CAAE,KAAAT,EAAM,GAAAC,EACL,EAGFmB,EAAAC,EAAOrB,EAAM,YAAY,CAAC,EAC5BuB,EAAAF,EAAOpB,EAAI,YAAY,CAAC,GAC/BgB,IAAiB,eAE1BN,EADwB,CAAE,KAAAX,EAAM,GAAAC,EACF,EAGLwB,EAAAJ,EAAOrB,EAAM,YAAY,CAAC,EAC5B2B,EAAAN,EAAOpB,EAAI,YAAY,CAAC,GAGjDa,EAAkB,IAAI,CAAA,EACrB,CAACG,CAAY,CAAC,EAGXsC,EAAUhD,EAAA,QACd,IAAM,CACJ,CAAE,MAAO,QAAS,GAAI,IAAM+C,EAAe1B,EAAM,MAAOA,EAAM,KAAK,CAAE,EACrE,CAAE,MAAO,YAAa,GAAI,IAAM0B,EAAetB,GAAQJ,EAAM,MAAO,CAAC,EAAGI,GAAQJ,EAAM,MAAO,CAAC,CAAC,CAAE,EACjG,CAAE,MAAO,YAAa,GAAI,IAAM0B,EAAe1B,EAAM,gBAAiBA,EAAM,aAAa,CAAE,EAC3F,CAAE,MAAO,cAAe,GAAI,IAAM0B,EAAetB,GAAQJ,EAAM,MAAO,CAAC,EAAGA,EAAM,KAAK,CAAE,EACvF,CAAE,MAAO,YAAa,GAAI,IAAM0B,EAAe1B,EAAM,gBAAiBA,EAAM,aAAa,CAAE,EAC3F,CAAE,MAAO,eAAgB,GAAI,IAAM0B,EAAetB,GAAQJ,EAAM,MAAO,EAAE,EAAGA,EAAM,KAAK,CAAE,EACzF,CAAE,MAAO,aAAc,GAAI,IAAM0B,EAAe1B,EAAM,iBAAkBA,EAAM,KAAK,CAAE,EACrF,CAAE,MAAO,gBAAiB,GAAI,IAAM0B,EAAeE,GAAU5B,EAAM,MAAO,CAAC,EAAGA,EAAM,KAAK,CAAE,EAC3F,CAAE,MAAO,gBAAiB,GAAI,IAAM0B,EAAeE,GAAU5B,EAAM,MAAO,CAAC,EAAGA,EAAM,KAAK,CAAE,EAC3F,CAAE,MAAO,eAAgB,GAAI,IAAM0B,EAAe1B,EAAM,mBAAoBA,EAAM,gBAAgB,CAAE,EACpG,CAAE,MAAO,eAAgB,GAAI,IAAM0B,EAAe1B,EAAM,mBAAoBA,EAAM,gBAAgB,CAAE,EACpG,CAAE,MAAO,YAAa,GAAI,IAAM0B,EAAe,IAAI,KAAK,IAAI,KAAK,EAAE,YAAe,EAAA,EAAG,CAAC,EAAG1B,EAAM,KAAK,CAAE,EACtG,CAAE,MAAO,gBAAiB,GAAI,IAAM0B,EAAetB,GAAQJ,EAAM,MAAO,GAAG,EAAGA,EAAM,KAAK,CAAE,EAC3F,CACE,MAAO,YACP,GAAI,IAAM0B,EAAeG,GAASC,GAAY,IAAI,IAAM,EAAG,CAAC,EAAGD,GAASE,GAAU,IAAI,IAAM,EAAG,CAAC,CAAC,CACnG,CACF,EACA,CAAC/B,EAAO0B,CAAc,CAAA,EAIlBM,EAAuBzK,cAAa0K,GAAiC,CACrE5C,IAAiB,WACf4C,GAAA,MAAAA,EAAO,MAAQ,CAACA,EAAM,IACxBpD,EAAY,CAAE,KAAMoD,EAAM,KAAM,GAAIA,EAAM,KAAM,EAEhDzC,EAAkBC,EAAOwC,EAAM,KAAM,YAAY,CAAC,EAClDtC,EAAgBF,EAAOwC,EAAM,KAAM,YAAY,CAAC,GACvCA,GAAA,MAAAA,EAAO,OAAQA,GAAA,MAAAA,EAAO,KAAMA,EAAM,KAAOA,EAAM,IACxDpD,EAAY,CAAE,KAAMoD,EAAM,KAAM,GAAIA,EAAM,KAAM,EAEhDzC,EAAkBC,EAAOwC,EAAM,KAAM,YAAY,CAAC,EAClDtC,EAAgBF,EAAOwC,EAAM,KAAM,YAAY,CAAC,GACvCA,GAAA,MAAAA,EAAO,OAAQA,GAAA,MAAAA,EAAO,KAC/BpD,EAAYoD,CAAK,EAEjBzC,EAAkBC,EAAOwC,EAAM,KAAM,YAAY,CAAC,EAClDtC,EAAgBF,EAAOwC,EAAM,GAAI,YAAY,CAAC,IAE9CpD,EAAY,MAAS,EAErBW,EAAkB,EAAE,EACpBG,EAAgB,EAAE,GAEpBT,EAAkB,IAAI,GAGlB+C,GAAA,MAAAA,EAAO,MAAQ,CAACA,EAAM,IACxBlD,EAAe,CAAE,KAAMkD,EAAM,KAAM,GAAIA,EAAM,KAAM,EAEnDpC,EAAyBJ,EAAOwC,EAAM,KAAM,YAAY,CAAC,EACzDlC,EAAuBN,EAAOwC,EAAM,KAAM,YAAY,CAAC,GAC9CA,GAAA,MAAAA,EAAO,OAAQA,GAAA,MAAAA,EAAO,KAAMA,EAAM,KAAOA,EAAM,IACxDlD,EAAe,CAAE,KAAMkD,EAAM,KAAM,GAAIA,EAAM,KAAM,EAEnDpC,EAAyBJ,EAAOwC,EAAM,KAAM,YAAY,CAAC,EACzDlC,EAAuBN,EAAOwC,EAAM,KAAM,YAAY,CAAC,GAC9CA,GAAA,MAAAA,EAAO,OAAQA,GAAA,MAAAA,EAAO,KAC/BlD,EAAekD,CAAK,EAEpBpC,EAAyBJ,EAAOwC,EAAM,KAAM,YAAY,CAAC,EACzDlC,EAAuBN,EAAOwC,EAAM,GAAI,YAAY,CAAC,IAErDlD,EAAe,MAAS,EAExBc,EAAyB,EAAE,EAC3BE,EAAuB,EAAE,EAE7B,EACC,CAACV,CAAY,CAAC,EAGX6C,EAAkB3K,EAAA,YACrB0K,GACMA,EAKDA,EAAM,KACJA,EAAM,GACD,GAAGxC,EAAOwC,EAAM,KAAM,WAAW,CAAC,MAAMxC,EAAOwC,EAAM,GAAI,WAAW,CAAC,GAEvExC,EAAOwC,EAAM,KAAM,WAAW,EAEhC,cAVE1D,GAAeA,EAAY,MAAQA,EAAY,GAClD,GAAGkB,EAAOlB,EAAY,KAAM,WAAW,CAAC,MAAMkB,EAAOlB,EAAY,GAAI,WAAW,CAAC,GACjF,cAUR,CAACA,CAAW,CAAA,EAIR4D,EAAiB5K,EAAAA,YAAY,IAAM,CACvCsH,EAAY,MAAS,EACrBE,EAAe,MAAS,EACxBG,EAAkB,IAAI,EACtBE,EAAoB,EAAK,EACzBI,EAAkB,EAAE,EACpBG,EAAgB,EAAE,EAClBE,EAAyB,EAAE,EAC3BE,EAAuB,EAAE,EACzBrQ,EAASsO,IAAW,EAChBQ,GACeA,IAEnBQ,EAAQ,EAAK,CAAA,EACZ,CAACtP,EAAU8O,CAAgB,CAAC,EAGzB4D,EAAe7K,EAAAA,YAAY,IAAM,CACjCqH,GACFlP,EACEqO,GAAQ,CACN,KAAMa,EAAS,KAAOA,EAAS,KAAK,YAAgB,EAAA,OACpD,GAAIA,EAAS,GAAKA,EAAS,GAAG,YAAgB,EAAA,OAC9C,YAAaO,IAAoBL,GAAA,MAAAA,EAAa,MAAOA,EAAY,KAAK,YAAgB,EAAA,OACtF,UAAWK,IAAoBL,GAAA,MAAAA,EAAa,IAAKA,EAAY,GAAG,YAAgB,EAAA,MAAA,CACjF,CAAA,EAGDN,GACeA,IAEnBQ,EAAQ,EAAK,CAAA,EACZ,CAACtP,EAAU8O,EAAkBI,EAAUE,EAAaK,CAAgB,CAAC,EAExE,OACGpM,EAAAA,KAAAmK,GAAA,CAAQ,KAAA5M,EAAY,aAAc0O,EACjC,SAAA,CAACvR,EAAAA,IAAA2P,GAAA,CAAe,QAAO,GACrB,SAAArK,EAAA,KAACtE,EAAA,CACC,QAAQ,UACR,UAAWZ,GACT,gDACA,CAAC+Q,GAAY,CAACL,GAAe,wBAC7B,2EACF,EAEA,SAAA,CAAC9Q,EAAAA,IAAA4U,GAAA,CAAa,UAAU,2BAA4B,CAAA,EACnDH,EAAgBtD,CAAQ,CAAA,CAAA,CAAA,EAE7B,EACC7L,EAAA,KAAAuK,GAAA,CAAe,UAAU,2BAA2B,MAAM,QACzD,SAAA,CAACvK,EAAAA,KAAA,MAAA,CAAI,UAAU,4BAEb,SAAA,CAACtF,EAAA,IAAA,MAAA,CAAI,UAAU,8FAA8F,MAAO,CAAE,UAAW,OAAA,EAC/H,SAAAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,kEAAkE,SAAO,UAAA,QACtF,MAAI,CAAA,UAAU,wCACZ,SAAQkU,EAAA,IAAKW,GACZ7U,EAAA,IAACgB,EAAA,CAEC,KAAK,KACL,QAASwQ,IAAmBqD,EAAO,MAAQ,UAAY,QACvD,UAAWzU,GACT,0DACAoR,IAAmBqD,EAAO,MACtB,qCACA,4DACN,EACA,QAAS,IAAM,CACbA,EAAO,GAAG,EACVpD,EAAkBoD,EAAO,KAAK,CAChC,EAEC,SAAOA,EAAA,KAAA,EAdHA,EAAO,KAgBf,CAAA,EACH,CAAA,CAAA,CACF,CACF,CAAA,EAGAvP,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAtF,EAAA,IAACiQ,GAAA,CACC,GAAG,iBACH,QAASyB,EACT,gBAAiB,IAAMC,EAAoB,CAACD,CAAgB,EAC5D,UAAU,cAAA,CACZ,QACC,QAAM,CAAA,QAAQ,iBAAiB,UAAU,sBAAsB,SAA2B,8BAAA,CAAA,EAC7F,EAGApM,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,4CAA4C,SAAa,gBAAA,EACvEsF,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAtF,EAAA,IAACQ,GAAA,CACC,YAAY,aACZ,MAAOsR,EACP,SAAWhN,GAAMiN,EAAkBjN,EAAE,OAAO,KAAK,EACjD,OAAQ+O,EACR,QAAS,IAAM,CACbhC,EAAgB,SAAS,CAC3B,EACA,UAAU,8BAAA,CACZ,EACC7R,EAAA,IAAA,OAAA,CAAK,UAAU,yEAAyE,SAAI,OAAA,CAAA,EAC/F,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAtF,EAAA,IAACQ,GAAA,CACC,YAAY,aACZ,MAAOyR,EACP,SAAWnN,GAAMoN,EAAgBpN,EAAE,OAAO,KAAK,EAC/C,OAAQ+O,EACR,QAAS,IAAM,CACbhC,EAAgB,SAAS,CAC3B,EACA,UAAU,8BAAA,CACZ,EACC7R,EAAA,IAAA,OAAA,CAAK,UAAU,yEAAyE,SAAE,KAAA,CAAA,EAC7F,CAAA,EACF,CAAA,EACF,EAGC0R,GACCpM,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,4CAA4C,SAAgB,mBAAA,EAC1EsF,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAtF,EAAA,IAACQ,GAAA,CACC,YAAY,aACZ,MAAO2R,EACP,SAAWrN,GAAMsN,EAAyBtN,EAAE,OAAO,KAAK,EACxD,OAAQkP,EACR,QAAS,IAAM,CACbnC,EAAgB,YAAY,CAC9B,EACA,UAAU,8BAAA,CACZ,EACC7R,EAAA,IAAA,OAAA,CAAK,UAAU,yEAAyE,SAAI,OAAA,CAAA,EAC/F,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAtF,EAAA,IAACQ,GAAA,CACC,YAAY,aACZ,MAAO6R,EACP,SAAWvN,GAAMwN,EAAuBxN,EAAE,OAAO,KAAK,EACtD,OAAQkP,EACR,QAAS,IAAM,CACbnC,EAAgB,YAAY,CAC9B,EACA,UAAU,8BAAA,CACZ,EACC7R,EAAA,IAAA,OAAA,CAAK,UAAU,yEAAyE,SAAE,KAAA,CAAA,EAC7F,CAAA,EACF,CAAA,EACF,CAAA,EAEJ,EAIAA,EAAAA,IAAC,MAAI,CAAA,UAAU,mDACb,SAAAA,EAAA,IAACmP,GAAA,CACC,aAAY,GACZ,KAAK,QACL,aACEyC,IAAiB,WACZT,GAAA,YAAAA,EAAU,QAAQL,GAAA,YAAAA,EAAa,OAAQyB,EAAM,OAC7ClB,GAAA,YAAAA,EAAa,OAAQkB,EAAM,MAElC,SAAUX,IAAiB,UAAYT,EAAWE,EAClD,SAAUkD,EACV,eAAgB,EAChB,SAAW9F,GACTA,EAAO,IAAI,MAAUA,EAAW,IAAA,KAAK,YAAY,EAEnD,UAAU,YAAA,CAAA,EAEd,CAAA,EACF,CAAA,EACF,EAGAnJ,EAAAA,KAAC,MAAI,CAAA,UAAU,kDACb,SAAA,CAAAtF,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS0T,EACT,UAAU,yBACX,SAAA,OAAA,CAED,EACA1U,EAAA,IAACgB,EAAA,CACC,KAAK,KACL,QAAS2T,EACT,UAAU,wDACX,SAAA,OAAA,CAED,CAAA,EACF,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,CCjbO,MAAMG,GAA2C,CACpD,CACI,GAAI,uBACJ,MAAO,uBACP,MAAO,aACP,YAAa,iCACjB,EACA,CACI,GAAI,aACJ,MAAO,aACP,MAAO,qDACP,YAAa,8FACb,SAAU,EACV,iBAAiB,CAAC,uBAAuB,CAC7C,EACA,CACI,GAAI,wBACJ,MAAO,wBACP,YAAa,0CACb,MAAO,qDACP,YAAa,aACb,SAAU,CACd,EACA,CACI,GAAI,qBACJ,MAAO,qBACP,YAAa,6DACb,MAAO,8BACX,CACJ,EAGaC,GAAmD,CAChE,uBAAwB,CACpB,CACI,QAAS,qBACT,QAAS,CACL,MAAO,qBACP,YAAa,yGACb,SAAU,KACd,CACJ,EACA,CACI,QAAS,mBACT,QAAS,CACL,MAAO,oBACP,YAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGAIb,SAAU,QACd,CACJ,CACJ,EAEI,aAAa,CACT,CACI,QAAS,cACT,QAAS,CACL,MAAO,aACP,YAAa,8FACb,SAAU,QACd,CACJ,CACJ,EACA,wBAAyB,CACrB,CACI,QAAS,cACT,QAAS,CACL,MAAO,mBACP,YAAa,sEACb,SAAU,KACd,CACJ,EACA,CACI,QAAS,0BACT,QAAS,CACL,MAAO,iBACP,YAAa,uEACb,SAAU,MACd,CACJ,EACA,CACI,QAAS,oBACT,QAAS,CACL,MAAO,gBACP,YAAa,oGACb,SAAU,KACd,CACJ,EACA,CACI,QAAS,WACT,QAAS,CACL,MAAO,6BACP,YAAa,2EACb,SAAU,QACd,CACJ,EACA,CACI,QAAS,WACT,QAAS,CACL,MAAO,mBACP,YACI,4GACJ,SAAU,QACd,CACJ,EACA,CACI,QAAS,mBACT,QAAS,CACL,MAAO,6BACP,YAAa,sEACb,SAAU,QACd,CACJ,EACA,CACI,QAAS,iBACT,QAAS,CACL,MAAO,qCACP,YAAa,uEACb,SAAU,QACd,CACJ,CACJ,EACA,qBAAsB,CAClB,CACI,QAAS,iBACT,QAAS,CACL,MAAO,+BACP,YAAa,yJACb,SAAU,MACd,CACJ,EACA,CACI,QAAS,gBACT,QAAS,CACL,MAAO,iCACP,YAAa,oFACb,SAAU,KACd,CACJ,CACJ,CAEJ,EAGaC,GAAuB9I,GACzB4I,GACF,OAAmBG,GACZ,OAAOA,EAAS,OAAU,SACnBA,EAAS,QAAU/I,EAEnB+I,EAAS,MAAM,KAAK/I,CAAI,CAEtC,EACA,KAAK,CAACgJ,EAAGlK,KAAOA,EAAE,UAAY,IAAMkK,EAAE,UAAY,EAAE,EAIhDC,GAAoBC,GAAuC,CAC9D,MAAAH,EAAWI,GAAgBD,CAAU,EAG3C,OAAIH,GAAA,MAAAA,EAAU,OAASA,EAAS,MAAM,OAAS,EACpCA,EAAS,MAIbF,GAAiBK,CAAU,GAAK,EAC3C,EAGaC,GAAmB3S,GACrBoS,GAAmB,KAAiBG,GAAAA,EAAS,KAAOvS,CAAE,EAIpD4S,GAAuBF,GAAiC,CAC3D,MAAAH,EAAWI,GAAgBD,CAAU,EACpC,OAAAH,GAAA,YAAAA,EAAU,mBAAoB,EACzC,EAgBaM,GAA0BrJ,GAAuC,CAK1E,MAAMsJ,EAAkB,CAAC,GAHHR,GAAoB9I,CAAI,CAGL,EAAE,KAAK,CAACgJ,EAAGlK,KAC/CA,EAAE,UAAY,IAAMkK,EAAE,UAAY,EAAA,EAIjCO,MAAkB,IAGlBC,EAAmBT,GAAiC,CAEtD,GAAI,CAAAQ,EAAY,IAAIR,EAAS,EAAE,IAKnBQ,EAAA,IAAIR,EAAS,GAAIA,CAAQ,EAGjCA,EAAS,kBAAoBA,EAAS,iBAAiB,OAAS,GACrD,UAAAU,KAAaV,EAAS,iBAAkB,CACzC,MAAAW,EAAkBP,GAAgBM,CAAS,EAC7CC,GACAF,EAAgBE,CAAe,CAEvC,CACJ,EAIJ,UAAWX,KAAYO,EACnBE,EAAgBT,CAAQ,EAI5B,MAAMY,EAAS,MAAM,KAAKJ,EAAY,OAAQ,CAAA,EAGtC,eAAA,IAAI,uBAAwBI,EAAO,IAAIvT,GAAKA,EAAE,EAAE,EAAE,KAAK,IAAI,CAAC,EAE7DuT,CACX,EAGaC,GAAoD,CAAA,EACjEhB,GAAmB,QAAoBG,GAAA,CAClBa,GAAAb,EAAS,EAAE,EAAIA,EAAS,KAC7C,CAAC,ECjQD,MAAM9R,GAA8B,CAClC,iBAAkB,GAClB,eAAgB,KAChB,iBAAkB,GAClB,mBAAoB,EACpB,cAAe,CAAC,EAChB,mBAAoB,CAAC,CACvB,EAEM4S,GAAgB1S,GAAY,CAChC,KAAM,WAAA,aACNF,GACA,SAAU,CAER,kBAAmB,CAAChB,EAAOC,IAAmC,CAC5DD,EAAM,iBAAmBC,EAAO,OAClC,EAGA,eAAgB,CAACD,EAAOC,IAAoC,CAEpD,MAAA4T,EAAe5T,EAAO,QAAQ,OAAOM,GACzC,CAACP,EAAM,cAAc,SAASO,CAAE,GAAKA,IAAOP,EAAM,cAAA,EAGhD,GAAA6T,EAAa,SAAW,EAAG,CAC7B,QAAQ,IAAI,2BAA2B,EACvC,MACF,CAGA7T,EAAM,cAAgB,CAAC,GAAG6T,EAAc,GAAG7T,EAAM,aAAa,EAC9D,QAAQ,IAAI,qBAAqB6T,EAAa,KAAK,IAAI,CAAC,mBAAmB7T,EAAM,cAAc,KAAK,IAAI,CAAC,EAAE,EAGvG,CAACA,EAAM,kBAAoBA,EAAM,cAAc,OAAS,IACpDA,EAAA,eAAiBA,EAAM,cAAc,CAAC,EAC5CA,EAAM,cAAgBA,EAAM,cAAc,MAAM,CAAC,EACjDA,EAAM,iBAAmB,GACzBA,EAAM,mBAAqB,EAC3B,QAAQ,IAAI,2BAA2BA,EAAM,cAAc,EAAE,EAEjE,EAGA,cAAe,CAACA,EAAOC,IAAkC,CACvDD,EAAM,eAAiBC,EAAO,QAC9BD,EAAM,iBAAmB,GACzBA,EAAM,mBAAqB,EAC3B,QAAQ,IAAI,+BAA+BC,EAAO,OAAO,EAAE,CAC7D,EAGA,aAAeD,GAAU,CAEnBA,EAAM,iBACFA,EAAA,mBAAmBA,EAAM,cAAc,EAAI,GACjD,QAAQ,IAAI,uBAAuBA,EAAM,cAAc,EAAE,GAGnD,QAAA,IAAI,sCAAsCA,EAAM,cAAc,MAAM,aAAaA,EAAM,cAAc,KAAK,IAAI,CAAC,GAAG,EAGtHA,EAAM,cAAc,OAAS,GACzBA,EAAA,eAAiBA,EAAM,cAAc,CAAC,EAC5CA,EAAM,cAAgBA,EAAM,cAAc,MAAM,CAAC,EACjDA,EAAM,mBAAqB,EAC3BA,EAAM,iBAAmB,GAEjB,QAAA,IAAI,2BAA2BA,EAAM,cAAc,uBAAuBA,EAAM,cAAc,KAAK,IAAI,CAAC,GAAG,IAGnHA,EAAM,eAAiB,KACvBA,EAAM,iBAAmB,GAEzB,QAAQ,IAAI,oDAAoD,EAEpE,EAGA,gBAAiB,CAACA,EAAOC,IAAkC,CACzDD,EAAM,mBAAqBC,EAAO,OACpC,EAGA,aAAeD,GAAU,CAEnBA,EAAM,iBACFA,EAAA,mBAAmBA,EAAM,cAAc,EAAI,GACjD,QAAQ,IAAI,6BAA6BA,EAAM,cAAc,eAAe,GAG9EA,EAAM,iBAAmB,GACzBA,EAAM,eAAiB,KACvBA,EAAM,cAAgB,GACtBA,EAAM,mBAAqB,EAE3B,QAAQ,IAAI,iCAAiC,CAC/C,EAGA,uBAAyBA,GAAU,CACjCA,EAAM,iBAAmB,EAC3B,EAGA,cAAe,CAACA,EAAOC,IAAkC,CACnDD,EAAM,mBAAmBC,EAAO,OAAO,IACnCD,EAAA,mBAAmBC,EAAO,OAAO,EAAI,GAE/C,EAGA,kBAAoBD,GAAU,CAC5BA,EAAM,mBAAqB,EAC7B,CACF,CACF,CAAC,EAGY,CACX,kBAAA8T,GACA,eAAAC,GACA,cAAAC,GACA,aAAAC,GACA,gBAAAC,GACA,aAAAC,GACA,uBAAAC,GACA,cAAAC,GACA,kBAAAC,EACF,EAAIV,GAAc,QAEHW,GAAAX,GAAc,QC/HvBY,GAAgD,CAAC,CACrD,UAAAjW,EAAY,GACZ,WAAAkW,EAAa,iBACb,QAAA3V,EAAU,UACV,YAAA4V,EACA,WAAAzB,EACA,SAAA0B,EAAW,QACb,IAAM,CACJ,MAAM7U,EAAWuC,KAEXuS,EADWvN,KACY,SAEvBwN,EAAmBzS,EAAapC,GAAqBA,EAAM,UAAU,gBAAgB,EAErF8U,EAAsB,IAAM,CAEhC,GAAI7B,EAAY,CACdnT,EAASiU,GAAe,CAACd,CAAU,CAAC,CAAC,EACrC,MACF,CAIM,MAAA8B,EAAe3B,GAAuBwB,CAAW,EACjDI,EAAcD,EAAa,IAAIjC,GAAYA,EAAS,EAAE,EAG5D,GAAI6B,IAAa,SAAU,CACrBK,EAAY,OAAS,EACdlV,EAAAiU,GAAeiB,CAAW,CAAC,EAE5B,QAAA,KAAK,+BAA+BJ,CAAW,EAAE,EAE3D,MACF,CAGA,GAAIF,EAAa,CACT,MAAAO,EAAqBF,EACxB,OAAmBjC,GAAAA,EAAS,cAAgB4B,CAAW,EACvD,IAAgB5B,GAAAA,EAAS,EAAE,EAE1BmC,EAAmB,OAAS,EACrBnV,EAAAiU,GAAekB,CAAkB,CAAC,EAE3C,QAAQ,KAAK,oCAAoCP,CAAW,YAAYE,CAAW,EAAE,EAEvF,MACF,CAGII,EAAY,OAAS,EACdlV,EAAAiU,GAAeiB,CAAW,CAAC,EAE5B,QAAA,KAAK,+BAA+BJ,CAAW,EAAE,CAC3D,EAIIM,EAAe,CACnB,QAAS,2CACT,UAAW,2CACX,QAAS,uDAAA,EAIT,OAAArX,EAAA,IAAC,SAAA,CACC,QAASiX,EACT,SAAUD,EACV,UAAW,wBAAwBK,EAAapW,CAAO,CAAC,IAAIP,CAAS,IAAIsW,EAAmB,gCAAkC,EAAE,GAE/H,SAAAJ,CAAA,CAAA,CAGP,ECnFMU,GAAiC,IAAM,CAE3C,MAAMP,EADWvN,KACY,SAEvBwN,EAAmBzS,EAAapC,GAAqBA,EAAM,UAAU,gBAAgB,EACrFoV,EAAqBhT,EAAapC,GAAqBA,EAAM,UAAU,oBAAsB,CAAA,CAAE,EAG/F2S,EAAqBS,GAAuBwB,CAAW,EACvDS,EAAe1C,EAAmB,OAAS,EAG3C2C,EAAeD,GACnB1C,EAAmB,SAAkByC,EAAmBtC,EAAS,EAAE,CAAC,EAGlE,MAAA,CAACuC,GAAgBR,EACZ,KAIPhX,EAAA,IAAC2W,GAAA,CACC,WAAYc,EAAe,kBAAoB,iBAC/C,QAAQ,UACR,SAAS,SACT,UAAU,MAAA,CAAA,CAGhB,ECzBMtU,GAA4B,CAChC,OAAQ,OACV,EAGMuU,GAAcrU,GAAY,CAC9B,KAAM,SAAA,aACNF,GACA,SAAU,CACR,UAAW,CAAChB,EAAOC,IAAsC,CACvDD,EAAM,OAASC,EAAO,OACxB,CACF,CACF,CAAC,EAEY,CAAE,UAAAuV,EAAU,EAAID,GAAY,QAE1BE,GAAAF,GAAY,QCR3B,SAAwBG,GAAO,CAC7B,MAAA9Q,EACA,KAAA+Q,EACA,eAAAC,EAAiB,GACjB,aAAAC,EAAe,GACf,YAAAC,EAAc,GACd,UAAAlJ,EAAY,GACZ,oBAAAmJ,CACF,EAAgB,CAEd,MAAMjW,EAAWuC,KACX2T,EAAS5T,EAAapC,GAAqBA,EAAM,OAAO,MAAM,EAEpE,aACG,SAAO,CAAA,UAAU,4EAChB,SAACmD,EAAA,KAAA,MAAA,CAAI,UAAU,oCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,4FACb,eAAC8X,EAAK,CAAA,UAAU,oCAAoC,CACtD,CAAA,EACC9X,EAAA,IAAA,KAAA,CAAG,UAAU,4HACX,SACH+G,EAAA,CAAA,EACF,EAGAzB,EAAAA,KAAC,MAAI,CAAA,UAAU,uCACZ,SAAA,CACCyS,GAAA/X,EAAA,IAAC,MAAI,CAAA,UAAU,gEACb,SAAAA,EAAA,IAAC6Q,GAAA,CACC,YAAa,CACX,KAAM,IAAI,KAAK,IAAI,KAAK,EAAE,cAAmB,IAAA,KAAA,EAAO,SAAA,EAAY,CAAC,EACjE,OAAQ,IACV,CAAA,CAAA,EAEJ,EAGDoH,SACE,MAAI,CAAA,UAAU,8BACb,SAACjY,EAAA,IAAAgB,EAAA,CAAO,QAASkX,EAAqB,SAAUnJ,EAAW,UAAU,oBACnE,SAAA/O,EAAA,IAACoY,IAAU,UAAW,WAAWrJ,EAAY,eAAiB,EAAE,EAAI,CAAA,CAAA,CACtE,CACF,CAAA,EAIDiJ,UACEvI,GACC,CAAA,SAAA,CAAAzP,MAAC2P,GAAe,CAAA,QAAO,GACrB,SAAA3P,EAAA,IAACgB,GAAO,QAAQ,UAAU,KAAK,OAC7B,SAAChB,EAAAA,IAAAqY,GAAA,CAAS,UAAU,SAAA,CAAU,CAChC,CAAA,EACF,EACCrY,MAAA6P,GAAA,CACC,SAACvK,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,cAAc,SAAe,kBAAA,EAC3CsF,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,iBACf,SAAA,CAAAtF,EAAA,IAAC,QAAA,CACC,KAAK,QACL,KAAK,SACL,MAAM,QACN,QAASmY,IAAW,QACpB,SAAU,IAAMlW,EAAS0V,GAAU,OAAO,CAAC,EAC3C,UAAU,MAAA,CACZ,EAAE,mBAAA,EAEJ,EACArS,EAAAA,KAAC,QAAM,CAAA,UAAU,iBACf,SAAA,CAAAtF,EAAA,IAAC,QAAA,CACC,KAAK,QACL,KAAK,SACL,MAAM,QACN,QAASmY,IAAW,QACpB,SAAU,IAAMlW,EAAS0V,GAAU,OAAO,CAAC,EAC3C,UAAU,MAAA,CACZ,EAAE,oBAAA,EAEJ,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,QAEDL,GAAqB,EAAA,CAAA,EACxB,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CC3GwB,SAAAgB,GAAO,CAAE,UAAAvJ,GAAqC,CACpE,KAAM,CAACwJ,EAAUC,CAAW,EAAI/Y,WAAS,CAAC,EACpC,CAACgZ,EAAcC,CAAe,EAAIjZ,WAAS,CAAC,EAC5C,CAACkZ,EAAYC,CAAa,EAAInZ,WAAS,EAAK,EAG5CoZ,EAAkB,CACtB,+CACA,4BACA,gCACA,2CACA,qCACA,2CACA,qCACA,sCACA,yCACA,uCAAA,EAGFhZ,OAAAA,EAAAA,UAAU,IAAM,CAER,MAAAiZ,EAAmB,YAAY,IAAM,CACzCN,EAAaxO,GAEP+E,GAAa/E,GAAQ,GAChB,GAIL,CAAC+E,GAAa/E,EAAO,KACvB,cAAc8O,CAAgB,EAC9BN,EAAY,GAAG,EACf,WAAW,IAAM,CACfI,EAAc,EAAI,GACjB,GAAG,EACC,KAIL5O,EAAO,GACFA,EAAO,EAGTA,CACR,GACA,EAAE,EAIC+O,EAAkB,YAAY,IAAM,CACnCJ,GACHD,EAAiB1O,IAAUA,EAAO,GAAK6O,EAAgB,MAAM,GAE9D,IAAI,EAEP,MAAO,IAAM,CACX,cAAcC,CAAgB,EAC9B,cAAcC,CAAe,CAAA,CAC/B,EACC,CAAChK,EAAW4J,CAAU,CAAC,EAGxBrT,EAAA,KAAC,MAAI,CAAA,UAAU,mGAEb,SAAA,CAAAtF,EAAA,IAAC,MAAI,CAAA,UAAU,6DACb,SAAAA,EAAAA,IAAC,KAAsB,CAAA,UAAU,mDAC9B,SAAA2Y,EAAa,SAAWE,EAAgBJ,CAAY,CAAA,EAD9CA,CAET,EACF,QAGC,MAAI,CAAA,UAAU,wCACb,SAACzY,MAAA,MAAA,CAAI,UAAU,+CACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,sEACV,MAAO,CAAE,MAAO,GAAGuY,CAAQ,GAAI,CAAA,GAEnC,CACF,CAAA,EAGAjT,EAAAA,KAAC,MAAI,CAAA,UAAU,yFACb,SAAA,CAAAtF,EAAAA,IAAC,QAAK,SAAO,SAAA,CAAA,SACZ,OAAM,CAAA,SAAA,CAAAuY,EAAS,GAAA,EAAC,CAAA,EACnB,EAGCI,SACE,MAAI,CAAA,UAAU,sBACb,SAACrT,EAAAA,KAAA,MAAA,CAAI,UAAU,0EACb,SAAA,CAACtF,EAAAA,IAAAgZ,GAAA,CAAY,UAAU,SAAU,CAAA,EACjChZ,EAAAA,IAAC,QAAK,SAAwB,0BAAA,CAAA,CAAA,CAAA,CAChC,CACF,CAAA,QAID,QAAO,CAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASN,CACJ,CAAA,CAAA,CAEJ,CCzGA,MAAMiZ,GAAoB7Z,EAAAA,cAAqC,CAC7D,WAAY,GACZ,cAAe,IAAM,CAAC,CACxB,CAAC,EAEY8Z,GAA8D,CAAC,CAAE,SAAA5Z,KAAe,CAC3F,KAAM,CAAC6Z,EAAYC,CAAa,EAAI3Z,WAAS,EAAK,EAGhD,OAAAO,EAAA,IAACiZ,GAAkB,SAAlB,CAA2B,MAAO,CAAE,WAAAE,EAAY,cAAAC,CAAc,EAC5D,SAAA9Z,CACH,CAAA,CAEJ,EAEa+Z,GAAgB,IAAMlZ,EAAA,WAAW8Y,EAAiB,ECbzDK,GAAsB,IAAqB,CAE7C,MAAMnV,EAAWC,KACX,CAAE,cAAAgV,GAAkBC,KAEtBE,EAA+BtU,GAAM,OAAO,CAChD,QACI,gCAEJ,gBAAiB,EAAA,CAClB,EAID,OAAAsU,EAAc,aAAa,SAAS,IACjCxU,GAAaA,EACbI,GAAsB,SACjB,QAAAkG,EAAAlG,EAAM,WAAN,YAAAkG,EAAgB,UAAW,KAE3B,aAAa,WAAW,MAAM,EAC9BlH,EAAS,GAAG,KAENqJ,EAAArI,EAAM,WAAN,YAAAqI,EAAgB,UAAW,KACnC4L,EAAc,EAAI,EAEb,QAAQ,OAAOjU,CAAK,CAC7B,CAAA,EAGKoU,CACT,ECzBA,SAAwBC,IAAY,qBAClC,KAAM,CAACzK,EAAW0K,CAAY,EAAIha,WAAS,EAAK,EAC1C,CAACia,EAAqBC,CAAsB,EAAIla,EAAA,SAA0B,CAAE,CAAA,EAC5E,CAACma,EAAiBC,CAAkB,EAAIpa,EAA8B,SAAA,EACtE0Y,EAAS5T,EAAapC,GAAoBA,EAAM,OAAO,MAAM,EAC7D,CAAC2X,EAAYC,CAAa,EAAIta,WAAS,CAC3C,WAAY,EACZ,aAAc,EACd,UAAW,EACX,eAAgB,EAChB,SAAU,EACV,SAAU,EACV,SAAU,EACV,SAAU,CAAA,CACX,EACK,CAAE,QAAA4K,GAAY2P,KACd7V,EAAWC,KAEX6V,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBX,EAAgBD,KAIhB/Z,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAExDgY,EAAS5a,GAAA,YAAAA,EAAM,GAEf6a,EAAoB,MAAOC,EAAmBC,IAAoB,CAClE,GAAA,CAMF,OALqB,MAAMf,EAAc,KACvC,qBAAqBlP,CAAO,GAC5B,CAAE,UAAAgQ,EAAW,QAAAC,EAAS,OAAAH,CAAO,EAC7B,CAAE,gBAAiB,EAAK,CAAA,GAEN,KAAK,WAClBI,EAAS,CACR,eAAA,MAAM,mCAAoCA,CAAO,EAClD,EACT,CAAA,EAGIC,EAAkB,MAAOH,EAAmBC,IAAoB,OAChE,GAAA,CAMK,QAAAjP,GALkB,MAAMkO,EAAc,KAC3C,oCAAoClP,CAAO,GAC3C,CAAE,UAAAgQ,EAAW,QAAAC,EAAS,OAAAH,CAAO,EAC7B,CAAE,gBAAiB,EAAK,CAAA,GAEF,OAAjB,YAAA9O,EAAuB,OAAQ,SAC/BoP,EAAa,CACZ,eAAA,MAAM,iCAAkCA,CAAW,EACpD,EACT,CAAA,EAGIC,EAAc5Q,EAAAA,YAAY,SAAY,OAC1C2P,EAAa,EAAI,EACb,GAAA,CACF,MAAMY,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD,CAACkM,EAAQC,CAAU,EAAI,MAAM,QAAQ,IAAI,CAC7CR,EAAkBC,EAAWC,CAAO,EACpCE,EAAgBH,EAAWC,CAAO,CAAA,CACnC,EAEDX,EAAuBgB,CAAM,EAC7Bd,EAAmBe,CAAU,EAC7BC,EAA2BF,EAAQC,CAAU,QAEtCzV,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC1CF,GAAM,aAAaE,CAAK,KAAKkG,EAAAlG,EAAM,WAAN,YAAAkG,EAAgB,UAAW,MAC1D,MAAM,gDAAgD,EACtDlH,EAAS,GAAG,EACd,QACA,CACAsV,EAAa,EAAK,CACpB,GACC,CAACtV,EAAUsK,EAAMpE,EAAS8P,CAAM,CAAC,EAIpCta,EAAAA,UAAU,IAAM,CACF6a,GAAA,EACX,CAACA,CAAW,CAAC,EAEhB7a,EAAAA,UAAU,IAAM,CACF6a,IACZ,MAAMI,EAAa,YAAYJ,EAAa,EAAI,GAAK,GAAK,GAAI,EACvD,MAAA,IAAM,cAAcI,CAAU,CAAA,EACtC,CAACJ,CAAW,CAAC,EAER,MAAAK,EAA4BJ,GAA4B,CAC5D,IAAIK,EAAa,EACbC,EAAe,EACfC,EAAiB,EACjBC,EAAc,EACdC,GAAmB,EAEvB,OAAIT,GAAA,MAAAA,EAAQ,QACVA,EAAO,QAAmBU,GAAA,SACxBL,GAAc,WAAW,OAAOK,EAAQ,OAAS,GAAG,CAAC,EACrDJ,GAAgB,WAAW,SAAO5P,EAAAgQ,EAAQ,UAAR,YAAAhQ,EAAiB,QAAS,GAAG,CAAC,EAChE6P,GAAkB,WAAW,SAAO1N,EAAA6N,EAAQ,YAAR,YAAA7N,EAAmB,QAAS,GAAG,CAAC,EACpE2N,GAAe,WAAW,OAAOE,EAAQ,QAAU,GAAG,CAAC,EACvDD,IAAoB,WAAW,OAAOC,EAAQ,aAAe,GAAG,CAAC,CAAA,CAClE,EAGI,CAAE,WAAAL,EAAY,aAAAC,EAAc,eAAAC,EAAgB,YAAAC,EAAa,iBAAAC,EAAiB,CAAA,EAG7EE,EAA0BV,GAAgD,CAC9E,IAAII,EAAa,EACbC,EAAe,EACfC,EAAiB,EACjBC,EAAc,EACdC,GAAmB,EAEvB,OAAIR,GAAA,MAAAA,EAAY,YACdI,GAAc,WAAWJ,EAAW,UAAU,YAAc,GAAG,EAC/DK,GAAgB,WAAWL,EAAW,UAAU,uBAAyB,GAAG,EAC5EM,GAAkB,WAAWN,EAAW,UAAU,kBAAoB,GAAG,EACzEO,GAAe,WAAWP,EAAW,UAAU,aAAe,GAAG,EACjEQ,IAAoB,WAAWR,EAAW,UAAU,kBAAoB,GAAG,GAGtE,CAAE,WAAAI,EAAY,aAAAC,EAAc,eAAAC,EAAgB,YAAAC,EAAa,iBAAAC,EAAiB,CAAA,EAG7EP,EAA6B/Q,EAAAA,YAAY,CAAC6Q,EAAyBC,IAAgD,CACjH,MAAAW,EAAYR,EAAyBJ,CAAM,EAC3Ca,EAAgBF,EAAuBV,CAAU,EAEjDI,EAAaO,EAAU,WAAaC,EAAc,WAClDP,GAAeM,EAAU,aAAeC,EAAc,aACtDN,EAAiBK,EAAU,eAAiBC,EAAc,eAC1DL,EAAcI,EAAU,YAAcC,EAAc,YACpDJ,EAAmBG,EAAU,iBAAmBC,EAAc,iBAEtDzB,EAAA,CACZ,WAAAiB,EACA,aAAAC,GACA,UAAWA,GAAeD,GAAc,EACxC,eAAAE,EACA,SAAWC,EAAcC,EAAoB,KAAO,EACpD,SAAUJ,EAAaG,GAAe,EACtC,SAAWH,EAAa,IAAQI,GAAoB,EACpD,SAAUF,EAAiB,EAAKF,EAAaE,EAAkB,CAAA,CAChE,CACH,EAAG,CAAE,CAAA,EAGCO,EAAmBvK,EAAAA,QAAQ,KACxB,CACL,WAAY,KAAK4I,EAAW,WAAW,eAAe3B,CAAM,CAAC,GAC7D,aAAc,KAAK2B,EAAW,aAAa,eAAe3B,CAAM,CAAC,GACjE,UAAW,OAAQ2B,EAAW,UAAW,QAAQ,CAAC,CAAC,EAAE,eAAe3B,CAAM,EAC1E,eAAgB2B,EAAW,eAAe,eAAe3B,CAAM,EAC/D,SAAU,GAAG,OAAQ2B,EAAW,SAAU,QAAQ,CAAC,CAAC,EAAE,eAAe3B,CAAM,CAAC,KAC5E,SAAU,OAAQ2B,EAAW,SAAU,QAAQ,CAAC,CAAC,EAAE,eAAe3B,CAAM,EACxE,SAAU,OAAQ2B,EAAW,SAAU,QAAQ,CAAC,CAAC,EAAE,eAAe3B,CAAM,EACxE,SAAU,OAAQ2B,EAAW,SAAU,QAAQ,CAAC,CAAC,EAAE,eAAe3B,CAAM,CAAA,GAEzE,CAAC2B,EAAY3B,CAAM,CAAC,EAGjBrJ,EAAU,CACd,CACE,MAAO,eACP,MAAO2M,EAAiB,WACxB,eAAgB,oDAClB,EACA,CACE,MAAO,UACP,MAAOA,EAAiB,aACxB,eAAgB,4BAClB,EACA,CACE,MAAO,kBACP,MAAOA,EAAiB,UACxB,eAAgB,uDAClB,EACA,CACE,MAAO,gBACP,MAAOA,EAAiB,eACxB,eAAgB,sDAClB,EACA,CACE,MAAO,MACP,MAAOA,EAAiB,SACxB,eACE,kFACJ,EACA,CACE,MAAO,MACP,MAAOA,EAAiB,SACxB,eACE,8FACJ,EACA,CACE,MAAO,MACP,MAAOA,EAAiB,SACxB,eACE,yFACJ,EACA,CACE,MAAO,MACP,MAAOA,EAAiB,SACxB,eACE,qFACJ,CAAA,EAIID,EAAgB,CACpB,CACE,MAAO,aACP,MAAO5B,EACH,KAAK,aAAWvO,EAAAuO,GAAA,YAAAA,EAAiB,YAAjB,YAAAvO,EAA4B,aAAc,GAAG,EAAE,eAAe8M,CAAM,CAAC,GACrF,KACN,EACA,CACE,MAAO,mBACP,MAAOyB,EAAkB,KAAK,YAAWpM,EAAAoM,GAAA,YAAAA,EAAiB,YAAjB,YAAApM,EAA4B,qBAAqB,EAAE,eAAe2K,CAAM,CAAC,GAAK,IACzH,EACA,CACE,MAAO,OACP,MAAOyB,EAAkB,YAAW8B,EAAA9B,GAAA,YAAAA,EAAiB,YAAjB,YAAA8B,EAA4B,IAAI,EAAE,eAAevD,CAAM,EAAI,MACjG,EACA,CACE,MAAO,cACP,MAAOyB,EAAkB,YAAW+B,EAAA/B,GAAA,YAAAA,EAAiB,YAAjB,YAAA+B,EAA4B,gBAAgB,EAAE,eAAexD,CAAM,EAAI,GAC7G,EACA,CACE,MAAO,MACP,MAAOyB,EAAkB,KAAK,YAAWgC,EAAAhC,GAAA,YAAAA,EAAiB,YAAjB,YAAAgC,EAA4B,QAAQ,EAAE,eAAezD,CAAM,CAAC,GAAK,IAC5G,EACA,CACE,MAAO,MACP,MAAOyB,EAAkB,KAAK,YAAWiC,EAAAjC,GAAA,YAAAA,EAAiB,YAAjB,YAAAiC,EAA4B,QAAQ,EAAE,eAAe1D,CAAM,CAAC,GAAK,IAC5G,EACA,CACE,MAAO,MACP,MAAOyB,EAAkB,GAAG,YAAWkC,EAAAlC,GAAA,YAAAA,EAAiB,YAAjB,YAAAkC,EAA4B,QAAQ,EAAE,eAAe3D,CAAM,CAAC,KAAO,IAC5G,EACA,CACE,MAAO,sBACP,MAAOyB,EAAkB,KAAK,YAAWmC,EAAAnC,GAAA,YAAAA,EAAiB,YAAjB,YAAAmC,EAA4B,sBAAsB,EAAE,eAAe5D,CAAM,CAAC,GAAK,IAC1H,CAAA,EAGF,OAAGpJ,EACM/O,MAACsY,IAAO,UAAAvJ,CAAsB,CAAA,EAIrCzJ,EAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAtF,EAAA,IAAC6X,GAAA,CACC,MAAM,sBACN,KAAMnN,GACN,eAAgB,GAChB,aAAc,GACd,YAAa,GACb,UAAW,GACX,oBAAqB,IAAM,CACbgQ,GACd,CAAA,CACP,EAGKpV,EAAAA,KAAC,OAAK,CAAA,UAAU,qBACd,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,YAEb,SAACsF,EAAA,KAAA,UAAA,CAAQ,GAAG,MACV,SAAA,CAAAtF,EAAAA,IAAC,MAAG,UAAU,mEACZ,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,uCACb,SAAA,CAACtF,EAAAA,IAAAwK,GAAA,CAAM,UAAU,SAAU,CAAA,EAC3BxK,EAAAA,IAAC,QAAK,SAAe,iBAAA,CAAA,EAElBA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,UAChD,SAACA,EAAA,IAAA,OAAA,CAAK,EAAE,gSAAiS,CAAA,EAC3S,EAGCsF,EAAA,KAAA,MAAA,CAAI,QAAQ,YAAY,UAAU,UACjC,SAAA,CAAAtF,MAAC,QAAK,EAAE,spBAAspB,KAAK,UAAU,OAAO,UAAU,EAAQA,EAAA,IAAA,OAAA,CAAK,EAAE,8aAA8a,KAAK,UAAU,EAAQA,EAAA,IAAA,OAAA,CAAK,EAAE,6kBAA6kB,KAAK,UAAU,CAAA,EACvvD,CAAA,CAAA,CAEJ,CAIF,CAAA,EACAA,EAAA,IAAC6O,GAAA,CACC,QAAAC,EACA,KAAM,CACJ,KAAML,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,MACpC,EACA,UAAAM,CAAA,CACF,CAAA,CAAA,CACF,CACF,CAAA,GAGC2K,GAAA,YAAAA,EAAqB,QAAS,GAAKA,EAAoB,IAAI,CAACsC,EAAgB9Y,IAAU,SACrF,MAAM+Y,EAAY,CAChB,CAAE,MAAO,eAAgB,MAAO,KAAK,WAAW,OAAOD,EAAe,OAAS,GAAG,CAAC,EAAE,eAAe7D,CAAM,CAAC,EAAG,EAC9G,CACE,MAAO,UACP,MAAO,KAAK,WAAW,SAAO9M,EAAA2Q,EAAe,UAAf,YAAA3Q,EAAwB,QAAS,GAAG,CAAC,EAAE,eAAe8M,CAAM,CAAC,EAC7F,EACA,CACE,MAAO,kBACP,MAAO6D,EAAe,eAAiBA,EAAe,cAAc,OAAS,EACzE,WAAW,OAAOA,EAAe,cAAc,CAAC,EAAE,KAAK,CAAC,EAAE,eAAe7D,EAAQ,CAC/E,sBAAuB,EACvB,sBAAuB,CACxB,CAAA,EACD,GACN,EACA,CAAE,MAAO,gBAAiB,QAAO3K,EAAAwO,EAAe,YAAf,YAAAxO,EAA0B,QAAS,GAAI,EACxE,CAAE,MAAO,mBAAoB,MAAO,KAAK,IAAI,KAAK,aAAa2K,CAAM,EAAE,OAAO,WAAW6D,EAAe,KAAO,GAAG,CAAC,CAAC,EAAG,EACvH,CAAE,MAAO,MAAO,MAAO,KAAK,IAAI,KAAK,aAAa7D,EAAQ,CAAE,sBAAuB,CAAG,CAAA,EAAE,OAAO,WAAW6D,EAAe,KAAO,GAAG,CAAC,CAAC,EAAG,EACxI,CAAE,MAAO,MAAO,MAAO,GAAG,WAAWA,EAAe,KAAO,GAAG,EAAE,QAAQ,CAAC,CAAC,IAAK,EAC/E,CAAE,MAAO,0BAA2B,MAAO,KAAK,IAAI,KAAK,aAAa7D,CAAM,EAAE,OAAO,WAAW6D,EAAe,KAAO,GAAG,CAAC,CAAC,EAAG,CAAA,EAI9H,OAAAhc,EAAAA,IAAC,MAAgB,CAAA,GAAG,WAClB,SAAAA,EAAA,IAAC6O,GAAA,CACC,KAAK,WACL,MAAO,cAAcmN,EAAe,YAAY,GAChD,QAASC,EACT,KAAM,CACJ,KAAMxN,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,MACpC,EACA,UAAAM,EACA,aAAciN,EAAe,OAAA,CAAA,GAVvB9Y,CAYV,CAAA,CAEH,EAGG0W,GAAmB,OAAO,KAAKA,CAAe,EAAE,OAAS,EACvD5Z,EAAA,IAAC,MAAiB,CAAA,GAAG,SACnB,SAAAA,EAAA,IAAC6O,GAAA,CACC,KAAK,SACL,MAAO,gBAAgB+K,GAAA,YAAAA,EAAiB,aAAa,GACrD,QAAS4B,EACT,KAAM,CACJ,KAAM/M,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,MACpC,EACA,UAAAM,CAAA,CAAA,CATK,EAAA,QAYT,EAEA/O,EAAAA,IAAC,MAAI,CAAA,UAAU,YACf,SAAAsF,EAAAA,KAAC,UAAQ,CAAA,UAAU,SAAS,GAAG,SAC7B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAtF,EAAA,IAAC+I,GAAW,CAAA,MAAO,SAAU,OAAQ,SAAU,EAC9C/I,EAAA,IAAA,KAAA,CAAG,UAAU,wBAAwB,SAAiB,oBAAA,CAAA,EAEzD,EAECA,EAAA,IAAA,MAAA,CAAI,UAAU,yDAAyD,SAExE,uCAAA,CAAA,CAAA,CACF,CACA,CAAA,CAAA,EAIR,CACF,CAAA,CAAA,CAEJ,CC1YA,MAAMgF,GAAiC,gCACtC,SAASkX,IAAqB,cAE1BpO,GAAK,CAAA,UAAU,gBACd,SAACxI,EAAA,KAAA4I,GAAA,CAAY,UAAU,YACrB,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACtF,EAAAA,IAAAoO,GAAA,CAAS,UAAU,WAAW,EAC9BpO,EAAAA,IAAAoO,GAAS,CAAA,UAAU,cAAc,CAAA,EACpC,EAEC9I,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACtF,EAAAA,IAAAoO,GAAA,CAAS,UAAU,WAAW,EAC9BpO,EAAAA,IAAAoO,GAAS,CAAA,UAAU,cAAc,CAAA,EACpC,EAEC9I,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACtF,EAAAA,IAAAoO,GAAA,CAAS,UAAU,WAAW,EAC9BpO,EAAAA,IAAAoO,GAAS,CAAA,UAAU,cAAc,CAAA,EACpC,EAEC9I,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACtF,EAAAA,IAAAoO,GAAA,CAAS,UAAU,WAAW,EAC9BpO,EAAAA,IAAAoO,GAAS,CAAA,UAAU,cAAc,CAAA,EACpC,EAEC9I,EAAAA,KAAA,MAAI,CAAA,UAAU,6BACb,SAAA,CAACtF,EAAAA,IAAAoO,GAAA,CAAS,UAAU,YAAY,EAC/BpO,EAAAA,IAAAoO,GAAS,CAAA,UAAU,YAAY,CAAA,EAClC,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CAMA,SAAS+N,GAAW,CAAE,QAAAC,GAA4B,CAChD,KAAM,CAACC,EAAMC,CAAO,EAAI7c,WAAS,CAC/B,QAAS,GACT,YAAa,GACb,aAAc,GACd,MAAO,GACP,UAAW,GACX,SAAU,GACV,MAAO,EAAA,CACR,EAEK,CAAC8c,EAAaC,CAAc,EAAI/c,EAAA,SAA8C,CAAE,CAAA,EAChF,CAACgd,EAASC,CAAU,EAAIjd,WAAS,EAAK,EACtC,CAACkd,EAAYC,CAAa,EAAInd,WAAS,EAAK,EAC5C,CAAC4E,EAAQC,CAAS,EAAI7E,EAAA,SAAiC,CAAE,CAAA,EAE/DI,EAAAA,UAAU,IAAM,EACW,SAAY,CACnC6c,EAAW,EAAI,EACX,GAAA,CACI,MAAA3X,EAAW,MAAME,GAAM,IAAI,GAAGD,EAAO,wBAAwB,CAAC,gBAAiB,EAAK,CAAA,EACtFD,EAAS,MAAQA,EAAS,KAAK,aAClByX,EAAAzX,EAAS,KAAK,WAAW,QAEnCI,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,CAAA,QAClD,CACAuX,EAAW,EAAK,CAClB,CAAA,IAIJ,EAAG,CAAE,CAAA,EAEC,MAAAG,EAAgB/X,GAAqF,CACzG,KAAM,CAAE,KAAAgY,EAAM,MAAAtO,GAAU1J,EAAE,OAClBwX,EAACtS,IAAU,CAAE,GAAGA,EAAM,CAAC8S,CAAI,EAAGtO,CAAQ,EAAA,EAG1CnK,EAAOyY,CAAI,GACbxY,EAAW0F,GAAS,CACZ,MAAArF,EAAY,CAAE,GAAGqF,GACvB,cAAOrF,EAAUmY,CAAI,EACdnY,CAAA,CACR,CACH,EAGID,EAAe,IAAM,CACzB,MAAMC,EAAoC,CAAA,EAE1C,OAAK0X,EAAK,QAAQ,KAAK,MAAa,QAAU,uBACzCA,EAAK,MAAM,KAAK,MAAa,MAAQ,0BACrCA,EAAK,eAAc1X,EAAU,aAAe,8BAC5C0X,EAAK,YAAY,KAAK,MAAa,YAAc,2BACjDA,EAAK,UAAU,KAAK,MAAa,UAAY,0BAC7CA,EAAK,MAAM,OAEJ,eAAe,KAAKA,EAAK,KAAK,IACxC1X,EAAU,MAAQ,sCAFlBA,EAAU,MAAQ,oBAKpBL,EAAUK,CAAS,EACZ,OAAO,KAAKA,CAAS,EAAE,SAAW,CAAA,EAGrCE,EAAe,MAAOC,GAAuB,CAG7C,GAFJA,EAAE,eAAe,EAEb,EAACJ,IAIL,CAAAkY,EAAc,EAAI,EAEd,GAAA,EACe,MAAM3X,GAAM,KAAK,GAAGD,EAAO,0BAA2BqX,EAAK,CAAC,gBAAiB,EAAK,CAAA,GAEtF,KAAK,SACRD,UAEHjX,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EACrCb,EAAA,CACR,KAAM,8DAAA,CACP,CAAA,QACD,CACAsY,EAAc,EAAK,CACrB,EAAA,EAGF,OAAIH,QAECP,GAAmB,CAAA,CAAA,EAKrB5W,EAAA,KAAA,MAAI,CAAA,UAAU,gDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,2DACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,qDACZ,SAAA,CAACtF,EAAAA,IAAA+c,GAAA,CAAc,UAAU,eAAe,EAAE,yBAAA,EAE5C,EACC/c,EAAAA,IAAA,SAAO,CAAA,QAASoc,EAAS,UAAU,oDAClC,SAACpc,EAAAA,IAAAgd,GAAA,CAAE,UAAU,SAAA,CAAU,EACzB,CAAA,EACF,EAEC3Y,EAAO,MACLiB,OAAA,MAAA,CAAI,UAAU,4EACb,SAAA,CAACtF,EAAAA,IAAAid,GAAA,CAAY,UAAU,iDAAiD,EACvEjd,EAAA,IAAA,OAAA,CAAK,UAAU,uBAAwB,WAAO,KAAK,CAAA,EACtD,SAGD,OAAA,CAAK,SAAU6E,EAAc,UAAU,gBACtC,SAAA,CAACS,EAAAA,KAAA,MAAA,CAAI,UAAU,wCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,QAAC,QAAM,CAAA,UAAU,gDAAgD,QAAQ,UAAU,SAAA,CAAA,iBACxE,OAAA,CAAK,UAAU,eAAe,SAAC,IAAA,CAAA,EAC1C,EACCA,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,CAACtF,EAAAA,IAAA,OAAI,UAAU,uEACb,SAACA,MAAA+c,GAAc,CAAA,UAAU,yBAAyB,EACpD,EACA/c,EAAA,IAAC,QAAA,CACC,GAAG,UACH,KAAK,UACL,KAAK,OACL,MAAOqc,EAAK,QACZ,SAAUQ,EACV,UAAW,yCAAyCxY,EAAO,QAAU,2BAA6B,kBAAkB,oGACpH,YAAY,iCAAA,CACd,CAAA,EACF,EACCA,EAAO,SAAWrE,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,QAAQ,CAAA,EAC9E,SAEC,MACC,CAAA,SAAA,QAAC,QAAM,CAAA,UAAU,gDAAgD,QAAQ,QAAQ,SAAA,CAAA,oBACnE,OAAA,CAAK,UAAU,eAAe,SAAC,IAAA,CAAA,EAC7C,EACCsF,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,CAACtF,EAAAA,IAAA,OAAI,UAAU,uEACb,SAACA,MAAAkd,GAAS,CAAA,UAAU,yBAAyB,EAC/C,EACAld,EAAA,IAAC,QAAA,CACC,GAAG,QACH,KAAK,QACL,KAAK,OACL,MAAOqc,EAAK,MACZ,SAAUQ,EACV,UAAW,yCAAyCxY,EAAO,MAAQ,2BAA6B,kBAAkB,oGAClH,YAAY,iBAAA,CACd,CAAA,EACF,EACCA,EAAO,OAASrE,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,MAAM,CAAA,EAC1E,SAEC,MACC,CAAA,SAAA,QAAC,QAAM,CAAA,UAAU,gDAAgD,QAAQ,eAAe,SAAA,CAAA,oBAC1E,OAAA,CAAK,UAAU,eAAe,SAAC,IAAA,CAAA,EAC7C,EACCsF,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,CAACtF,EAAAA,IAAA,OAAI,UAAU,uEACb,SAACA,MAAAmd,GAAU,CAAA,UAAU,yBAAyB,EAChD,EACA7X,EAAA,KAAC,SAAA,CACC,GAAG,eACH,KAAK,eACL,MAAO+W,EAAK,aACZ,SAAUQ,EACV,UAAW,yCAAyCxY,EAAO,aAAe,2BAA6B,kBAAkB,0IACzH,MAAO,CACL,gBACE,iOACF,mBAAoB,sBACpB,eAAgB,aAClB,EAEA,SAAA,OAAC,SAAA,CAAO,MAAM,GAAG,SAAoB,uBAAA,EACpCkY,EAAY,IAAKa,GACfpd,EAAAA,IAAA,SAAA,CAAqB,MAAOod,GAAA,YAAAA,EAAM,GAChC,SAAAA,EAAK,IAAA,EADKA,EAAK,EAElB,CACD,CAAA,CAAA,CACH,CAAA,EACF,EACC/Y,EAAO,cAAgBrE,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,aAAa,CAAA,EACxF,CAAA,EACF,EAGCsF,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,QAAC,QAAM,CAAA,UAAU,gDAAgD,QAAQ,YAAY,SAAA,CAAA,oBACvE,OAAA,CAAK,UAAU,eAAe,SAAC,IAAA,CAAA,EAC7C,EACCA,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,CAACtF,EAAAA,IAAA,OAAI,UAAU,uEACb,SAACA,MAAAuF,GAAK,CAAA,UAAU,yBAAyB,EAC3C,EACAvF,EAAA,IAAC,QAAA,CACC,GAAG,YACH,KAAK,YACL,KAAK,OACL,MAAOqc,EAAK,UACZ,SAAUQ,EACV,UAAU,0JACV,YAAY,YAAA,CACd,CAAA,EAEF,EACCxY,EAAO,WAAarE,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,UAAU,CAAA,EAClF,SAEC,MACC,CAAA,SAAA,CAAAA,MAAC,QAAM,CAAA,UAAU,gDAAgD,QAAQ,WAAW,SAEpF,YAAA,EACAA,EAAA,IAAC,QAAA,CACC,GAAG,WACH,KAAK,WACL,KAAK,OACL,MAAOqc,EAAK,SACZ,SAAUQ,EACV,UAAU,oJACV,YAAY,WAAA,CACd,CAAA,EACF,CAAA,EACF,SAEC,MACC,CAAA,SAAA,QAAC,QAAM,CAAA,UAAU,gDAAgD,QAAQ,QAAQ,SAAA,CAAA,uBAChE,OAAA,CAAK,UAAU,eAAe,SAAC,IAAA,CAAA,EAChD,EACCvX,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,CAACtF,EAAAA,IAAA,OAAI,UAAU,uEACb,SAACA,MAAAwF,GAAK,CAAA,UAAU,yBAAyB,EAC3C,EACAxF,EAAA,IAAC,QAAA,CACC,GAAG,QACH,KAAK,QACL,KAAK,QACL,MAAOqc,EAAK,MACZ,SAAUQ,EACV,UAAW,yCAAyCxY,EAAO,MAAQ,2BAA6B,kBAAkB,oGAClH,YAAY,wBAAA,CACd,CAAA,EACF,EACCA,EAAO,OAASrE,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,MAAM,EACvEA,EAAAA,IAAA,OAAI,UAAU,wBACf,eAAC,MAAI,CAAA,UAAU,gCAAgC,SAAA,uDAAA,CAAqD,EACtG,CAAA,EACA,CAAA,EAGF,CAAA,EACF,SAGC,MACC,CAAA,SAAA,QAAC,QAAM,CAAA,UAAU,gDAAgD,QAAQ,cAAc,SAAA,CAAA,qBACxE,OAAA,CAAK,UAAU,eAAe,SAAC,IAAA,CAAA,EAC9C,EACAA,EAAA,IAAC,WAAA,CACC,GAAG,cACH,KAAK,cACL,MAAOqc,EAAK,YACZ,SAAUQ,EACV,KAAM,EACN,UAAW,mCAAmCxY,EAAO,YAAc,2BAA6B,kBAAkB,oGAClH,YAAY,mFAAA,CACd,EACCA,EAAO,aAAerE,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,YAAY,CAAA,EACtF,EAGCsF,EAAAA,KAAA,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAtF,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAU2c,EACV,UAAW,uKACTA,EAAa,gCAAkC,EACjD,GAEC,SACCA,EAAArX,OAAC,OAAK,CAAA,UAAU,yCACd,SAAA,CAACtF,EAAAA,IAAAqd,GAAA,CAAQ,UAAU,uBAAuB,EAAE,eAAA,CAE9C,CAAA,EAEA/X,EAAAA,KAAC,OAAK,CAAA,UAAU,yCACd,SAAA,CAACtF,EAAAA,IAAAsd,GAAA,CAAK,UAAU,UAAU,EAAE,eAAA,EAE9B,CAAA,CAEJ,EACAtd,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAASoc,EACT,UAAU,6LACX,SAAA,QAAA,CAED,CAAA,EACF,CAAA,EACF,GACF,CAEJ,CClWA,MAAMmB,GAAgB,IAAM,CAC1B,KAAM,CAACC,EAAaC,CAAc,EAAIhe,WAAS,EAAK,EAEpD,OAEI6F,EAAA,KAAAwG,WAAA,CAAA,SAAA,CAAA9L,EAAA,IAAC,SAAA,CACC,QAAS,IAAMyd,EAAe,EAAI,EAClC,UAAU,mKAEV,SAAAzd,EAAAA,IAAC0d,GAAU,CAAA,UAAU,mCAAoC,CAAA,CAAA,CAC3D,EAECF,GACExd,EAAAA,IAAA,MAAA,CAAI,UAAU,iFACb,eAAC,MAAI,CAAA,UAAU,+EAEX,SAAAA,EAAAA,IAACmc,IAAW,QAAS,IAAMsB,EAAe,EAAK,CAAA,CAAG,CAEtD,CAAA,EACF,CAEJ,CAAA,CAAA,CAEJ,ECtBME,GAA+B,IAEjCrY,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAtF,EAAA,IAACkJ,GAAmB,EAAA,EACpB5D,EAAAA,KAAC,MAAI,CAAA,UAAU,gCACb,SAAA,CAAAtF,EAAA,IAACwZ,GAAU,EAAA,QACb+D,GAAc,EAAA,CAAA,EACd,CACF,CAAA,CAAA,ECPEK,GAASC,GAETC,GAAgBC,GAEhBC,GAAeC,GAIfC,GAAgBzd,EAGpB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAACme,GAAA,CACC,IAAAtd,EACA,UAAWT,GACT,0JACAM,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDsd,GAAc,YAAcC,GAAwB,YAEpD,MAAMC,GAAgB3d,EAGpB,WAAA,CAAC,CAAE,UAAAC,EAAW,SAAApB,EAAU,GAAGsB,CAAM,EAAGC,IACpCyE,EAAAA,KAAC0Y,GACC,CAAA,SAAA,CAAAhe,EAAA,IAACke,GAAc,EAAA,EACf5Y,EAAA,KAAC+Y,GAAA,CACC,IAAAxd,EACA,UAAWT,GACT,8fACAM,CACF,EACC,GAAGE,EAEH,SAAA,CAAAtB,EACAgG,EAAAA,KAAAgZ,GAAA,CAAsB,UAAU,gRAC/B,SAAA,CAACte,EAAAA,IAAAwG,GAAA,CAAW,UAAU,SAAU,CAAA,EAC/BxG,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAK,QAAA,CAAA,EACjC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CACD,EACDoe,GAAc,YAAcC,GAAwB,YAEpD,MAAME,GAAe,CAAC,CACpB,UAAA7d,EACA,GAAGE,CACL,IACEZ,EAAA,IAAC,MAAA,CACC,UAAWI,GACT,qDACAM,CACF,EACC,GAAGE,CAAA,CACN,EAEF2d,GAAa,YAAc,eAgB3B,MAAMC,GAAc/d,EAGlB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAACye,GAAA,CACC,IAAA5d,EACA,UAAWT,GACT,oDACAM,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACD4d,GAAY,YAAcC,GAAsB,YAEhD,MAAMC,GAAoBje,EAGxB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC2e,GAAA,CACC,IAAA9d,EACA,UAAWT,GAAG,gCAAiCM,CAAS,EACvD,GAAGE,CAAA,CACN,CACD,EACD8d,GAAkB,YAAcC,GAA4B,YCpG5D,SAAwBC,IAAsB,CAC5C,KAAM,CAACC,EAAWC,CAAY,EAAIrf,WAAS,EAAE,EACvCuF,EAAgC,gCAEhC+Z,EAAqB,SAAY,CACjC,GAAA,CACF,MAAMha,EAAW,MAAME,GAAM,KAAK,GAAGD,CAAO,oBAAqB,CAAE,KAAM6Z,CAAU,EAAG,CAAE,gBAAiB,EAAM,CAAA,EAC3G,GAAA9Z,EAAS,KAAK,QAAS,CACnB,KAAA,CAAE,QAAAM,CAAQ,EAAIN,EAAS,KACrB,QAAA,IAAI,8BAA+BM,CAAO,EAClD,OAAO,SAAS,KAAOA,CAAA,MAEvB,QAAQ,MAAM,gCAAgC,QAEzCF,EAAO,CACN,QAAA,MAAM,kCAAmCA,CAAK,CACxD,CAAA,EAKA,OAACG,EAAA,KAAA,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAtF,EAAA,IAACQ,GAAA,CACC,KAAK,OACL,YAAY,gCACZ,MAAOqe,EACP,SAAW/Z,GAAMga,EAAaha,EAAE,OAAO,KAAK,CAAA,CAC9C,EACC9E,EAAAA,IAAAgB,GAAO,UAAU,SAAS,QAAS+d,EAAoB,SAAU,CAACF,EAAW,SAE9E,kBAAA,CAAA,GACF,CAEJ,CCEA,SAAwBG,GAA0B,CAChD,SAAAC,EACA,UAAAC,EACA,YAAAC,EACA,SAAAC,CACF,EAAmC,OACjC,KAAM,CAACC,EAAYC,CAAa,EAAI7f,WAAS,EAAE,EACzC,CAAC8f,EAAmBC,CAAoB,EAAI/f,EAAA,SAA6B,CAAE,CAAA,EAC3E,CAACggB,EAAyBC,CAA0B,EAAIjgB,EAAA,SAAmC,CAAE,CAAA,EAC7F,CAACkgB,EAAqBC,CAAsB,EAAIngB,EAAA,SAA+B,CAAE,CAAA,EACjF,CAACogB,EAAiBC,CAAkB,EAAIrgB,WAAS,EAAK,EACtD,CAACgd,EAASC,CAAU,EAAIjd,WAAS,EAAK,EACtCuF,EAAiC,gCAEjCzF,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAE9DtC,EAAAA,UAAU,IAAM,CACd,MAAMkgB,EAAyB,SAAY,OACzCrD,EAAW,EAAI,EACX,GAAA,CACF,MAAMvC,EAAS5a,GAAA,YAAAA,EAAM,GACfwF,EAAW,MAAME,GAAM,KAC3B,GAAGD,CAAO,6BACV,CAAE,OAAAmV,CAAO,EACT,CAAE,gBAAiB,EAAK,CAAA,EAGtBpV,EAAS,SAAW,KACtB+a,EAAmB,EAAK,EACxBN,GACEnU,EAAAtG,EAAS,OAAT,YAAAsG,EAAe,eAAe,OAAQgQ,GAA8B,CAACA,EAAQ,OAAM,GAG7E,QAAA,IAAI,0BAA2BtW,EAAS,MAAM,QAEjDI,EAAO,CACd6a,EAAY7a,CAAK,CAAA,QACjB,CACAuX,EAAW,EAAK,CAClB,CAAA,EAGIuD,EAA+B,SAAY,CAC/CvD,EAAW,EAAI,EACX,GAAA,CACF,MAAMvC,EAAS5a,GAAA,YAAAA,EAAM,GACfwF,EAAW,MAAME,GAAM,KAC3B,GAAGD,CAAO,6BACV,CAAE,OAAAmV,CAAO,EACT,CAAE,gBAAiB,EAAK,CAAA,EAGtBpV,EAAS,SAAW,KACtB+a,EAAmB,EAAK,EACxBJ,EAA2B3a,EAAS,KAAK,gBAAkB,CAAE,CAAA,GAErD,QAAA,IAAI,0BAA2BA,EAAS,MAAM,QAEjDI,EAAO,CACd6a,EAAY7a,CAAK,CAAA,QACjB,CACAuX,EAAW,EAAK,CAClB,CAAA,EAGIwD,EAA2B,SAAY,CAC3CxD,EAAW,EAAI,EACX,GAAA,CACF,MAAMvC,EAAS5a,GAAA,YAAAA,EAAM,GACfwF,EAAW,MAAME,GAAM,KAC3B,GAAGD,CAAO,4BACV,CAAE,OAAAmV,CAAO,EACT,CAAE,gBAAiB,EAAK,CAAA,EAG1ByF,EAAuB7a,EAAS,KAAK,YAAc,CAAE,CAAA,QAC9CI,EAAO,CACd6a,EAAY7a,CAAK,CAAA,QACjB,CACAuX,EAAW,EAAK,CAClB,CAAA,EAGEuC,EAAS,YAAA,IAAkB,cAAqCc,EAAA,EAChEd,EAAS,YAAA,IAAkB,oBAAiDgB,EAAA,EAC5EhB,EAAS,YAAA,IAAkB,YAAqCiB,EAAA,CAAA,EACnE,CAACjB,EAAU1f,CAAI,CAAC,EAEb,MAAAygB,EAAe7a,GAAe,OAE9B,GAAAF,GAAM,aAAaE,CAAK,EAAG,CAC7B,MAAMgb,EAAahb,EACb,CAAE,SAAAJ,EAAU,QAAAqb,CAAY,EAAAD,EAG9B,GAAIpb,EAAU,CACZ,KAAM,CAAE,OAAAsb,EAAQ,KAAAC,EAAM,OAAAC,CAAA,EAAWxb,EAC3Byb,IAAOnV,EAAAiV,GAAA,YAAAA,EAAM,QAAN,YAAAjV,EAAa,QAAQiV,GAAA,YAAAA,EAAM,MAgBxC,GAbmB,CACjB,IACA,IACA,kBACA,gBACA,qBAAA,EAI6B,KAC7BG,GAAYJ,IAAWI,GAAYD,IAASC,CAAA,EAG7B,CACP,QAAA,MAAM,wBAAyB,CAAE,OAAAJ,EAAQ,KAAAG,EAAM,QAASF,GAAA,YAAAA,EAAM,QAAS,EAC/ER,EAAmB,EAAI,EACvB,MACF,CAGA,GAAIQ,GAAA,MAAAA,EAAM,QAAUA,EAAK,OAAO,OAAS,EAAG,CAEpC,MAAAI,EADiBJ,EAAK,OAAO,CAAC,EACS,SAAW,uBAgBxD,GAdQ,QAAA,MAAM,wBAAyBI,CAAqB,EASlCA,GAND,CACvB,uCACA,6CACA,4BAAA,EAIiB,SACfA,EAAsB,YAAA,EAAc,SAASC,GAAQ,aAAa,CAAA,EAG/C,CACrBb,EAAmB,EAAI,EACvB,MACF,CACF,CAGA,QAAQ,MAAM,gBAAiB,CAC7B,OAAAO,EACA,IAAKE,GAAA,YAAAA,EAAQ,IACb,OAAQA,GAAA,YAAAA,EAAQ,MAAA,CACjB,EACDT,EAAmB,EAAI,OAIhBM,GACC,QAAA,MAAM,wBAAyBA,CAAO,EAC9CN,EAAmB,EAAI,IAIf,QAAA,MAAM,uBAAwBK,EAAW,OAAO,EACxDL,EAAmB,EAAI,EACzB,MAIQ,QAAA,MAAM,oBAAqB3a,CAAK,EACxC2a,EAAmB,EAAI,CACzB,EAIIc,EAAmB,IACnB3B,EAAS,YAAY,IAAM,aACzB,CAACM,GAAqBA,EAAkB,SAAW,EAC9C,KAEFA,EAAkB,OAAQlE,GAC/BA,EAAQ,KAAK,YAAc,EAAA,SAASgE,EAAW,aAAa,CAAA,EAErDJ,EAAS,YAAY,IAAM,mBAChC,CAACQ,GAA2BA,EAAwB,SAAW,EAC1D,KAEFA,EAAwB,OAAQpE,GACrCA,EAAQ,aAAa,YAAc,EAAA,SAASgE,EAAW,aAAa,CAAA,EAE7DJ,EAAS,YAAY,IAAM,WAChC,CAACU,GAAuBA,EAAoB,SAAW,EAClD,KAEFA,EAAoB,OAAQtE,GACjCA,EAAQ,OAAO,YAAc,EAAA,SAASgE,EAAW,aAAa,CAAA,EAGzD,GAILwB,EAAiBxF,GAA4E,CAC7F,IAAAyF,EACAC,EACAC,EAEA,aAAc3F,GAChByF,EAAYzF,EAAQ,SACpB2F,EAAY3F,EAAQ,UAGpB0F,EAAcC,EACV,GAAG3F,EAAQ,IAAI,KAAKyF,CAAS,IAAIE,CAAS,IAC1C,GAAG3F,EAAQ,IAAI,KAAKyF,CAAS,KACxB,eAAgBzF,GACzByF,EAAYzF,EAAQ,WACpB0F,EAAc,GAAG1F,EAAQ,YAAY,KAAKyF,CAAS,KAC1C,OAAQzF,GACjByF,EAAYzF,EAAQ,GACN0F,EAAA,GAAG1F,EAAQ,MAAM,KAEnByF,EAAA,GACEC,EAAA,IAGN7B,EAAAD,EAAU8B,EAAaD,EAAWE,CAAS,CAAA,EAGjD5b,EAAoB,SAAY,CAChC,GAAA,CACI,MAAAL,EAAW,MAAME,GAAM,IAAI,GAAGD,CAAO,sCAAuC,CAAE,gBAAiB,EAAM,CAAA,EACrG,CAAE,QAAAK,CAAQ,EAAIN,EAAS,KAE7B,OAAO,SAAS,KAAOM,QAChBF,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,CACvD,CAAA,EAGI8b,EAAgB,SAAY,CAC5B,GAAA,CACI,MAAAlc,EAAW,MAAME,GAAM,IAAI,GAAGD,CAAO,qBAAsB,CAAE,gBAAiB,EAAM,CAAA,EACtFD,EAAS,KAAK,QACT,OAAA,SAAS,KAAOA,EAAS,KAAK,QAErC,QAAQ,MAAM,iCAAiC,QAE1CI,EAAO,CACN,QAAA,MAAM,mCAAoCA,CAAK,CACzD,CAAA,EAGF,OACEsX,EAAWzc,EAAAA,IAAA,MAAA,CAAI,SAAU,aAAA,oBAEpB,SACC6f,EAAAva,EAAA,KAACtE,EAAA,CACC,KAAK,KACL,QAASie,EAAS,YAAY,IAAM,WAAagC,EAAgB7b,EACjE,UAAU,wFAET,SAAA,CAAS6Z,EAAA,YAAY,IAAM,cAExB3Z,EAAAA,KAAAwG,EAAAA,SAAA,CAAA,SAAA,OAAC/C,GAAW,CAAA,OAAO,OAAO,MAAM,OAAO,EAAE,oCAAA,EAE3C,EAEDkW,EAAS,YAAY,IAAM,oBAExB3Z,EAAAA,KAAAwG,EAAAA,SAAA,CAAA,SAAA,OAACpD,GAAQ,CAAA,OAAO,OAAO,MAAM,OAAO,EAAE,6BAAA,EAExC,EAEDuW,EAAS,YAAY,IAAM,YAExB3Z,EAAAA,KAAAwG,EAAAA,SAAA,CAAA,SAAA,OAAChD,GAAa,CAAA,OAAO,OAAO,MAAM,OAAO,EAAE,kCAAA,EAE7C,CAAA,CAAA,CAEJ,EAIExD,OAAAwG,EAAAA,SAAA,CAAA,SAAA,CAACxG,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACtF,EAAAA,IAAAkhB,GAAA,CAAO,UAAU,mEAAmE,EACrFlhB,EAAA,IAACQ,GAAA,CACC,KAAK,OACL,YAAY,qBACZ,UAAU,QACV,MAAO6e,EACP,SAAWva,GAAMwa,EAAcxa,EAAE,OAAO,KAAK,CAAA,CAC/C,CAAA,EACF,EACA9E,MAAC,OAAI,UAAU,6BACZ,cAAiB,kBAAG,IAAKqb,GAAY,CAE9B,MAAA8F,EAAclC,EAAS,YAAA,IAAkB,aACzCmC,EAAanC,EAAS,YAAA,IAAkB,WAGxC6B,EAAYK,EACb9F,EAA6B,SAC9B+F,EACG/F,EAA+B,GAC/BA,EAAmC,WAEpC2F,EAAYG,EACb9F,EAA6B,UAC9B,OAEEgG,EAAcF,EACf9F,EAA6B,KAC9B+F,EACG/F,EAA+B,OAC/BA,EAAmC,aAEpCiG,EAAeH,EAClBnhB,EAAA,IAAA+I,GAAA,CAAW,OAAO,OAAO,MAAM,MAAO,CAAA,EACrCqY,EACDphB,EAAAA,IAAA8I,IAAa,OAAO,OAAO,MAAM,MAAO,CAAA,QAExCJ,GAAQ,CAAA,OAAO,OAAO,MAAM,MAAO,CAAA,EAIhC6Y,EAAcJ,GAAeH,EAC/B,GAAGK,CAAW,KAAKP,CAAS,IAAIE,CAAS,IACzCI,EACE,GAAGC,CAAW,GACd,GAAGA,CAAW,KAAKP,CAAS,IAGhC,OAAAxb,EAAA,KAAC,MAAA,CAEC,UAAU,iEAEV,SAAA,CAAAtF,MAAC,OACC,CAAA,gBAAC,MAAI,CAAA,UAAU,mCACZ,SAAA,CAAAshB,EACAC,CAAA,CAAA,CACH,CAAA,CACF,EACCjc,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACZ,SAAA,CAAA6Z,GAAeC,GACd9Z,EAAA,KAACtE,EAAA,CACC,KAAK,KACL,QAAQ,cACR,QAAS,IAAMoe,EACbH,EACA6B,EACA7B,EAAS,YAAkB,IAAA,aAAe+B,EAAY,MACxD,EACA,UAAU,oBAEV,SAAA,CAAChhB,EAAAA,IAAAgd,GAAA,CAAE,UAAU,eAAe,EAAE,SAAA,CAAA,CAChC,EAEF1X,EAAA,KAACtE,EAAA,CACC,KAAK,KACL,QAAS,IAAM6f,EAAcxF,CAAO,EACpC,SAAU8D,EAAY,SAAS2B,CAAS,EACxC,UAAW3B,EAAY,SAAS2B,CAAS,EAAI,eAAiB,cAE7D,SAAA,CAAA3B,EAAY,SAAS2B,CAAS,SAAMU,GAAA,CAAM,UAAU,eAAe,EACnErC,EAAY,SAAS2B,CAAS,EAAI,YAAc,SAAA,CAAA,CACnD,CAAA,EACF,CAAA,CAAA,EAjCK,GAAG7B,CAAQ,IAAI6B,CAAS,IAAIE,GAAa,EAAE,EAAA,CAoCrD,GACH,CAAA,EACF,CAAA,CAEJ,CAGN,CC5YA,MAAMS,GAAY,CAChB,CAAE,KAAM,UAAW,MAAO,gBAAiB,KAAM5Y,GAAa,UAAW,mBAAoB,UAAW,mBAAoB,YAAa,+BAAgC,EACzK,CAAE,KAAM,WAAY,MAAO,aAAc,KAAMC,GAAc,UAAW,gBAAiB,UAAW,gBAAiB,YAAa,uBAAwB,EAC1J,CAAE,KAAM,aAAc,MAAO,aAAc,KAAMC,GAAY,UAAW,gBAAiB,UAAW,gBAAiB,YAAa,sBAAuB,EACzJ,CAAE,KAAM,mBAAoB,MAAO,eAAgB,KAAML,GAAS,UAAW,kBAAmB,UAAW,kBAAmB,YAAa,uBAAwB,CACrK,EAEMgZ,GAAQ,CAAC,gBAAiB,uBAAwB,QAAQ,EAEhE,SAAwBC,IAAa,CACnC,KAAM,CAACC,EAAaC,CAAc,EAAIpiB,WAAS,CAAC,EAC1C,CAACqiB,EAAWC,CAAY,EAAItiB,WAAwB,IAAI,EACxD,CAACuiB,EAAmBC,CAAoB,EAAIxiB,EAAA,SAAmC,CAAE,CAAA,EACjF,CAACyiB,EAAWC,CAAY,EAAI1iB,WAAS,EAAE,EACvC,CAAC2iB,EAAWC,CAAY,EAAI5iB,WAAsB,IAAI,EACtD,CAAC6iB,EAAsBC,CAAuB,EAAI9iB,EAAA,SAGnD,CAAE,CAAA,EACD,CAAC+iB,EAAOC,CAAQ,EAAIhjB,WAAiB,EAAE,EACvC,CAACijB,EAAQC,CAAS,EAAIljB,EAAA,SAAmB,CAAE,CAAA,EAC3C,CAACmjB,EAAMC,CAAO,EAAIpjB,WAAiB,EAAE,EACrC,CAACqjB,EAAoBC,CAAqB,EAAItjB,WAAS,EAAE,EACzD,CAAE,MAAA4C,GAAUS,KACZkC,EAAiC,gCACjCzF,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxDgC,EAAWC,KACXnC,EAAWuC,KAEjB3E,EAAAA,UAAU,IAAM,CACd,MAAMmjB,EAAS,IAAI,gBAAgB,OAAO,SAAS,MAAM,EACnDC,EAAcD,EAAO,IAAI,cAAc,EACvCE,EAAWF,EAAO,IAAI,WAAW,EAEnCC,GAAeC,IACjBH,EAAsBE,CAAW,EACjCJ,EAAQK,CAAQ,EAChBjB,EAA8BjY,IAAA,CAC5B,GAAGA,EACH,QAAS,CAACkZ,CAAQ,CAClB,EAAA,EAEN,EAAG,CAAE,CAAA,EAEL,MAAMrC,EAAgB,CACpB5B,EACA5D,EACAyF,EACAE,IACG,CAEHiB,EAA8BjY,IAAA,CAC5B,GAAGA,EACH,CAACiV,CAAQ,EAAG,CAAC,GAAIjV,EAAKiV,CAAQ,GAAK,CAAC,EAAI5D,CAAO,CAC/C,EAAA,EAGE4D,EAAS,YAAY,IAAM,aAE7BsD,EAAgCvY,GAAA,CAC9B,GAAGA,EACH,CACE,SAAW8W,EACX,UAAAE,CACF,CAAA,CACD,EACQ/B,EAAS,YAAY,IAAM,mBACpCwD,EAAS3B,CAAS,EACT7B,EAAS,YAAY,IAAM,YACpC0D,EAAkB3Y,GAAA,CAAC,GAAGA,EAAM8W,CAAS,CAAC,EAGlCze,EAAA,CAAE,YAAa,0BAA0BgZ,CAAO,OAAO4D,CAAQ,GAAI,QAAS,SAAW,CAAA,CAAA,EAIzFkE,EAAoBC,GAA+C,OACvE,MAAMC,GAAOhY,EAAA+X,EAAM,OAAO,QAAb,YAAA/X,EAAqB,GAC9BgY,IACFhB,EAAagB,CAAI,EACjBhhB,EAAM,CAAE,YAAa,6BAA8B,QAAS,SAAW,CAAA,EACzE,EAGIihB,EAAerE,GAAqB,OACxC,SAAQ5T,EAAA2W,EAAkB/C,CAAQ,IAA1B,YAAA5T,EAA6B,SAAU,GAAK,CAAA,EAGhDkY,EAAkBC,GAAiC,CAC/C,OAAAA,EAAa,YAAe,EAAA,CAClC,IAAK,aACI,OAAAlB,EAAqB,IAAImB,GAAQA,EAAK,QAAQ,EAAE,KAAK,GAAG,EACjE,IAAK,mBACI,OAAAjB,EACT,IAAK,WACI,OAAAE,EAAO,KAAK,GAAG,EACxB,QACS,MAAA,EACX,CAAA,EAGIgB,EAAa,IAAM,CACvB,OAAQ9B,EAAa,CACnB,IAAK,GACH,MAAO,CAAC,CAACM,GAAa,CAAC,CAACE,EAC1B,IAAK,GACH,OAAO,OAAO,KAAKJ,CAAiB,EAAE,OAAS,EACjD,QACS,MAAA,EACX,CAAA,EAGInd,EAAe,SAAY,CAC/B,GAAI,CAACqd,GAAa,OAAO,KAAKF,CAAiB,EAAE,SAAW,EAC1D,OAAO3f,EAAM,CAAE,YAAa,gDAAiD,QAAS,cAAe,EAGvG,MAAMshB,EAAU,CACd,KAAMzB,EACN,QAASE,GAAa,GACtB,gBAAiBE,EAAqB,IAAmBsB,IAAA,CACvD,SAAUA,EAAW,SACrB,UAAWA,EAAW,WAAa,EAAA,EACnC,EACF,WAAY,CAAE,WAAYpB,GAAS,EAAG,EACtC,aAAcE,EAAO,IAAK5B,GAAcA,CAAS,EACjD,eAAgB,CAAE,SAAU8B,GAAQ,GAAI,mBAAoBE,GAAsB,EAAG,CAAA,EAGnF,GAAA,CAQI,MAAAe,GANgB,MAAM5e,GAAM,KAChC,GAAGD,CAAO,kBACV2e,EACA,CAAE,gBAAiB,EAAK,CAAA,GAGO,KAAK,MAAM,IAGxCpkB,GACF,MAAM0F,GAAM,KACV,GAAGD,CAAO,uBACV,CACE,OAAQzF,GAAA,YAAAA,EAAM,GACd,QAASskB,CACX,EACA,CAAE,gBAAiB,EAAK,CAAA,EAK5B,MAAMC,EAAcvkB,EAAO,CACzB,GAAGA,EACH,OAAQ,CAAC,GAAGA,EAAK,OAAQskB,CAAU,CACjC,EAAA,KAEAC,IACF,QAAQ,IAAIA,CAAW,EACd7hB,EAAAzC,GAAQskB,CAAW,CAAC,EACrB,QAAA,IAAI,2BAA2BvkB,CAAI,EAC3C4E,EAAS,YAAY,GAGvB9B,EAAM,CAAE,YAAa,sCAAuC,QAAS,SAAW,CAAA,QAEzE8C,EAAO,CACd,QAAQ,MAAMA,CAAK,EACnB9C,EAAM,CAAE,YAAa,0CAA2C,QAAS,aAAe,CAAA,CAC1F,CAAA,EAII0hB,EAAoB,IAAM,CAC9B,OAAQnC,EAAa,CACnB,IAAK,GAED,OAACtc,EAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,OAAC/D,GAAA,CAAM,UAAU,0CAA0C,SAAU,aAAA,EACrEvB,EAAA,IAACQ,GAAA,CACC,YAAY,wBACZ,MAAO0hB,EACP,SAAWpd,GAAMqd,EAAard,EAAE,OAAO,KAAK,EAC5C,UAAU,QAAA,CACZ,CAAA,EACF,EAECQ,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,OAAC/D,GAAA,CAAM,UAAU,0CAA0C,SAAU,aAAA,EACpE+D,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAtF,EAAA,IAACQ,GAAA,CACC,GAAG,YACH,KAAK,OACL,OAAO,UACP,SAAU2iB,EACV,UAAU,QAAA,CACZ,EACA7d,EAAA,KAACtE,EAAA,CACC,QAAQ,UACR,UAAU,SACV,QAAS,IAAA,OAAM,OAAAqK,EAAA,SAAS,eAAe,WAAW,IAAnC,YAAAA,EAAsC,SAErD,SAAA,CAACrL,EAAAA,IAAAgkB,GAAA,CAAO,UAAU,eAAe,EAChC5B,EAAY,cAAgB,aAAA,CAAA,CAC/B,EACCA,GACE9c,EAAA,KAAA,MAAI,CAAA,UAAU,0DACb,SAAA,CAACtF,EAAAA,IAAAwhB,GAAA,CAAM,UAAU,yBAAyB,EACzCxhB,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAyB,WAAU,KAAK,CAAA,EAC1D,CAAA,EAEJ,CAAA,EACF,GACF,EAEJ,IAAK,gBAEA,MAAI,CAAA,UAAU,wCACZ,SAAUyhB,GAAA,IAAKxC,GACd3Z,EAAA,KAACsY,GAAA,CAEC,KAAMkE,IAAc7C,EAAS,KAC7B,aAAe1S,GAAWwV,EAAaxV,EAAS0S,EAAS,KAAO,IAAI,EAEpE,SAAA,CAACjf,EAAAA,IAAA8d,GAAA,CAAc,QAAO,GACpB,SAAA9d,EAAA,IAAC,SAAA,CACC,UAAW,iCAAiCif,EAAS,KAAK,WAAWA,EAAS,SAAS,kDAEvF,SAAC3Z,EAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAtF,EAAA,IAACif,EAAS,KAAT,CAAc,MAAM,OAAO,OAAO,OAAO,EACzC3Z,EAAAA,KAAA,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAtF,EAAAA,IAAC,MAAG,UAAW,iBAAiBif,EAAS,SAAS,GAAK,WAAS,IAAA,CAAK,EACpEjf,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA8B,WAAS,YAAY,CAAA,EAClE,EACCsjB,EAAYrE,EAAS,IAAI,EACvBjf,EAAA,IAAAwhB,GAAA,CAAM,UAAU,wBAAyB,CAAA,EAEzCxhB,EAAAA,IAAAkL,GAAa,CAAA,UAAU,wBAAwB,CAAA,EAEpD,CAAA,CAAA,EAEJ,EACC5F,EAAAA,KAAA8Y,GAAc,CAAA,UAAU,mBACvB,SAAA,CAAA9Y,OAACiZ,GACC,CAAA,SAAA,CAAAjZ,OAACkZ,GAAY,CAAA,SAAA,CAAA,cAAYS,EAAS,IAAA,EAAK,QACtCP,GACE,CAAA,SAAAO,EAAS,OAAS,UACf,sDACA,gDACN,CAAA,EACF,EACCA,EAAS,OAAS,gBAChBL,IAAoB,CAAA,EAErB5e,EAAA,IAACgf,GAAA,CACC,SAAUC,EAAS,KACnB,UAAW4B,EACX,YAAa0C,EAAetE,EAAS,IAAI,CAAA,CAC3C,CAAA,EAEJ,CAAA,CAAA,EAxCKA,EAAS,IA0CjB,CAAA,CACH,CAAA,EAEJ,IAAK,GAED,OAAC3Z,EAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,OAAC,KAAA,CAAG,UAAU,4BAA4B,SAAa,gBAAA,EACtDA,EAAAA,KAAA,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAI,OAAA,QACnC,OAAA,CAAK,UAAU,cAAe,SAAU4c,EAAA,CAAA,EAC3C,EACC5c,EAAAA,KAAA,MAAI,CAAA,UAAU,uBACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAI,OAAA,EACnCtF,EAAA,IAAA,OAAA,CAAK,UAAU,cAAe,0BAAW,KAAK,CAAA,EACjD,CAAA,EACF,CAAA,EACF,EAECsF,EAAAA,KAAA,MAAI,CAAA,UAAU,4BACb,SAAA,OAAC,KAAA,CAAG,UAAU,4BAA4B,SAAmB,sBAAA,QAC5D,MAAI,CAAA,UAAU,iBACZ,SAAA,OAAO,QAAQ0c,CAAiB,EAAE,IAAI,CAAC,CAAC/C,EAAUgF,CAAQ,WACxD,MAAA,CAAmB,UAAU,uBAC5B,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAiB,SAAShF,EAAA,QACzC,OAAK,CAAA,UAAU,cAAe,SAASgF,EAAA,KAAK,IAAI,EAAE,CAAA,GAF3ChF,CAGV,CACD,EACH,CAAA,EACF,GACF,CAEN,CAAA,eAICnR,GAAK,CAAA,UAAU,oBACd,SAACxI,EAAA,KAAA4I,GAAA,CAAY,UAAU,MACrB,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACtF,EAAAA,IAAA,OAAI,UAAU,iCACb,SAACA,MAAAkkB,GAAU,CAAA,UAAU,uBAAuB,EAC9C,SACC,MACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,mCAAmC,SAAW,cAAA,QAC3D,IAAA,CAAE,UAAU,gBAAgB,SAA6C,gDAAA,CAAA,EAC5E,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,OACb,SAAAlkB,MAAC,OAAI,UAAU,yCACZ,SAAM0hB,GAAA,IAAI,CAACyC,EAAMjhB,WACf,MAAA,CAAe,UAAU,oBACxB,SAAA,CAAClD,EAAAA,IAAA,OAAI,UAAW,yDAAyDkD,GAAS0e,EAAc,wBAA0B,2BAA2B,GAClJ,SAAA1e,EAAQ0e,EACN5hB,EAAA,IAAAwhB,GAAA,CAAM,UAAU,SAAU,CAAA,EAE1BxhB,EAAAA,IAAA,OAAM,CAAA,SAAAkD,EAAQ,CAAA,CAAE,CAAA,CAErB,EACClD,EAAAA,IAAA,QAAK,UAAW,QAAQkD,GAAS0e,EAAc,gBAAkB,eAAe,GAC9E,SACHuC,CAAA,CAAA,EACCjhB,EAAQwe,GAAM,OAAS,SACrB,MAAA,CAAI,UAAW,mBAAmBxe,EAAQ0e,EAAc,aAAe,aAAa,GAAI,IAZnFuC,CAcV,CACD,CACH,CAAA,EACF,EAECJ,EAAkB,EAElBze,EAAAA,KAAA,MAAI,CAAA,UAAU,4BACZ,SAAA,CAAAsc,EAAc,GACb5hB,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,QAAS,IAAM6gB,EAAeuC,GAAWA,EAAU,CAAC,EACrD,SAAA,MAAA,CAED,EAEFpkB,EAAA,IAACgB,EAAA,CACC,UAAU,UACV,SAAU,CAAC0iB,EAAW,EACtB,QAAS,IAAM,CACT9B,IAAgBF,GAAM,OAAS,EACpB7c,IAEEgd,EAAAuC,GAAWA,EAAU,CAAC,CAEzC,EAEC,SAAgBxC,IAAAF,GAAM,OAAS,EAC5Bpc,OAAAwG,EAAAA,SAAA,CAAA,SAAA,CAAA,iBAEC9L,EAAAA,IAAAwhB,GAAM,CAAA,UAAU,eAAe,GAClC,EAEElc,EAAAA,KAAAwG,EAAA,SAAA,CAAA,SAAA,CAAA,WAEC9L,EAAAA,IAAAqkB,GAAW,CAAA,UAAU,eAAe,CAAA,EACvC,CAAA,CAEJ,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CC/XA,SAAwBC,IAAsB,CAC5C,MAAM/kB,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAG5D,OAAAmD,EAAA,KAAC,MAAI,CAAA,UAAU,gBAAgB,SAAA,CAAA,UAC5B4D,GAAmB,EAAA,EACpBlJ,EAAA,IAAC,MAAI,CAAA,UAAU,gCACf,SAAAA,EAAA,IAAC,MAAI,CAAA,UAAU,8BACb,SAAAsF,OAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,+FACb,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,yCAAyC,SAAA,CAAA,YAC5CtF,EAAAA,IAAC,OAAK,CAAA,UAAU,gBAAiB,UAAAT,GAAA,YAAAA,EAAM,SAAS,MAAM,KAAK,KAAM,MAAO,CAAA,CAAA,EACnF,EACCS,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAwC,SAErD,iJAAA,CAAA,EACF,EACAA,EAAAA,IAACukB,GAAO,CAAA,UAAU,uCAAwC,CAAA,CAAA,CAAA,CAC5D,CACF,CAAA,QACK5C,GAAW,EAAA,CAAA,CAClB,CAAA,CACA,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,CCEA,MAAM6C,GAAgB,CAEpB,UAAa,cACb,SAAY,gBAGZ,SAAY,cACZ,WAAc,gBACd,UAAa,cACb,UAAa,aACb,cAAiB,cACjB,aAAgB,iBAChB,aAAgB,cAGhB,MAAS,eACT,KAAQ,eACV,EAEMC,GAAmB,CAEvB,UAAa,6BACb,SAAY,iCAGZ,SAAY,6BACZ,WAAc,iCACd,UAAa,6BACb,UAAa,2BACb,cAAiB,6BACjB,aAAgB,mCAChB,aAAgB,6BAGhB,MAAS,+BACT,KAAQ,gCACV,EAEMC,GAAc,CAAClW,EAAemW,EAAS,KACvCA,EAAenW,EAAM,QAAQ,CAAC,EAC3BA,GAAS,IAAO,KAAK,MAAMA,CAAK,EAAE,eAAmB,EAAAA,EAa9D,SAASF,GAAW,CAClB,OAAAY,EACA,MAAAX,EACA,MAAAC,EACA,OAAAoW,EACA,MAAAC,EACA,UAAAC,EACA,OAAAC,CACF,EAAoB,CAGhB,OAAAzf,EAAA,KAAC,OAAI,UAAWlF,GAAG,gDAAiDqkB,GAAiBvV,CAAM,CAAC,EAC1F,SAAA,CAAC5J,EAAAA,KAAA,MAAA,CAAI,UAAU,6CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAtF,MAAC,OAAI,UAAWI,GAAG,8BAA+BokB,GAActV,CAAM,CAAC,EAAG,EACzElP,EAAA,IAAA,OAAA,CAAK,UAAU,qCAAsC,SAAMuO,EAAA,CAAA,EAC9D,GACE,IAAM,CACN,OAAQwW,EAAQ,CACd,IAAK,YACH,OAAQ/kB,EAAAA,IAAA0I,GAAA,CAAQ,MAAO,OAAQ,OAAQ,MAAQ,CAAA,EACjD,IAAK,OACH,OAAQ1I,EAAAA,IAAA8I,GAAA,CAAa,MAAO,OAAQ,OAAQ,MAAQ,CAAA,EACtD,QACE,OAAQ9I,EAAAA,IAAA+I,GAAA,CAAW,MAAO,OAAQ,OAAQ,MAAQ,CAAA,CACtD,CAAA,GACC,CAAA,EACL,EACA/I,MAAC,OAAI,UAAU,mCACX,YAAY,OAAOwO,CAAK,CAAC,EAC7B,EACAlJ,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,yBAAyB,SAAA,CAAA,MAAIof,GAAY,OAAOI,CAAS,EAAG,EAAK,CAAA,EAAE,EACnFxf,EAAA,KAAC,MAAA,CACC,UAAWlF,GACT,wCACAykB,IAAU,KAAO,iBAAmB,cACtC,EAEC,SAAA,CAAUA,IAAA,WAAQG,GAAY,CAAA,UAAU,iBAAiB,EAAKhlB,EAAA,IAACilB,GAAc,CAAA,UAAU,gBAAiB,CAAA,EACxG,KAAK,IAAI,OAAOL,CAAM,CAAC,CAAA,CAAA,CAC1B,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,CAEA,SAASM,GAAgB,CACvB,OAAAC,EACA,gBAAAC,EACA,UAAAC,CACF,EAYG,CAkBD,MAAMC,GAhBiB,IAAM,WAC3B,MAAMC,EAAgD,CAAA,EAEtD,OAAIla,EAAA+Z,EAAgB,OAAhB,MAAA/Z,EAAuB8Z,IAAWE,EAAU,OACnCE,EAAA,KAAOH,EAAgB,KAAKD,CAAM,IAE3C3X,EAAA4X,EAAgB,SAAhB,MAAA5X,EAAyB2X,IAAWE,EAAU,SACrCE,EAAA,OAASH,EAAgB,OAAOD,CAAM,IAE/CzJ,EAAA0J,EAAgB,YAAhB,MAAA1J,EAA4ByJ,IAAWE,EAAU,YACxCE,EAAA,UAAYH,EAAgB,UAAUD,CAAM,GAGlDI,CAAA,KAKHC,EAAe,CACnB,UAAa,YACb,UAAa,cACb,WAAc,cAAA,EAGhB,GAAI,OAAO,KAAKF,CAAe,EAAE,SAAW,EAExC,OAAAhgB,EAAA,KAAC,MAAI,CAAA,UAAU,sEAAsE,SAAA,CAAA,yBAC5DkgB,EAAaL,CAAM,CAC5C,CAAA,CAAA,EAKJ,MAAMM,EAAoB,IAAM,CAC9B,MAAMC,EAAQ,CAAA,EAGV,OAACL,EAAU,MACPK,EAAA,KACJpgB,EAAAA,KAAC,MAAuB,CAAA,UAAU,uGAChC,SAAA,CAAAtF,EAAA,IAAC8I,GAAa,CAAA,MAAO,SAAU,OAAQ,SAAS,EAC/C9I,EAAA,IAAA,OAAA,CAAK,UAAU,yBAAyB,SAAa,gBAAA,CAAA,CAAA,EAF/C,cAGT,CAAA,EAKCqlB,EAAU,QACPK,EAAA,KACJpgB,EAAAA,KAAC,MAAyB,CAAA,UAAU,uGAClC,SAAA,CAAAtF,EAAA,IAAC+I,GAAW,CAAA,MAAO,SAAU,OAAQ,SAAU,EAC9C/I,EAAA,IAAA,OAAA,CAAK,UAAU,yBAAyB,SAAa,gBAAA,CAAA,CAAA,EAF/C,gBAGT,CAAA,EAKCqlB,EAAU,WACPK,EAAA,KACJpgB,EAAAA,KAAC,MAA4B,CAAA,UAAU,uGACrC,SAAA,CAAAtF,EAAA,IAAC0I,GAAQ,CAAA,MAAO,SAAU,OAAQ,SAAW,EAC5C1I,EAAA,IAAA,OAAA,CAAK,UAAU,yBAAyB,SAAa,gBAAA,CAAA,CAAA,EAF/C,mBAGT,CAAA,EAKG,OAAA,QAAQslB,CAAe,EAAE,QAAQ,CAAC,CAACP,EAAQY,CAAa,IAC7D,OAAO,QAAQA,CAAa,EAAE,QAAQ,CAAC,CAACC,EAAKC,CAAU,IAAM,CACrDH,EAAA,KACJ1lB,EAAA,IAACsO,GAAA,CAEC,OAAQsX,EACR,MACEA,IAAQ,YAAc,aACtBA,IAAQ,WAAa,YACrBA,IAAQ,QAAU,eAClBA,IAAQ,OAAS,cACjBA,EAAI,QAAQ,WAAY,KAAK,EAAE,QAAQ,KAAME,GAAOA,EAAI,YAAA,CAAa,EAEvE,MAAOD,EAAW,QAClB,OAAQA,EAAW,OACnB,MAAOA,EAAW,MAClB,UAAWA,EAAW,SACtB,OAAAd,CAAA,EAbK,GAAGA,CAAM,IAAIa,CAAG,EAcvB,CAAA,CACF,CACD,CAAA,EAGIF,CAAA,EAIP,OAAApgB,EAAA,KAAC,MAAI,CAAA,UAAU,qDACb,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,oCACb,SAACsF,EAAA,KAAA,KAAA,CAAG,UAAU,mCACX,SAAA,CAAAkgB,EAAaL,CAAM,EAAE,uBAAA,CAAA,CACxB,CACF,CAAA,EAECnlB,EAAA,IAAA,MAAA,CAAI,UAAU,uDACZ,aACH,CACF,CAAA,CAAA,CAEJ,CAGA,MAAM+lB,GAA6B,IAAM,CACvC,MAAMxmB,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxDkI,EAAU9F,EAAapC,GAAqBA,EAAM,MAAM,eAAe,EAEvE6jB,EAAWzmB,GAAA,YAAAA,EAAM,SACjB,CAACkd,EAASC,CAAU,EAAIjd,WAAS,EAAK,EACtC,CAAC2lB,EAAiBa,CAAkB,EAAIxmB,EAAA,SAI3C,CAAE,CAAA,EAEC0E,EAAWC,KAGX,CAACihB,EAAWa,CAAY,EAAIzmB,WAAS,CACzC,KAAM,GACN,OAAQ,GACR,UAAW,EAAA,CACZ,EAEK8Z,EAAgBD,KAEhB6M,EAAuBrc,EAAAA,YAAY,SAAY,CACnD,GAAI,CAACO,EAAS,CACZ,QAAQ,IAAI,2CAA2C,EACvD,MACF,CAEAqS,EAAW,EAAI,EACfuJ,EAAmB,CAAE,CAAA,EACRC,EAAA,CACX,KAAM,GACN,OAAQ,GACR,UAAW,EAAA,CACZ,EAEG,GAAA,CACF,MAAME,EAAc7M,EAAc,KAChC,4BAA4BlP,CAAO,GACnC,CAAE,gBAAiB,EAAK,CAAA,EACxB,MAAelF,IACP,QAAA,MAAM,4BAA6BA,CAAK,EAChD+gB,MAAsB,CAAE,GAAGlc,EAAM,KAAM,EAAQ,EAAA,EACxC,CAAE,KAAM,CAAE,QAAS,EAAQ,CAAA,EACnC,EAEKqc,EAAgB9M,EAAc,KAClC,0BAA0BlP,CAAO,GACjC,CAAE,gBAAiB,EAAK,CAAA,EACxB,MAAelF,IACP,QAAA,MAAM,8BAA+BA,CAAK,EAClD+gB,MAAsB,CAAE,GAAGlc,EAAM,OAAQ,EAAQ,EAAA,EAC1C,CAAE,KAAM,CAAE,QAAS,EAAQ,CAAA,EACnC,EAEKsc,EAAmB/M,EAAc,KACrC,yBAAyBlP,CAAO,GAChC,CAAE,gBAAiB,EAAK,CAAA,EACxB,MAAelF,IACP,QAAA,MAAM,iCAAkCA,CAAK,EACrD+gB,MAAsB,CAAE,GAAGlc,EAAM,UAAW,EAAQ,EAAA,EAC7C,CAAE,KAAM,CAAE,QAAS,EAAQ,CAAA,EACnC,EAEK,CAACuc,EAAcC,EAAgBC,CAAiB,EAAI,MAAM,QAAQ,IAAI,CAC1EL,EACAC,EACAC,CAAA,CACD,EAEkBL,EAAA,CACjB,KAAMM,EAAa,KAAK,QAAUA,EAAa,KAAK,WAAa,OACjE,OAAQC,EAAe,KAAK,QAAUA,EAAe,KAAK,WAAa,OACvE,UAAWC,EAAkB,KAAK,QAAUA,EAAkB,KAAK,WAAa,MAAA,CACjF,EAGYP,EAAA,CACX,KAAMK,EAAa,KAAK,QACxB,OAAQC,EAAe,KAAK,QAC5B,UAAWC,EAAkB,KAAK,OAAA,CACnC,QACMthB,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,EAExC+gB,EAAA,CACX,KAAM,GACN,OAAQ,GACR,UAAW,EAAA,CACZ,CAAA,QACD,CACAxJ,EAAW,EAAK,CAClB,CAAA,EACC,CAACrS,CAAO,CAAC,EAYZ,OAVAxK,EAAAA,UAAU,IAAM,CACSsmB,GAAA,EACtB,CAACA,CAAoB,CAAC,EAEzBtmB,EAAAA,UAAU,IAAI,EACT,EAACN,GAAA,MAAAA,EAAM,SAAUA,EAAK,OAAO,SAAW,IACzC4E,EAAS,cAAc,CAE3B,EAAE,CAAE,CAAA,EAEAsY,EACKzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,QAIlC,MAAI,CAAA,UAAU,0CACb,SAACnX,EAAA,KAAA,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,uBACb,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,mCAAoC,CAAA,SAClD,MACC,CAAA,SAAA,CAACsF,EAAAA,KAAA,KAAA,CAAG,UAAU,gDAAgD,SAAA,CAAA,iBAAe0gB,CAAA,EAAS,EACrFhmB,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAgC,mCAAA,CAAA,EACrE,CAAA,EACF,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAtF,EAAA,IAACsX,GAAqB,EAAA,EACtBtX,EAAA,IAACgB,EAAA,CACC,QAASmlB,EACT,SAAU1J,EACV,KAAK,KACL,QAAQ,UACR,UAAU,qBAEV,eAACrE,GAAU,CAAA,UAAWhY,GAAG,WAAYqc,GAAW,cAAc,EAAG,CAAA,CACnE,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,EAGAzc,EAAAA,IAAC,MAAI,CAAA,UAAU,YACX,SAAA,CAAC,YAAa,YAAa,YAAY,EAAe,IACtDmlB,GAAAnlB,EAAA,IAACklB,GAAA,CAEC,OAAAC,EACA,gBAAAC,EACA,UAAAC,CAAA,EAHKF,CAKR,CAAA,EACH,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,ECzZMuB,GAA6B,IAAM,OAC/B,KAAA,CAAE,KAAAnnB,GAASU,KAGb,OAAAqF,EAAA,KAAC,MAAI,CAAA,UAAU,yBACX,SAAA,CAAAtF,EAAA,IAACkJ,GAAmB,EAAA,EACnBlJ,EAAA,IAAA,MAAA,CAAI,UAAU,gCAEV,WAAMqL,EAAA9L,GAAA,YAAAA,EAAA,SAAA,YAAA8L,EAAQ,UAAW,EAAKrL,EAAAA,IAAAwZ,GAAA,CAAU,CAAA,EAAKxZ,EAAAA,IAAC+lB,IAAiB,CAAA,EACpE,QACCxI,GAAc,EAAA,CACnB,CAAA,CAAA,CAER,ECCMoJ,GAAevnB,EAAAA,cAA4C,MAAS,EAE7DwnB,GAAyD,CAAC,CAAE,SAAAtnB,KAAe,CACtF,KAAM,CAACqK,EAAiBzC,CAAkB,EAAIzH,WAAwB,IAAI,EACpE,CAACmK,EAAQzC,CAAS,EAAI1H,EAAA,SAAkB,CAAE,CAAA,EAGhDI,EAAAA,UAAU,IAAM,CACR,MAAAgnB,EAAe,aAAa,QAAQ,QAAQ,EAC5CC,EAAwB,aAAa,QAAQ,iBAAiB,EAEhED,GACQ1f,EAAA,KAAK,MAAM0f,CAAY,CAAC,EAEhCC,GACF5f,EAAmB4f,CAAqB,CAE5C,EAAG,CAAE,CAAA,EAGLjnB,EAAAA,UAAU,IAAM,CACV+J,EAAO,OAAS,GAClB,aAAa,QAAQ,SAAU,KAAK,UAAUA,CAAM,CAAC,CACvD,EACC,CAACA,CAAM,CAAC,EAEX/J,EAAAA,UAAU,IAAM,CACV8J,GACW,aAAA,QAAQ,kBAAmBA,CAAe,CACzD,EACC,CAACA,CAAe,CAAC,EAEpB,MAAMvC,EAAa,IAAM,CACvBF,EAAmB,IAAI,EACvB,aAAa,WAAW,iBAAiB,CAAA,EAG3C,OACGlH,EAAA,IAAA2mB,GAAa,SAAb,CAAsB,MAAO,CAAE,gBAAAhd,EAAiB,mBAAAzC,EAAoB,WAAAE,EAAY,OAAAwC,EAAQ,UAAAzC,CAAU,EAChG,SAAA7H,CACH,CAAA,CAEJ,EC3DA,SAAwBynB,IAAe,CAC/B,KAAA,CAAE,QAAA1c,GAAY2P,KACd,CAACgN,EAAaC,CAAc,EAAIxnB,WAAS,qBAAqB,EAC9DoZ,EAAkB,CACtB,sBACA,2BACA,sBACA,2BACA,qCACA,uBAAA,EAIFhZ,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAAqnB,EAAW,YAAY,IAAM,CACjCD,EAAgBjd,GAAS,CAEjB,MAAAmd,GADetO,EAAgB,QAAQ7O,CAAI,EACf,GAAK6O,EAAgB,OACvD,OAAOA,EAAgBsO,CAAS,CAAA,CACjC,GACA,IAAI,EAEA,MAAA,IAAM,cAAcD,CAAQ,CACrC,EAAG,CAAE,CAAA,EAGHlnB,EAAAA,IAAC,MAAI,CAAA,UAAU,gDACb,SAAAA,EAAAA,IAAC,OAAK,CAAA,UAAU,8EACd,SAAAsF,EAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,kDAAkD,SAA2B,8BAAA,QAG1F,MAAI,CAAA,UAAU,WACb,SAACsF,EAAA,KAAA,IAAA,CAAE,UAAU,iEAAkE,SAAA,CAAA0hB,EAAY,KAAA,CAAA,CAAG,CAChG,CAAA,EAEChnB,EAAA,IAAA,IAAA,CAAE,UAAU,4DAA4D,SAEzE,6DAAA,EACAsF,EAAAA,KAAC,IAAE,CAAA,UAAU,4DAA4D,SAAA,CAAA,yBAChDtF,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAS,YAAA,EAAO,eAAA,EACtE,EAECA,EAAA,IAAA,IAAA,CAAE,UAAU,6DAA6D,SAE1E,qDAAA,EAGAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,sDAEb,SAAA,CAAAtF,EAAA,IAAConB,GAAA,CACC,GAAI,cAAc/c,CAAO,GACzB,UAAU,oKAEV,SAAA/E,EAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,6EACb,eAACqnB,GAAU,CAAA,UAAU,0BAA0B,CACjD,CAAA,EACCrnB,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAa,gBAAA,EACpEsF,EAAAA,KAAC,MAAI,CAAA,UAAU,wDACb,SAAA,CAAAtF,EAAAA,IAAC,QAAK,SAAc,gBAAA,CAAA,EACpBA,EAAAA,IAACqkB,GAAW,CAAA,UAAU,0EAA2E,CAAA,CAAA,EACnG,CAAA,EACF,CAAA,CACF,EAGArkB,EAAA,IAAConB,GAAA,CACC,GAAI,sBAAsB/c,CAAO,GACjC,UAAU,oKAEV,SAAA/E,EAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,2EACb,eAACsnB,GAAS,CAAA,UAAU,wBAAwB,CAC9C,CAAA,EACCtnB,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAkB,qBAAA,EACzEsF,EAAAA,KAAC,MAAI,CAAA,UAAU,sDACb,SAAA,CAAAtF,EAAAA,IAAC,QAAK,SAAc,gBAAA,CAAA,EACpBA,EAAAA,IAACqkB,GAAW,CAAA,UAAU,0EAA2E,CAAA,CAAA,EACnG,CAAA,EACF,CAAA,CACF,EAGArkB,EAAA,IAAConB,GAAA,CACC,GAAI,mBAAmB/c,CAAO,GAC9B,UAAU,oKAEV,SAAA/E,EAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,2EACb,eAAC0K,GAAU,CAAA,UAAU,wBAAwB,CAC/C,CAAA,EACC1K,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAiB,oBAAA,EACxEsF,EAAAA,KAAC,MAAI,CAAA,UAAU,sDACb,SAAA,CAAAtF,EAAAA,IAAC,QAAK,SAAc,gBAAA,CAAA,EACpBA,EAAAA,IAACqkB,GAAW,CAAA,UAAU,0EAA2E,CAAA,CAAA,EACnG,CAAA,EACF,CAAA,CACF,CAAA,EACF,CAAA,EACF,EACF,CACF,CAAA,CAEJ,CCxFA,SAASkD,GAAc,CACrB,MAAAxgB,EACA,QAAAygB,EACA,QAAAC,EAAU,EACV,QAAAC,EACA,YAAAC,EAAc,GACd,YAAAC,EAAc,EAChB,EAA8D,CAE1D,OAAA5nB,EAAA,IAAC,KAAA,CACC,UAAW;AAAA,UACP2nB,EAAc,sBAAwB,uBAAuB;AAAA;AAAA,UAE7DA,EAAc,eAAiB,cAAc;AAAA,UAC7CC,EAAc,sCAAwC,EAAE;AAAA;AAAA,UAEvDD,EAAoC,GAAtB,mBAAwB;AAAA;AAAA,QAG3C,QAAAF,EACA,QAAAC,EAEA,SAAA1nB,EAAA,IAACsH,GACC,CAAA,SAAAhC,OAACkC,GACC,CAAA,SAAA,CAACxH,EAAAA,IAAA0H,GAAA,CAAe,QAAO,GACrB,SAAApC,EAAA,KAAC,OAAA,CACC,UAAW;AAAA;AAAA,kBAEPsiB,EAAc,gBAAkB,EAAE;AAAA,gBAGrC,SAAA,CAAAA,GAAgB5nB,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAC,IAAA,EAChD+G,CAAA,CAAA,CAAA,EAEL,QACCa,GAAe,CAAA,UAAU,OACxB,SAACtC,EAAA,KAAA,MAAA,CAAI,UAAU,0EACZ,SAAA,CAAAsiB,GAAgB5nB,EAAA,IAAA,MAAA,CAAI,UAAU,mCAAmC,SAAU,aAAA,EAC3EwnB,CAAA,CAAA,CACH,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CAGN,CAGA,SAASK,GAAK,CACZ,SAAAvoB,EACA,UAAAwoB,EAAY,GACZ,SAAAC,EAAW,GACX,SAAAC,EAAW,GACX,WAAA7e,EAAa,GACb,YAAAye,EAAc,GACd,UAAAlnB,EAAY,EACd,EAQG,CAEC,OAAAV,EAAA,IAAC,KAAA,CACC,UAAW;AAAA;AAAA,UAEP8nB,EAAY,sCAAwC,WAAW;AAAA,UAC/DC,EAAW,2BAA6B,EAAE;AAAA,UAC1CC,EAAW,cAAgB,EAAE;AAAA,UAC7B7e,EAAa,gBAAkB,+BAA+B;AAAA,UAC9D6e,GAAY7e,EAAa,gBAAkB,EAAE;AAAA,UAC7Cye,EAAc,8BAAgC,EAAE;AAAA;AAAA,UAEhDlnB,CAAS;AAAA,QAGZ,SAAApB,CAAA,CAAA,CAGP,CAEO,MAAM2oB,GAA6B,IAAM,CAC9C,KAAM,CAACC,EAAaC,CAAc,EAAI1oB,EAAA,SAA8B,CAAE,CAAA,EAChE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC0F,EAAOijB,CAAQ,EAAI3oB,WAAwB,IAAI,EAChD,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDwa,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxD,CAAComB,EAAgBC,CAAiB,EAAI/oB,EAAA,SAAmB,CAAE,CAAA,EAC3D,CAAE,QAAA4K,GAAY2P,KAEdvL,EAAOyC,EAAA,QACX,KAAO,CACL,KAAM+I,EACN,GAAIC,CAAA,GAEN,CAACD,EAAUC,CAAM,CAAA,EAGbG,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAGrDga,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAGzBK,EAAiB,IACjBL,EACK,4BAEF,4BAGTxoB,EAAAA,UAAU,IAAM,EACI,SAAY,SAC5B6c,EAAW,EAAI,EACf0L,EAAS,IAAI,EACT,GAAA,CACF,MAAMO,EAAsC,CAAA,EAExCtO,MAAuB,UAAYA,GACnCC,MAAqB,QAAUA,GAM7B4N,MAAAA,GAJiB,MAAMjjB,GAAM,IAAI,GAAGD,EAAO,eAAeqF,CAAO,GAAI,CACzE,OAAQse,EACR,gBAAiB,EAAA,CAClB,GACuD,KAAK,KAC7DR,EAAeD,CAAW,QACnBU,EAAK,CACZ,QAAQ,MAAMA,CAAG,EACjB,MAAMC,EACJ5jB,GAAM,aAAa2jB,CAAG,KAAKpb,GAAAnC,EAAAud,EAAI,WAAJ,YAAAvd,EAAc,OAAd,MAAAmC,EAAoB,SAC3Cob,EAAI,SAAS,KAAK,QAClB,uBACNR,EAASS,CAAO,CAAA,QAChB,CACAnM,EAAW,EAAK,CAClB,CAAA,MAGD,CAACrS,EAASgQ,EAAWC,EAAStV,EAAO,CAAC,EAEnC,MAAA8jB,EAAeC,GAAsB,CACzCP,EAAmBxe,GAAUA,EAAK,SAAS+e,CAAS,EAAI/e,EAAK,OAAQgf,GAAMA,IAAMD,CAAS,EAAI,CAAC,GAAG/e,EAAM+e,CAAS,CAAE,CAAA,EAG/GE,EAAkBza,GACf,IAAI,KAAK,aAAa,QAAS,CACpC,MAAO,WACP,SAAU,MACV,sBAAuB,CAAA,CACxB,EAAE,OAAOA,CAAK,EAGX0a,EAAoB1a,GACjB,GAAGA,EAAM,QAAQ,CAAC,CAAC,GAGtB2a,EAAgBjY,EAAAA,QAAQ,IAAM,CAClC,MAAMkY,EAAa,CAACC,EAAmBC,IAAyBA,EAAcD,EAAYC,EAAc,EAEjG,OAAApB,EAAY,IAAKqB,GAAiC,CACvD,MAAMC,EAAwBD,EAAU,aAAa,IAAKE,IAAW,CACnE,GAAGA,EACH,UAAWA,EAAM,WAAaA,EAAM,UAAY,GAChD,YAAaA,EAAM,aAAeA,EAAM,YAAc,GACtD,QAASA,EAAM,WAAaA,EAAM,UAAY,EAC9C,IAAKL,EAAWK,EAAM,WAAYA,EAAM,UAAU,CAClD,EAAA,EAEIC,EAAYF,EAAsB,OAAO,CAACG,EAAKF,IAAUE,EAAMF,EAAM,UAAW,CAAC,EACjFG,EAAcJ,EAAsB,OAAO,CAACG,EAAKF,IAAUE,EAAMF,EAAM,YAAa,CAAC,EACrFI,EAAeH,EAAYE,GAAe,EAEzC,MAAA,CACL,GAAGL,EACH,UAAAG,EACA,YAAAE,EACA,aAAAC,EACA,SAAUT,EAAWM,EAAWH,EAAU,SAAS,EACnD,WAAYH,EAAWQ,EAAaL,EAAU,WAAW,EACzD,SAAUH,EAAWS,EAAcN,EAAU,UAAU,EACvD,OAAQH,EAAWG,EAAU,aAAcA,EAAU,UAAU,EAC/D,IAAKH,EAAWG,EAAU,WAAYA,EAAU,UAAU,EAC1D,aAAcC,CAAA,CAChB,CACD,CAAA,EACA,CAACtB,CAAW,CAAC,EAEhBhX,EAAAA,QAAQ,IAAM,CACR,GAAA,CAACiY,EAAc,OAAe,OAAA,KAE5B,MAAAW,EAAaX,EAAc,OAAO,CAACQ,EAAKI,IAAUJ,EAAMI,EAAM,WAAY,CAAC,EAC3EC,EAAab,EAAc,OAAO,CAACQ,EAAKI,IAAUJ,EAAMI,EAAM,WAAY,CAAC,EAC3EE,EAAWD,EAAaF,EAAaE,EAAa,EAClDE,EAAYf,EAAc,OAAO,CAACQ,EAAKI,IAAUJ,EAAMI,EAAM,UAAW,CAAC,EACzEI,EAAchB,EAAc,OAAO,CAACQ,EAAKI,IAAUJ,EAAMI,EAAM,YAAa,CAAC,EAC7EL,EAAYP,EAAc,OAAO,CAACQ,EAAKI,IAAUJ,EAAMI,EAAM,UAAW,CAAC,EACzEH,EAAcT,EAAc,OAAO,CAACQ,EAAKI,IAAUJ,EAAMI,EAAM,YAAa,CAAC,EAC7EK,EAAWF,EAAYR,EAAYQ,EAAY,EAC/CG,EAAaF,EAAcP,EAAcO,EAAc,EAEtD,MAAA,CACL,WAAAL,EACA,WAAAE,EACA,SAAAC,EACA,UAAAC,EACA,YAAAC,EACA,UAAAT,EACA,YAAAE,EACA,SAAAQ,EACA,WAAAC,CAAA,CACF,EACC,CAAClB,CAAa,CAAC,EAGlB,MAAMmB,EAAc,IACdnlB,EACMnF,EAAAA,IAAA,MAAA,CAAI,UAAU,8DAA+D,SAAMmF,CAAA,CAAA,EAI1FnF,EAAA,IAAA,MAAA,CAAI,UAAU,uDACb,eAAC,MAAI,CAAA,UAAW,GAAG0oB,EAAgB,CAAA,iBACjC,SAACpjB,EAAAA,KAAA,QAAA,CAAM,UAAU,oCACf,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,oBACf,SAAA,CAAAA,OAAC,KACC,CAAA,SAAA,CAAAtF,EAAA,IAAC,KAAG,CAAA,UAAU,0EAA0E,QAAS,EAAG,EACpGA,EAAA,IAAC,KAAA,CACC,UAAU,kIACV,QAAS,EACV,SAAA,MAAA,CAED,QACCunB,GAAc,CAAA,MAAM,8BAA8B,QAAQ,kBAAkB,QAAS,EAAG,QACxFA,GAAc,CAAA,MAAM,gBAAgB,QAAQ,gBAAgB,QAAS,EAAG,QACxEA,GAAc,CAAA,MAAM,kCAAkC,QAAQ,eAAe,QAAS,EAAG,QACzFA,GAAc,CAAA,MAAM,aAAa,QAAQ,iBAAiB,QAAS,EAAG,CAAA,EACzE,SACC,KACC,CAAA,SAAA,CAAAvnB,MAACunB,IAAc,MAAM,YAAY,QAAQ,qCAAqC,YAAW,GAAC,EAC1FvnB,EAAA,IAACunB,GAAA,CACC,MAAM,UACN,QAAQ,oCACR,YAAW,GACX,YAAa,EAAA,CACf,QACCA,GAAc,CAAA,MAAM,UAAU,QAAQ,UAAU,YAAW,GAAC,QAC5DA,GAAc,CAAA,MAAM,cAAc,QAAQ,oCAAoC,YAAW,GAAC,EAC3FvnB,EAAA,IAACunB,GAAA,CACC,MAAM,YACN,QAAQ,wCACR,YAAW,GACX,YAAa,EAAA,CACf,QACCA,GAAc,CAAA,MAAM,QAAQ,QAAQ,0CAA0C,YAAW,GAAC,QAC1FA,GAAc,CAAA,MAAM,QAAQ,QAAQ,oCAAoC,YAAW,GAAC,QACpFA,GAAc,CAAA,MAAM,MAAM,QAAQ,+CAA+C,YAAW,GAAC,QAC7FA,GAAc,CAAA,MAAM,QAAQ,QAAQ,aAAa,YAAW,GAAC,QAC7DA,GAAc,CAAA,MAAM,QAAQ,QAAQ,sCAAsC,YAAW,GAAC,EACvFvnB,EAAAA,IAACunB,IAAc,MAAM,OAAO,QAAQ,YAAY,YAAW,GAAC,YAAa,EAAM,CAAA,QAC9EA,GAAc,CAAA,MAAM,QAAQ,QAAQ,eAAe,YAAW,GAAC,QAC/DA,GAAc,CAAA,MAAM,QAAQ,QAAQ,4CAA4C,YAAW,GAAC,EAC7FvnB,EAAAA,IAACunB,IAAc,MAAM,OAAO,QAAQ,cAAc,YAAW,GAAC,YAAa,EAAM,CAAA,CAAA,EACnF,CAAA,EACF,EACCvnB,EAAA,IAAA,QAAA,CACE,SAAcmpB,EAAA,IAAKI,GAAmB,CACrC,MAAMR,EAAY,GAAGQ,EAAU,IAAI,IAAIA,EAAU,MAAM,SAAW,EAAA,SAAS,EAAG,GAAG,CAAC,GAC5EpgB,EAAaof,EAAe,SAASQ,CAAS,EAElD,OAAAzjB,OAACoH,GAAM,SAAN,CACC,SAAA,CAAApH,EAAA,KAAC,KAAA,CACC,UAAW;AAAA,0BACP6D,EAAa,gBAAkB,+BAA+B;AAAA;AAAA,wBAGlE,QAAS,IAAM2f,EAAYC,CAAS,EAEpC,SAAA,CAAA/oB,MAAC6nB,GAAK,CAAA,SAAQ,GAAC,WAAA1e,EAAwB,UAAU,+BAC/C,SAAAnJ,EAAA,IAAC,MAAA,CACC,UAAW;AAAA;AAAA;AAAA,8BAGPmJ,EAAa,yBAA2B,+BAA+B;AAAA,4BAG3E,eAACoC,GAAY,CAAA,UAAW,WAAWpC,EAAa,aAAe,eAAe,GAAI,CAAA,CAAA,EAEtF,EACAnJ,EAAA,IAAC6nB,GAAA,CACC,SAAQ,GACR,SAAQ,GACR,WAAA1e,EACA,UAAU,0EAET,SAAA6I,EAAO,IAAI,KAAKuX,EAAU,KAAMA,EAAU,MAAQ,CAAC,EAAG,UAAU,CAAA,CACnE,EACAvpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,WAAA1e,EAAwB,UAAU,kCAC/C,SAAA8f,EAAeM,EAAU,YAAY,CACxC,CAAA,EACCvpB,EAAA,IAAA6nB,GAAA,CAAK,UAAS,GAAC,WAAA1e,EAAwB,YAAW,GAAC,UAAU,sBAC3D,SAAA+f,EAAiBK,EAAU,GAAG,CACjC,CAAA,EACAvpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,WAAA1e,EAAwB,UAAU,sBAC/C,SAAA8f,EAAeM,EAAU,YAAY,CACxC,CAAA,EACAvpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,WAAA1e,EAAwB,UAAU,sBAC/C,SAAA8f,EAAeM,EAAU,UAAU,CACtC,CAAA,EACCvpB,EAAA,IAAA6nB,GAAA,CAAK,UAAS,GAAC,WAAA1e,EAAwB,YAAW,GAAC,UAAU,sBAC3D,SAAA+f,EAAiBK,EAAU,MAAM,CACpC,CAAA,EACAvpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,WAAA1e,EAAwB,UAAU,sBAC/C,SAAA8f,EAAeM,EAAU,UAAU,CACtC,CAAA,EACAvpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,WAAA1e,EAAwB,UAAU,sBAC/C,SAAA8f,EAAeM,EAAU,YAAY,CACxC,CAAA,EACCvpB,EAAA,IAAA6nB,GAAA,CAAK,UAAS,GAAC,WAAA1e,EAAwB,YAAW,GAAC,UAAU,sBAC3D,SAAA+f,EAAiBK,EAAU,QAAQ,CACtC,CAAA,EACAvpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,WAAA1e,EAAwB,UAAU,sBAC/C,SAAA8f,EAAeM,EAAU,SAAS,CACrC,CAAA,EACAvpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,WAAA1e,EAAwB,UAAU,sBAC/C,SAAA8f,EAAeM,EAAU,SAAS,CACrC,CAAA,EACCvpB,EAAA,IAAA6nB,GAAA,CAAK,UAAS,GAAC,WAAA1e,EAAwB,YAAW,GAAC,UAAU,sBAC3D,SAAA+f,EAAiBK,EAAU,QAAQ,CACtC,CAAA,EACAvpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,WAAA1e,EAAwB,UAAU,sBAC/C,SAAA8f,EAAeM,EAAU,WAAW,CACvC,CAAA,EACAvpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,WAAA1e,EAAwB,UAAU,sBAC/C,SAAA8f,EAAeM,EAAU,WAAW,CACvC,CAAA,EACCvpB,EAAA,IAAA6nB,GAAA,CAAK,UAAS,GAAC,WAAA1e,EAAwB,YAAW,GAAC,UAAU,sBAC3D,SAAA+f,EAAiBK,EAAU,UAAU,CACxC,CAAA,CAAA,CAAA,CACF,EACCpgB,GACCogB,EAAU,aAAa,IAAKE,GAC1BnkB,EAAA,KAAC,KAAmB,CAAA,UAAU,yDAC5B,SAAA,CAAAtF,EAAA,IAAC6nB,GAAK,CAAA,SAAQ,GAAC,UAAU,gDAAgD,EACzE7nB,EAAA,IAAC6nB,GAAA,CACC,SAAQ,GACR,UAAU,sEAET,WAAO,IAAI,KAAK4B,EAAM,IAAI,EAAG,YAAY,CAAA,CAC5C,EACAzpB,EAAAA,IAAC6nB,IAAK,UAAS,GAAC,UAAU,sBACvB,SAAAoB,EAAeQ,EAAM,YAAY,CACpC,CAAA,EACAzpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,YAAW,GAAC,UAAU,sBACnC,SAAAqB,EAAiBO,EAAM,GAAG,CAC7B,CAAA,EACAzpB,EAAAA,IAAC6nB,IAAK,UAAS,GAAC,UAAU,sBACvB,SAAAoB,EAAeQ,EAAM,YAAY,CACpC,CAAA,EACAzpB,EAAAA,IAAC6nB,IAAK,UAAS,GAAC,UAAU,sBACvB,SAAAoB,EAAeQ,EAAM,UAAU,CAClC,CAAA,EACAzpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,YAAW,GAAC,UAAU,sBACnC,SAAAqB,EAAiBO,EAAM,MAAM,CAChC,CAAA,EACAzpB,EAAAA,IAAC6nB,IAAK,UAAS,GAAC,UAAU,sBACvB,SAAAoB,EAAeQ,EAAM,UAAU,CAClC,CAAA,EACAzpB,EAAAA,IAAC6nB,IAAK,UAAS,GAAC,UAAU,sBACvB,SAAAoB,EAAeQ,EAAM,OAAO,CAC/B,CAAA,EACAzpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,YAAW,GAAC,UAAU,sBACnC,SAAAqB,EAAiBO,EAAM,QAAQ,CAClC,CAAA,EACAzpB,EAAAA,IAAC6nB,IAAK,UAAS,GAAC,UAAU,sBACvB,SAAAoB,EAAeQ,EAAM,SAAS,CACjC,CAAA,EACAzpB,EAAAA,IAAC6nB,IAAK,UAAS,GAAC,UAAU,sBACvB,SAAAoB,EAAeQ,EAAM,SAAS,CACjC,CAAA,EACAzpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,YAAW,GAAC,UAAU,sBACnC,SAAAqB,EAAiBO,EAAM,QAAQ,CAClC,CAAA,EACAzpB,EAAAA,IAAC6nB,IAAK,UAAS,GAAC,UAAU,sBACvB,SAAAoB,EAAeQ,EAAM,WAAW,CACnC,CAAA,EACAzpB,EAAAA,IAAC6nB,IAAK,UAAS,GAAC,UAAU,sBACvB,SAAAoB,EAAeQ,EAAM,WAAW,CACnC,CAAA,EACAzpB,EAAAA,IAAC6nB,GAAK,CAAA,UAAS,GAAC,YAAW,GAAC,UAAU,sBACnC,SAAAqB,EAAiBO,EAAM,UAAU,CACpC,CAAA,CAAA,GAjDOA,EAAM,GAkDf,CACD,CAAA,CAAA,EA3HgBV,CA4HrB,CAEH,CAAA,EACH,CAAA,EACF,EACF,CACF,CAAA,EAIEwB,EAAgB,IAChB9N,EAAiBzc,MAAAsY,GAAA,CAAO,UAAWmE,CAAS,CAAA,EAC5CtX,IAAU,yDAAiEnF,EAAA,IAAC+mB,GAAa,CAAA,CAAA,EAE3FzhB,EAAA,KAAC,MAAI,CAAA,UAAU,+CACb,SAAA,CAAAtF,MAAC6X,IAAO,MAAM,6BAA6B,KAAMpN,GAAe,eAAgB,GAAM,EACtFzK,EAAA,IAAC8N,GAAA,CACC,GAAG,gBACH,UAAW,GAAGua,EAAe,sCAAwC,KAAK,aAE1E,SAAA/iB,EAAA,KAAC4I,GAAY,CAAA,UAAU,aACrB,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,mFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8DACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,uCAAuC,SAAuB,0BAAA,EAC5EsF,EAAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAtF,EAAA,IAAC8I,GAAa,CAAA,MAAO,GAAI,OAAQ,GAAI,EACpC9I,EAAA,IAAA+I,GAAA,CAAW,MAAO,GAAI,OAAQ,GAAI,EAClC/I,EAAA,IAAA6I,GAAA,CAAY,MAAO,GAAI,OAAQ,GAAI,CAAA,EACtC,CAAA,EACF,EACAvD,EAAAA,KAAC,MAAI,CAAA,UAAU,mCACZ,SAAA,CACC+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEACb,SAAAA,EAAA,IAAC6Q,GAAA,CACC,YAAa,CACX,KAAM,IAAI,KAAK,IAAI,KAAK,EAAE,cAAmB,IAAA,KAAA,EAAO,SAAA,EAAY,CAAC,EACjE,OAAQ,IACV,CAAA,CAAA,EAEJ,EAEF7Q,EAAAA,IAACgB,GAAO,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UAAU,UAAU,WACxE,WAAgBzoB,EAAAA,IAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,UAAU,CACnF,CAAA,SACCzpB,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,UAAU,iBAC5C,SAAA,CAAChB,EAAAA,IAAA0qB,GAAA,CAAS,UAAU,SAAU,CAAA,EAAE,QAAA,EAElC,CAAA,EACF,CAAA,EACF,EACCJ,EAAY,CAAA,EACf,CAAA,CACF,CACF,CAAA,CAAA,EAKF,OAAAhlB,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAtF,EAAA,IAACkJ,GAAmB,EAAA,EACnBlJ,EAAA,IAAA,MAAA,CAAI,UAAU,gDACZ,aACH,QACCud,GAAc,EAAA,CACjB,CAAA,CAAA,CAEJ,ECneMoN,GAAQlqB,EAAAA,WAGZ,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAS,EAAAC,IACzBb,EAAAA,IAAA,MAAA,CAAI,UAAU,gCACb,SAAAA,EAAA,IAAC,QAAA,CACC,IAAAa,EACA,UAAWT,GAAG,gCAAiCM,CAAS,EACvD,GAAGE,CAAA,CACN,CAAA,CACF,CACD,EACD+pB,GAAM,YAAc,QAEpB,MAAMC,GAAcnqB,EAGlB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAS,EAAAC,UACzB,QAAM,CAAA,IAAAA,EAAU,UAAWT,GAAG,kBAAmBM,CAAS,EAAI,GAAGE,CAAO,CAAA,CAC1E,EACDgqB,GAAY,YAAc,cAE1B,MAAMC,GAAYpqB,EAGhB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC,QAAA,CACC,IAAAa,EACA,UAAWT,GAAG,6BAA8BM,CAAS,EACpD,GAAGE,CAAA,CACN,CACD,EACDiqB,GAAU,YAAc,YAExB,MAAMC,GAAcrqB,EAGlB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC,QAAA,CACC,IAAAa,EACA,UAAWT,GACT,0DACAM,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDkqB,GAAY,YAAc,cAE1B,MAAMC,GAAWtqB,EAGf,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC,KAAA,CACC,IAAAa,EACA,UAAWT,GACT,8EACAM,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDmqB,GAAS,YAAc,WAEvB,MAAMC,GAAYvqB,EAGhB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC,KAAA,CACC,IAAAa,EACA,UAAWT,GACT,yIACAM,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDoqB,GAAU,YAAc,YAExB,MAAMC,GAAYxqB,EAGhB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC,KAAA,CACC,IAAAa,EACA,UAAWT,GACT,uFACAM,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDqqB,GAAU,YAAc,YAExB,MAAMC,GAAezqB,EAGnB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC,UAAA,CACC,IAAAa,EACA,UAAWT,GAAG,qCAAsCM,CAAS,EAC5D,GAAGE,CAAA,CACN,CACD,EACDsqB,GAAa,YAAc,eCvG3B,MAAMC,GAASC,GAITC,GAAcC,GAEdC,GAAgB9qB,EAAAA,WAGpB,CAAC,CAAE,UAAAC,EAAW,SAAApB,EAAU,GAAGsB,CAAM,EAAGC,IACpCyE,EAAA,KAACkmB,GAAA,CACC,IAAA3qB,EACA,UAAWT,GACT,0TACAM,CACF,EACC,GAAGE,EAEH,SAAA,CAAAtB,EACDU,EAAAA,IAACyrB,GAAA,CAAqB,QAAO,GAC3B,SAACzrB,MAAA0rB,GAAA,CAAgB,UAAU,oBAAA,CAAqB,CAClD,CAAA,CAAA,CAAA,CACF,CACD,EACDH,GAAc,YAAcC,GAAwB,YAEpD,MAAMG,GAAuBlrB,EAG3B,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC4rB,GAAA,CACC,IAAA/qB,EACA,UAAWT,GACT,uDACAM,CACF,EACC,GAAGE,EAEJ,SAAAZ,EAAAA,IAAC6rB,GAAc,CAAA,UAAU,SAAU,CAAA,CAAA,CACrC,CACD,EACDF,GAAqB,YAAcC,GAA+B,YAElE,MAAME,GAAyBrrB,EAG7B,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC+rB,GAAA,CACC,IAAAlrB,EACA,UAAWT,GACT,uDACAM,CACF,EACC,GAAGE,EAEJ,SAAAZ,EAAAA,IAAC0rB,GAAgB,CAAA,UAAU,SAAU,CAAA,CAAA,CACvC,CACD,EACDI,GAAuB,YACrBC,GAAiC,YAEnC,MAAMC,GAAgBvrB,EAAAA,WAGpB,CAAC,CAAE,UAAAC,EAAW,SAAApB,EAAU,SAAAwX,EAAW,SAAU,GAAGlW,GAASC,IACxDb,EAAAA,IAAAisB,GAAA,CACC,SAAA3mB,EAAA,KAAC4mB,GAAA,CACC,IAAArrB,EACA,UAAWT,GACT,scACA0W,IAAa,UACX,kIACFpW,CACF,EACA,SAAAoW,EACC,GAAGlW,EAEJ,SAAA,CAAAZ,EAAA,IAAC2rB,GAAqB,EAAA,EACtB3rB,EAAA,IAACmsB,GAAA,CACC,UAAW/rB,GACT,MACA0W,IAAa,UACX,yFACJ,EAEC,SAAAxX,CAAA,CACH,QACCwsB,GAAuB,EAAA,CAAA,CAAA,CAC1B,CAAA,CACF,CACD,EACDE,GAAc,YAAcE,GAAwB,YAEpD,MAAME,GAAc3rB,EAGlB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAACqsB,GAAA,CACC,IAAAxrB,EACA,UAAWT,GAAG,oCAAqCM,CAAS,EAC3D,GAAGE,CAAA,CACN,CACD,EACDwrB,GAAY,YAAcC,GAAsB,YAEhD,MAAMC,GAAa7rB,EAAAA,WAGjB,CAAC,CAAE,UAAAC,EAAW,SAAApB,EAAU,GAAGsB,CAAM,EAAGC,IACpCyE,EAAA,KAACinB,GAAA,CACC,IAAA1rB,EACA,UAAWT,GACT,4NACAM,CACF,EACC,GAAGE,EAEJ,SAAA,CAAAZ,EAAA,IAAC,OAAK,CAAA,UAAU,gEACd,SAAAA,EAAAA,IAACwsB,GAAA,CACC,SAAAxsB,EAAAA,IAACoQ,GAAU,CAAA,UAAU,SAAU,CAAA,CACjC,CAAA,EACF,EACCpQ,MAAAysB,GAAA,CAA0B,SAAAntB,EAAS,CAAA,CAAA,CACtC,CACD,EACDgtB,GAAW,YAAcC,GAAqB,YAE9C,MAAMG,GAAkBjsB,EAGtB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC2sB,GAAA,CACC,IAAA9rB,EACA,UAAWT,GAAG,2BAA4BM,CAAS,EAClD,GAAGE,CAAA,CACN,CACD,EACD8rB,GAAgB,YAAcC,GAA0B,YCrGxD,SAAwBC,IAA4B,CAClD,MAAMhjB,EAASrF,EAAapC,GAAqBA,EAAM,MAAM,MAAM,EAC7D,CAAC0qB,EAAgBC,CAAiB,EAAIrtB,EAAA,SAA6B,CAAE,CAAA,EACrE,CAACstB,EAAUC,CAAW,EAAIvtB,WAAsB,CACpD,QAAS,GACT,KAAM,GACN,OAAQ,GACR,YAAa,EACb,YAAa,EACb,WAAY,EACZ,WAAYwtB,GAAe,IAAA,IAAM,CAAA,CAClC,EACK,CAACC,EAAcC,CAAe,EAAI1tB,WAAwB,IAAI,EAC9D,CAAC2tB,EAAUC,CAAW,EAAI5tB,WAA6B,IAAI,EAC3D,CAAC6tB,EAAiBC,CAAkB,EAAI9tB,EAAA,SAAyC,CAAE,CAAA,EACnF,CAACsP,EAAW0K,CAAY,EAAIha,WAAS,EAAK,EAC1CF,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxDgY,EAAS5a,GAAA,YAAAA,EAAM,GACfyF,EAAiC,gCAEjCb,EAAWC,KAEXopB,EAAiB1jB,cAAY,MAAOO,GAAoB,OACxD,GAAA,CAMF,OALiB,MAAMpF,GAAM,KAC3B,GAAGD,CAAO,gCAAgCqF,CAAO,GAAI,CAAE,OAAA8P,CAAO,EAC9D,CAAE,gBAAiB,EAAK,CAAA,GAGV,WACThV,EAAO,CACN,eAAA,MAAM,+BAAgCA,CAAK,EAC/CF,GAAM,aAAaE,CAAK,KAAKkG,EAAAlG,EAAM,WAAN,YAAAkG,EAAgB,UAAW,MAC1D,MAAM,gDAAgD,EACtDlH,EAAS,GAAG,GAEP,CAAE,QAAS,GAAO,KAAM,CAAE,MAAO,EAAG,QAAS,EAAG,cAAe,MAAS,CAAA,CACjF,CACC,EAAA,CAACa,EAASmV,EAAQhW,CAAQ,CAAC,EAExBspB,EAAmB3jB,EAAAA,YAAY,SAAY,CAC/C2P,EAAa,EAAI,EACb,GAAA,CACF,MAAMyO,EAA8C,CAAA,EACpD,MAAM,QAAQ,IACZ2E,EAAe,IAAI,MAAOrhB,GAAU,CAClC,MAAMzG,EAAW,MAAMyoB,EAAehiB,EAAM,OAAO,EAC/CzG,EAAS,UACCmjB,EAAA1c,EAAM,OAAO,EAAIzG,EAAS,KACxC,CACD,CAAA,EAEHwoB,EAAmBrF,CAAW,QACvB/iB,EAAO,CACN,QAAA,MAAM,+BAAgCA,CAAK,CAAA,QACnD,CACAsU,EAAa,EAAK,CACpB,CAAA,EACC,CAACoT,EAAgBW,CAAc,CAAC,EAEnC3tB,EAAAA,UAAU,IAAM,CACVgtB,EAAe,OAAS,GACTY,GACnB,EACC,CAACA,EAAkBZ,CAAc,CAAC,EAE/B,MAAAa,EAAqB5oB,GAA2C,CACpE,KAAM,CAAE,KAAAgY,EAAM,MAAAtO,GAAU1J,EAAE,OAC1BkoB,MAAqB,CAAE,GAAGhjB,EAAM,CAAC8S,CAAI,EAAG,CAAC,UAAW,MAAM,EAAE,SAASA,CAAI,EAAItO,EAAQ,OAAOA,CAAK,CAAI,EAAA,CAAA,EAGjGmf,EAAsBnf,GAAkB,CAC5Cwe,MAAqB,CAAE,GAAGhjB,EAAM,OAAQwE,CAAQ,EAAA,CAAA,EAG5Cof,EAAiB,SAAY,CAC3B,MAAAC,EAAajkB,EAAO,KAAUoB,GAAA,OAAOA,EAAE,GAAG,IAAM,OAAO+hB,EAAS,OAAO,CAAC,EAE9E,GAAIc,EACE,GAAA,CACF,MAAMC,EAAiB,CACrB,QAASD,EAAW,IACpB,KAAMA,EAAW,KACjB,OAAQd,EAAS,OACjB,YAAaA,EAAS,YACtB,YAAaA,EAAS,YACtB,WAAYA,EAAS,WACrB,WAAYA,EAAS,UAAA,EAGjBhoB,EAAW,MAAME,GAAM,KAAK,GAAGD,CAAO,6BAA8B8oB,EAAgB,CAAE,gBAAiB,EAAM,CAAA,EAEnHhB,KAA0B,CAAC,GAAG9iB,EAAMjF,EAAS,IAAI,CAAC,EACtCioB,EAAA,CACV,QAAS,GACT,KAAM,GACN,OAAQ,GACR,YAAa,EACb,YAAa,EACb,WAAY,EACZ,WAAYC,GAAe,IAAA,IAAM,CAAA,CAClC,QAEM9nB,EAAO,CACN,QAAA,MAAM,sBAAuBA,CAAK,CAC5C,MAEA,QAAQ,IAAI,iBAAiB,CAC/B,EAGI4oB,EAAc1jB,GAAoB,CACtC,MAAM2jB,EAAcnB,EAAe,KAAU7hB,GAAAA,EAAE,UAAYX,CAAO,EAC9D2jB,IACFb,EAAgB9iB,CAAO,EACXgjB,EAAA,CAAE,GAAGW,EAAa,WAAY,IAAI,KAAKA,EAAY,UAAU,CAAA,CAAG,EAC9E,EAGIC,EAAiB,MAAO5jB,GAAoB,CAChD,GAAI+iB,EACE,GAAA,CACF,MAAMroB,EAAW,MAAME,GAAM,MAAM,GAAGD,CAAO,iCAAiCqF,CAAO,GAAI+iB,EAAU,CAAE,gBAAiB,EAAM,CAAA,EAC1GN,KAAQ9iB,EAAK,IAAIwB,GACjCA,EAAM,UAAYnB,EAAU,CAAE,GAAGmB,EAAO,GAAGzG,EAAS,IAAA,EAASyG,CAAA,CAC9D,EAED2hB,EAAgB,IAAI,EACpBE,EAAY,IAAI,EAEhB,MAAM,6BAA6B,QAC5BloB,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAC/C,MAAM,wBAAwB,CAChC,CACF,EAGI+oB,EAAmB,IAAM,CAC7Bf,EAAgB,IAAI,EACpBE,EAAY,IAAI,CAAA,EAGZc,EAAe,MAAO9jB,GAAoB,CAC1C,GAAA,CACI,MAAApF,GAAM,OAAO,GAAGD,CAAO,iCAAiCqF,CAAO,GAAI,CAAE,gBAAiB,EAAM,CAAA,EAChFyiB,KAAQ9iB,EAAK,UAAgBwB,EAAM,UAAYnB,CAAO,CAAC,EACzE,QAAQ,IAAI,4BAA4B,QACjClF,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,CAC9C,CAAA,EAGImT,EAAS,IACZtY,MAAA,MAAA,CAAI,UAAU,+DAA+D,EAG1EouB,EAAoB5iB,GAAuB,CACzC,MAAAsD,EAAUwe,EAAgB9hB,EAAM,OAAO,GAAK,CAAE,MAAO,EAAG,QAAS,EAAG,cAAe,MAAO,EAE1F6iB,EAAgBvf,EAAQ,OAAS,EAEjCwf,EAAgB,OAAOxf,EAAQ,OAAO,GAAK,EAC3Cyf,EAAiB,KAAK,IAAI/iB,EAAM,YAAc8iB,EAAe,CAAC,EAAE,QAAQ,CAAC,EAGzEE,EAAe,WAAW1f,EAAQ,aAAa,GAAK,EAGpD0D,MAAY,KAClBA,EAAM,SAAS,EAAG,EAAG,EAAG,CAAC,EACzB,MAAMic,EAAa,IAAI,KAAKjjB,EAAM,UAAU,EAC5CijB,EAAW,SAAS,EAAG,EAAG,EAAG,CAAC,EAC9B,MAAMC,EAAgB,KAAK,IAAI,KAAK,MAAMD,EAAW,QAAQ,EAAIjc,EAAM,QAAA,IAAc,IAAO,GAAK,GAAK,GAAG,EAAG,CAAC,EAEvGmc,EAAsBD,EAAgB,EAAI,WAAWH,CAAc,EAAIG,EAAgB,EAEtF,MAAA,CACL,cAAAJ,EACA,eAAAC,EACA,cAAAF,EACA,aAAAG,EACA,cAAAE,EACA,oBAAAC,CAAA,CACF,EAGIC,EAAY/B,EAAe,IAAarhB,GAAA,CAC5C,KAAM,CAAE,cAAA8iB,EAAe,eAAAC,CAAe,EAAIH,EAAiB5iB,CAAK,EACzD,MAAA,CACL,KAAMA,EAAM,KACZ,SAAU8iB,EACV,UAAWC,CAAA,CACb,CACD,EAED1uB,OAAAA,EAAAA,UAAU,IAAM,EACY,SAAY,CAChC,GAAA,CAGF,MAAM+J,GAFW,MAAM3E,GAAM,IAAI,GAAGD,CAAO,+BAAgC,CAAE,gBAAiB,EAAM,CAAA,GAE5E,KAAK,IAAKwG,IAAgB,CAChD,GAAGA,EACH,WAAY,IAAI,KAAKA,EAAM,UAAU,CACrC,EAAA,EACFshB,EAAkBljB,CAAM,QACjBzE,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,CAC/C,CAAA,IAGgB,EACjB,CAACH,CAAO,CAAC,EAGTM,EAAA,KAAA,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAtF,MAAC,MAAI,CAAA,UAAU,8DACb,SAAAA,EAAA,IAAC,MAAI,CAAA,UAAU,+FACb,SAACA,EAAA,IAAA,KAAG,CAAA,UAAU,qBAAqB,SAAA,6BAA0B,CAC/D,CAAA,EACF,EACCsF,EAAAA,KAAA,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAAwI,GAAA,CAAK,UAAU,OACd,SAAA,CAAA9N,MAAC+N,GACC,CAAA,SAAA/N,EAAA,IAACgO,GAAU,CAAA,SAAA,sBAAoB,CAAA,EACjC,EACChO,MAAAkO,GAAA,CACC,gBAAC,MAAA,CAAI,UAAU,uDACb,SAAA,CAAA5I,OAAC,MACC,CAAA,SAAA,OAAC/D,GAAA,CAAM,QAAQ,YAAY,SAAU,aAAA,EACpC+D,EAAAA,KAAA6lB,GAAA,CAAO,cAAgB3c,GAAU,CAChC,MAAMhD,EAAQ5B,EAAO,KAAUoB,GAAAA,EAAE,MAAQwD,CAAK,EAC9Cwe,EAAqBhjB,IAAA,CACnB,GAAGA,EACH,QAASwE,EACT,MAAMhD,GAAA,YAAAA,EAAO,OAAQ,EACrB,EAAA,GAEF,SAAA,CAAAxL,MAACurB,GACC,CAAA,SAAAvrB,EAAA,IAACqrB,GAAY,CAAA,YAAY,cAAe,CAAA,EAC1C,EACCrrB,MAAAgsB,GAAA,CACE,SAAOpiB,EAAA,OACL5J,EAAA,IAAAssB,GAAA,CAA2B,MAAO9gB,EAAM,IACtC,SAAMA,EAAA,IAAA,EADQA,EAAM,GAEvB,CACD,EACH,CAAA,EACF,CAAA,EACF,SACC,MACC,CAAA,SAAA,OAACjK,GAAA,CAAM,QAAQ,SAAS,SAAM,SAAA,SAC7B4pB,GAAO,CAAA,cAAewC,EAAoB,MAAOZ,EAAS,OACzD,SAAA,CAAA/sB,MAACurB,GACC,CAAA,SAAAvrB,EAAA,IAACqrB,GAAY,CAAA,YAAY,eAAgB,CAAA,EAC3C,SACCW,GACC,CAAA,SAAA,OAACM,GAAA,CAAW,MAAM,gBAAgB,SAAa,gBAAA,QAC9CA,GAAA,CAAW,MAAM,OAAO,SAAI,OAAA,QAC5BA,GAAA,CAAW,MAAM,SAAS,SAAM,SAAA,CAAA,EACnC,CAAA,EACF,CAAA,EACF,SACC,MACC,CAAA,SAAA,OAAC/qB,GAAA,CAAM,QAAQ,cAAc,SAAY,eAAA,EACzCvB,EAAA,IAACQ,GAAA,CACC,GAAG,cACH,KAAK,cACL,KAAK,SACL,MAAOusB,EAAS,YAChB,SAAUW,EACV,YAAY,oBAAA,CACd,CAAA,EACF,SACC,MACC,CAAA,SAAA,OAACnsB,GAAA,CAAM,QAAQ,cAAc,SAAY,eAAA,EACzCvB,EAAA,IAACQ,GAAA,CACC,GAAG,cACH,KAAK,cACL,KAAK,SACL,MAAOusB,EAAS,YAChB,SAAUW,EACV,YAAY,oBAAA,CACd,CAAA,EACF,SACC,MACC,CAAA,SAAA,OAACnsB,GAAA,CAAM,QAAQ,aAAa,SAAW,cAAA,EACvCvB,EAAA,IAACQ,GAAA,CACC,GAAG,aACH,KAAK,aACL,KAAK,SACL,MAAOusB,EAAS,WAChB,SAAUW,EACV,YAAY,oBACZ,KAAK,MAAA,CACP,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAC1tB,EAAAA,IAAAuB,IAAM,SAAW,cAAA,SACjBkO,GACC,CAAA,SAAA,CAACzP,EAAAA,IAAA2P,GAAA,CAAe,QAAO,GACrB,SAAA3P,EAAA,IAACgB,EAAA,CACC,QAAS,UACT,UAAWZ,GACT,6CACA,CAAC2sB,EAAS,YAAc,uBAC1B,EAEC,SAAAA,EAAS,WAAa/a,EAAO+a,EAAS,WAAY,KAAK,EAAK/sB,EAAA,IAAA,OAAA,CAAK,SAAW,cAAA,CAAA,CAAA,EAEjF,EACCA,EAAAA,IAAA6P,GAAe,CAAA,UAAU,aACxB,SAAA7P,EAAA,IAACmP,GAAA,CACC,KAAK,SACL,SAAU4d,EAAS,WACnB,SAAWte,GAASA,GAAQue,EAAqBhjB,IAAA,CAAE,GAAGA,EAAM,WAAYyE,CAAO,EAAA,EAC/E,aAAY,EAAA,CAAA,EAEhB,CAAA,EACF,CAAA,EACF,EACCzO,EAAAA,IAAA,OAAI,UAAU,iBACb,SAACsF,EAAAA,KAAAtE,EAAO,CAAA,QAAS4sB,EAAgB,UAAU,SACzC,SAAA,CAAC5tB,EAAAA,IAAA6uB,GAAA,CAAW,UAAU,eAAe,EAAE,mBAAA,CAAA,CACzC,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAECvpB,EAAAA,KAAAwI,GAAK,CAAA,UAAU,OACd,SAAA,CAAA9N,MAAC+N,GACC,CAAA,SAAA/N,EAAA,IAACgO,GAAU,CAAA,SAAA,yBAAuB,CAAA,EACpC,EACChO,EAAAA,IAAAkO,GACC,CAAA,SAAClO,EAAAA,IAAA,OAAI,UAAU,kBACb,SAACsF,EAAAA,KAAAqlB,GACC,CAAA,SAAA,OAACC,GAAA,CACC,SAACtlB,EAAAA,KAAAylB,GACC,CAAA,SAAA,CAAC/qB,EAAAA,IAAAgrB,IAAU,SAAK,QAAA,EACfhrB,EAAAA,IAAAgrB,IAAU,SAAM,SAAA,EAChBhrB,EAAAA,IAAAgrB,IAAU,SAAK,QAAA,EACfhrB,EAAAA,IAAAgrB,IAAU,SAAY,eAAA,EACtBhrB,EAAAA,IAAAgrB,IAAU,SAAY,eAAA,EACtBhrB,EAAAA,IAAAgrB,IAAU,SAAW,cAAA,EACrBhrB,EAAAA,IAAAgrB,IAAU,SAAc,iBAAA,EACxBhrB,EAAAA,IAAAgrB,IAAU,SAAc,iBAAA,EACxBhrB,EAAAA,IAAAgrB,IAAU,SAAa,gBAAA,EACvBhrB,EAAAA,IAAAgrB,IAAU,SAAe,kBAAA,EACzBhrB,EAAAA,IAAAgrB,IAAU,SAAc,iBAAA,EACxBhrB,EAAAA,IAAAgrB,IAAU,SAAkB,qBAAA,EAC5BhrB,EAAAA,IAAAgrB,IAAU,SAAO,UAAA,CAAA,CAAA,CACpB,CAAA,CACF,QACCH,GAAA,CACE,SAAegC,EAAA,IAAarhB,GAAA,CACrB,KAAA,CACJ,cAAA8iB,EACA,eAAAC,EACA,cAAAF,EACA,aAAAG,EACA,cAAAE,EACA,oBAAAC,CAAA,EACEP,EAAiB5iB,CAAK,EAEpBsjB,EAAY5B,IAAiB1hB,EAAM,sBAGtCuf,GACC,CAAA,SAAA,CAAA/qB,EAAA,IAACirB,GAAU,CAAA,UAAU,oBAAqB,SAAAzf,EAAM,KAAK,EACpDxL,EAAAA,IAAAirB,IACE,SACC6D,EAAAxpB,EAAA,KAAC6lB,GAAA,CACC,cAAgB3c,GAAU6e,EAAoBrjB,GAAAA,EAAO,CAAE,GAAGA,EAAM,OAAQwE,CAAA,EAAU,IAAI,EACtF,aAAc4e,GAAA,YAAAA,EAAU,OAExB,SAAA,CAACptB,EAAAA,IAAAurB,IACC,SAACvrB,MAAAqrB,GAAA,CAAY,YAAa7f,EAAM,MAAQ,CAAA,EAC1C,SACCwgB,GACC,CAAA,SAAA,OAACM,GAAA,CAAW,MAAM,gBAAgB,SAAa,gBAAA,QAC9CA,GAAA,CAAW,MAAM,OAAO,SAAI,OAAA,QAC5BA,GAAA,CAAW,MAAM,SAAS,SAAM,SAAA,CAAA,EACnC,CAAA,CAAA,CAAA,EAGF9gB,EAAM,OAEV,EACCxL,EAAA,IAAAirB,GAAA,CACE,SACC6D,EAACxpB,OAAAmK,GACC,CAAA,SAAA,CAACzP,EAAAA,IAAA2P,IAAe,QAAO,GACrB,SAAC3P,MAAAgB,EAAO,CAAA,QAAS,UACd,SAAUosB,GAAA,MAAAA,EAAA,WAAapb,EAAOob,EAAS,WAAY,KAAK,QAAK,OAAK,CAAA,SAAA,cAAW,CAAA,CAChF,CAAA,CACF,EACCptB,EAAAA,IAAA6P,GAAe,CAAA,UAAU,aACxB,SAAA7P,EAAA,IAACmP,GAAA,CACC,KAAK,SACL,SAAUie,GAAA,YAAAA,EAAU,WACpB,SAAW3e,GAASA,GAAQ4e,EAAYrjB,GAAQA,EAAO,CAAE,GAAGA,EAAM,WAAYyE,CAAA,EAAS,IAAI,EAC3F,aAAY,EAAA,CAAA,EAEhB,CAAA,EACF,EAEAuD,EAAO,IAAI,KAAKxG,EAAM,UAAU,EAAG,UAAU,EAEjD,EACCxL,EAAAA,IAAAirB,IACE,SACC6D,EAAA9uB,EAAA,IAACQ,GAAA,CACC,KAAK,SACL,MAAO4sB,GAAA,YAAAA,EAAU,YACjB,SAAWtoB,GAAMuoB,EAAYrjB,GAAQA,EAAO,CAAE,GAAGA,EAAM,YAAa,OAAOlF,EAAE,OAAO,KAAK,GAAM,IAAI,CAAA,CAAA,EAGrG,IAAI0G,EAAM,YAAY,eAAe,CAAC,GAE1C,EACCxL,EAAAA,IAAAirB,IACE,SACC6D,EAAA9uB,EAAA,IAACQ,GAAA,CACC,KAAK,SACL,MAAO4sB,GAAA,YAAAA,EAAU,YACjB,SAAWtoB,GAAMuoB,EAAYrjB,GAAQA,EAAO,CAAE,GAAGA,EAAM,YAAa,OAAOlF,EAAE,OAAO,KAAK,GAAM,IAAI,CAAA,CAAA,EAGrG,IAAI0G,EAAM,YAAY,eAAe,CAAC,GAE1C,EACCxL,EAAAA,IAAAirB,IACE,SACC6D,EAAA9uB,EAAA,IAACQ,GAAA,CACC,KAAK,SACL,KAAK,OACL,MAAO4sB,GAAA,YAAAA,EAAU,WACjB,SAAWtoB,GAAMuoB,EAAYrjB,GAAQA,EAAO,CAAE,GAAGA,EAAM,WAAY,OAAOlF,EAAE,OAAO,KAAK,GAAM,IAAI,CAAA,GAGpG0G,EAAM,WAAW,QAAQ,CAAC,EAE9B,QAECyf,GAAW,CAAA,SAAAlc,QAAauJ,EAAA,CAAA,CAAO,EAAK,IAAI+V,EAAc,eAAe,OAAO,CAAC,GAAG,QAChFpD,GAAW,CAAA,SAAAlc,QAAauJ,EAAA,CAAA,CAAO,EAAK,IAAIgW,EAAc,eAAe,OAAO,CAAC,GAAG,EAChFtuB,EAAAA,IAAAirB,IAAW,SAAYlc,EAAC/O,EAAA,IAAAsY,IAAO,EAAKkW,EAAa,QAAQ,CAAC,EAAE,QAC5DvD,GAAA,CAAW,SAAI,IAAA,KAAK,aAAa,QAAS,CAAE,sBAAuB,CAAG,CAAA,EAAE,OAAO,OAAOsD,CAAc,CAAC,EAAE,EACvGvuB,EAAAA,IAAAirB,IAAW,SAAcyD,EAAA,SACzBzD,GAAU,CAAA,SAAA,CAAA,IAAE,IAAI,KAAK,aAAa,QAAS,CAAE,sBAAuB,CAAG,CAAA,EAAE,OAAO0D,CAAmB,CAAA,EAAE,EACtG3uB,EAAA,IAACirB,GACE,CAAA,SAAA6D,EAEGxpB,OAAAwG,EAAAA,SAAA,CAAA,SAAA,CAAC9L,EAAAA,IAAAgB,EAAA,CAAO,QAAS,IAAMitB,EAAeziB,EAAM,OAAO,EAAG,UAAU,OAAO,SAAI,OAAA,EAC1ExL,EAAAA,IAAAgB,EAAO,CAAA,QAASktB,EAAkB,QAAQ,UAAU,SAACluB,EAAAA,IAAAgd,GAAA,CAAE,UAAU,SAAA,CAAU,EAAE,CAAA,CAChF,CAAA,EAEA1X,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,OAACtE,EAAO,CAAA,KAAM,KAAM,QAAS,IAAM+sB,EAAWviB,EAAM,OAAO,EAAI,eAACujB,GAAM,CAAA,UAAU,SAAU,CAAA,EAAE,QAC3F/tB,EAAO,CAAA,KAAM,KAAM,QAAS,IAAMmtB,EAAa3iB,EAAM,OAAO,EAAG,QAAQ,cAAc,SAACxL,MAAAgvB,GAAO,CAAA,UAAU,SAAU,CAAA,EAAE,CAAA,CAAA,CACtH,CAAA,CAEJ,CAAA,GA/FaxjB,EAAM,OAgGrB,CAEH,CAAA,EACH,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAAA,EACF,SACCsC,GACC,CAAA,SAAA,CAAA9N,MAAC+N,GACC,CAAA,SAAA/N,EAAA,IAACgO,GAAU,CAAA,SAAA,gBAAc,CAAA,EAC3B,QACCE,GACC,CAAA,SAAAlO,EAAA,IAACivB,GAAoB,CAAA,MAAM,OAAO,OAAQ,IACxC,SAAA3pB,OAAC4pB,GAAS,CAAA,KAAMN,EACd,SAAA,CAAC5uB,EAAAA,IAAAmvB,GAAA,CAAM,QAAQ,OAAO,QACrBC,GAAM,EAAA,EACNpvB,EAAAA,IAAAwH,GAAQ,CAAA,UAAYgH,GAAU,IAAI,OAAOA,CAAK,EAAE,eAAgB,CAAA,GAAI,QACpE6gB,GAAI,CAAA,QAAQ,WAAW,QAAQ,IAAI,KAAK,UAAU,QAClDA,GAAI,CAAA,QAAQ,YAAY,QAAQ,IAAI,KAAK,UAAU,CAAA,CACtD,CAAA,CACF,CAAA,EACF,CAAA,EACF,CAAA,EACF,GACF,CAEJ,CCjhBC,MAAMC,GAAgC,IAE/BhqB,EAAA,KAAC,MAAI,CAAA,UAAU,gBACf,SAAA,CAAAtF,EAAA,IAACkJ,GAAmB,EAAA,QACrB,MAAI,CAAA,UAAU,gCACb,SAAAlJ,MAAC4sB,IAA0B,CAAA,EAC7B,CACF,CAAA,CAAA,ECqCJ,SAAwB2C,IAAa,qBAC3B,MAAAvqB,EAAiC,gCACjC,CAAE,QAAAqF,GAAY2P,KAEd,CAACwV,EAAMC,CAAO,EAAIhwB,WAAsB,CAC1C,CAAE,GAAI,WAAY,MAAO,WAAY,YAAa,GAAGuF,CAAO,+BAA+BqF,CAAO,GAAI,QAAS,CAAC,EAAG,KAAM,CAAC,EAAG,YAAa,IAAK,EAC/I,CAAE,GAAI,aAAc,MAAO,aAAc,YAAa,GAAGrF,CAAO,gCAAgCqF,CAAO,GAAI,QAAS,CAAC,EAAG,KAAM,CAAC,EAAG,YAAa,IAAK,EACpJ,CAAE,GAAI,SAAU,MAAO,SAAU,YAAa,GAAGrF,CAAO,6BAA6BqF,CAAO,GAAI,QAAS,CAAC,EAAG,KAAM,CAAC,EAAG,YAAa,IAAK,EACzI,CAAE,GAAI,eAAgB,MAAO,gBAAiB,YAAa,GAAGrF,CAAO,4BAA4BqF,CAAO,GAAI,QAAS,CAAC,EAAG,KAAM,CAAC,EAAG,YAAa,IAAK,CAAA,CACxJ,EACK,CAACqlB,EAAWC,CAAY,EAAIlwB,EAAAA,SAAS+vB,EAAK,CAAC,EAAE,EAAE,EAC/C,CAACI,EAAaC,CAAc,EAAIpwB,WAAS,CAAC,EAC1C,CAACqwB,EAAoBC,CAAqB,EAAItwB,EAAAA,SAAsB,IAAI,GAAK,EAC7E,CAACgd,EAASC,CAAU,EAAIjd,WAAS,EAAK,EACtC,CAACuwB,EAAeC,CAAgB,EAAIxwB,WAAS,EAAK,EAClDywB,EAAc,IACd,CAACC,EAAYC,CAAa,EAAI3wB,EAAA,SAAc,CAAE,CAAA,EAC9C4wB,EAAW3mB,SAA4D,CAAA,CAAE,EACzE4mB,EAAgB,EAAI,GAAK,IACzBrW,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBG,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAGrD,CAAC8hB,EAAYC,CAAa,EAAI/wB,WAAwB,IAAI,EAC1D,CAACgxB,EAAWC,CAAY,EAAIjxB,WAAyB,KAAK,EAE1DkxB,EAAmBC,GAAqB,CAC1CjB,EAAaiB,CAAQ,EACrBf,EAAe,CAAC,EACME,EAAA,IAAI,GAAK,CAAA,EAG7Bc,EAAe/mB,EAAA,YACjB,MAAOgnB,EAAeC,GAA4B,GAAIC,GAA2B,KAAU,CACvF,GAAIvU,EAAS,OAEbC,EAAW,EAAI,EAEf,MAAMuU,GAAMzB,EAAK,KAAUltB,IAAAA,GAAE,KAAOwuB,CAAK,EACzC,GAAI,CAACG,GAAK,CACE,QAAA,KAAK,yBAAyBH,CAAK,EAAE,EAC7CpU,EAAW,EAAK,EAChB,MACJ,CAEA,MAAMwU,EAAc,CAChB,GAAGH,GACH,GAAI1W,GAAa,CAAE,UAAAA,CAAU,EAC7B,GAAIC,GAAW,CAAE,QAAAA,CAAQ,CAAA,EAGvB6W,EAAW,GAAGL,CAAK,IAAIzW,GAAa,SAAS,IAAIC,GAAW,SAAS,GACrE8W,GAAaf,EAAS,QAAQc,CAAQ,EACtCE,GAAM,KAAK,MAMjB,GAJI,CAACL,IAAmBF,IAAU,YACvB,OAAAT,EAAS,QAAQc,CAAQ,EAGhC,CAACH,IAAmBI,IAAcC,GAAMD,GAAW,UAAYd,EAAe,CAC9Eb,MACI6B,GAAS,IACLhvB,IAAAA,GAAE,KAAOwuB,EAAQ,CAAE,GAAGxuB,GAAG,KAAM8uB,GAAW,KAAM,YAAaA,GAAW,SAAc,EAAA9uB,EAC1F,CAAA,EAEJoa,EAAW,EAAK,EAChB,MACJ,CAEI,GAAA,CACM,MAAA3X,GAAW,MAAME,GAAM,KAAKgsB,GAAI,YAAaC,EAAa,CAAE,gBAAiB,EAAA,CAAM,EAErF,GAAAnsB,GAAS,KAAK,QAAS,CAEvB,MAAMub,GADSvb,GAAS,KACJ,GAAG+rB,CAAK,MAAM,GAAK,GAC/B,QAAA,IAAI,oBAAqBA,EAAOxQ,EAAI,EAEtCiR,MAAAA,GAAuB,OAAO,KAAKjR,GAAK,CAAC,GAAK,EAAE,EAAE,IAAYsF,KAAA,CAChE,GAAIA,GACJ,OAAQA,GAAI,OAAO,CAAC,EAAE,cAAgBA,GAAI,MAAM,CAAC,EACjD,YAAaA,GACb,KAAOpX,IACCoX,KAAQ,UAAY,MAAM,QAAQpX,EAAK,EAChCA,GAAM,OAAS,EAAIA,GAAM,CAAC,EAAE,YAAc,YAE9C,OAAOA,EAAK,CAEzB,EAAA,EAEM,QAAA,IAAI,mBAAoB+iB,EAAO,EAEvC9B,MACI6B,GAAS,IACLhvB,IAAAA,GAAE,KAAOwuB,EAAQ,CAAE,GAAGxuB,GAAG,QAAAivB,GAAS,KAAAjR,GAAM,YAAa+Q,EAAQ,EAAA/uB,EACjE,CAAA,EAGJ+tB,EAAS,QAAQc,CAAQ,EAAI,CAAE,KAAA7Q,GAAM,UAAW+Q,GAAI,MAE5C,QAAA,MAAM,4BAA4BP,CAAK,EAAE,QAEhD3rB,GAAO,CACZ,QAAQ,MAAM,2BAA2B2rB,CAAK,IAAK3rB,EAAK,CAAA,QAC1D,CACEuX,EAAW,EAAK,CACpB,CACJ,EACA,CAAC8S,EAAM/S,EAAS4T,EAAUhW,EAAWC,CAAO,CAAA,EAGhDza,EAAAA,UAAU,IAAM,CACZ,MAAM2xB,EAAc,CAChB,GAAGrB,EACH,GAAI9V,GAAa,CAAE,UAAAA,CAAU,EAC7B,GAAIC,GAAW,CAAE,QAAAA,CAAQ,CAAA,EAG7BuW,EAAanB,EAAWM,EAAgBwB,EAAc,CAAI,EAAA,EAAAxB,CAA4B,GACvF,CAACN,EAAWjhB,EAAMuhB,EAAeG,CAAU,CAAC,EAEzC,MAAAsB,EAAiB,CAACC,EAAoBC,KAAiC,CACzE,MAAMC,GAA2C,CAC7C,OAAQ,QACR,aAAc,OACd,WAAY,OACZ,SAAU,QAAA,EAGRC,GAAyC,CAC3C,OAAQ,SACR,aAAc,cACd,WAAY,eACZ,SAAU,QAAA,EAGRC,EAAgBF,GAAiBF,CAAU,EAC3CK,EAAUF,GAAeH,CAAU,EAEzC,GAAII,GAAiBC,EAAS,CACpB,MAAAC,GAAcL,GAAQG,CAAa,EAEzC,GAAIE,GAAa,CACb,MAAMC,GAAqC,CACvC,CAACF,CAAO,EAAGC,EAAA,EAIXN,IAAe,cAAgBC,GAAQ,QACzBM,GAAA,cAAmBN,GAAQ,OAI7CvB,EAAc6B,EAAa,EAC3BhC,EAAiB,EAAI,EACrBN,EAAa,UAAU,CAAA,MAEvB,QAAQ,KAAK,8BAA8BmC,CAAa,WAAYH,EAAO,CAC/E,MAEQ,QAAA,KAAK,gDAAgDD,CAAU,EAAE,CAC7E,EAGEQ,EAAkBC,GAAyB,CAC7CpC,EAA8B/lB,IAAA,CACpB,MAAAooB,GAAS,IAAI,IAAIpoB,EAAI,EACvB,OAAAooB,GAAO,IAAID,CAAY,EACvBC,GAAO,OAAOD,CAAY,EAE1BC,GAAO,IAAID,CAAY,EAEpBC,EAAA,CACV,CAAA,EAGCC,EAAoB,CAACC,EAAoBC,GAAgB,EAAGrmB,GAAe,KAAO,CAC9E,MAAA6K,GAAc7K,GAAO,GAAGA,EAAI,IAAIomB,EAAS,IAAI,GAAKA,EAAS,KAC3DnpB,EAAa2mB,EAAmB,IAAI/Y,EAAW,EAGjD,OAACzR,OAAAoH,GAAM,SAAN,CACG,SAAA,CAAApH,OAAC,MAAG,UAAW,GAAG6D,EAAa,cAAgB,UAAU,GACrD,SAAA,CAAAnJ,EAAAA,IAAC,MAAG,UAAU,wDACV,SAACsF,EAAA,KAAA,MAAI,CAAA,MAAO,CAAE,WAAY,GAAGitB,GAAQ,EAAE,IAAK,EAAG,QAAS,IAAML,EAAenb,EAAW,EAAG,UAAU,mCAChG,SAAA,CAAAub,EAAS,cAAc,OAAS,GAC5BtyB,EAAAA,IAAA,SAAA,CAAO,UAAU,OACb,SAAAmJ,EAAcnJ,MAAAuL,GAAA,CAAY,UAAU,SAAU,CAAA,QAAML,GAAa,CAAA,UAAU,SAAU,CAAA,EAC1F,EAEHonB,EAAS,IAAA,CAAA,CACd,CAAA,CACJ,EACAtyB,EAAA,IAAC,KAAA,CACG,UAAU,6EACV,QAAS,IAAMyxB,EAAe/B,EAAW4C,CAAQ,EAEhD,WAAS,QAAQ,QAAA,CACtB,QACC,KAAG,CAAA,UAAU,sCAAuC,SAAAA,EAAS,QAAQ,UAAU,QAC/E,KAAG,CAAA,UAAU,sCAAuC,SAAAA,EAAS,QAAQ,KAAK,QAC1E,KAAG,CAAA,UAAU,sCAAuC,SAAAA,EAAS,QAAQ,YAAY,QACjF,KAAG,CAAA,UAAU,sCAAuC,SAAAA,EAAS,QAAQ,gBAAgB,QACrF,KAAG,CAAA,UAAU,sCAAuC,SAAAA,EAAS,QAAQ,eAAe,QACpF,KAAG,CAAA,UAAU,sCAAuC,SAAAA,EAAS,QAAQ,YAAY,QACjF,KAAG,CAAA,UAAU,sCAAuC,SAAAA,EAAS,QAAQ,IAAI,QACzE,KAAG,CAAA,UAAU,sCAAuC,SAAAA,EAAS,QAAQ,OAAO,CAAA,EACjF,EACCnpB,GACGmpB,EAAS,cAAc,IACnBE,GAAAH,EAAkBG,EAAaD,GAAQ,EAAGxb,EAAW,CACzD,CAAA,GA9BaA,EA+BrB,CAAA,EAGF0b,EAAcC,GAAqB,CACjCnC,IAAemC,EACfhC,EAA2BiC,IAAAA,KAAc,MAAQ,OAAS,KAAM,GAEhEnC,EAAckC,CAAQ,EACtBhC,EAAa,KAAK,EACtB,EAEEkC,EAAoB,IAAM,CAC5B,MAAMlB,EAAalC,EAAK,KAAYyB,GAAAA,EAAI,KAAOvB,CAAS,EACxD,GAAI,CAACgC,GAAcA,EAAW,KAAO,aAAc,MAAO,CAAE,QAAS,CAAC,EAAG,KAAM,CAAA,GAE/E,IAAImB,GAAanB,EAAW,KAExBnB,IACAsC,GAAa,CAAC,GAAGA,EAAU,EAAE,KAAK,CAAC3d,EAAGlK,IAAM,CAClC,MAAA8nB,GAAS5d,EAAEqb,CAAU,EACrBwC,GAAS/nB,EAAEulB,CAAU,EAE3B,GAAI,OAAOuC,IAAW,UAAY,OAAOC,IAAW,SAChD,OAAOtC,IAAc,MAAQqC,GAASC,GAASA,GAASD,GAG5D,MAAME,GAAU,OAAOF,IAAU,EAAE,EAAE,YAAY,EAC3CG,GAAU,OAAOF,IAAU,EAAE,EAAE,YAAY,EAEjD,OAAIC,GAAUC,GAAgBxC,IAAc,MAAQ,GAAK,EACrDuC,GAAUC,GAAgBxC,IAAc,MAAQ,EAAI,GACjD,CAAA,CACV,GAGC,MAAAyC,IAActD,EAAc,GAAKM,EACjCiD,GAAWD,GAAahD,EACvB,MAAA,CACH,QAASwB,EAAW,QACpB,KAAMmB,GAAW,MAAMK,GAAYC,EAAQ,CAAA,CAC/C,EAGE,CAAE,QAAA5B,EAAS,KAAAjR,CAAK,EAAIsS,EAAkB,EACtCQ,EAAa,KAAK,QAAM/nB,EAAAmkB,EAAK,KAAKyB,GAAOA,EAAI,KAAOvB,CAAS,IAArC,YAAArkB,EAAwC,KAAK,SAAU,GAAK6kB,CAAW,EAE/FmD,EAAkB,CACpB,CAAE,GAAI,OAAQ,OAAQ,MAAO,EAC7B,CAAE,GAAI,WAAY,OAAQ,UAAW,EACrC,CAAE,GAAI,YAAa,OAAQ,MAAO,EAClC,CAAE,GAAI,OAAQ,OAAQ,MAAO,EAC7B,CAAE,GAAI,cAAe,OAAQ,aAAc,EAC3C,CAAE,GAAI,kBAAmB,OAAQ,aAAc,EAC/C,CAAE,GAAI,iBAAkB,OAAQ,YAAa,EAC7C,CAAE,GAAI,cAAe,OAAQ,QAAS,EACtC,CAAE,GAAI,MAAO,OAAQ,KAAM,EAC3B,CAAE,GAAI,SAAU,OAAQ,SAAU,CAAA,EAGtC,SAASC,IAAgB,cAEhB,MAAI,CAAA,UAAU,kBACX,SAAChuB,EAAA,KAAA,QAAA,CAAM,UAAU,wCACb,SAAA,OAAC,QACG,CAAA,SAACtF,EAAA,IAAA,KACI,CAAA,SAAA,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAM,EAAE,IAAI,CAAC2I,EAAOzF,KACzDlD,EAAAA,IAAA,KAAe,CAAA,UAAU,qBACtB,SAACA,EAAAA,IAAAoO,GAAS,CAAA,UAAW,OAAOzF,CAAK,EAAI,CAAA,CADhC,EAAAzF,EAET,CACH,CACL,CAAA,EACJ,QACC,QACI,CAAA,SAAA,MAAM,KAAK,CAAE,OAAQ,EAAG,EAAE,IAAI,CAAC+L,EAAG/L,KAC9BlD,EAAA,IAAA,KAAA,CACI,UAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAM,EAAE,IAAI,CAAC2I,GAAO4qB,WACzD,KAAa,CAAA,UAAU,qBACpB,SAACvzB,EAAAA,IAAAoO,GAAA,CAAS,UAAW,OAAOzF,EAAK,GAAI,CAAA,EADhC4qB,EAET,CACH,CALI,EAAArwB,EAMT,CACH,EACL,CAAA,CACJ,CAAA,CACJ,CAAA,CAER,CAEA,OAACoC,EAAA,KAAA,MAAI,CAAA,UAAU,SACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACX,SAAA,CAAAtF,EAAA,IAAC+I,GAAW,EAAA,QACX,KAAA,CAAG,UAAU,kCAAkC,SAA2B,8BAAA,CAAA,EAC/E,EACCzD,EAAAA,KAAA,MAAI,CAAA,UAAU,2DACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uEACX,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,iBAAiB,KAAK,UAChC,SAAAwvB,EAAK,IACFyB,GAAA3rB,EAAA,KAACtE,EAAA,CAEG,QAAS0uB,IAAcuB,EAAI,GAAK,UAAY,QAC5C,QAAS,IAAMN,EAAgBM,EAAI,EAAE,EACrC,UAAU,WAET,SAAA,CAAAA,EAAI,KAAO,YAAejxB,EAAAA,IAAAwzB,GAAA,CAAQ,UAAU,eAAe,EAC3DvC,EAAI,KAAO,cAAiBjxB,EAAAA,IAAAyzB,GAAA,CAAO,UAAU,eAAe,EAC5DxC,EAAI,KAAO,UAAajxB,EAAAA,IAAA0zB,GAAA,CAAI,UAAU,eAAe,EACrDzC,EAAI,KAAO,gBAAmBjxB,EAAAA,IAAA2zB,GAAA,CAAU,UAAU,eAAe,EACjE1C,EAAI,MACJvB,IAAcuB,EAAI,IACdjxB,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,CAAA,CAAA,EAXnEixB,EAAI,EAchB,CAAA,EACL,EACC3rB,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACX,SAAA,CAAAtF,EAAA,IAAC6Q,GAAA,CAAA,CAED,QACC7P,EAAA,CAAO,QAAQ,UAAU,KAAK,OAC3B,SAAAhB,EAAA,IAAC4zB,GAAO,CAAA,UAAW,WAAW5D,EAAgB,gBAAkB,eAAe,EAAI,CAAA,EACvF,QACC1oB,GACG,CAAA,SAAChC,EAAAA,KAAAkC,GACG,CAAA,SAAA,CAACxH,EAAA,IAAA0H,GAAA,CAAe,QAAO,GACnB,SAAC1H,EAAAA,IAAAgB,EAAA,CAAO,QAAQ,UAAU,KAAK,OAAO,QAAS,IAAM6vB,EAAanB,EAAW,CAAA,EAAI,EAAK,EAClF,SAAC1vB,EAAA,IAAAoY,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,CAAA,CACtE,EACJ,IACCjP,EAAAgiB,EAAK,KAAKltB,GAAKA,EAAE,KAAOotB,CAAS,IAAjC,YAAAliB,EAAoC,cACjCxN,EAAA,IAAC4H,GACG,CAAA,SAACtC,EAAAA,KAAA,IAAE,CAAA,SAAA,CAAA,iBAAe,IAAI,OAAKoW,EAAA8T,EAAK,KAAUltB,GAAAA,EAAE,KAAOotB,CAAS,IAAjC,YAAAhU,EAAoC,cAAe,CAAC,EAAE,eAAe,CAAA,CAAA,CAAE,CAAA,CACtG,CAAA,CAAA,CAER,CAAA,CACJ,CAAA,EACJ,CAAA,EACJ,EAECpW,EAAAA,KAAA,MAAI,CAAA,UAAU,YACV,SAAA,CACG0qB,GAAC1qB,EAAA,KAAA,MAAI,CAAA,UAAU,4DACX,SAAA,CAACtF,MAAA,OAAA,CAAK,UAAU,oCAAqC,SAAA,OAAO,QAAQmwB,CAAU,EAAE,IAAI,CAAC,CAACvK,EAAKpX,EAAK,IAAM,GAAGoX,CAAG,KAAKpX,EAAK,EAAE,EAAE,KAAK,IAAI,EAAE,EACrIxO,EAAA,IAACgB,EAAA,CACG,QAAQ,QACR,KAAK,KACL,QAAS,IAAM,CACXivB,EAAiB,EAAK,EACtBG,EAAc,CAAE,CAAA,EAChBT,EAAa,UAAU,EACdU,EAAA,QAAQ,SAAc,KAClBQ,EAAA,WAAY,GAAI,EAAK,CACtC,EACA,UAAU,iEAEV,SAAC7wB,EAAAA,IAAAgd,GAAE,CAAA,UAAU,UAAU,CAAA,CAC3B,CAAA,EACJ,EAEH1X,EAAAA,KAAA,MAAI,CAAA,UAAU,oDACX,SAAA,OAAC,MAAA,CAAI,UAAU,8BACV,SAAUmX,EAAAzc,EAAA,IAACszB,IAAc,CAAA,EACtBhuB,EAAAA,KAAC,QAAM,CAAA,UAAU,SACb,SAAA,CAACtF,EAAA,IAAA,QAAA,CAAM,UAAU,iCACb,SAACA,EAAAA,IAAA,KAAA,CACK,cAAc,aAAeqzB,EAAkB9B,GAAS,IACtDsC,GAAC7zB,EAAAA,IAAA,MAAmB,UAAU,6GAA6G,QAAS,IAAMyyB,EAAWoB,EAAO,EAAE,EAC9K,SAACvuB,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACV,SAAA,CAAOuuB,EAAA,OACPtD,IAAesD,EAAO,GACnBpD,IAAc,YAASqD,IAAQ,UAAU,SAAU,CAAA,QAAMC,IAAU,UAAU,SAAU,CAAA,QAEtFC,GAAA,CAAY,UAAU,UAAU,CAAA,CAEzC,CAAA,CARS,EAAAH,EAAO,EASpB,CACC,CAAA,CACL,CAAA,CACJ,EACCvuB,EAAAA,KAAA,QAAM,CAAA,UAAU,oCACZ,SAAA,CAAcoqB,IAAA,cACX/T,EAAA6T,EAAK,KAAKyB,GAAOA,EAAI,KAAO,YAAY,IAAxC,YAAAtV,EAA2C,KAAK,IAAK2W,GACjDD,EAAkBC,CAAQ,GAG9BhS,EAAK,IAAI,CAAC2T,EAAKC,KACVl0B,EAAAA,IAAA,KAAA,CAAW,UAAU,mBACjB,SAAQuxB,EAAA,IAAKsC,IAAW,CACrB,MAAMrlB,GAAQqlB,GAAO,KAAKI,EAAIJ,GAAO,WAAW,CAAC,EAC3CM,EAAiBN,GAAO,KAAO,SAC/BO,EAAkBP,GAAO,KAAO,WAChCQ,GAAiBR,GAAO,KAAO,SAC/BS,GAAa,OAAO9lB,IAAU,UAAYA,GAAM,KAAK,EAAE,YAAkB,IAAA,YAEzE+lB,GAAkBlU,IAAmB,CACvC,OAAQA,GAAO,KAAO,EAAA,YAAe,EAAA,CACjC,IAAK,cAAsB,MAAA,4BAC3B,IAAK,UAAkB,MAAA,gCACvB,IAAK,eAAuB,MAAA,0BAC5B,IAAK,mBAA2B,MAAA,gCAChC,IAAK,WAAmB,MAAA,8BACxB,QAAgB,MAAA,2BACpB,CAAA,EAGEmU,GAAa,IAAM,CACrB,GAAIL,gBAEK,MAAI,CAAA,UAAW,qBAAqBG,GAAa,iBAAmB,cAAc,GAC9E,SAAA,CAAaA,GAAAt0B,EAAA,IAACgZ,IAAY,UAAU,cAAA,CAAe,EAAMhZ,EAAAA,IAAAid,GAAA,CAAY,UAAU,eAAe,EAC9FzO,IACL,EAIR,GAAI6lB,GAAgB,CAChB,MAAMI,GAAcjmB,GAAQ,OAAOA,EAAK,EAAI,GACtCkmB,GAAaH,GAAeE,EAAW,EAC7C,OACKz0B,EAAAA,IAAA,MAAA,CAAI,UAAW,uDAAuD00B,EAAU,kBAAmB,QAAS,IAAMjD,EAAe/B,EAAWuE,CAAG,EAC3I,SACLQ,GAAA,CAER,CACA,OAAOZ,GAAO,KAAOA,GAAO,KAAKrlB,EAAK,EAAIA,EAAA,EAI1C,OAAAxO,EAAA,IAAC,KAAA,CAEG,UAAW,uDAAuDo0B,EAAkB,mDAAqD,EAAE,GAC3I,QAAS,IAAMA,GAAmB3C,EAAe/B,EAAWuE,CAAG,EAE9D,SAAWO,GAAA,CAAA,EAJPX,GAAO,EAAA,CAKhB,CAEP,CAAA,EAlDIK,EAmDT,CACH,GAEHxE,IAAc,eAAe9T,GAAA4T,EAAK,KAAKyB,GAAOA,EAAI,KAAO,YAAY,IAAxC,YAAArV,GAA2C,KAAK,UAAW,EAAI0E,EAAK,SAAW,IACzGtgB,MAAA,KACG,CAAA,SAAAA,EAAA,IAAC,KAAA,CACG,SAAU0vB,IAAc,aAAe2D,EAAkB9B,GAAS,OAClE,UAAU,8CACb,SAAA,mBAAA,CAAA,EAGL,CAAA,EAER,CAAA,CAAA,CACJ,CAAA,CAER,EACCjsB,EAAAA,KAAA,MAAI,CAAA,UAAU,kFACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wBAAwB,SAAA,CAAA,YACxBsqB,EAAc,GAAKM,EAAe,EAAE,OAAK,KAAK,IAAIN,EAAcM,IAAarU,GAAA2T,EAAK,KAAUltB,GAAAA,EAAE,KAAOotB,CAAS,IAAjC,YAAA7T,GAAoC,KAAK,SAAU,CAAC,EAAE,SAAKC,EAAA0T,EAAK,KAAUltB,GAAAA,EAAE,KAAOotB,CAAS,IAAjC,YAAA5T,EAAoC,KAAK,SAAU,EAAE,UAAA,EAC5M,EACCxW,EAAAA,KAAA,MAAI,CAAA,UAAU,8BACX,SAAA,CAAAA,EAAA,KAACtE,EAAA,CACG,QAAQ,UACR,KAAK,KACL,QAAS,IAAM6uB,EAAe7lB,GAAQ,KAAK,IAAIA,EAAO,EAAG,CAAC,CAAC,EAC3D,SAAU4lB,IAAgB,EAE1B,SAAA,CAAC5vB,EAAAA,IAAAiL,GAAA,CAAY,UAAU,eAAe,EAAE,UAAA,CAAA,CAE5C,EACC3F,EAAAA,KAAA,MAAI,CAAA,UAAU,wBAAwB,SAAA,CAAA,QAC7BsqB,EAAY,OAAKwD,CAAA,EAC3B,EACA9tB,EAAA,KAACtE,EAAA,CACG,QAAQ,UACR,KAAK,KACL,QAAS,IAAM6uB,EAAe7lB,GAAQ,KAAK,IAAIA,EAAO,EAAGopB,CAAU,CAAC,EACpE,SAAUxD,IAAgBwD,EAC7B,SAAA,CAAA,OAEIpzB,EAAAA,IAAAkL,GAAa,CAAA,UAAU,eAAe,CAAA,CAAA,CAC3C,CAAA,EACJ,CAAA,EACJ,CAAA,EACJ,CAAA,EACJ,CAAA,EACJ,GACJ,CAEJ,CCpiBO,MAAMooB,GAAgB,IACxBhuB,EAAAA,KAAAqlB,GAAA,CAAM,UAAU,yBACf,SAAA,CAAC3qB,EAAA,IAAA4qB,GAAA,CAAY,UAAU,gCACrB,SAAC5qB,EAAAA,IAAA+qB,GAAA,CACE,SAAM,MAAA,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC9b,EAAG/L,IACvBlD,EAAAA,IAAAirB,GAAA,CAAsB,UAAU,0CAC/B,SAACjrB,MAAAoO,GAAA,CAAS,UAAU,YAAA,CAAa,CADnB,EAAAlL,CAEhB,CACD,CACH,CAAA,EACF,QACC2nB,GACE,CAAA,SAAA,MAAM,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC5b,EAAG0lB,IACzB30B,EAAA,IAAC+qB,IACE,SAAM,MAAA,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC9b,EAAG2lB,IACvB50B,EAAA,IAAAirB,GAAA,CAA0B,UAAU,0BACnC,SAAAjrB,EAAA,IAACoO,GAAS,CAAA,UAAU,aAAa,CADnB,EAAAwmB,CAEhB,CACD,CALY,EAAAD,CAMf,CACD,EACH,CAAA,EACF,ECSJ,SAAwBE,IAAkB,OAClC,MAAA7vB,EAAiC,gCACjC,CAAE,QAAAqF,GAAY2P,KACd,CAAC8a,EAAaC,CAAc,EAAIt1B,EAAA,SAAuB,CAAE,CAAA,EACzD,CAACgd,EAASC,CAAU,EAAIjd,WAAS,EAAI,EACrC,CAACmwB,EAAaC,CAAc,EAAIpwB,WAAS,CAAC,EAC1C,CAACu1B,EAAaC,CAAc,EAAIx1B,WAAS,EAAI,EAC7C,CAACy1B,EAAcC,CAAe,EAAI11B,WAAS,CAAC,EAC5C,CAAC2zB,EAAYgC,CAAa,EAAI31B,WAAS,CAAC,EACxC,CAAC41B,EAAsBC,CAAuB,EAAI71B,EAAA,SAAgC,CAAE,CAAA,EACpF,CAAC81B,EAAkBC,CAAmB,EAAI/1B,WAAiB,KAAK,EAChE,CAACg2B,EAAeC,CAAgB,EAAIj2B,EAAA,SAAa,CAAE,CAAA,EACnD,CAACk2B,EAAiBC,CAAkB,EAAIn2B,WAAiB,KAAK,EAC9D,CAACo2B,EAAgBC,CAAiB,EAAIr2B,WAAiB,KAAK,EAC5Dwa,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBG,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErDyhB,EAAc,IAEdqB,EAAU,CACd,CAAE,GAAI,aAAc,OAAQ,cAAe,KAAOvxB,EAAA,IAAAkhB,GAAA,CAAO,UAAU,SAAU,CAAA,CAAG,EAChF,CAAE,GAAI,YAAa,OAAQ,aAAc,KAAOlhB,EAAA,IAAA+1B,GAAA,CAAI,UAAU,SAAU,CAAA,CAAG,EAC3E,CAAE,GAAI,SAAU,OAAQ,SAAU,KAAO/1B,EAAA,IAAA4zB,GAAA,CAAO,UAAU,SAAU,CAAA,CAAG,EACvE,CAAE,GAAI,eAAgB,OAAQ,gBAAiB,KAAO5zB,EAAA,IAAAg2B,GAAA,CAAU,UAAU,SAAU,CAAA,CAAG,EACvF,CAAE,GAAI,cAAe,OAAQ,WAAY,KAAOh2B,EAAA,IAAAi2B,GAAA,CAAM,UAAU,SAAU,CAAA,CAAG,EAC7E,CAAE,GAAI,OAAQ,OAAQ,OAAQ,KAAOj2B,EAAA,IAAAk2B,GAAA,CAAW,UAAU,SAAU,CAAA,CAAG,EACvE,CAAE,GAAI,cAAe,OAAQ,cAAe,KAAOl2B,EAAA,IAAA4K,GAAA,CAAO,UAAU,SAAU,CAAA,CAAG,EACjF,CAAE,GAAI,mBAAoB,OAAQ,cAAe,KAAO5K,EAAA,IAAAm2B,GAAA,CAAW,UAAU,SAAU,CAAA,CAAG,EAC1F,CAAE,GAAI,kBAAmB,OAAQ,aAAc,KAAOn2B,EAAA,IAAAo2B,GAAA,CAAQ,UAAU,SAAU,CAAA,CAAG,EACrF,CAAE,GAAI,SAAU,OAAQ,SAAU,KAAOp2B,EAAA,IAAAq2B,GAAA,CAAa,UAAU,SAAU,CAAA,CAAG,EAC7E,CAAE,GAAI,MAAO,OAAQ,MAAO,KAAOr2B,EAAA,IAAAo2B,GAAA,CAAQ,UAAU,SAAU,CAAA,CAAG,EAClE,CAAE,GAAI,UAAW,OAAQ,WAAY,KAAOp2B,EAAA,IAAAs2B,GAAA,CAAW,UAAU,SAAU,CAAA,CAAG,CAAA,EAG1E,CAAC/F,EAAYC,CAAa,EAAI/wB,WAAwB,IAAI,EAC1D,CAACgxB,EAAWC,CAAY,EAAIjxB,WAAyB,KAAK,EAE1DgzB,EAAcoB,GAAmB,CACjCtD,IAAesD,EACjBnD,EAA0BiC,IAAAA,KAAc,MAAQ,OAAS,KAAK,GAE9DnC,EAAcqD,CAAM,EACpBnD,EAAa,KAAK,EACpB,EAGI6F,EAAoBrlB,EAAAA,QAAQ,IAC3Bqf,EAEE,CAAC,GAAGuE,CAAW,EAAE,KAAK,CAAC5f,EAAGlK,KAAM,CAC/B,MAAA8nB,GAAS5d,EAAEqb,CAA8B,EACzCwC,EAAS/nB,GAAEulB,CAA8B,EAG/C,GAAI,OAAOuC,IAAW,UAAY,OAAOC,GAAW,SAClD,OAAOtC,IAAc,MACjBqC,GAASC,EACTA,EAASD,GAIf,MAAME,EAAU,OAAOF,EAAM,EAAE,YAAY,EACrCG,GAAU,OAAOF,CAAM,EAAE,YAAY,EAE3C,OAAIC,EAAUC,GAAgBxC,IAAc,MAAQ,GAAK,EACrDuC,EAAUC,GAAgBxC,IAAc,MAAQ,EAAI,GACjD,CAAA,CACR,EApBuBqE,EAqBvB,CAACA,EAAavE,EAAYE,CAAS,CAAC,EAEjC+F,EAAY1sB,EAAAA,YAAY,SAAY,CACxC4S,EAAW,EAAI,EACX,GAAA,CAEF,MAAM8U,EAAc,CAClB,MAAOtB,EACP,KAAMN,EACN,UAAAvV,EACA,QAAAC,EACA,GAAIib,GAAoBA,IAAqB,OAAS,CAAE,SAAUA,CAAiB,EACnF,GAAII,GAAmBA,IAAoB,OAAS,CAAE,QAASA,CAAgB,EAC/E,GAAIE,GAAkBA,IAAmB,OAAS,CAAE,OAAQA,CAAe,CAAA,EAIvE,CAAE,KAAM9wB,IAAa,MAAME,GAAM,KACrC,GAAGD,CAAO,kCAAkCqF,CAAO,GACnDmnB,EACA,CAAE,gBAAiB,EAAK,CAAA,EAGtBzsB,GAAS,SAEXgwB,EAAehwB,GAAS,IAAI,EAC5BowB,EAAgBpwB,GAAS,YAAY,EACrCqwB,EAAcrwB,GAAS,UAAU,EAClBkwB,EAAArF,EAAcM,EAAcnrB,GAAS,YAAY,EAChEuwB,EAAwBvwB,GAAS,oBAAoB,EACrD2wB,EAAiB3wB,GAAS,aAAa,GAE/B,QAAA,MAAM,uCAAwCA,GAAS,OAAO,QAGjEI,EAAO,CACN,QAAA,MAAM,sCAAuCA,CAAK,CAAA,QAC1D,CACAuX,EAAW,EAAK,CAClB,CAAA,EACC,CACD1X,EACAqF,EACAulB,EACAM,EACAqF,EACAI,EACAE,EACAxb,EACAC,CAAA,CACD,EAGDza,EAAAA,UAAU,IAAM,CACJ22B,IACJ,MAAA1b,EAAa,YAAY0b,EAAW,GAAM,EACzC,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAER,MAAAC,EAAwBjoB,GAAkB,CAC9CgnB,EAAoBhnB,CAAK,EACzBonB,EAAmB,KAAK,EACxB/F,EAAe,CAAC,CAAA,EAGZ6G,GAAuBloB,GAAkB,CAC7ConB,EAAmBpnB,CAAK,EACxBqhB,EAAe,CAAC,CAAA,EAGZ8G,EAAsBnoB,GAAkB,CAC5CsnB,EAAkBtnB,CAAK,EACvBqhB,EAAe,CAAC,CAAA,EAGZ+G,EAAmBrB,IAAqB,QAC1ClqB,EAAAgqB,GAAA,YAAAA,EAAsB,KAAKwB,GAAQA,EAAK,eAAiBtB,KAAzD,YAAAlqB,EAA4E,WAAY,CAAA,EACxF,CAAA,EAGF,OAAC/F,EAAA,KAAA,MAAI,CAAA,UAAU,SACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAtF,EAAA,IAAC+I,GAAW,EAAA,QACX,KAAA,CAAG,UAAU,kCAAkC,SAA+B,kCAAA,CAAA,EACjF,QACC,MAAI,CAAA,UAAU,uEACb,SAACzD,EAAA,KAAA,MAAA,CAAI,UAAU,MACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAA,OAACmK,GACC,CAAA,SAAA,CAACzP,EAAAA,IAAA2P,GAAA,CAAe,QAAO,GACrB,SAACrK,EAAAA,KAAAtE,GAAO,QAAQ,UAAU,UAAU,2EAClC,SAAA,CAAChB,EAAAA,IAAA4zB,GAAA,CAAO,UAAU,eAAe,EAAE,QAAA,CAAA,CAErC,CAAA,CACF,QACC/jB,GAAe,CAAA,UAAU,OACxB,SAACvK,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,mBAAmB,SAAM,SAAA,SACtC6lB,GAAA,CAAO,cAAewL,EAAoB,MAAOd,EAChD,SAAA,CAAC71B,EAAAA,IAAAurB,IAAc,UAAU,SACvB,SAACvrB,MAAAqrB,GAAY,CAAA,YAAY,gBAAgB,EAC3C,SACCW,GACC,CAAA,SAAA,OAACM,GAAA,CAAW,MAAM,MAAM,SAAU,aAAA,EACjCmJ,EAAc,IAAKpV,GACjBrgB,EAAA,IAAAssB,IAAwB,MAAOjM,EAAS,SAAxBA,CAAA,EAAAA,CAA+B,CACjD,CAAA,EACH,CAAA,EACF,CAAA,EACF,SACC,MACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,mBAAmB,SAAQ,WAAA,SACxC8K,GAAA,CAAO,cAAesL,EAAsB,MAAOlB,EAClD,SAAA,CAACv1B,EAAAA,IAAAurB,IAAc,UAAU,SACvB,SAACvrB,MAAAqrB,GAAY,CAAA,YAAY,kBAAkB,EAC7C,SACCW,GACC,CAAA,SAAA,OAACM,GAAA,CAAW,MAAM,MAAM,SAAa,gBAAA,EACpC+I,EAAqB,IAAKwB,GACxB72B,EAAAA,IAAAssB,GAAA,CAAmC,MAAOuK,EAAK,aAAe,SAAAA,EAAK,YAAA,EAAnDA,EAAK,YAA2D,CAClF,CAAA,EACH,CAAA,EACF,CAAA,EACF,EACCtB,IAAqB,OACnBjwB,EAAAA,KAAA,MACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,mBAAmB,SAAQ,WAAA,EACzCA,EAAA,KAAC6lB,GAAA,CACC,SAAUoK,IAAqB,MAC/B,cAAemB,GACf,MAAOf,EAEP,SAAA,CAAC31B,EAAAA,IAAAurB,IAAc,UAAU,SACvB,SAACvrB,MAAAqrB,GAAY,CAAA,YAAY,kBAAkB,EAC7C,SACCW,GACC,CAAA,SAAA,OAACM,GAAA,CAAW,MAAM,MAAM,SAAa,gBAAA,EACpCsK,EAAiB,IAAKE,GACpB92B,EAAA,IAAAssB,IAAyB,MAAOwK,EAAU,SAA1BA,CAAA,EAAAA,CAAkC,CACpD,CAAA,EACH,CAAA,CAAA,CACF,CAAA,EACF,CAAA,CAAA,CAEJ,CAAA,CACF,CAAA,EACF,EACCxxB,EAAAA,KAAA,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAtF,EAAA,IAAC6Q,GAAA,CAAA,CAED,EACAvL,EAAA,KAACtE,EAAA,CACC,QAAQ,UACR,UAAU,6DACV,QAASw1B,EAET,SAAA,CAACx2B,EAAAA,IAAAoY,GAAA,CAAU,UAAU,eAAe,EAAE,SAAA,CAAA,CAExC,CAAA,EACF,CAAA,EACF,EAEC9S,EAAAA,KAAA,MAAI,CAAA,UAAU,oDACb,SAAA,OAAC,MAAA,CAAI,UAAU,yCACZ,SACCmX,EAAAzc,EAAA,IAACszB,IAAc,CAAA,EAEfhuB,EAAAA,KAAC,QAAM,CAAA,UAAU,qBACf,SAAA,CAACtF,EAAAA,IAAA,QAAA,CAAM,UAAU,8CACf,SAACA,EAAAA,IAAA,MACE,SAAQuxB,EAAA,IAAKsC,GACZ7zB,EAAA,IAAC,KAAA,CAEC,UAAU,mGACV,QAAS,IAAMyyB,EAAWoB,EAAO,EAAE,EAEnC,SAACvuB,EAAA,KAAA,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAOuuB,EAAA,KACPA,EAAO,OACPtD,IAAesD,EAAO,GACrBpD,IAAc,YAASqD,IAAQ,UAAU,6BAA8B,CAAA,QAAMC,IAAU,UAAU,6BAA8B,CAAA,QAE9HC,GAAA,CAAY,UAAU,6BAA6B,CAAA,EAExD,CAAA,EAZKH,EAAO,EAAA,CAcf,CAAA,CACH,CAAA,CACF,EACCvuB,EAAAA,KAAA,QAAM,CAAA,UAAU,oCACd,SAAA,CAAkBixB,EAAA,IAAI,CAACtC,EAAKC,KAC1Bl0B,EAAA,IAAA,KAAW,CAAA,UAAU,kDACnB,SAAAuxB,EAAQ,IAAKsC,IAAW,CACjB,MAAArlB,EAAQylB,EAAIJ,GAAO,EAAsB,EACzCQ,EAAiBR,GAAO,KAAO,SAC/BkD,GAAqBlD,GAAO,KAAO,aAEnCW,GAAa,IAAM,CACvB,GAAIH,EAAgB,CAClB,MAAMI,GAAcjmB,EAAQ,OAAOA,CAAK,EAAI,GAWtCkmB,GAVkBrU,IAAmB,CACzC,OAAQA,GAAO,KAAO,EAAA,YAAe,EAAA,CACnC,IAAK,QACI,MAAA,8BACT,IAAK,OACI,MAAA,gCACT,QACS,MAAA,2BACX,CAAA,GAEgCoU,EAAW,eAG1C,MAAI,CAAA,UAAW,8CAA8CC,CAAU,GACrE,SACHD,EAAA,CAAA,CAEJ,CAEA,GAAIsC,GAAoB,CACtB,MAAMC,GAAkBxoB,EAAQ,OAAOA,CAAK,EAAI,GAC1CyoB,EAAchD,EAAI,YAClBiD,EAAmBD,IAAgB,0BAGvC,OAAC3xB,EAAA,KAAA,MAAI,CAAA,UAAU,gEACb,SAAA,CAAAtF,EAAAA,IAAC,QAAK,UAAW,WAAWk3B,EAAmB,iBAAmB,cAAc,GAC7E,SACHD,CAAA,CAAA,QACC,OAAA,CAAK,UAAU,eAAgB,SAAgBD,GAAA,GAClD,CAEJ,CAEO,OAAAxoB,CAAA,EAIP,OAAAxO,EAAA,IAAC,KAAA,CAEC,UAAU,oCAET,SAAWw0B,GAAA,CAAA,EAHPX,GAAO,EAAA,CAId,CAEH,CAAA,EAtDMK,EAuDT,CACD,EACAY,EAAY,SAAW,GACrB90B,EAAA,IAAA,KACC,CAAA,SAAAA,EAAA,IAAC,KAAA,CACC,QAASuxB,EAAQ,OACjB,UAAU,8CACX,SAAA,mBAAA,CAAA,EAGH,CAAA,EAEJ,CAAA,CAAA,CACF,CAAA,CAEJ,EACCjsB,EAAAA,KAAA,MAAI,CAAA,UAAU,yDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wBAAwB,SAAA,CAAA,YAC1BsqB,EAAc,GAAKM,EAAe,EAAE,MAAI,IAClD,KAAK,IAAIN,EAAcM,EAAagF,GAAgB,CAAC,EAAE,MAAI,IAC3DA,GAAgB,EAAE,UAAA,EACrB,EACC5vB,EAAAA,KAAA,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAA,EAAA,KAACtE,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAM6uB,EAAgB7lB,GAAS,KAAK,IAAIA,EAAO,EAAG,CAAC,CAAC,EAC7D,SAAU4lB,IAAgB,EAC1B,UAAU,iDAEV,SAAA,CAAC5vB,EAAAA,IAAAiL,GAAA,CAAY,UAAU,eAAe,EAAE,UAAA,CAAA,CAE1C,EACC3F,EAAAA,KAAA,MAAI,CAAA,UAAU,wBAAwB,SAAA,CAAA,QAC/BsqB,EAAY,OAAKwD,CAAA,EACzB,EACA9tB,EAAA,KAACtE,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAM6uB,EAAgB7lB,GAASA,EAAO,CAAC,EAChD,SAAU,CAACgrB,EACX,UAAU,iDACX,SAAA,CAAA,OAEEh1B,EAAAA,IAAAkL,GAAa,CAAA,UAAU,eAAe,CAAA,CAAA,CACzC,CAAA,EACF,CAAA,EACF,CAAA,EACF,CAAA,CAAA,CACF,CAAA,CACF,GACF,CAEJ,CCtWA,MAAMisB,GAAe,CACjB,iBAAkB,oBAClB,YAAa,eACb,UAAW,aACX,SAAU,aACd,EAGMC,GAAgB,IAEtB,SAAwBC,IAAsB,WACpC,MAAAryB,EAAiC,gCACjC,CAAE,QAAAqF,GAAY2P,KAEpB,GAAI,CAAC3P,EACM,OAACrK,EAAA,IAAA,OAAI,SAA0B,4BAAA,CAAA,EAI1C,KAAM,CAACs3B,EAASC,CAAU,EAAI93B,WAAsB,CAChD,SAAU,MACV,QAAS,MACT,SAAU,MACV,OAAQ,MACR,OAAQ,MACR,eAAgB,KAAA,CACnB,EAGK,CAAC+3B,EAAeC,CAAgB,EAAIh4B,WAOvC,CACC,UAAW,CAAC,EACZ,SAAU,CAAC,EACX,UAAW,CAAC,EACZ,QAAS,CAAC,EACV,mBAAoB,CAAC,EACrB,cAAe,CAAC,UAAW,SAAU,SAAS,CAAA,CACjD,EAEK,CAAC6gB,EAAMoX,CAAO,EAAIj4B,EAAA,SAAgB,CAAE,CAAA,EACpC,CAAC+vB,EAAMC,CAAO,EAAIhwB,WAAsB,CAC1C,CACI,GAAI,MACJ,MAAO,MACP,YAAa,GAAGuF,CAAO,2BAA2BqF,CAAO,GACzD,QAAS,CAAC,EACV,KAAM,CAAC,EACP,YAAa,KACb,WAAY,EACZ,YAAa,CACjB,EACA,CACI,GAAI,SACJ,MAAO,SACP,YAAa,GAAGrF,CAAO,8BAA8BqF,CAAO,GAC5D,QAAS,CAAC,EACV,KAAM,CAAC,EACP,YAAa,KACb,WAAY,EACZ,YAAa,CACjB,CAAA,CACH,EACK,CAAC+oB,EAAYgC,CAAa,EAAI31B,WAAS,CAAC,EACxC,CAACy1B,EAAcC,CAAe,EAAI11B,WAAS,CAAC,EAC5C,CAACu1B,EAAaC,CAAc,EAAIx1B,WAAS,EAAI,EAC7C,CAACiwB,EAAWC,CAAY,EAAIlwB,EAAAA,SAAS+vB,EAAK,CAAC,EAAE,EAAE,EAC/C,CAACI,EAAaC,CAAc,EAAIpwB,WAAS,CAAC,EAC1C,CAACgd,EAASC,CAAU,EAAIjd,WAAS,EAAK,EACtC,CAACk4B,EAAWC,CAAY,EAAIn4B,WAAS,EAAK,EAC1C,CAACo4B,EAAWC,CAAY,EAAIr4B,WAAc,IAAI,EAC9C,CAACs4B,EAAiBC,CAAkB,EAAIv4B,WAAsB,CAAC,cAAe,WAAW,CAAC,EAE1Fwa,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAGhB+d,EAAsB/oB,GAAsB,CAC9C8oB,EACIhuB,GAAAA,EAAK,SAASkF,CAAM,EACdlF,EAAK,OAAYgf,IAAAA,KAAM9Z,CAAM,EAC7B,CAAC,GAAGlF,EAAMkF,CAAM,CAAA,CAC1B,EAIE,CAACgpB,EAAiBC,CAAkB,EAAI14B,EAAA,SAAmB,CAAE,CAAA,EAC7D,CAAC24B,EAAeC,CAAgB,EAAI54B,EAAA,SAAmB,CAAE,CAAA,EAEzD+2B,EAAY,MACd1F,EACAwH,EAWAC,KACC,cACG,GAAA,CACA7b,EAAW,EAAI,EACT,MAAA8b,GAAc1H,IAAU,SACxB,GAAG9rB,CAAO,8BAA8BqF,CAAO,GAC/C,GAAGrF,CAAO,2BAA2BqF,CAAO,GAG5CmnB,GAAc,CAChB,WAAW8G,GAAA,YAAAA,EAAa,aAAc7pB,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,IACrF,SAAS6pB,GAAA,YAAAA,EAAa,WAAY7pB,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,IAC7E,MAAM6pB,GAAA,YAAAA,EAAa,OAAQ1I,EAC3B,OAAO0I,GAAA,YAAAA,EAAa,QAASlB,GAC7B,IAAIkB,GAAA,YAAAA,EAAa,SAAU,CAAE,OAAQA,EAAY,MAAO,EACxD,IAAIA,GAAA,YAAAA,EAAa,WAAYA,EAAY,WAAa,OAAS,CAAE,SAAUA,EAAY,QAAS,EAChG,IAAIA,GAAA,YAAAA,EAAa,UAAWA,EAAY,UAAY,OAAS,CAAE,QAASA,EAAY,OAAQ,EAC5F,GAAI5I,IAAc,QAAS4I,GAAA,YAAAA,EAAa,WAAYA,EAAY,WAAa,OAAS,CAAE,SAAUA,EAAY,QAAS,EACvH,GAAI5I,IAAc,WAAY4I,GAAA,YAAAA,EAAa,SAAUA,EAAY,SAAW,OAAS,CAAE,OAAQA,EAAY,MAAO,CAAA,EAG9G,QAAA,IAAI,sBAAuB9G,EAAW,EAExC,MAAAzsB,GAAW,MAAME,GAAM,KAAKuzB,GAAahH,GAAa,CAAE,gBAAiB,EAAA,CAAM,EAC/EiH,KAAgCptB,GAAAtG,GAAS,KAAK,6BAAd,YAAAsG,GAA0C,IAAKwrB,IAAmCA,GAAK,gBAAiB,GAC1I,GAAA9xB,GAAS,KAAK,QAAS,CAEvB,MAAM2zB,GAA0B,CAC5B,KAAIlrB,GAAAzI,GAAS,KAAK,uBAAd,YAAAyI,GAAoC,IAAKqpB,IAAmCA,GAAK,gBAAiB,CAAC,EACvG,KAAInb,GAAA3W,GAAS,KAAK,uBAAd,YAAA2W,GAAoC,IAAKmb,IAAmCA,GAAK,gBAAiB,CAAC,EACvG,GAAG4B,EAAA,EAIDE,GAA+C,CAAA,EAC/CtD,EAAuB,CACzB,GAAItwB,GAAS,KAAK,sBAAwB,CAAC,EAC3C,GAAIA,GAAS,KAAK,4BAA8B,CAAC,CAAA,EAGhCswB,EAAA,QAASwB,IAA8B,CACxD8B,GAAmB9B,GAAK,YAAY,EAAIA,GAAK,UAAY,CAAA,CAAC,CAC7D,EAGK,MAAA+B,GAAW,MAAM,KAAK,IAAI,IAC5BvD,EAAqB,QAASwB,IAA8BA,GAAK,UAAY,CAAA,CAAE,CAAA,CAClF,EAEDY,EAAiCoB,KAAA,CAC7B,GAAGA,GACH,UAAW,MAAM,KAAK,IAAI,IAAIH,EAAa,CAAC,EAC5C,SAAAE,GACA,mBAAAD,EACF,EAAA,EAGIrY,MAAAA,EAAOwQ,IAAU,SAAW/rB,GAAS,KAAK,YAAc,CAAA,EAAKA,GAAS,KAAK,SAAW,CAAA,EAE5F,GAAI+rB,IAAU,MAAO,CACX,MAAAgI,GAAY,IAAI,IAAIxY,EAAK,IAAKxV,IAAcA,GAAK,QAAQ,CAAC,EAE5DotB,EAAgB,SAAW,GACRC,EAAA,MAAM,KAAKW,EAAS,CAAa,EAGxDrB,EAAiCoB,KAAA,CAC7B,GAAGA,GACH,UAAWX,EAAgB,OAAS,EAAIA,EAAkB,MAAM,KAAKY,EAAS,EAC9E,QAASD,GAAY,OACvB,EAAA,CAAA,KACC,CACG,MAAAE,GAAU,IAAI,IAAIzY,EAAK,IAAKxV,IAC9BA,GAAK,SAAW,OAAS,OACzBA,GAAK,SAAW,SAAW,SAC3BA,GAAK,MAAA,CACR,EAEGstB,EAAc,SAAW,GACRC,EAAA,MAAM,KAAKU,EAAO,CAAa,EAGpDtB,EAAiCoB,KAAA,CAC7B,GAAGA,GACH,UAAW,CAAC,GAAO,IAAA,IAAI,CAAC,GAAGH,GAAe,GAAGD,EAAmB,CAAC,CAAC,EAClE,QAASL,EAAc,OAAS,EAAIA,EAAgB,MAAM,KAAKW,EAAO,CACxE,EAAA,CACN,CAEArB,EAAQpX,CAAI,EAENiR,MAAAA,GAAuBjR,EAAK,OAAS,EACrC,OAAO,KAAKA,EAAK,CAAC,GAAK,CAAA,CAAE,EACtB,OAAOsF,IAAOA,KAAQ,eAAe,EACrC,IAAYA,KAAA,CACT,GAAIA,GACJ,OAAQA,KAAQ,iBACV,kBACAA,GAAI,QAAQ,WAAY,KAAK,EAAE,QAAQ,KAAaE,IAAAA,GAAI,aAAa,EAC3E,YAAaF,GACb,KAAOpX,IAAe,CAClB,GAAIoX,KAAQ,OACR,MAAO,IAAI,OAAOpX,EAAK,EAAE,QAAQ,CAAC,CAAC,GAEvC,GAAI,CAAC,OAAQ,kBAAmB,KAAK,EAAE,SAASoX,EAAG,EAC/C,MAAO,IAAI,OAAOpX,EAAK,EAAI,KAAK,QAAQ,CAAC,CAAC,IAE9C,GAAIoX,KAAQ,iBAAkB,CAE1B,MAAMoT,GAAc,CAChB,QAAW,eACX,OAAU,kBACV,QAAW,gBAAA,EACbxqB,EAAe,GAAK,GACtB,aACK,OAAA,CAAK,UAAW,eAAewqB,EAAW,GACtC,SAAAxqB,KAAU,UAAY,UACtBA,KAAU,SAAW,SACrBA,KAAU,UAAY,UAAYA,GACvC,CAER,CACA,OAAO,OAAOA,EAAK,CACvB,CAAA,EACF,EACJ,CAAA,EAENihB,MACI6B,GAAS,IACLhvB,IAAAA,GAAE,KAAOwuB,EACH,CAAE,GAAGxuB,GAAG,QAAAivB,GAAS,KAAAjR,EAAM,YAAa,KAAK,OACzChe,EACV,CAAA,EAGJ,MAAM22B,GAAiBnI,IAAU,SAC3B/rB,GAAS,KAAK,kBACdA,GAAS,KAAK,0BACZ,QAAA,IAAI,mBAAoBk0B,EAAc,EACtC,QAAA,IAAI,kCAAmCl0B,GAAS,IAAI,EAC5D,MAAMm0B,GAAqB,OAAO,QAAQD,IAAkB,CAAA,CAAE,EAAE,IAAI,CAAC,CAACrT,GAAK9W,EAAO,IAAM,CAC9E,MAAAqqB,GAAarI,IAAU,SACtBlL,KAAQ,OAAS,OAASA,KAAQ,SAAW,SAAWA,GACzDA,GAEAwT,GAAY,CACd,CAACtI,IAAU,SAAW,SAAW,UAAU,EAAGqI,EAAA,EAG9C,GAAArqB,IAAW,OAAOA,IAAY,UAAY,CAAC,MAAM,QAAQA,EAAO,EAAG,CACnE,MAAMuqB,GAAevqB,GACd,MAAA,CACH,GAAGsqB,GACH,iBAAkBC,GAAa,kBAAoB,EACnD,YAAaA,GAAa,aAAe,EACzC,UAAWA,GAAa,WAAa,EACrC,SAAUA,GAAa,UAAY,CAAA,CAE3C,CACO,OAAAD,EAAA,CACV,EACO,QAAA,IAAI,wBAAyBF,EAAkB,EACvDpB,EAAaoB,EAAkB,EACf/D,EAAApwB,GAAS,KAAK,cAAgB,CAAC,EACjCqwB,EAAArwB,GAAS,KAAK,YAAc,CAAC,EAC3CkwB,EAAerF,EAAcwH,GAAgBryB,GAAS,KAAK,YAAY,CAC3E,QAEKI,GAAO,CACJ,QAAA,MAAM,uBAAwBA,EAAK,EAC3C2yB,EAAa,IAAI,CAAA,QACnB,CACEpb,EAAW,EAAK,CACpB,CAAA,EAKE4c,EAAqB,CAACC,EAA8B/qB,IAAkB,CACxE+oB,EAAmBvtB,IAAA,CACf,MAAMwvB,GAAiB,CACnB,GAAGxvB,GACH,CAACuvB,CAAS,EAAG/qB,CAAA,EAIjB,OAAI+qB,IAAc,aACdC,GAAe,QAAU,OAGtBA,EAAA,CACV,EAGD,MAAMhI,GAAc,CAChB,UAAW/iB,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC1D,QAASA,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACpD,KAAM,EACN,MAAO2oB,GACP,OAAQE,EAAQ,SAAW,MAAQ,OAAYA,EAAQ,OACvD,SAAUA,EAAQ,WAAa,MAAQ,OAAYA,EAAQ,SAC3D,QAASA,EAAQ,UAAY,MAAQ,OAAYA,EAAQ,QACzD,GAAI5H,IAAc,OAAS4H,EAAQ,WAAa,OAAS,CAAE,SAAUA,EAAQ,QAAS,EACtF,GAAI5H,IAAc,UAAY4H,EAAQ,SAAW,OAAS,CAAE,OAAQA,EAAQ,MAAO,CAAA,EAIvFQ,EAAa,IAAI,EAGPtB,EAAA9G,EAAW8B,EAAiB,CAAA,EAE1C3xB,EAAAA,UAAU,IAAM,CACZ,MAAM2xB,EAAc,CAChB,UAAW/iB,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC1D,QAASA,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACpD,KAAMmhB,EACN,MAAOwH,GACP,OAAQE,EAAQ,SAAW,MAAQ,OAAYA,EAAQ,OACvD,SAAUA,EAAQ,WAAa,MAAQ,OAAYA,EAAQ,SAC3D,QAASA,EAAQ,UAAY,MAAQ,OAAYA,EAAQ,QAGzD,GAAI5H,IAAc,OAAS4H,EAAQ,WAAa,OAAS,CACrD,SAAUA,EAAQ,QACtB,EACA,GAAI5H,IAAc,UAAY4H,EAAQ,SAAW,OAAS,CACtD,OAAQA,EAAQ,MACpB,CAAA,EAIJQ,EAAa,IAAI,EAEjB,QAAQ,IAAI,2BAA4B,CACpC,UAAApI,EACA,QAAA4H,EACA,YAAA9F,CAAA,CACH,EAEDgF,EAAU9G,EAAW8B,CAAW,EAE1B,MAAA1W,EAAa,YAAY,IAAM,CACjC0b,EAAU9G,EAAW8B,CAAW,GACjC,GAAM,EAEF,MAAA,IAAM,cAAc1W,CAAU,CAAA,EACtC,CACC4U,EACAjhB,EACAmhB,EACA0H,EAAQ,SACRA,EAAQ,QACRA,EAAQ,SACRA,EAAQ,OACRA,EAAQ,MAAA,CACX,EACK,MAAA3G,EAAmBC,GAAqB,CAC1CjB,EAAaiB,CAAQ,EACrBf,EAAe,CAAC,EAChB,MAAM2B,EAAc,CAChB,UAAW/iB,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC1D,QAASA,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACpD,KAAM,EACN,MAAO2oB,EAAA,EAEXZ,EAAU5F,EAAUY,CAAW,CAAA,EAG7BiI,GAAkB,CACpB,eACA,cACA,iBACA,WACA,mBACA,kBACA,UACA,OACA,OACA,cACA,SACA,KAAA,EAGE,CAAClJ,EAAYC,CAAa,EAAI/wB,WAAwB,IAAI,EAC1D,CAACgxB,EAAWC,CAAY,EAAIjxB,WAAyB,KAAK,EAE1DgzB,GAAcoB,GAAmB,CAC/BtD,IAAesD,EACfnD,EAA0BiC,GAAAA,IAAc,MAAQ,OAAS,KAAK,GAE9DnC,EAAcqD,CAAM,EACpBnD,EAAa,KAAK,EACtB,EAGE,CAAE,QAAAa,EAAQ,GAAK,IAAM,CACvB,MAAMG,EAAalC,EAAK,KAAYyB,GAAAA,EAAI,KAAOvB,CAAS,EACxD,OAAKgC,EACE,CACH,QAASA,EAAW,OAAA,EAFA,CAAE,QAAS,CAAG,CAAA,CAGtC,KAGEmB,EAAa3hB,EAAAA,QAAQ,IAClBqf,EAEE,CAAC,GAAGjQ,CAAI,EAAE,KAAK,CAACpL,EAAGlK,IAAM,CACtB,MAAA8nB,GAAS5d,EAAEqb,CAAU,EACrBwC,GAAS/nB,EAAEulB,CAAU,EAE3B,GAAI,OAAOuC,IAAW,UAAY,OAAOC,IAAW,SAChD,OAAOtC,IAAc,MAAQqC,GAASC,GAASA,GAASD,GAG5D,MAAME,GAAU,OAAOF,IAAU,EAAE,EAAE,YAAY,EAC3CG,GAAU,OAAOF,IAAU,EAAE,EAAE,YAAY,EAEjD,OAAIC,GAAUC,GAAgBxC,IAAc,MAAQ,GAAK,EACrDuC,GAAUC,GAAgBxC,IAAc,MAAQ,EAAI,GACjD,CAAA,CACV,EAhBuBnQ,EAiBzB,CAACA,EAAMiQ,EAAYE,CAAS,CAAC,EAG1BiJ,EAAoBC,GAAoB,CACpC,MAAAC,EAAY,KAAK,IAAI,KAAK,IAAI,EAAGD,CAAO,EAAGvG,CAAU,EAC3DvD,EAAe+J,CAAS,EAExB,MAAMpI,GAAc,CAChB,UAAW/iB,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC1D,QAASA,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACpD,KAAMmrB,EACN,MAAOxC,EAAA,EAEXZ,EAAU9G,EAAW8B,EAAW,CAAA,EAG9BqI,GAAe,CAAC,UAAW,UAAW,UAAW,SAAS,EAG5D,OAACv0B,EAAA,KAAA,MAAI,CAAA,UAAU,SACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACX,SAAA,CAAAtF,EAAA,IAAC+I,GAAW,EAAA,QACX,KAAA,CAAG,UAAU,kCAAkC,SAAsB,yBAAA,CAAA,EAC1E,EACCzD,EAAAA,KAAA,MAAI,CAAA,UAAU,2DACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uEACX,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,iBAAiB,KAAK,UAChC,SAAAwvB,EAAK,IACFyB,GAAA3rB,EAAA,KAACtE,EAAA,CAEG,QAAS0uB,IAAcuB,EAAI,GAAK,UAAY,QAC5C,QAAS,IAAMN,EAAgBM,EAAI,EAAE,EACrC,UAAU,WAET,SAAA,CAAIA,EAAA,KAAO,MAAQjxB,EAAAA,IAACwzB,GAAQ,CAAA,UAAU,cAAe,CAAA,EAAMxzB,EAAAA,IAAAyzB,GAAO,CAAA,UAAU,eAAe,EAC3FxC,EAAI,MACJvB,IAAcuB,EAAI,IACdjxB,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,CAAA,CAAA,EARnEixB,EAAI,EAWhB,CAAA,EACL,EACC3rB,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACX,SAAA,CAAAtF,EAAA,IAAC6Q,GAAA,CAAA,CAED,EACC8mB,GACI33B,EAAA,IAAA,MAAI,CAAA,UAAU,aACV,SAAO,OAAA,KAAKm3B,EAAY,EAAE,IAAIjoB,GAC1B5J,EAAA,KAAA,QAAA,CAAmB,UAAU,8BAC1B,SAAA,CAAAtF,EAAA,IAAC,QAAA,CACG,KAAK,WACL,QAAS+3B,EAAgB,SAAS7oB,CAAmB,EACrD,SAAU,IAAM+oB,EAAmB/oB,CAAmB,CAAA,CAC1D,QACC,OAAK,CAAA,UAAU,wBAAyB,SAAAioB,GAAajoB,CAAmB,EAAE,CAAA,GANnEA,CAOZ,CACH,EACL,EAEJlP,EAAA,IAACgB,EAAA,CACG,QAAQ,UACR,KAAK,OACL,QAAS,IAAM,CACX,MAAMwwB,EAAc,CAChB,UAAW/iB,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC1D,QAASA,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACpD,KAAM,EACN,MAAO,GAAA,EAED+nB,EAAA9G,EAAW8B,CAAiB,CAC1C,EACA,SAAU/U,EAEV,SAACzc,EAAA,IAAAoY,GAAU,CAAA,UAAW,WAAgC,CAAA,CAC1D,EACApY,EAAA,IAACgB,EAAA,CACG,QAAQ,UACR,QAAS,IAAM42B,EAAa,CAACD,CAAS,EAErC,WAAY,aAAe,YAAA,CAChC,SACCloB,GACG,CAAA,SAAA,CAACzP,EAAAA,IAAA2P,GAAA,CAAe,QAAO,GACnB,SAACrK,EAAAA,KAAAtE,GAAO,QAAQ,UAAU,UAAU,2EAChC,SAAA,CAAChB,EAAAA,IAAA4zB,GAAA,CAAO,UAAU,eAAe,EAAE,QAAA,CAAA,CAEvC,CAAA,CACJ,QACC/jB,GAAe,CAAA,UAAU,OACtB,SAACvK,EAAA,KAAA,MAAA,CAAI,UAAU,YACX,SAAA,CAAAA,OAAC,MACG,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,mBAAmB,SAAQ,WAAA,EACzCA,EAAA,KAAC6lB,GAAA,CACG,cAAgB3c,GAAU8qB,EAAmB,WAAY9qB,CAAK,EAC9D,MAAO8oB,EAAQ,SAEf,SAAA,CAAAt3B,MAACurB,GACG,CAAA,SAAAvrB,EAAA,IAACqrB,GAAY,CAAA,YAAY,iBAAkB,CAAA,EAC/C,SACCW,GACG,CAAA,SAAA,OAACM,GAAA,CAAW,MAAM,MAAM,SAAG,MAAA,EAC1BkL,EAAc,UAAU,IACrBsC,GAAC95B,EAAAA,IAAAssB,IAA0B,MAAOwN,EAC7B,SADYA,CAAA,EAAAA,CAEjB,CACH,CAAA,EACL,CAAA,CAAA,CACJ,CAAA,EACJ,EACCxC,EAAQ,WAAa,OACjBhyB,EAAA,KAAA,MACG,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,mBAAmB,SAAQ,WAAA,EACzCA,EAAA,KAAC6lB,GAAA,CACG,cAAgB3c,GAAU8qB,EAAmB,UAAW9qB,CAAK,EAC7D,MAAO8oB,EAAQ,QAEf,SAAA,CAAAt3B,MAACurB,GACG,CAAA,SAAAvrB,EAAA,IAACqrB,GAAY,CAAA,YAAY,iBAAkB,CAAA,EAC/C,SACCW,GACG,CAAA,SAAA,OAACM,GAAA,CAAW,MAAM,MAAM,SAAa,gBAAA,GAEjC9e,KAAAnC,GAAAmsB,EAAc,qBAAd,YAAAnsB,GAAmCisB,EAAQ,aAC1C5H,IAAc,SACT8H,EAAc,SAAS,OAAO,IAAM,CAC9B,GAAAA,GAAiBA,EAAc,mBAAoB,CACnD,MAAMsC,EAAW,OAAO,KAAKtC,EAAc,kBAAkB,EAAE,KAAK,IAAA,UAChE,OAAAhqB,IAAAnC,EAAAmsB,EAAc,qBAAd,YAAAnsB,EAAmCisB,EAAQ,YAA3C,YAAA9pB,GAAsD,SAClD,WAAA,OAAAA,IAAAnC,GAAAmsB,EAAc,qBAAd,YAAAnsB,GAAmCisB,EAAQ,YAA3C,YAAA9pB,GAAsD,SAASusB,MACnE,EAEJ,OAAOD,GAAYtC,EAAc,UAAU,SAASsC,CAAQ,CAChE,CACO,MAAA,EAAA,CACV,EACCtC,EAAc,YAbpB,YAAAhqB,GAcD,IAAIspB,GACF92B,EAAA,IAAAssB,GAAA,CAAyB,MAAOwK,EAC5B,SADYA,CAAA,EAAAA,CAEjB,EACH,EACL,CAAA,CAAA,CACJ,CAAA,EACJ,SAEH,MACG,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,mBAAmB,SAAM,SAAA,EACvCxxB,EAAA,KAAC6lB,GAAA,CACG,cAAgB3c,GAAU8qB,EAAmB,SAAU9qB,CAAK,EAC5D,MAAO8oB,EAAQ,OAEf,SAAA,CAAAt3B,MAACurB,GACG,CAAA,SAAAvrB,EAAA,IAACqrB,GAAY,CAAA,YAAY,eAAgB,CAAA,EAC7C,SACCW,GACG,CAAA,SAAA,OAACM,GAAA,CAAW,MAAM,MAAM,SAAG,MAAA,EAC1BkL,EAAc,cAAc,IAAKnX,GAC7BrgB,EAAAA,IAAAssB,GAAA,CAAwB,MAAOjM,EAC3B,SADYA,CAAA,EAAAA,CAEjB,CACH,CAAA,EACL,CAAA,CAAA,CACJ,CAAA,EACJ,EACCqP,IAAc,OACVpqB,EAAAA,KAAA,MACG,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,mBAAmB,SAAS,YAAA,EAC1CA,EAAA,KAAC6lB,GAAA,CACG,cAAgB3c,GAAU8qB,EAAmB,WAAY9qB,CAAK,EAC9D,MAAO8oB,EAAQ,SAEf,SAAA,CAAAt3B,MAACurB,GACG,CAAA,SAAAvrB,EAAA,IAACqrB,GAAY,CAAA,YAAY,kBAAmB,CAAA,EAChD,SACCW,GACG,CAAA,SAAA,OAACM,GAAA,CAAW,MAAM,MAAM,SAAG,MAAA,EAC1BkL,EAAc,UAAU,IAAKhjB,GACzBxU,EAAAA,IAAAssB,IAAuB,MAAO9X,EAC1B,WAAM,QAAQ,aAAc,EAAE,EAAE,QAAQ,KAAM,GAAG,GADrCA,CAEjB,CACH,CAAA,EACL,CAAA,CAAA,CACJ,CAAA,EACJ,EAEHkb,IAAc,UACVpqB,EAAAA,KAAA,MACG,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,mBAAmB,SAAM,SAAA,EACvCA,EAAA,KAAC6lB,GAAA,CACG,cAAgB3c,GAAU8qB,EAAmB,SAAU9qB,CAAK,EAC5D,MAAO8oB,EAAQ,OAEf,SAAA,CAAAt3B,MAACurB,GACG,CAAA,SAAAvrB,EAAA,IAACqrB,GAAY,CAAA,YAAY,eAAgB,CAAA,EAC7C,SACCW,GACG,CAAA,SAAA,OAACM,GAAA,CAAW,MAAM,MAAM,SAAG,MAAA,EAC1BkL,EAAc,QAAQ,IAAKwC,GACvBh6B,EAAAA,IAAAssB,GAAwB,CAAA,MAAO0N,EAC3B,SAAAA,IAAW,OAAS,OAASA,IAAW,SAAW,SAAWA,GADlDA,CAEjB,CACH,CAAA,EACL,CAAA,CAAA,CACJ,CAAA,EACJ,CAAA,CAAA,CAER,CAAA,CACJ,CAAA,EACJ,CAAA,EACJ,CAAA,EACJ,QAEC,MAAA,CAAI,UAAU,YACV,SACGvd,EAAAzc,MAAC,MAAI,CAAA,UAAU,wCACX,eAAC,MAAI,CAAA,UAAU,iEAAiE,CAAA,CACpF,EACA23B,EACAjI,IAAc,OAASmI,EACnB73B,EAAAA,IAACivB,GAAoB,CAAA,MAAM,OAAO,OAAQ,IACtC,SAAA3pB,EAAA,KAAC4pB,GAAS,CAAA,KAAM2I,EACZ,SAAA,CAAC73B,EAAAA,IAAAi6B,GAAA,CAAc,gBAAgB,MAAM,EACpCj6B,EAAAA,IAAAmvB,GAAM,CAAA,QAAQ,WAAW,QACzBC,GAAM,EAAA,QACN8K,GAAgB,EAAA,QAChBC,GAAO,EAAA,EACPpC,EAAgB,IAAI,CAAC7oB,EAAQhM,IACzBlD,EAAAA,IAAAqvB,GAAA,CAAiB,QAASngB,EAAQ,KAAM2qB,GAAa32B,EAAQ22B,GAAa,MAAM,EAAG,KAAM1C,GAAajoB,CAAmB,GAAhHA,CAAmH,CAChI,CAAA,EACL,CACJ,CAAA,EAEAwgB,IAAc,UAAYmI,EACrB73B,EAAA,IAAAivB,GAAA,CAAoB,MAAM,OAAO,OAAQ,IACtC,gBAACC,GAAA,CAAS,KAAM2I,EACZ,SAAA,CAAC73B,EAAAA,IAAAi6B,GAAA,CAAc,gBAAgB,MAAM,EACpCj6B,EAAAA,IAAAmvB,GAAM,CAAA,QAAQ,SAAS,QACvBC,GAAM,EAAA,QACN8K,GAAgB,EAAA,QAChBC,GAAO,EAAA,EACPpC,EAAgB,IAAI,CAAC7oB,EAAQhM,IACzBlD,EAAAA,IAAAqvB,GAAA,CAAiB,QAASngB,EAAQ,KAAM2qB,GAAa32B,EAAQ22B,GAAa,MAAM,EAAG,KAAM1C,GAAajoB,CAAmB,GAAhHA,CAAmH,CAChI,CAAA,EACL,CAAA,CACJ,EACA,KAGP5J,EAAAA,KAAA,MAAA,CAAI,UAAU,oDACX,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,8BACX,SAACsF,EAAA,KAAA,QAAA,CAAM,UAAU,SACb,SAAA,CAACtF,EAAAA,IAAA,SAAM,UAAU,iCACb,SAACA,EAAAA,IAAA,KACI,CAAA,SAAAuxB,GAAQ,IACLsC,GAAA7zB,EAAA,IAAC,KAAA,CAEG,UAAU,6GACV,QAAS,IAAMy5B,GAAgB,SAAS5F,EAAO,EAAE,GAAKpB,GAAWoB,EAAO,EAAE,EAE1E,SAACvuB,EAAA,KAAA,MAAI,CAAA,UAAU,0BACV,SAAA,CAAOuuB,EAAA,OACP4F,GAAgB,SAAS5F,EAAO,EAAE,IAC/BtD,IAAesD,EAAO,GAClBpD,IAAc,MAASzwB,EAAA,IAAA8zB,IAAQ,UAAU,6BAAA,CAA8B,EAAK9zB,EAAA,IAAC+zB,GAAU,CAAA,UAAU,6BAAA,CAA8B,EAE9H/zB,EAAAA,IAAAg0B,GAAY,CAAA,UAAU,4BAA6B,CAAA,EAAA,EAGhE,CAAA,EAbKH,EAAO,EAAA,CAenB,CAAA,CACL,CAAA,CACJ,EACCvuB,EAAAA,KAAA,QAAM,CAAA,UAAU,oCACZ,SAAA,CAAWutB,EAAA,IAAI,CAACoB,EAAKU,IAClB30B,EAAA,IAAC,KAAA,CAEG,UAAU,mBAET,SAAAuxB,GAAQ,IAAKsC,IACV7zB,EAAA,IAAC,KAAA,CAEG,UAAU,sDAET,SAAO6zB,GAAA,KAAKI,EAAIJ,GAAO,WAAW,CAAC,CAAA,EAH/BA,GAAO,EAAA,CAKnB,CAAA,EAVIc,CAAA,CAYZ,EACA9B,EAAW,SAAW,GAClB7yB,EAAA,IAAA,KACG,CAAA,SAAAA,EAAA,IAAC,KAAA,CACG,QAASuxB,GAAQ,OACjB,UAAU,sCACb,SAAA,mBAAA,CAAA,EAGL,CAAA,EAER,CAAA,CAAA,CACJ,CAAA,CACJ,EAECjsB,EAAAA,KAAA,MAAI,CAAA,UAAU,gFACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,wBACV,SAAA6yB,EAAW,OAAS,EACjB,YAAajD,EAAc,GAAKwH,GAAiB,CAAC,OAAO,KAAK,IAAIxH,EAAcwH,GAAelC,CAAY,CAAC,OAAOA,CAAY,WAE/H,mBAAA,CAER,EACC5vB,EAAAA,KAAA,MAAI,CAAA,UAAU,8BACX,SAAA,CAAAA,EAAA,KAACtE,EAAA,CACG,QAAQ,UACR,KAAK,KACL,QAAS,IAAM04B,EAAiB9J,EAAc,CAAC,EAC/C,SAAUA,IAAgB,EAE1B,SAAA,CAAC5vB,EAAAA,IAAAiL,GAAA,CAAY,UAAU,eAAe,EAAE,UAAA,CAAA,CAE5C,EACC3F,EAAAA,KAAA,MAAI,CAAA,UAAU,wBAAwB,SAAA,CAAA,QAC7BsqB,EAAY,OAAKwD,CAAA,EAC3B,EACA9tB,EAAA,KAACtE,EAAA,CACG,QAAQ,UACR,KAAK,KACL,QAAS,IAAM04B,EAAiB9J,EAAc,CAAC,EAC/C,SAAU,CAACoF,EACd,SAAA,CAAA,OAEIh1B,EAAAA,IAAAkL,GAAa,CAAA,UAAU,eAAe,CAAA,CAAA,CAC3C,CAAA,EACJ,CAAA,EACJ,CAAA,CAAA,CACJ,CAAA,CAER,CAAA,EACJ,GACJ,CAER,CCnzBA,MAAMkvB,GAAeC,GAEfC,GAAsBC,GAUtBC,GAAyB/5B,EAAAA,WAK7B,CAAC,CAAE,UAAAC,EAAW,MAAA+5B,EAAO,SAAAn7B,EAAU,GAAGsB,GAASC,IAC3CyE,EAAA,KAACo1B,GAAA,CACC,IAAA75B,EACA,UAAWT,GACT,yMACAq6B,GAAS,OACT/5B,CACF,EACC,GAAGE,EAEH,SAAA,CAAAtB,EACDU,EAAAA,IAACwP,GAAiB,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CACxC,CACD,EACDgrB,GAAuB,YACrBE,GAAiC,YAEnC,MAAMC,GAAyBl6B,EAG7B,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC46B,GAAA,CACC,IAAA/5B,EACA,UAAWT,GACT,wbACAM,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACD+5B,GAAuB,YACrBC,GAAiC,YAEnC,MAAMC,GAAsBp6B,EAAAA,WAG1B,CAAC,CAAE,UAAAC,EAAW,WAAAmH,EAAa,EAAG,GAAGjH,GAASC,IACzCb,EAAAA,IAAA86B,GAAA,CACC,SAAA96B,EAAA,IAAC+6B,GAAA,CACC,IAAAl6B,EACA,WAAAgH,EACA,UAAWzH,GACT,uGACA,mVACAM,CACF,EACC,GAAGE,CAAA,CACN,CAAA,CACF,CACD,EACDi6B,GAAoB,YAAcE,GAA8B,YAEhE,MAAMC,GAAmBv6B,EAAAA,WAKvB,CAAC,CAAE,UAAAC,EAAW,MAAA+5B,EAAO,GAAG75B,CAAM,EAAGC,IACjCb,EAAA,IAACi7B,GAAA,CACC,IAAAp6B,EACA,UAAWT,GACT,wQACAq6B,GAAS,OACT/5B,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDo6B,GAAiB,YAAcC,GAA2B,YAE1D,MAAMC,GAA2Bz6B,EAAAA,WAG/B,CAAC,CAAE,UAAAC,EAAW,SAAApB,EAAU,QAAA67B,EAAS,GAAGv6B,GAASC,IAC7CyE,EAAA,KAAC81B,GAAA,CACC,IAAAv6B,EACA,UAAWT,GACT,uOACAM,CACF,EACA,QAAAy6B,EACC,GAAGv6B,EAEJ,SAAA,CAAAZ,EAAA,IAAC,OAAK,CAAA,UAAU,+DACd,SAAAA,EAAAA,IAACq7B,GAAA,CACC,SAAAr7B,EAAAA,IAACoQ,GAAU,CAAA,UAAU,SAAU,CAAA,CACjC,CAAA,EACF,EACC9Q,CAAA,CAAA,CACH,CACD,EACD47B,GAAyB,YACvBE,GAAmC,YAErC,MAAME,GAAwB76B,EAAAA,WAG5B,CAAC,CAAE,UAAAC,EAAW,SAAApB,EAAU,GAAGsB,CAAM,EAAGC,IACpCyE,EAAA,KAACi2B,GAAA,CACC,IAAA16B,EACA,UAAWT,GACT,uOACAM,CACF,EACC,GAAGE,EAEJ,SAAA,CAAAZ,EAAA,IAAC,OAAK,CAAA,UAAU,+DACd,SAAAA,EAAAA,IAACq7B,GAAA,CACC,SAAAr7B,EAAAA,IAACw7B,GAAc,CAAA,UAAU,sBAAuB,CAAA,CAClD,CAAA,EACF,EACCl8B,CAAA,CAAA,CACH,CACD,EACDg8B,GAAsB,YAAcC,GAAgC,YAEpE,MAAME,GAAoBh7B,EAAAA,WAKxB,CAAC,CAAE,UAAAC,EAAW,MAAA+5B,EAAO,GAAG75B,CAAM,EAAGC,IACjCb,EAAA,IAAC07B,GAAA,CACC,IAAA76B,EACA,UAAWT,GACT,oCACAq6B,GAAS,OACT/5B,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACD66B,GAAkB,YAAcC,GAA4B,YAE5D,MAAMC,GAAwBl7B,EAG5B,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC47B,GAAA,CACC,IAAA/6B,EACA,UAAWT,GAAG,2BAA4BM,CAAS,EAClD,GAAGE,CAAA,CACN,CACD,EACD+6B,GAAsB,YAAcC,GAAgC,YC1JpE,MAAMC,GAAuB,CAACrtB,EAAestB,IAGvCttB,EAAQstB,EAAgB,8BACxBttB,EAAQstB,EAAgB,0BACxB,KAAK,IAAIttB,EAAQstB,CAAO,EAAI,KAAgB,iCAM5CC,GAAoC,CAAC,CACzC,QAAAxK,EAAU,CAAC,EACX,KAAAjR,EAAO,CAAC,EACR,YAAA0b,EAAc,CAAC,EACf,aAAA3T,CACF,IAAM,CACJ,KAAM,CAACkI,EAAYC,CAAa,EAAI/wB,WAAwB,IAAI,EAC1D,CAACw8B,EAAeC,CAAgB,EAAIz8B,WAAyB,KAAK,EAClE,CAAC08B,EAAaC,CAAc,EAAI38B,WAAwB,IAAI,EAC5D,CAAC48B,EAAYC,CAAa,EAAI78B,WAAwB,IAAI,EAC1D,CAAC88B,EAAcC,CAAe,EAAI/8B,EAAA,SAAmB,CAAE,CAAA,EACvD,CAACg9B,EAAYC,CAAa,EAAIj9B,WAAwB,IAAI,EAC1D,CAACmwB,EAAaC,CAAc,EAAIpwB,WAAS,CAAC,EAC1C,CAACk9B,EAAYC,CAAa,EAAIn9B,EAAA,SAAgB,CAAE,CAAA,EAChDo9B,EAAe,GACf3M,EAAc,GACd4M,EAAcvL,EAAQ,CAAC,IAAM,OAE7BwL,EAAWrzB,SAAyB,IAAI,EACxCszB,EAAetzB,SAAuB,IAAI,EAC1CuzB,EAAoBvzB,SAAO,EAAK,EAChCwzB,EAAUxzB,SAAO4W,CAAI,EACrB6c,EAAkBzzB,SAAc,CAAA,CAAE,EAElC0zB,EAAoB,CAAC,mBAAoB,gBAAiB,gBAAiB,UAAU,EAErFC,EAAmB7uB,GAChB,WAAWA,GAAA,YAAAA,EAAO,QAAQ,IAAK,IAAI,MAAM,GAAK,EAIvD3O,EAAAA,UAAU,IAAM,CACd,GAAI,CAACo9B,EAAkB,SAAWF,EAAS,SAAWC,EAAa,QAAS,CAC1E,MAAMM,EAAcP,EAAS,QAAQ,iBAAiB,UAAU,EAC1DQ,EAAS,MAAM,KAAKD,CAAW,EAAE,IAAYE,IAC1C,KAAK,IAAI,IAAKA,GAAK,WAAW,CACtC,EACDhB,EAAgBe,CAAM,EACtBN,EAAkB,QAAU,EAC9B,CACF,EAAG,CAAE,CAAA,EAGLp9B,EAAAA,UAAU,IAAM,CACd,MAAM49B,EAAe,IAAM,CACzB,GAAIV,EAAS,SAAWC,EAAa,SAAWC,EAAkB,QAAS,CACzE,MAAMK,EAAcP,EAAS,QAAQ,iBAAiB,UAAU,EAC1DQ,GAAS,MAAM,KAAKD,CAAW,EAAE,IAAI,CAACE,GAAMt6B,KACzC,KAAK,IAAI,IAAKq5B,EAAar5B,EAAK,GAAKs6B,GAAK,WAAW,CAC7D,EACDhB,EAAgBe,EAAM,CACxB,CAAA,EAGK,cAAA,iBAAiB,SAAUE,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAAA,EAC7D,CAAClB,CAAY,CAAC,EAEX,MAAAmB,EAAgBxsB,EAAAA,QAAQ,IAAM,CAClC,MAAMysB,EAAmC,CAAA,EACvB,OAAAP,EAAA,QAASxX,GAAQ,CACjC,MAAMgY,GAAYtd,EAAK,OAAexV,IAAAA,GAAK8a,CAAG,IAAM,QAAa,CAAC,MAAMyX,EAAgBvyB,GAAK8a,CAAG,GAAK,GAAG,CAAC,CAAC,EACpGkW,GAAU8B,GAAU,OAAS,EAC/BA,GAAU,OAAO,CAACjU,GAAK7e,IAAS6e,GAAM0T,EAAgBvyB,EAAK8a,CAAG,GAAK,GAAG,EAAG,CAAC,EAAIgY,GAAU,OACxF,EAGJD,EAAS/X,CAAG,EAAIA,IAAQ,WAAa,KAAK,MAAMkW,EAAO,EAAI,WAAWA,GAAQ,QAAQ,CAAC,CAAC,CAAA,CACzF,EACM6B,CAAA,EACN,CAACrd,CAAI,CAAC,EAIHud,EAAuB3sB,EAAAA,QAAQ,IAAM,CACzC,MAAMysB,EAAmC,CAAA,EACvB,OAAAP,EAAA,QAASxX,GAAQ,CACjC,GAAIoW,EAAa,CACf,MAAM8B,GAAmB9B,EAAY,OAAelxB,IAAAA,GAAK8a,CAAG,IAAM,QAAa,CAAC,MAAMyX,EAAgBvyB,GAAK8a,CAAG,GAAK,GAAG,CAAC,CAAC,EAC/G+X,EAAA/X,CAAG,EAAIkY,GAAiB,OAAS,EACxCA,GAAiB,OAAO,CAACnU,GAAK7e,KAAS6e,GAAM0T,EAAgBvyB,GAAK8a,CAAG,GAAK,GAAG,EAAG,CAAC,EAAIkY,GAAiB,OAAS,CAAA,MAEjHH,EAAS/X,CAAG,EAAI,CAClB,CACD,EACM+X,CAAA,EACN,CAAC3B,CAAW,CAAC,EAEV+B,EAAuB7sB,EAAAA,QAAQ,IAC/BqgB,EAAQ,CAAC,IAAM,OAAejR,EAAK,IAAI,KAAO,CAAE,aAAc,KAAM,aAAc,MAAO,EAEtFA,EAAK,IAAKxV,GAAS,CACpB,GAAA,CAACA,GAAQ,CAACsyB,EAAkB,UAAgBtyB,EAAK+oB,EAAM,IAAM,MAAS,EACxE,MAAO,CAAE,aAAc,KAAM,aAAc,IAAK,EAGlD,MAAMmK,EAAqBZ,EAAkB,KAAMvJ,IAAW,CAC5D,MAAMrlB,GAAQ6uB,EAAgBvyB,EAAK+oB,EAAM,GAAK,GAAG,EAC3CiI,GAAU4B,EAAc7J,EAAM,EACpC,OAAOrlB,GAAQstB,EAAA,CAChB,EAEKmC,GAA2Bb,EAAkB,MAAOvJ,IAAW,CACnE,MAAMrlB,GAAQ6uB,EAAgBvyB,EAAK+oB,EAAM,GAAK,GAAG,EAC3CiI,GAAU4B,EAAc7J,EAAM,EACpC,OAAOrlB,GAAQstB,EAAA,CAChB,EAEKoC,GAAeF,EAAqB,cAAgBC,GAA2B,gBAAkB,GAEjGE,GAAqBf,EAAkB,KAAMvJ,IAAW,CAC5D,MAAMrlB,GAAQ6uB,EAAgBvyB,EAAK+oB,EAAM,GAAK,GAAG,EAC3CuK,GAAiBP,EAAqBhK,EAAM,EAClD,OAAOrlB,GAAQ4vB,EAAA,CAChB,EAEKC,EAA2BjB,EAAkB,MAAOvJ,IAAW,CACnE,MAAMrlB,GAAQ6uB,EAAgBvyB,EAAK+oB,EAAM,GAAK,GAAG,EAC3CuK,GAAiBP,EAAqBhK,EAAM,EAClD,OAAOrlB,GAAQ4vB,EAAA,CAChB,EAIM,MAAA,CACL,aAAAF,GACA,aAJmBC,GAAqB,eAAiBE,EAA2B,iBAAmB,EAIvG,CACF,CACD,EACA,CAAC/d,EAAM0b,EAAa0B,EAAeG,EAAsBtM,CAAO,CAAC,EAE9D+M,EAAkB,CAACp7B,EAAekgB,IAA4B,CAClEsZ,EAAcx5B,CAAK,EACnB,MAAMq7B,GAASnb,EAAM,MACfob,GAAajC,EAAar5B,CAAK,EAE/Bu7B,GAAmBC,GAA0B,CAC3C,MAAAC,GAAQD,EAAU,MAAQH,GAC1BK,GAAW,KAAK,IAAI,IAAKJ,GAAaG,EAAK,EAC3CE,GAAY,CAAC,GAAGtC,CAAY,EAClCsC,GAAU37B,CAAK,EAAI07B,GACnBpC,EAAgBqC,EAAS,CAAA,EAGrBC,EAAgB,IAAM,CAC1BpC,EAAc,IAAI,EACT,SAAA,oBAAoB,YAAa+B,EAAe,EAChD,SAAA,oBAAoB,UAAWK,CAAa,CAAA,EAG9C,SAAA,iBAAiB,YAAaL,EAAe,EAC7C,SAAA,iBAAiB,UAAWK,CAAa,CAAA,EAG9CC,EAAa7tB,EAAAA,QAAQ,IACzBoP,EAAK,IAAI,CAACxV,EAAM5H,IAAW,WAAA,OACzB,GAAG4H,EACH,wBAA0BgyB,EAAkE,OAApDzxB,GAAA0yB,EAAqB76B,CAAK,IAA1B,YAAAmI,GAA6B,eAAgB,KACrF,wBAA0ByxB,EAAkE,OAApDtvB,GAAAuwB,EAAqB76B,CAAK,IAA1B,YAAAsK,GAA6B,eAAgB,KACrF,SAAU,QAAO1C,GAAA,YAAAA,EAAM,WAAY,CAAC,EACpC,mBAAoBuyB,GAAgBvyB,GAAA,YAAAA,EAAO,sBAAuB,GAAG,EACrE,gBAAiBuyB,GAAgBvyB,GAAA,YAAAA,EAAO,mBAAoB,GAAG,EAC/D,gBAAiBuyB,GAAgBvyB,GAAA,YAAAA,EAAO,mBAAoB,GAAG,GAC/D,EAAG,CAACwV,EAAMyd,EAAsBjB,CAAW,CAAC,EAExCjK,EAAa3hB,EAAAA,QAAQ,IACpBqf,EAEE,CAAC,GAAGwO,CAAU,EAAE,KAAK,CAAC7pB,EAAGlK,IAAM,CAC9B,MAAA8nB,GAAS5d,EAAEqb,CAAU,EACrBwC,GAAS/nB,EAAEulB,CAAU,EAG3B,GAAIA,IAAe,OACV,OAAA0L,IAAkB,MACrB,IAAI,KAAKnJ,EAAM,EAAE,QAAQ,EAAI,IAAI,KAAKC,EAAM,EAAE,UAC9C,IAAI,KAAKA,EAAM,EAAE,QAAA,EAAY,IAAI,KAAKD,EAAM,EAAE,UAIpD,MAAMkM,GAAO,OAAOlM,IAAW,SAC3BA,GACA,YAAYA,IAAU,KAAK,SAAA,EAAW,QAAQ,IAAK,EAAE,EAAE,MAAM,EAC3DmM,EAAO,OAAOlM,IAAW,SAC3BA,GACA,YAAYA,IAAU,KAAK,SAAA,EAAW,QAAQ,IAAK,EAAE,EAAE,MAAM,EAEjE,OAAIiM,GAAOC,EAAahD,IAAkB,MAAQ,GAAK,EACnD+C,GAAOC,EAAahD,IAAkB,MAAQ,EAAI,GAC/C,CAAA,CACR,EAxBuB8C,EAyBvB,CAACA,EAAYxO,EAAY0L,CAAa,CAAC,EAItCiD,EAAmBrL,GAChB,CACL,OACA,cACA,YACA,WACA,YACA,WACA,GAAGuJ,CAAA,EACH,SAASvJ,CAAM,EAEbpB,EAAcoB,GAAmB,CAChCqL,EAAgBrL,CAAM,IAEvBtD,IAAesD,EACAqI,EAAAD,IAAkB,MAAQ,OAAS,KAAK,GAEzDzL,EAAcqD,CAAM,EACpBqI,EAAiB,KAAK,GACxB,EAGIiD,EAAmB,CAAC5wB,EAAe5N,IAAiB,CACpDw7B,IAAgB5tB,GAAS8tB,IAAe17B,GAC1Cy7B,EAAe,IAAI,EACnBE,EAAc,IAAI,IAElBF,EAAe7tB,CAAK,EACpB+tB,EAAc37B,CAAI,EACpB,EAGIy+B,GAAeluB,EAAAA,QAAQ,IAAM,CACjC,MAAM2E,EAASinB,EACXjK,EACAsJ,EACEtJ,EAAW,OAAQ/nB,GACfuxB,IAAe,UACVvxB,EAAK,0BAA4BqxB,EAEtCE,IAAe,UACVvxB,EAAK,0BAA4BqxB,EAEnC,EACR,EACCtJ,EAEN,OAAAsK,EAAgB,QAAUtnB,EACnBA,GACN,CAACgd,EAAYsJ,EAAaE,EAAYS,CAAW,CAAC,EAGrDj9B,EAAAA,UAAU,IAAM,CACVwoB,GACFuU,EAAcO,EAAgB,QAAQ,MAAM,EAAGN,CAAY,CAAC,CAC9D,EACC,CAACxU,CAAY,CAAC,EAEjBxoB,EAAAA,UAAU,IAAM,CAEZwoB,IACC6U,EAAQ,UAAY5c,GACnB6b,IAAgB,MAChB5L,IAAe,MACf0L,KAEFW,EAAcO,EAAgB,QAAQ,MAAM,EAAGN,CAAY,CAAC,EAC5DK,EAAQ,QAAU5c,EACpB,EACC,CAACA,EAAM6b,EAAa5L,EAAY0L,EAAe5T,CAAY,CAAC,EAE/D,MAAMgX,EAAe,IAAM,CACzB,GAAIhX,GAAgBsU,EAAW,OAASQ,EAAgB,QAAQ,OAAQ,CAChE,MAAAmC,EAAYnC,EAAgB,QAAQ,MACxCR,EAAW,OACXA,EAAW,OAASE,CAAA,EAEtBD,KAAsB,CAAC,GAAG5yB,EAAM,GAAGs1B,CAAS,CAAC,CAC/C,CAAA,EAGIC,EAAgBnc,GAAkD,CACtE,MAAMoc,EAASpc,EAAM,cAEnBoc,EAAO,aAAeA,EAAO,WAAaA,EAAO,aAAe,KAEnDH,GACf,EAGII,EAAcvuB,EAAAA,QAAQ,IACtBmX,EACKsU,EAEFyC,GAAa,OAAOxP,EAAc,GAAKM,EAAaN,EAAcM,CAAW,EACnF,CAAC7H,EAAcsU,EAAYyC,GAAcxP,EAAaM,CAAW,CAAC,EAE/DwP,EAAY,KAAK,KAAKN,GAAa,OAASlP,CAAW,EAEvDyP,GAAYC,GAAiB,CAC3B,MAAAC,EAAa,KAAK,IAAI,EAAG,KAAK,IAAID,EAAMF,CAAS,CAAC,EACxD7P,EAAegQ,CAAU,CAAA,EAGrBC,GAAc,CAClB,cAAe,mBACf,UAAa,gBACb,UAAa,eAAA,EAIf,OAEIx6B,EAAA,KAAAwG,WAAA,CAAA,SAAA,CAAA9L,EAAA,IAAC,MAAA,CACC,IAAKg9B,EACL,UAAU,6CACV,MAAO,CACL,MAAO,OACP,UAAW3U,EAAe,sBAAwB,sBAClD,UAAW,MACb,EACA,SAAUA,EAAekX,EAAe,OAExC,SAAAj6B,EAAA,KAAC,QAAA,CACC,IAAKy3B,EACL,UAAU,iEACV,MAAO,CACL,YAAa,QACb,MAAO,OACP,eAAgB,UAClB,EAEA,SAAA,CAAA/8B,MAAC,QAAM,CAAA,UAAU,cACf,SAAAsF,EAAA,KAAC,KACE,CAAA,SAAA,CAAQisB,EAAA,CAAC,IAAM,QAAUyK,GACxB12B,EAAA,KAAC,KAAA,CACC,UAAU,yGACV,MAAO,CACL,MAAO,GAAGi3B,EAAa,CAAC,CAAC,KACzB,SAAU,QACV,SAAU,SACV,KAAM,EACN,IAAK,CACP,EACD,SAAA,CAAA,oBAECv8B,EAAA,IAAC,MAAA,CACC,YAAc8E,GAAMw5B,EAAgB,EAAGx5B,CAAC,EACxC,UAAW,2EAA2E23B,IAAe,EAAI,cAAgB,EAAE,EAAA,CAC7H,CAAA,CAAA,CACF,EAEDlL,EAAQ,IAAI,CAACsC,EAAQkM,IAAa,OACjC,MAAMC,GAAgBD,IAAa,EAC7BE,GAAkBD,IAAiBzO,EAAQ,CAAC,IAAM,OAClD2O,GAAkB9C,EAAkB,SAASvJ,CAAM,EAGvD,OAAAvuB,EAAA,KAAC,KAAA,CAEC,UAAW;AAAA;AAAA;AAAA;AAAA,cAIjB45B,EAAgBrL,CAAM,EAAI,iBAAmB,EAAE;AAAA,cAC/CoM,GAAkB,qBAAuB,MAAM;AAAA,cAC/CD,IAAiBzO,EAAQ,CAAC,IAAM,QAAUyK,EAAc,sBAAwB,EAAE;AAAA,YAE5E,MAAO,CACL,MAAO,GAAGO,EAAawD,CAAQ,EAAI,CAAC,KACpC,SAAU,QACV,GAAIC,IAAiB,CACnB,KAAMC,GACF,EACC1O,EAAQ,CAAC,IAAM,QAAUyK,EAAcO,EAAa,CAAC,EAAI,CAChE,EACA,GAAI0D,IAAmB,CACrB,gBAAiB,mBACjB,OAAQ,EACV,CACF,EACA,QAAS,IAAMxN,EAAWoB,CAAM,EAEhC,SAAA,CAACvuB,EAAAA,KAAA,MAAA,CAAI,UAAU,6BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAtF,EAAAA,IAAC,QAAM,SAAO6zB,CAAA,CAAA,EACbqL,EAAgBrL,CAAM,GACpB7zB,EAAA,IAAA,OAAA,CAAK,UAAU,OACb,SAAAuwB,IAAesD,EACdoI,IAAkB,MAChBj8B,EAAA,IAAC8zB,IAAQ,UAAU,uBAAA,CAAwB,EAE3C9zB,EAAA,IAAC+zB,GAAU,CAAA,UAAU,uBAAwB,CAAA,EAG9C/zB,EAAAA,IAAAg0B,GAAA,CAAY,UAAU,uBAAA,CAAwB,CAEnD,CAAA,CAAA,EAEJ,EACCkM,IAAmBxC,EAAc7J,CAAM,IAAM,QAC3CvuB,OAAA,OAAA,CAAK,UAAU,wBAAwB,SAAA,CAAA,QAChCuuB,IAAW,WACb,KAAK,MAAM6J,EAAc7J,CAAM,CAAC,GAChCxoB,EAAAqyB,EAAc7J,CAAM,IAApB,YAAAxoB,EAAuB,QAAQ,GAClCwoB,IAAW,WAAa,IAAM,EAAA,EACjC,CAAA,EAEJ,EACA7zB,EAAA,IAAC,MAAA,CACC,YAAc8E,GAAMw5B,EAAgByB,EAAUj7B,CAAC,EAC/C,UAAW,2EAA2E23B,IAAesD,EAAW,cAAgB,EAC9H,EAAA,CACJ,CAAA,CAAA,EAtDKlM,CAAA,CAuDP,CAEH,CAAA,CAAA,CACH,CACF,CAAA,EAEA7zB,EAAAA,IAAC,SAAM,UAAU,oCACd,WAAY,IAAI,CAAC8K,EAAM5H,IACtBoC,EAAA,KAAC,KAAA,CAEC,UAAW,GAAGpC,EAAQ,IAAM,EAAI,aAAe,UAC7C,+DAED,SAAA,CAAQquB,EAAA,CAAC,IAAM,QAAUyK,GACxBh8B,EAAA,IAAC,KAAA,CACC,UAAU,kHACV,MAAO,CACL,SAAU,SACV,aAAc,WACd,WAAY,QACd,EAEA,SAAAsF,EAAA,KAAC,MAAI,CAAA,UAAU,wCACZ,SAAA,CAAAwF,EAAK,yBACJxF,EAAA,KAAC,OAAA,CACC,QAAS,IAAM65B,EAAiBr0B,EAAK,wBAAyB,SAAS,EACvE,UAAW,qEAAqEA,EAAK,0BAA4B,cAC7G,8BACA,yBACF,IAAIqxB,IAAgBrxB,EAAK,yBAA2BuxB,IAAe,UAC/D,uCACA,EACJ,kBAED,SAAA,CAAAvxB,EAAK,0BAA4B,cAC/B9K,EAAAA,IAAA8zB,GAAA,CAAQ,KAAM,GAAI,UAAU,MAAO,CAAA,EAEnC9zB,EAAA,IAAA+zB,GAAA,CAAU,KAAM,GAAI,UAAU,OAAO,EAEvCjpB,EAAK,wBAAwB,MAAM,GAAG,EAAE,CAAC,CAAA,CAAA,CAC5C,EAEDA,EAAK,yBACJxF,EAAA,KAAC,OAAA,CACC,QAAS,IAAM65B,EAAiBr0B,EAAK,wBAAyB,SAAS,EACvE,UAAW,qEAAqEA,EAAK,0BAA4B,eAC7G,4BACA,+BACF,IAAIqxB,IAAgBrxB,EAAK,yBAA2BuxB,IAAe,UAC/D,uCACA,EACJ,kBAED,SAAA,CAAAvxB,EAAK,0BAA4B,eAC/B9K,EAAAA,IAAAmgC,GAAA,CAAM,KAAM,GAAI,UAAU,MAAO,CAAA,EAEjCngC,EAAA,IAAAogC,GAAA,CAAW,KAAM,GAAI,UAAU,OAAO,EACvC,UAAA,CAAA,CAEJ,CAAA,EAEJ,CAAA,CACF,EAEFpgC,EAAA,IAAC,KAAA,CACC,UAAU,wHACV,MAAO,CACL,SAAU,SACV,aAAc,WACd,WAAY,SACZ,KAAM,GAAGuxB,EAAQ,CAAC,IAAM,OAASgL,EAAa,CAAC,EAAI,CAAC,IACtD,EAEC,SAAAzxB,EAAKymB,EAAQ,CAAC,CAAC,CAAA,CAClB,EACCA,EAAQ,MAAM,CAAC,EAAE,IAAKsC,IAAW,CAC1B,MAAAwM,GAAYv1B,EAAK+oB,EAA2B,EAC5CyM,GAAqBlD,EAAkB,SAASvJ,EAAM,EACtD0M,EAAiB1M,MAAUiM,GAEjC,IAAIpL,EAAa,gBACjB,GAAI4L,GACF5L,EAAamH,GAAqBwE,GAAqB3C,EAAc7J,EAAM,CAAC,UACnE0M,EAAgB,CACnB,MAAAC,GAAaV,GAAYjM,EAAkC,EAC3D4M,GAAY31B,EAAK01B,EAAU,EACjC9L,EAAamH,GAAqB4E,GAAW/C,EAAc8C,EAAU,CAAC,CACxE,CAEE,OAAAxgC,EAAA,IAAC,KAAA,CAEC,UAAW,oDAAoD00B,CAAU,GACzE,MAAO,CACL,SAAU,SACV,aAAc,WACd,WAAY,QACd,EAEA,SAAC10B,EAAA,IAAA,MAAA,CAAI,UAAU,yCACZ,YAAO,SAAS,MAAM,EACnB,GAAIqgC,GAAqB,QAAQ,CAAC,CAAC,IACnCA,GACN,CAAA,EAZKxM,EAAA,CAaP,CAEH,CAAA,CAAA,EAhGI3wB,CAkGR,CAAA,EACH,CAAA,CAAA,CACF,CAAA,CACF,EACC,CAACmlB,GACC/iB,EAAAA,KAAA,MAAA,CAAI,UAAU,oEACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gCAAgC,SAAA,CAAA,YAClCsqB,EAAc,GAAKM,EAAe,EAAE,OAAK,KAAK,IAAIN,EAAcM,EAAakP,GAAa,MAAM,EAAE,OAAKA,GAAa,OAAO,UAAA,EACxI,EACA95B,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAtF,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,UAAU,6BACV,QAAS,IAAM2+B,GAAS,CAAC,EACzB,SAAU/P,IAAgB,EAE1B,SAAA5vB,EAAAA,IAAC0gC,GAAa,CAAA,UAAU,SAAU,CAAA,CAAA,CACpC,EACA1gC,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,UAAU,cACV,QAAS,IAAM2+B,GAAS/P,EAAc,CAAC,EACvC,SAAUA,IAAgB,EAE1B,SAAA5vB,EAAAA,IAACiL,GAAY,CAAA,UAAU,SAAU,CAAA,CAAA,CACnC,EACA3F,EAAAA,KAAC,MAAI,CAAA,UAAU,uDAAuD,SAAA,CAAA,QAC9DsqB,EAAY,OAAK8P,CAAA,EACzB,EACA1/B,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,UAAU,cACV,QAAS,IAAM2+B,GAAS/P,EAAc,CAAC,EACvC,SAAUA,IAAgB8P,EAE1B,SAAA1/B,EAAAA,IAACkL,GAAa,CAAA,UAAU,SAAU,CAAA,CAAA,CACpC,EACAlL,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,UAAU,6BACV,QAAS,IAAM2+B,GAASD,CAAS,EACjC,SAAU9P,IAAgB8P,EAE1B,SAAA1/B,EAAAA,IAAC2gC,GAAc,CAAA,UAAU,SAAU,CAAA,CAAA,CACrC,CAAA,EACF,CAAA,EACF,CACJ,CAAA,CAAA,CAEJ,EAEAC,GAAel0B,GAAM,KAAKqvB,EAAW,ECtjB9B,SAAS8E,GAAgB,CAAE,QAAAtP,EAAS,gBAAAuP,EAAgB,QAAAxJ,EAAQ,WAAAC,GAAoC,CACrG,KAAM,CAACwJ,EAAcC,CAAe,EAAIvhC,WAAiB,EAAE,EACrD,CAACwhC,EAAgBC,CAAiB,EAAIzhC,WAAiC,GAAG,EAC1E,CAAC0hC,EAAaC,CAAc,EAAI3hC,WAAiB,EAAE,EAEzDI,EAAAA,UAAU,IAAM,CACdihC,EAAgBxJ,CAAO,CAAA,EACtB,CAACA,EAASwJ,CAAe,CAAC,EAE7B,MAAMO,EAAY,IAAM,CAClBN,GAAgBI,IACP5J,EAAA,CAAC,GAAGD,EAAS,CAAE,OAAQyJ,EAAc,SAAUE,EAAgB,MAAOE,CAAY,CAAC,CAAC,EAC/FH,EAAgB,EAAE,EAClBI,EAAe,EAAE,EACnB,EAIA,OAAAphC,EAAAA,IAAC,MACC,CAAA,SAAAsF,EAAAA,KAAC80B,GACC,CAAA,SAAA,CAAAp6B,MAACs6B,GAAoB,CAAA,QAAO,GAC1B,SAAAt6B,EAAA,IAACgB,GAAO,QAAQ,UAAU,KAAM,OAC9B,SAAChB,EAAAA,IAAA4zB,GAAA,CAAO,UAAU,SAAA,CAAU,CAC9B,CAAA,EACF,QACCiH,GAAoB,CAAA,UAAU,WAC7B,SAACv1B,EAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAA,EAAA,KAAC6lB,GAAO,CAAA,MAAO4V,EAAc,cAAgBvyB,GAAU,CACrDwyB,EAAgBxyB,CAAK,CAErB,EAAA,SAAA,CAAAxO,MAACurB,GACC,CAAA,SAAAvrB,EAAA,IAACqrB,GAAY,CAAA,YAAY,eAAgB,CAAA,EAC3C,EACCrrB,EAAA,IAAAgsB,GAAA,CACE,SAAQuF,EAAA,IAAKsC,GACX7zB,EAAA,IAAAssB,GAAA,CAAwB,MAAOuH,EAAS,SAAxBA,CAAA,EAAAA,CAA+B,CACjD,EACH,CAAA,EACF,EACAvuB,EAAAA,KAAC6lB,IAAO,MAAO8V,EAAgB,cAAgBzyB,GAAU0yB,EAAkB1yB,CAA+B,EACxG,SAAA,CAAAxO,MAACurB,GACC,CAAA,SAAAvrB,EAAA,IAACqrB,GAAY,CAAA,YAAY,iBAAkB,CAAA,EAC7C,SACCW,GAEK,CAAA,SAAA,CAAChsB,EAAA,IAAAssB,GAAA,CAAW,MAAM,IAAI,SAAY,eAAA,EACjCtsB,EAAA,IAAAssB,GAAA,CAAW,MAAM,IAAI,SAAS,YAAA,EAC9BtsB,EAAA,IAAAssB,GAAA,CAAW,MAAM,IAAI,SAAQ,WAAA,CAAA,EAGpC,CAAA,EACF,EACAtsB,EAAA,IAACQ,GAAA,CACC,KAAK,OACL,YAAY,qBACZ,MAAO2gC,EACP,SAAWr8B,GAAMs8B,EAAet8B,EAAE,OAAO,KAAK,CAAA,CAChD,EACC9E,EAAA,IAAAgB,EAAA,CAAO,QAASqgC,EAAW,SAAU,aAAA,CAAA,CAAA,CACxC,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CCjDA,MAAMC,GAA8C,CAAC,CAAE,UAAWC,KAAoB,CACpF,KAAM,CAAC9yB,EAAM6B,CAAO,EAAI7Q,WAAgC8hC,CAAa,EAC/D,CAACvF,EAAawF,CAAc,EAAG/hC,EAAA,SAAuB,CAAE,CAAA,EACxD,CAAC2/B,EAAcqC,CAAe,EAAIhiC,EAAA,SAAuB,CAAE,CAAA,EAC3D,CAAC6gB,EAAMoX,CAAO,EAAIj4B,EAAA,SAAuB,CAAE,CAAA,EAC3C,CAACsP,EAAW0K,CAAY,EAAIha,WAAS,EAAK,EAC1C,CAAE,QAAA4K,GAAY2P,KACdT,EAAgBD,KAGhB,CAACooB,EAAiBC,CAAkB,EAAIliC,EAAA,SAAmB,CAAE,CAAA,EAC7D,CAACmiC,EAAYC,CAAa,EAAIpiC,WAAiB,IAAI,EACnD,CAAC63B,EAASC,CAAU,EAAI93B,EAAA,SAAuB,CAAE,CAAA,EACjD,CAACqiC,EAAgBC,CAAiB,EAAItiC,EAAA,SAAmB,CAAE,CAAA,EAC3D,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAS,EAAK,EAChD,CAAC,KAAAF,GAAQU,KAGT+hC,EAAa,CAAC,OAAQ,UAAW,SAAU,WAAY,WAAY,cAAe,mBAAoB,YAAa,gBAAiB,YAAa,eAAe,EAEhKC,EAAyBpO,GAAmB,CAChD8N,EAA2B33B,GAAA,CACzB,MAAMk4B,EAAal4B,EAAK,SAAS6pB,CAAM,EACnC7pB,EAAK,OAAcm4B,GAAAA,IAAQtO,CAAM,EACjC,CAAC,GAAG7pB,EAAM6pB,CAAM,EAEpB,OAAAkO,EAAiCK,GAE3B,CAAC,OAAQ,SAAU,SAAS,EAAE,SAASvO,CAAM,EAC3CqO,EAAW,SAASrO,CAAM,EAErBuO,EAAY,OAAcD,GAAAA,IAAQtO,CAAM,EAGxC,CAAC,GAAGuO,EAAavO,CAAM,EAI3BuO,CACR,EAEMJ,EAAW,OAAOG,GAAOD,EAAW,SAASC,CAAG,CAAC,CAAA,CACzD,CAAA,EAGHtiC,EAAAA,UAAU,IAAM,CACd8hC,EAAmBK,CAAU,CAC/B,EAAG,CAAE,CAAA,EAGLniC,EAAAA,UAAU,IAAM,CACdyQ,EAAQixB,CAAa,CAAA,EACpB,CAACA,CAAa,CAAC,EAEZ,MAAAc,EAAev4B,EAAAA,YAAY,SAAY,CAC3C2P,EAAa,EAAI,EACb,GAAA,CAEF,MAAMY,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAGrD,CAACgY,EAAmB6b,CAAe,EAAI,MAAM,QAAQ,IAAI,CAC7D/oB,EAAc,KACZ,iCAAiClP,CAAO,GACxC,CACE,UAAWgQ,GAAa,GACxB,QAASC,GAAW,GACpB,OAAO/a,GAAA,YAAAA,EAAM,GAAG,MAAOqiC,EACvB,GAAIE,EAAe,OAAS,EACxB,CAAE,QAAS,CAAE,SAAUA,CAAiB,CAAA,EACxC,CAAC,CACP,EACA,CAAE,gBAAiB,EAAK,CAC1B,EACAvoB,EAAc,KACZ,iCAAiClP,CAAO,GACxC,CAAE,UAAW,GAAI,QAAS,GAAG,OAAO9K,GAAA,YAAAA,EAAM,GAAG,MAAOqiC,EAAY,GAAIE,EAAe,OAAS,EACxF,CAAE,QAAS,CAAE,SAAUA,EACvB,EAAA,EAAI,EACR,CAAE,gBAAiB,EAAK,CAC1B,CAAA,CACD,EAGKS,EAAc9b,EAAkB,KAAK,MAAQ,CAAA,EAC7C+b,GAAqBF,EAAgB,KAAK,MAAQ,CAAA,EAOpD,GALJ5K,EAAQ6K,CAAW,EACnBd,EAAgBc,CAAW,EAC3Bf,EAAegB,EAAkB,EAG7BD,EAAY,OAAS,EAAG,CAC1B,MAAML,EAAa,OAAO,KAAKK,EAAY,CAAC,CAAC,EAC7CZ,EAAoBc,GAClBA,EAAa,SAAW,EACpBP,EACAO,EAAa,OAAQN,GAAQD,EAAW,SAASC,CAAG,CAAC,CAAA,CAE7D,QACOh9B,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,CAAA,QAC9C,CACAsU,EAAa,EAAK,CACpB,GACC,CAACpP,EAASy3B,EAAgBrzB,EAAKmzB,CAAU,CAAC,EAG7C/hC,EAAAA,UAAU,IAAM,CACDwiC,IACb,MAAMvnB,EAAa,YAAYunB,EAAc,EAAI,GAAK,GAAI,EACnD,MAAA,IAAM,cAAcvnB,CAAU,CAAA,EACpC,CAACunB,CAAY,CAAC,EAGjB,MAAMnqB,EAAsB,IAAM,CACnBmqB,GAAA,EAKT5Z,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAGzBqa,EAAwBxxB,EAAAA,QAAQ,IAC7B8wB,EAAW,OAAQG,GAAQT,EAAgB,SAASS,CAAG,CAAC,EAC9D,CAACH,EAAYN,CAAe,CAAC,EAE1BiB,EAAe74B,cAAawtB,GAA0B,CACtD,IAAAzhB,EAAS,CAAC,GAAGyK,CAAI,EAErBgX,EAAQ,QAAkBsL,GAAA,CACf/sB,EAAAA,EAAO,OAAe/K,GAAA,CACvB,MAAA0D,EAAQ1D,EAAK83B,EAAO,MAA0B,EAChD,GAAA,CAAC,IAAK,IAAK,GAAG,EAAE,SAASA,EAAO,QAAQ,EAAG,CACvC,MAAAC,GAAW,WAAWr0B,CAAK,EAC3B2yB,EAAc,WAAWyB,EAAO,KAAK,EAC3C,OAAQA,EAAO,SAAU,CACvB,IAAK,IAAK,OAAOC,GAAW1B,EAC5B,IAAK,IAAK,OAAO0B,GAAW1B,EAC5B,IAAK,IAAK,OAAO0B,KAAa1B,EAC9B,QAAgB,MAAA,EAClB,CACF,CACO,MAAA,EAAA,CACR,CAAA,CACF,EAEDM,EAAgB5rB,CAAM,CAAA,EACrB,CAACyK,CAAI,CAAC,EAEHwiB,EAAuB5xB,EAAAA,QAAQ,IAAMkuB,EAAc,CAACA,CAAY,CAAC,EAEjE2D,EAAiB,CAAC,cAAe,YAAa,WAAY,YAAa,gBAAiB,mBAAoB,eAAe,EAC3HC,EAAgB9/B,GAAkB,CACtCq0B,EAAWD,EAAQ,OAAO,CAACroB,EAAGilB,IAAMA,IAAMhxB,CAAK,CAAC,CAAA,EAGlD,OACGlD,EAAA,IAAA8N,GAAA,CAAK,UAAW,QAAQua,EAAe,yBAA2B,EAAE,GACrE,SAAAroB,EAAA,IAACkO,IAAY,UAAU,OACrB,SAAC5I,OAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAkB,qBAAA,QACrD0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAtF,MAACgB,GAAO,QAASkX,EAAqB,SAAUnJ,EAAW,KAAK,OAAO,QAAQ,UAC7E,SAAA/O,EAAAA,IAACoY,IAAU,UAAW,WAAWrJ,EAAY,eAAiB,EAAE,EAAI,CAAA,EACtE,SACCqrB,GACC,CAAA,SAAA,CAAAp6B,MAACs6B,GAAoB,CAAA,QAAO,GAC1B,SAAAt6B,EAAA,IAACgB,GAAO,QAAQ,UAAU,KAAM,OAC9B,SAAChB,EAAAA,IAAAijC,GAAA,CAAQ,UAAU,SAAA,CAAU,CAC/B,CAAA,EACF,EACAjjC,EAAA,IAAC66B,GAAoB,CAAA,UAAU,OAC5B,SAAAmH,EAAW,IAAKnO,GACfvuB,EAAA,KAAC01B,GAA8B,CAAA,UAAU,8BACvC,SAAA,CAAAh7B,EAAA,IAACiQ,GAAA,CACC,GAAI,UAAU4jB,CAAM,GACpB,QAAS6N,EAAgB,SAAS7N,CAAM,EACxC,gBAAiB,IAAMoO,EAAsBpO,CAAM,CAAA,CACrD,EACA7zB,EAAAA,IAAC,SAAM,QAAS,UAAU6zB,CAAM,GAAI,UAAU,wBAC3C,SACHA,CAAA,CAAA,CAAA,GARqBA,CASvB,CACD,EACH,CAAA,EACF,EACA7zB,EAAA,IAAC6gC,GAAA,CACC,QAASkC,EACT,gBAAiBJ,EACjB,QAAArL,EACA,WAAAC,CAAA,CACF,QACEv2B,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACrD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,SACE2P,GACA,CAAA,SAAA,CAAAp6B,EAAAA,IAACs6B,IAAoB,QAAO,GAC1B,SAACh1B,EAAA,KAAAtE,EAAA,CAAO,QAAQ,UAAU,SAAA,CAAA,QAClB4gC,IAAe,QAAU,MAAQA,EAAW,QAClD5hC,EAAAA,IAACuL,GAAY,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CACxC,CACF,CAAA,SACCsvB,GACC,CAAA,SAAA,CAAA76B,MAACg7B,IAAiB,SAAU,IAAM6G,EAAc,IAAI,EAAG,SAAY,eAAA,QAClE7G,GAAiB,CAAA,SAAU,IAAM6G,EAAc,KAAK,EAAG,SAAa,gBAAA,QACpE7G,GAAiB,CAAA,SAAU,IAAM6G,EAAc,OAAO,EAAG,SAAa,gBAAA,CAAA,EACzE,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAECvK,EAAQ,OAAS,GAChBt3B,EAAA,IAAC,OAAI,UAAU,uBACZ,SAAQs3B,EAAA,IAAI,CAACsL,EAAQ1/B,IACnBoC,EAAA,KAAA,MAAA,CAAgB,UAAU,yKACzB,SAAA,CAACtF,EAAAA,IAAA,OAAA,CAAM,SAAG,GAAA4iC,EAAO,MAAM,IAAIA,EAAO,QAAQ,IAAIA,EAAO,KAAK,EAAG,CAAA,EAC5D5iC,EAAA,IAAA,SAAA,CAAO,QAAS,IAAMgjC,EAAa9/B,CAAK,EAAG,UAAU,yGAAyG,aAAW,gBACxK,SAAAlD,MAACgd,GAAE,CAAA,UAAU,SAAU,CAAA,EACzB,CAAA,GAJQ9Z,CAKV,CACD,EACH,QAGD,MAAI,CAAA,UAAU,6BACZ,SAAA6L,QACEukB,GAAc,CAAA,CAAA,EAEdtzB,EAAAA,IAAA+7B,GAAA,CAAY,QAAS2G,EAAuB,KAAMI,EAAuB,YAAA9G,EAA0B,aAAA3T,CAA4B,CAAA,EAEpI,CAAA,EACF,EACF,CACF,CAAA,CAEF,ECvPM6a,GAAwD,CAAC,CAAE,UAAW3B,KAAoB,CAC9F,KAAM,CAAC9yB,EAAM6B,CAAO,EAAI7Q,WAAgC8hC,CAAa,EAC/D,CAACvF,EAAawF,CAAc,EAAI/hC,EAAA,SAAuB,CAAE,CAAA,EACzD,CAAC2/B,EAAcqC,CAAe,EAAIhiC,EAAA,SAAuB,CAAE,CAAA,EAC3D,CAAC63B,EAASC,CAAU,EAAI93B,EAAA,SAAuB,CAAE,CAAA,EACjD,CAAC6gB,EAAMoX,CAAO,EAAIj4B,EAAA,SAAuB,CAAE,CAAA,EAC3C,CAACsP,EAAW0K,CAAY,EAAIha,WAAS,EAAK,EAC1C,CAAE,QAAA4K,GAAY2P,KACdT,EAAgBD,KAEhBe,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACrD,CAACizB,EAAiBC,CAAkB,EAAIliC,EAAA,SAAmB,CAAE,CAAA,EAC7D,CAACmiC,EAAYC,CAAa,EAAIpiC,WAAiB,IAAI,EACnD,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAS,EAAK,EAEhD,CAAE,KAAAF,GAASU,KAGjBJ,EAAAA,UAAU,IAAM,CACdyQ,EAAQixB,CAAa,CAAA,EACpB,CAACA,CAAa,CAAC,EAEZ,MAAAU,EAAyBpO,GAAmB,CAChD8N,EAA2B33B,GAAA,CACzB,MAAMk4B,EAAal4B,EAAK,SAAS6pB,CAAM,EACnC7pB,EAAK,OAAcm4B,GAAAA,IAAQtO,CAAM,EACjC,CAAC,GAAG7pB,EAAM6pB,CAAM,EAEpB,OAAOmO,EAAW,OAAOG,GAAOD,EAAW,SAASC,CAAG,CAAC,CAAA,CACzD,CAAA,EAGG3L,EAAY1sB,EAAAA,YAAY,SAAY,CACxC2P,EAAa,EAAI,EACb,GAAA,CAGF,KAAM,CAACgN,EAAmB6b,CAAe,EAAI,MAAM,QAAQ,IAAI,CAC7D/oB,EAAc,KAAK,oCAAoClP,CAAO,GAAI,CAChE,UAAWgQ,GAAa,GACxB,QAASC,GAAW,GACpB,OAAQ/a,GAAA,YAAAA,EAAM,GACd,MAAOqiC,CAAA,EACN,CAAE,gBAAiB,GAAM,EAC5BroB,EAAc,KAAK,oCAAoClP,CAAO,GAAI,CAChE,UAAW,GACX,QAAS,GACT,OAAQ9K,GAAA,YAAAA,EAAM,GACd,MAAOqiC,CAAA,EACN,CAAE,gBAAiB,GAAM,CAAA,CAC7B,EAEKW,EAAc9b,EAAkB,KAAK,MAAQ,CAAA,EAC7C+b,EAAqBF,EAAgB,KAAK,MAAQ,CAAA,EAMpD,GAJJ5K,EAAQ6K,CAAW,EACnBd,EAAgBc,CAAW,EAC3Bf,EAAegB,CAAkB,EAE7BD,EAAY,OAAS,EAAG,CAC1B,MAAMP,EAAa,OAAO,KAAKO,EAAY,CAAC,CAAC,EAC7CZ,EAAoBc,IAClBA,GAAa,SAAW,EACpBT,EACAS,GAAa,OAAQN,GAAQH,EAAW,SAASG,CAAG,CAAC,CAAA,CAE7D,QACOh9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE3C,CACAsU,EAAa,EAAK,CACpB,GACC,CAACpP,EAASgQ,EAAWC,EAASsnB,CAAU,CAAC,EAE5C/hC,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,GAAK,GAAK,GAAI,EACjD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd,MAAMte,EAAsB,IAAM,CACtBse,GAAA,EAGNwL,EAAa1hB,EAAK,OAAS,EAAI,OAAO,KAAKA,EAAK,CAAC,CAAC,EAAI,GACtDoiB,EAAwBV,EAAW,UAAcN,EAAgB,SAASS,CAAG,CAAC,EAE9EQ,EAAe74B,cAAawtB,GAA0B,CACtD,IAAAzhB,EAAS,CAAC,GAAGyK,CAAI,EAErBgX,EAAQ,QAAkBsL,GAAA,CACf/sB,EAAAA,EAAO,OAAe/K,GAAA,CACvB,MAAA0D,EAAQ1D,EAAK83B,EAAO,MAA0B,EAChD,GAAA,CAAC,IAAK,IAAK,GAAG,EAAE,SAASA,EAAO,QAAQ,EAAG,CACvC,MAAAC,GAAW,WAAWr0B,CAAK,EAC3B2yB,EAAc,WAAWyB,EAAO,KAAK,EAC3C,OAAQA,EAAO,SAAU,CACvB,IAAK,IAAK,OAAOC,GAAW1B,EAC5B,IAAK,IAAK,OAAO0B,GAAW1B,EAC5B,IAAK,IAAK,OAAO0B,KAAa1B,EAC9B,QAAgB,MAAA,EAClB,CACF,CACO,MAAA,EAAA,CACR,CAAA,CACF,EAEDM,EAAgB5rB,CAAM,CAAA,EACrB,CAACyK,CAAI,CAAC,EAEHwiB,EAAuB5xB,EAAAA,QAAQ,IAAMkuB,EAAc,CAACA,CAAY,CAAC,EAEjE2D,EAAiB,CAAC,cAAe,YAAa,WAAY,YAAa,gBAAiB,mBAAoB,eAAe,EAC3HC,EAAgB9/B,GAAkB,CACtCq0B,EAAWD,EAAQ,OAAO,CAACroB,EAAGilB,IAAMA,IAAMhxB,CAAK,CAAC,CAAA,EAG5CulB,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAG/B,OACGroB,EAAA,IAAA8N,GAAA,CAAK,UAAW,QAAQua,EAAe,yBAA2B,EAAE,GACnE,SAAAroB,EAAA,IAACkO,IAAY,UAAU,OACrB,SAAC5I,OAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAsB,yBAAA,QACzD0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAtF,MAACgB,GAAO,QAASkX,EAAqB,SAAUnJ,EAAW,KAAK,OAAO,QAAQ,UAC7E,SAAA/O,EAAAA,IAACoY,IAAU,UAAW,WAAWrJ,EAAY,eAAiB,EAAE,EAAI,CAAA,EACtE,SACCqrB,GACC,CAAA,SAAA,CAAAp6B,MAACs6B,GAAoB,CAAA,QAAO,GAC1B,SAAAt6B,EAAA,IAACgB,GAAO,QAAQ,UAAU,KAAM,OAC9B,SAAChB,EAAAA,IAAAijC,GAAA,CAAQ,UAAU,SAAA,CAAU,CAC/B,CAAA,EACF,EACAjjC,EAAA,IAAC66B,GAAoB,CAAA,UAAU,OAC5B,SAAAmH,EAAW,IAAKnO,GACfvuB,EAAA,KAAC01B,GAA8B,CAAA,UAAU,8BACvC,SAAA,CAAAh7B,EAAA,IAACiQ,GAAA,CACC,GAAI,UAAU4jB,CAAM,GACpB,QAAS6N,EAAgB,SAAS7N,CAAM,EACxC,gBAAiB,IAAMoO,EAAsBpO,CAAM,CAAA,CACrD,EACA7zB,EAAAA,IAAC,SAAM,QAAS,UAAU6zB,CAAM,GAAI,UAAU,wBAC3C,SACHA,CAAA,CAAA,CAAA,GARqBA,CASvB,CACD,EACH,CAAA,EACF,EACA7zB,EAAA,IAAC6gC,GAAA,CACC,QAASkC,EACT,gBAAiBJ,EACjB,QAAArL,EACA,WAAAC,CAAA,CACF,QACEv2B,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACrD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,SACE2P,GACA,CAAA,SAAA,CAAAp6B,EAAAA,IAACs6B,IAAoB,QAAO,GAC1B,SAACh1B,EAAA,KAAAtE,EAAA,CAAO,QAAQ,UAAU,SAAA,CAAA,QAClB4gC,IAAe,QAAU,MAAQA,EAAW,QAClD5hC,EAAAA,IAACuL,GAAY,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CACxC,CACF,CAAA,SACCsvB,GACC,CAAA,SAAA,CAAA76B,MAACg7B,IAAiB,SAAU,IAAM6G,EAAc,IAAI,EAAG,SAAY,eAAA,QAClE7G,GAAiB,CAAA,SAAU,IAAM6G,EAAc,KAAK,EAAG,SAAa,gBAAA,QACpE7G,GAAiB,CAAA,SAAU,IAAM6G,EAAc,OAAO,EAAG,SAAa,gBAAA,CAAA,EACzE,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAECvK,EAAQ,OAAS,GAChBt3B,EAAA,IAAC,OAAI,UAAU,uBACZ,SAAQs3B,EAAA,IAAI,CAACsL,EAAQ1/B,IACnBoC,EAAA,KAAA,MAAA,CAAgB,UAAU,yKACzB,SAAA,CAACtF,EAAAA,IAAA,OAAA,CAAM,SAAG,GAAA4iC,EAAO,MAAM,IAAIA,EAAO,QAAQ,IAAIA,EAAO,KAAK,EAAG,CAAA,EAC5D5iC,EAAA,IAAA,SAAA,CAAO,QAAS,IAAMgjC,EAAa9/B,CAAK,EAAG,UAAU,yGAAyG,aAAW,gBACxK,SAAAlD,MAACgd,GAAE,CAAA,UAAU,SAAU,CAAA,EACzB,CAAA,GAJQ9Z,CAKV,CACD,EACH,QAGD,MAAI,CAAA,UAAU,6BACZ,SAAA6L,QACEukB,GAAc,CAAA,CAAA,EAEdtzB,EAAAA,IAAA+7B,GAAA,CAAY,QAAS2G,EAAuB,KAAMI,EAAuB,YAAA9G,EAA0B,aAAA3T,CAA4B,CAAA,EAEpI,CAAA,EACF,EACF,CACF,CAAA,CAEJ,EC9MM8a,GAAgD,CAAC,CAAE,UAAW5B,KAAoB,CACtF,KAAM,CAAC9yB,EAAM6B,CAAO,EAAI7Q,WAAgC8hC,CAAa,EAC/D,CAACnC,EAAcqC,CAAe,EAAIhiC,EAAA,SAAsB,CAAE,CAAA,EAC1D,CAACu8B,EAAawF,CAAc,EAAI/hC,EAAA,SAAsB,CAAE,CAAA,EACxD,CAAC63B,EAASC,CAAU,EAAI93B,EAAA,SAAuB,CAAE,CAAA,EACjD,CAAC6gB,EAAMoX,CAAO,EAAIj4B,EAAA,SAAsB,CAAE,CAAA,EAC1C,CAACsP,EAAW0K,CAAY,EAAIha,WAAS,EAAK,EAC1C,CAAE,QAAA4K,GAAY2P,KACdT,EAAgBD,KAGhBe,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD,CAACizB,EAAiBC,CAAkB,EAAIliC,EAAA,SAAmB,CAAE,CAAA,EAC7D,CAAC4oB,EAAcC,CAAe,EAAG7oB,WAAkB,EAAK,EACxD,CAACmiC,EAAYC,CAAa,EAAIpiC,WAAiB,IAAI,EACnD,CAAC,KAAAF,GAAQU,KAGfJ,EAAAA,UAAU,IAAM,CACdyQ,EAAQixB,CAAa,CAAA,EACpB,CAACA,CAAa,CAAC,EAGZ,MAAAU,EAAyBpO,GAAmB,CAChD8N,EAA2B33B,GAAA,CACzB,MAAMk4B,EAAal4B,EAAK,SAAS6pB,CAAM,EACnC7pB,EAAK,OAAcm4B,GAAAA,IAAQtO,CAAM,EACjC,CAAC,GAAG7pB,EAAM6pB,CAAM,EAEpB,OAAOmO,EAAW,OAAOG,GAAOD,EAAW,SAASC,CAAG,CAAC,CAAA,CACzD,CAAA,EAGG3L,EAAY1sB,EAAAA,YAAY,SAAY,CACxC2P,EAAa,EAAI,EACb,GAAA,CAGF,KAAM,CAACgN,EAAmB6b,CAAe,EAAI,MAAM,QAAQ,IAAI,CAC7D/oB,EAAc,KAAK,4BAA4BlP,CAAO,GAAI,CACxD,UAAWgQ,GAAa,GACxB,QAASC,GAAW,GACpB,OAAQ/a,GAAA,YAAAA,EAAM,GACd,MAAOqiC,CAAA,EACN,CAAE,gBAAiB,GAAM,EAC5BroB,EAAc,KAAK,4BAA4BlP,CAAO,GAAI,CACxD,UAAW,GACX,QAAS,GACT,OAAQ9K,GAAA,YAAAA,EAAM,GACd,MAAOqiC,CAAA,EACN,CAAE,gBAAiB,GAAM,CAAA,CAC7B,EAEKW,EAAc9b,EAAkB,KAAK,MAAQ,CAAA,EAC7C+b,EAAqBF,EAAgB,KAAK,MAAQ,CAAA,EAMpD,GAJJ5K,EAAQ6K,CAAW,EACnBd,EAAgBc,CAAW,EAC3Bf,EAAegB,CAAkB,EAE7BD,EAAY,OAAS,EAAG,CAC1B,MAAMP,EAAa,OAAO,KAAKO,EAAY,CAAC,CAAC,EAC7CZ,EAAoBc,IAClBA,GAAa,SAAW,EACpBT,EACAS,GAAa,OAAQN,GAAQH,EAAW,SAASG,CAAG,CAAC,CAAA,CAE7D,QACOh9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE3C,CACAsU,EAAa,EAAK,CACpB,GACC,CAACpP,EAASgQ,EAAWC,EAASsnB,CAAU,CAAC,EAE5C/hC,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,GAAK,GAAK,GAAI,EACjD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd,MAAMte,EAAsB,IAAM,CACtBse,GAAA,EAGNwL,EAAa1hB,EAAK,OAAS,EAAI,OAAO,KAAKA,EAAK,CAAC,CAAC,EAAI,GACtDoiB,EAAwBV,EAAW,UAAcN,EAAgB,SAASS,CAAG,CAAC,EAE9EQ,EAAe74B,cAAawtB,GAA0B,CACtD,IAAAzhB,EAAS,CAAC,GAAGyK,CAAI,EAErBgX,EAAQ,QAAkBsL,GAAA,CACf/sB,EAAAA,EAAO,OAAe/K,GAAA,CACvB,MAAA0D,EAAQ1D,EAAK83B,EAAO,MAAyB,EAC/C,GAAA,CAAC,IAAK,IAAK,GAAG,EAAE,SAASA,EAAO,QAAQ,EAAG,CACvC,MAAAC,GAAW,WAAWr0B,CAAK,EAC3B2yB,EAAc,WAAWyB,EAAO,KAAK,EAC3C,OAAQA,EAAO,SAAU,CACvB,IAAK,IAAK,OAAOC,GAAW1B,EAC5B,IAAK,IAAK,OAAO0B,GAAW1B,EAC5B,IAAK,IAAK,OAAO0B,KAAa1B,EAC9B,QAAgB,MAAA,EAClB,CACF,CACO,MAAA,EAAA,CACR,CAAA,CACF,EAEDM,EAAgB5rB,CAAM,CAAA,EACrB,CAACyK,CAAI,CAAC,EAEH0iB,EAAgB9/B,GAAkB,CACtCq0B,EAAWD,EAAQ,OAAO,CAACroB,EAAGilB,IAAMA,IAAMhxB,CAAK,CAAC,CAAA,EAG5C4/B,EAAuB5xB,EAAAA,QAAQ,IAAMkuB,EAAc,CAACA,CAAY,CAAC,EAEjE2D,EAAiB,CAAC,cAAe,YAAa,WAAY,YAAa,gBAAiB,mBAAoB,eAAe,EAE3Hta,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAG/B,OACGroB,EAAA,IAAA8N,GAAA,CAAK,UAAW,QAAQua,EAAe,yBAA2B,EAAE,GACnE,SAAAroB,EAAA,IAACkO,IAAY,UAAU,OACrB,SAAC5I,OAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAa,gBAAA,QAChD0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAtF,MAACgB,GAAO,QAASkX,EAAqB,SAAUnJ,EAAW,KAAK,OAAO,QAAQ,UAC7E,SAAA/O,EAAAA,IAACoY,IAAU,UAAW,WAAWrJ,EAAY,eAAiB,EAAE,EAAI,CAAA,EACtE,SACCqrB,GACC,CAAA,SAAA,CAAAp6B,MAACs6B,GAAoB,CAAA,QAAO,GAC1B,SAAAt6B,EAAA,IAACgB,GAAO,QAAQ,UAAU,KAAM,OAC9B,SAAChB,EAAAA,IAAAijC,GAAA,CAAQ,UAAU,SAAA,CAAU,CAC/B,CAAA,EACF,EACAjjC,EAAA,IAAC66B,GAAoB,CAAA,UAAU,OAC5B,SAAAmH,EAAW,IAAKnO,GACfvuB,EAAA,KAAC01B,GAA8B,CAAA,UAAU,8BACvC,SAAA,CAAAh7B,EAAA,IAACiQ,GAAA,CACC,GAAI,UAAU4jB,CAAM,GACpB,QAAS6N,EAAgB,SAAS7N,CAAM,EACxC,gBAAiB,IAAMoO,EAAsBpO,CAAM,CAAA,CACrD,EACA7zB,EAAAA,IAAC,SAAM,QAAS,UAAU6zB,CAAM,GAAI,UAAU,wBAC3C,SACHA,CAAA,CAAA,CAAA,GARqBA,CASvB,CACD,EACH,CAAA,EACF,EACA7zB,EAAA,IAAC6gC,GAAA,CACC,QAASkC,EACT,gBAAiBJ,EACjB,QAAArL,EACA,WAAAC,CAAA,CACF,QACCv2B,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,SACC2P,GACC,CAAA,SAAA,CAAAp6B,EAAAA,IAACs6B,IAAoB,QAAO,GAC1B,SAACh1B,EAAA,KAAAtE,EAAA,CAAO,QAAQ,UAAU,SAAA,CAAA,QAClB4gC,IAAe,QAAU,MAAQA,EAAW,QAClD5hC,EAAAA,IAACuL,GAAY,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CACxC,CACF,CAAA,SACCsvB,GACC,CAAA,SAAA,CAAA76B,MAACg7B,IAAiB,SAAU,IAAM6G,EAAc,IAAI,EAAG,SAAY,eAAA,QAClE7G,GAAiB,CAAA,SAAU,IAAM6G,EAAc,KAAK,EAAG,SAAa,gBAAA,QACpE7G,GAAiB,CAAA,SAAU,IAAM6G,EAAc,OAAO,EAAG,SAAa,gBAAA,CAAA,EACzE,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAECvK,EAAQ,OAAS,GAChBt3B,EAAA,IAAC,OAAI,UAAU,uBACZ,SAAQs3B,EAAA,IAAI,CAACsL,EAAQ1/B,IACnBoC,EAAA,KAAA,MAAA,CAAgB,UAAU,yKACzB,SAAA,CAACtF,EAAAA,IAAA,OAAA,CAAM,SAAG,GAAA4iC,EAAO,MAAM,IAAIA,EAAO,QAAQ,IAAIA,EAAO,KAAK,EAAG,CAAA,EAC5D5iC,EAAA,IAAA,SAAA,CAAO,QAAS,IAAMgjC,EAAa9/B,CAAK,EAAG,UAAU,yGAAyG,aAAW,gBACxK,SAAAlD,MAACgd,GAAE,CAAA,UAAU,SAAU,CAAA,EACzB,CAAA,GAJQ9Z,CAKV,CACD,EACH,QAGD,MAAI,CAAA,UAAU,6BACZ,SAAA6L,QACEukB,GAAc,CAAA,CAAA,EAEdtzB,EAAAA,IAAA+7B,GAAA,CAAY,QAAS2G,EAAuB,KAAMI,EAAsB,YAAA9G,EAA0B,aAAA3T,CAA4B,CAAA,EAEnI,CAAA,EACF,EACF,CACF,CAAA,CAEJ,EChNM+a,GAAsD,CAAC,CAAE,UAAW7B,KAAoB,CAC5F,KAAM,CAAC9yB,EAAM6B,CAAO,EAAI7Q,WAAgC8hC,CAAa,EAC/D,CAACnC,EAAcqC,CAAe,EAAIhiC,EAAA,SAAyB,CAAE,CAAA,EAC7D,CAACu8B,EAAawF,CAAc,EAAI/hC,EAAA,SAAyB,CAAE,CAAA,EAC3D,CAAC63B,EAASC,CAAU,EAAI93B,EAAA,SAAuB,CAAE,CAAA,EACjD,CAAC6gB,EAAMoX,CAAO,EAAIj4B,EAAA,SAAyB,CAAE,CAAA,EAC7C,CAACsP,EAAW0K,CAAY,EAAIha,WAAS,EAAK,EAC1C,CAAE,QAAA4K,GAAY2P,KACd,CAAC,KAAAza,GAAQU,KACTsZ,EAAgBD,KAIhBe,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD,CAACizB,EAAiBC,CAAkB,EAAIliC,EAAA,SAAmB,CAAE,CAAA,EAC7D,CAACmiC,EAAYC,CAAa,EAAIpiC,WAAiB,IAAI,EACnD,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAS,EAAK,EAGtDI,EAAAA,UAAU,IAAM,CACdyQ,EAAQixB,CAAa,CAAA,EACpB,CAACA,CAAa,CAAC,EAEZ,MAAAU,EAAyBpO,GAAmB,CAChD8N,EAA2B33B,GAAA,CACzB,MAAMk4B,EAAal4B,EAAK,SAAS6pB,CAAM,EACnC7pB,EAAK,OAAcm4B,GAAAA,IAAQtO,CAAM,EACjC,CAAC,GAAG7pB,EAAM6pB,CAAM,EAEpB,OAAOmO,EAAW,OAAOG,GAAOD,EAAW,SAASC,CAAG,CAAC,CAAA,CACzD,CAAA,EAGG3L,EAAY1sB,EAAAA,YAAY,SAAY,CACxC2P,EAAa,EAAI,EACb,GAAA,CAGF,KAAM,CAACgN,EAAmB6b,CAAe,EAAI,MAAM,QAAQ,IAAI,CAC7D/oB,EAAc,KAAK,+BAA+BlP,CAAO,GAAI,CAC3D,UAAWgQ,GAAa,GACxB,QAASC,GAAW,GACpB,OAAQ/a,GAAA,YAAAA,EAAM,GACd,MAAOqiC,CAAA,EACN,CAAE,gBAAiB,GAAM,EAC5BroB,EAAc,KAAK,+BAA+BlP,CAAO,GAAI,CAC3D,UAAW,GACX,QAAS,GACT,OAAQ9K,GAAA,YAAAA,EAAM,GACd,MAAOqiC,CAAA,EACN,CAAE,gBAAiB,GAAM,CAAA,CAC7B,EAEKW,EAAc9b,EAAkB,KAAK,MAAQ,CAAA,EAC7C+b,EAAqBF,EAAgB,KAAK,MAAQ,CAAA,EAMpD,GAJJ5K,EAAQ6K,CAAW,EACnBd,EAAgBc,CAAW,EAC3Bf,EAAegB,CAAkB,EAE7BD,EAAY,OAAS,EAAG,CAC1B,MAAMP,EAAa,OAAO,KAAKO,EAAY,CAAC,CAAC,EAC7CZ,EAAoBc,IAClBA,GAAa,SAAW,EACpBT,EACAS,GAAa,OAAQN,GAAQH,EAAW,SAASG,CAAG,CAAC,CAAA,CAE7D,QACOh9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC3C,CACAsU,EAAa,EAAK,CACpB,GACC,CAACpP,EAASgQ,EAAWC,EAASsnB,CAAU,CAAC,EAE5C/hC,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,GAAK,GAAK,GAAI,EACjD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAGd,MAAMte,EAAsB,IAAM,CACtBse,GAAA,EAGNwL,EAAa1hB,EAAK,OAAS,EAAI,OAAO,KAAKA,EAAK,CAAC,CAAC,EAAI,GACtDoiB,EAAwBV,EAAW,UAAcN,EAAgB,SAASS,CAAG,CAAC,EAE9EQ,EAAe74B,cAAawtB,GAA0B,CACtD,IAAAzhB,EAAS,CAAC,GAAGyK,CAAI,EAErBgX,EAAQ,QAAkBsL,GAAA,CACf/sB,EAAAA,EAAO,OAAe/K,GAAA,CACvB,MAAA0D,EAAQ1D,EAAK83B,EAAO,MAA4B,EAClD,GAAA,CAAC,IAAK,IAAK,GAAG,EAAE,SAASA,EAAO,QAAQ,EAAG,CACvC,MAAAC,GAAW,WAAWr0B,CAAK,EAC3B2yB,EAAc,WAAWyB,EAAO,KAAK,EAC3C,OAAQA,EAAO,SAAU,CACvB,IAAK,IAAK,OAAOC,GAAW1B,EAC5B,IAAK,IAAK,OAAO0B,GAAW1B,EAC5B,IAAK,IAAK,OAAO0B,KAAa1B,EAC9B,QAAgB,MAAA,EAClB,CACF,CACO,MAAA,EAAA,CACR,CAAA,CACF,EAEDM,EAAgB5rB,CAAM,CAAA,EACrB,CAACyK,CAAI,CAAC,EAEH0iB,EAAgB9/B,GAAkB,CACtCq0B,EAAWD,EAAQ,OAAO,CAACroB,EAAGilB,IAAMA,IAAMhxB,CAAK,CAAC,CAAA,EAG5C4/B,EAAuB5xB,EAAAA,QAAQ,IAAMkuB,EAAc,CAACA,CAAY,CAAC,EAEjE2D,EAAiB,CAAC,cAAe,YAAa,WAAY,YAAa,gBAAiB,mBAAoB,eAAe,EAE3Hta,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAG/B,OACGroB,EAAA,IAAA8N,GAAA,CAAK,UAAW,QAAQua,EAAe,yBAA2B,EAAE,GACrE,SAAAroB,EAAA,IAACkO,IAAY,UAAU,OACrB,SAAC5I,OAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAgB,mBAAA,QACnD0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAtF,MAACgB,GAAO,QAASkX,EAAqB,SAAUnJ,EAAW,KAAK,OAAO,QAAQ,UAC7E,SAAA/O,EAAAA,IAACoY,IAAU,UAAW,WAAWrJ,EAAY,eAAiB,EAAE,EAAI,CAAA,EACtE,SACCqrB,GACC,CAAA,SAAA,CAAAp6B,MAACs6B,GAAoB,CAAA,QAAO,GAC1B,SAAAt6B,EAAA,IAACgB,GAAO,QAAQ,UAAU,KAAM,OAC9B,SAAChB,EAAAA,IAAAijC,GAAA,CAAQ,UAAU,SAAA,CAAU,CAC/B,CAAA,EACF,EACAjjC,EAAA,IAAC66B,GAAoB,CAAA,UAAU,OAC5B,SAAAmH,EAAW,IAAKnO,GACfvuB,EAAA,KAAC01B,GAA8B,CAAA,UAAU,8BACvC,SAAA,CAAAh7B,EAAA,IAACiQ,GAAA,CACC,GAAI,UAAU4jB,CAAM,GACpB,QAAS6N,EAAgB,SAAS7N,CAAM,EACxC,gBAAiB,IAAMoO,EAAsBpO,CAAM,CAAA,CACrD,EACA7zB,EAAAA,IAAC,SAAM,QAAS,UAAU6zB,CAAM,GAAI,UAAU,wBAC3C,SACHA,CAAA,CAAA,CAAA,GARqBA,CASvB,CACD,EACH,CAAA,EACF,EACA7zB,EAAA,IAAC6gC,GAAA,CACC,QAASkC,EACT,gBAAiBJ,EACjB,QAAArL,EACA,WAAAC,CAAA,CACF,QACEv2B,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACrD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,SACE2P,GACA,CAAA,SAAA,CAAAp6B,EAAAA,IAACs6B,IAAoB,QAAO,GAC1B,SAACh1B,EAAA,KAAAtE,EAAA,CAAO,QAAQ,UAAU,SAAA,CAAA,QAClB4gC,IAAe,QAAU,MAAQA,EAAW,QAClD5hC,EAAAA,IAACuL,GAAY,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CACxC,CACF,CAAA,SACCsvB,GACC,CAAA,SAAA,CAAA76B,MAACg7B,IAAiB,SAAU,IAAM6G,EAAc,IAAI,EAAG,SAAY,eAAA,QAClE7G,GAAiB,CAAA,SAAU,IAAM6G,EAAc,KAAK,EAAG,SAAa,gBAAA,QACpE7G,GAAiB,CAAA,SAAU,IAAM6G,EAAc,OAAO,EAAG,SAAa,gBAAA,CAAA,EACzE,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAECvK,EAAQ,OAAS,GAChBt3B,EAAA,IAAC,OAAI,UAAU,uBACZ,SAAQs3B,EAAA,IAAI,CAACsL,EAAQ1/B,IACnBoC,EAAA,KAAA,MAAA,CAAgB,UAAU,yKACzB,SAAA,CAACtF,EAAAA,IAAA,OAAA,CAAM,SAAG,GAAA4iC,EAAO,MAAM,IAAIA,EAAO,QAAQ,IAAIA,EAAO,KAAK,EAAG,CAAA,EAC5D5iC,EAAA,IAAA,SAAA,CAAO,QAAS,IAAMgjC,EAAa9/B,CAAK,EAAG,UAAU,yGAAyG,aAAW,gBACxK,SAAAlD,MAACgd,GAAE,CAAA,UAAU,SAAU,CAAA,EACzB,CAAA,GAJQ9Z,CAKV,CACD,EACH,QAGD,MAAI,CAAA,UAAU,6BACZ,SAAA6L,QACEukB,GAAc,CAAA,CAAA,EAEdtzB,EAAAA,IAAA+7B,GAAA,CAAY,QAAS2G,EAAuB,KAAMI,EAAsB,YAAA9G,EAA0B,aAAA3T,CAA4B,CAAA,EAEnI,CAAA,EACF,EACF,CACF,CAAA,CAEF,ECtNMgb,GAA0D,CAAC,CAAE,UAAAryB,KAAgB,CACjF,KAAM,CAACvC,EAAM6B,CAAO,EAAI7Q,WAAgCuR,CAAS,EAC3D,CAACouB,EAAcqC,CAAe,EAAIhiC,EAAA,SAA0B,CAAE,CAAA,EAC9D,CAACu8B,EAAawF,CAAc,EAAI/hC,EAAA,SAA0B,CAAE,CAAA,EAC5D,CAAC63B,EAASC,CAAU,EAAI93B,EAAA,SAAuB,CAAE,CAAA,EACjD,CAAC6gB,EAAMoX,CAAO,EAAIj4B,EAAA,SAA0B,CAAE,CAAA,EAC9C,CAACsP,EAAW0K,CAAY,EAAIha,WAAS,EAAK,EAC1C,CAAE,QAAA4K,GAAY2P,KACdK,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACrD,CAACizB,EAAiBC,CAAkB,EAAIliC,EAAA,SAAmB,CAAE,CAAA,EAC7D,CAACmiC,EAAYC,CAAa,EAAIpiC,WAAiB,IAAI,EACnD,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAS,EAAK,EAChD,CAAE,KAAAF,GAASU,KACXsZ,EAAgBD,KAGtBzZ,EAAAA,UAAU,IAAM,CACdyQ,EAAQU,CAAS,CAAA,EAChB,CAACA,CAAS,CAAC,EAER,MAAAixB,EAAyBpO,GAAmB,CAChD8N,EAA2B33B,GAAA,CACzB,MAAMk4B,EAAal4B,EAAK,SAAS6pB,CAAM,EACnC7pB,EAAK,OAAcm4B,GAAAA,IAAQtO,CAAM,EACjC,CAAC,GAAG7pB,EAAM6pB,CAAM,EAEpB,OAAOmO,EAAW,OAAOG,GAAOD,EAAW,SAASC,CAAG,CAAC,CAAA,CACzD,CAAA,EAGG3L,EAAY1sB,EAAAA,YAAY,SAAY,CACxC2P,EAAa,EAAI,EACb,GAAA,CAEF,KAAM,CAACgN,EAAmB6b,CAAe,EAAI,MAAM,QAAQ,IAAI,CAC7D/oB,EAAc,KAAK,gCAAgClP,CAAO,GAAI,CAC5D,UAAWgQ,GAAa,GACxB,QAASC,GAAW,GACpB,OAAQ/a,GAAA,YAAAA,EAAM,GACd,MAAOqiC,CAAA,EACN,CAAE,gBAAiB,GAAM,EAC5BroB,EAAc,KAAK,gCAAgClP,CAAO,GAAI,CAC5D,UAAW,GACX,QAAS,GACT,OAAQ9K,GAAA,YAAAA,EAAM,GACd,MAAOqiC,CAAA,EACN,CAAE,gBAAiB,GAAM,CAAA,CAC7B,EAEKW,EAAc9b,EAAkB,KAAK,MAAQ,CAAA,EAC7C+b,EAAqBF,EAAgB,KAAK,MAAQ,CAAA,EAMpD,GAJJ5K,EAAQ6K,CAAW,EACnBd,EAAgBc,CAAW,EAC3Bf,EAAegB,CAAkB,EAE7BD,EAAY,OAAS,EAAG,CAC1B,MAAMP,EAAa,OAAO,KAAKO,EAAY,CAAC,CAAC,EAC7CZ,EAAoBc,IAClBA,GAAa,SAAW,EACpBT,EACAS,GAAa,OAAQN,GAAQH,EAAW,SAASG,CAAG,CAAC,CAAA,CAE7D,QACOh9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE3C,CACAsU,EAAa,EAAK,CACpB,GACC,CAACpP,EAASgQ,EAAWC,EAASsnB,CAAU,CAAC,EAE5C/hC,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,GAAK,GAAK,GAAI,EACjD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd,MAAMte,EAAsB,IAAM,CACtBse,GAAA,EAGNwL,EAAa1hB,EAAK,OAAS,EAAI,OAAO,KAAKA,EAAK,CAAC,CAAC,EAAI,GACtDoiB,EAAwBV,EAAW,UAAcN,EAAgB,SAASS,CAAG,CAAC,EAE9EQ,EAAe74B,cAAawtB,GAA0B,CACtD,IAAAzhB,EAAS,CAAC,GAAGyK,CAAI,EAErBgX,EAAQ,QAAkBsL,GAAA,CACf/sB,EAAAA,EAAO,OAAe/K,GAAA,CACvB,MAAA0D,EAAQ1D,EAAK83B,EAAO,MAA6B,EACnD,GAAA,CAAC,IAAK,IAAK,GAAG,EAAE,SAASA,EAAO,QAAQ,EAAG,CACvC,MAAAC,GAAW,WAAWr0B,CAAK,EAC3B2yB,EAAc,WAAWyB,EAAO,KAAK,EAC3C,OAAQA,EAAO,SAAU,CACvB,IAAK,IAAK,OAAOC,GAAW1B,EAC5B,IAAK,IAAK,OAAO0B,GAAW1B,EAC5B,IAAK,IAAK,OAAO0B,KAAa1B,EAC9B,QAAgB,MAAA,EAClB,CACF,CACO,MAAA,EAAA,CACR,CAAA,CACF,EAEDM,EAAgB5rB,CAAM,CAAA,EACrB,CAACyK,CAAI,CAAC,EAEHwiB,EAAuB5xB,EAAAA,QAAQ,IAAMkuB,EAAc,CAACA,CAAY,CAAC,EAEjE2D,EAAiB,CAAC,cAAe,YAAa,WAAY,YAAa,gBAAiB,mBAAoB,eAAe,EAC3HC,EAAgB9/B,GAAkB,CACtCq0B,EAAWD,EAAQ,OAAO,CAACroB,EAAGilB,IAAMA,IAAMhxB,CAAK,CAAC,CAAA,EAG5CulB,EAAmB,IAAM,CACxBJ,EAGH,SAAS,eAAe,EAFxB,SAAS,gBAAgB,oBAI3BC,EAAgB,CAACD,CAAY,CAAA,EAG/BxoB,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMyjC,EAA0B,IAAM,CACpBhb,EAAA,CAAC,CAAC,SAAS,iBAAiB,CAAA,EAGrC,gBAAA,iBAAiB,mBAAoBgb,CAAuB,EAE9D,IAAM,CACF,SAAA,oBAAoB,mBAAoBA,CAAuB,CAAA,CAE5E,EAAG,CAAE,CAAA,EAGFtjC,EAAA,IAAA8N,GAAA,CAAK,UAAW,QAAQua,EAAe,yBAA2B,EAAE,GACnE,SAAAroB,EAAA,IAACkO,IAAY,UAAU,OACrB,SAAC5I,OAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAA2B,8BAAA,QAC9D0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAtF,MAACgB,GAAO,QAASkX,EAAqB,SAAUnJ,EAAW,KAAK,OAAO,QAAQ,UAC7E,SAAA/O,EAAAA,IAACoY,IAAU,UAAW,WAAWrJ,EAAY,eAAiB,EAAE,EAAI,CAAA,EACtE,SACCqrB,GACC,CAAA,SAAA,CAAAp6B,MAACs6B,GAAoB,CAAA,QAAO,GAC1B,SAAAt6B,EAAA,IAACgB,GAAO,QAAQ,UAAU,KAAM,OAC9B,SAAChB,EAAAA,IAAAijC,GAAA,CAAQ,UAAU,SAAA,CAAU,CAC/B,CAAA,EACF,EACAjjC,EAAA,IAAC66B,GAAoB,CAAA,UAAU,OAC5B,SAAAmH,EAAW,IAAKnO,GACfvuB,EAAA,KAAC01B,GAA8B,CAAA,UAAU,8BACvC,SAAA,CAAAh7B,EAAA,IAACiQ,GAAA,CACC,GAAI,UAAU4jB,CAAM,GACpB,QAAS6N,EAAgB,SAAS7N,CAAM,EACxC,gBAAiB,IAAMoO,EAAsBpO,CAAM,CAAA,CACrD,EACA7zB,EAAAA,IAAC,SAAM,QAAS,UAAU6zB,CAAM,GAAI,UAAU,wBAC3C,SACHA,CAAA,CAAA,CAAA,GARqBA,CASvB,CACD,EACH,CAAA,EACF,EACA7zB,EAAA,IAAC6gC,GAAA,CACC,QAASkC,EACT,gBAAiBJ,EACjB,QAAArL,EACA,WAAAC,CAAA,CACF,QACCv2B,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,SACC2P,GACC,CAAA,SAAA,CAAAp6B,EAAAA,IAACs6B,IAAoB,QAAO,GAC1B,SAACh1B,EAAA,KAAAtE,EAAA,CAAO,QAAQ,UAAU,SAAA,CAAA,QAClB4gC,IAAe,QAAU,MAAQA,EAAW,QAClD5hC,EAAAA,IAACuL,GAAY,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CACxC,CACF,CAAA,SACCsvB,GACC,CAAA,SAAA,CAAA76B,MAACg7B,IAAiB,SAAU,IAAM6G,EAAc,IAAI,EAAG,SAAY,eAAA,QAClE7G,GAAiB,CAAA,SAAU,IAAM6G,EAAc,KAAK,EAAG,SAAa,gBAAA,QACpE7G,GAAiB,CAAA,SAAU,IAAM6G,EAAc,OAAO,EAAG,SAAa,gBAAA,CAAA,EACzE,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAECvK,EAAQ,OAAS,GAChBt3B,EAAA,IAAC,OAAI,UAAU,uBACZ,SAAQs3B,EAAA,IAAI,CAACsL,EAAQ1/B,IACnBoC,EAAA,KAAA,MAAA,CAAgB,UAAU,yKACzB,SAAA,CAACtF,EAAAA,IAAA,OAAA,CAAM,SAAG,GAAA4iC,EAAO,MAAM,IAAIA,EAAO,QAAQ,IAAIA,EAAO,KAAK,EAAG,CAAA,EAC5D5iC,EAAA,IAAA,SAAA,CAAO,QAAS,IAAMgjC,EAAa9/B,CAAK,EAAG,UAAU,yGAAyG,aAAW,gBACxK,SAAAlD,MAACgd,GAAE,CAAA,UAAU,SAAU,CAAA,EACzB,CAAA,GAJQ9Z,CAKV,CACD,EACH,QAGD,MAAI,CAAA,UAAU,6BACZ,SAAA6L,QACEukB,GAAc,CAAA,CAAA,EAEdtzB,EAAAA,IAAA+7B,GAAA,CAAY,QAAS2G,EAAuB,KAAMI,EAAuB,YAAA9G,EAA0B,aAAA3T,CAA4B,CAAA,EAEpI,CAAA,EACF,EACF,CACF,CAAA,CAEJ,EC7OA,SAAwB7O,IAAY,CAC5B,KAAA,CAAE,QAAAnP,GAAY2P,KAClB,GAAI,CAAC3P,EACD,eAAQ,MAAM,yBAAyB,EAChCrK,EAAA,IAAC,OAAI,SAA0B,4BAAA,CAAA,EAG1C,MAAMia,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAEhBlJ,EAAU,CACd,KAAMvC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,MAAA,EAIpC,OAAAnJ,EAAA,KAAC,MAAI,CAAA,UAAU,2CACZ,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,gFACd,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,+FACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,qBAAqB,SAAiB,oBAAA,EAEtDA,EAAAA,IAAC,MAAI,CAAA,UAAU,gEACL,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAIH,CAAA,CAAA,CACA,CACV,CAAA,EACAvL,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACf,SAAA,CAAAtF,EAAA,IAACuvB,GAAW,EAAA,QACXsF,GAAgB,EAAA,QAChB0O,GAAiB,EAAA,QACjB,UAAQ,CAAA,UAAU,OACP,SAACvjC,EAAA,IAAAwjC,GAAA,CAAiB,UAAAxyB,CAAsB,CAAA,EAC1C,QACC,UAAQ,CAAA,UAAU,OACjB,SAAChR,EAAA,IAAAkjC,GAAA,CAAmB,UAAAlyB,CAAsB,CAAA,EAC5C,QACC,UAAQ,CAAA,UAAU,OACjB,SAAChR,EAAA,IAAAqjC,GAAA,CAAmB,UAAAryB,CAAsB,CAAA,EAC5C,QACC,UAAQ,CAAA,UAAU,OACjB,SAAChR,EAAA,IAAAmjC,GAAA,CAAc,UAAAnyB,CAAsB,CAAA,EACvC,QACC,UAAQ,CAAA,UAAU,OACjB,SAAChR,EAAA,IAAAyjC,GAAA,CAAmB,UAAAzyB,CAAsB,CAAA,EAC5C,CAAA,EACV,CAEF,CAAA,CAAA,CAEJ,CCnEC,MAAM0yB,GAA4B,IAE3Bp+B,EAAA,KAAC,MAAI,CAAA,UAAU,gBACf,SAAA,CAAAtF,EAAA,IAACkJ,GAAmB,EAAA,QACrB,MAAI,CAAA,UAAU,gCACd,SAAAlJ,MAACwZ,IAAU,CAAA,EACZ,CACF,CAAA,CAAA,ECFEmqB,GAAiB,IAAM,CACzB,MAAMx/B,EAAWC,KACX,CAAE,MAAA/B,GAAUS,KACZb,EAAWuC,KACXQ,EACA,gCAGFnF,OAAAA,EAAAA,UAAU,IAAM,EACgB,SAAY,CAChC,GAAA,CACA,MAAM8oB,EAAc,IAAI,gBAAgB,OAAO,SAAS,MAAM,EACxDib,EAAcjb,EAAY,IAAI,OAAO,EACrCkb,EAAUlb,EAAY,IAAI,SAAS,EACnCmb,EAAqBnb,EAAY,IAAI,oBAAoB,EACzDob,EAAmBpb,EAAY,IAAI,WAAW,EAC9CxO,EAASwO,EAAY,IAAI,QAAQ,EAGjCqb,EAAc,MAAOC,EAAaC,EAAevjC,KAClC,MAAMsE,GAAM,IAAI,GAAGD,CAAO,GAAGi/B,CAAG,IAAItjC,CAAI,IAAIujC,CAAK,GAAI,CAAE,gBAAiB,GAAM,GAClF,KAAK,SACN,QAAA,IAAI,GAAGvjC,CAAI,wDAAwD,EACvEA,IAAS,aACT,QAAQ,IAAI,6CAA6C,EACxDwD,EAAS,UAAU,IAEZ,QAAA,IAAI,GAAGxD,CAAI,2CAA2C,EAC9DwD,EAAS,cAAc,GAEpB,KAEC,QAAA,MAAM,oBAAoBxD,CAAI,QAAQ,EACxC0B,EAAA,CACF,MAAO,gBACP,YAAa,oBAAoB1B,CAAI,UACrC,QAAS,aAAA,CACZ,EACDwD,EAAS,GAAG,EACL,IAIf,GAAIy/B,EAAa,CACb,QAAQ,IAAI,oCAAoC,EAChD,MAAMO,EAAQ,MAAMl/B,GAAM,KAAK,GAAGD,CAAO,oCAAoC4+B,CAAW,GAAI,CAAE,MAAO,KAAM,SAAU,IAAM,CAAA,EAEvH,GAAAO,EAAM,KAAK,QAAS,CACpB,QAAQ,IAAI,kBAAkB,EACxB,MAAA5kC,EAAO4kC,EAAM,KAAK,KAEfliC,EAAAzC,GAAQD,CAAI,CAAC,EAElB,CAACA,EAAK,QAAUA,EAAK,OAAO,SAAW,GACvC,QAAQ,IAAI,8CAA8C,EAC1D4E,EAAS,cAAc,IAEvB,QAAQ,IAAI,yCAAyC,EACrDA,EAAS,YAAY,GAEzB,MAAA,KACG,CACH,QAAQ,IAAI,gCAAgC,EACtC9B,EAAA,CACF,MAAO,eACP,YAAa,sCACb,QAAS,aAAA,CACZ,EACD8B,EAAS,GAAG,EACZ,MACJ,CACJ,CAGA,GAAI0/B,EAAS,CACH,MAAAG,EAAY,kCAAmCH,EAAS,SAAS,EACvE,MACJ,CAEA,GAAIC,EAAoB,CACd,MAAAE,EAAY,gCAAiCF,EAAoB,oBAAoB,EAC3F,MACJ,CACA,GAAIC,EAAkB,CACZ,MAAAC,EAAY,8BAA+BD,EAAkB,WAAW,EAC9E,MACJ,CAEC,GAAI5pB,EAAQ,CACT,QAAQ,IAAI,0CAA0C,EAChD,MAAAiqB,EAAU,MAAMn/B,GAAM,IAAI,GAAGD,CAAO,sBAAsBmV,CAAM,EAAE,EAEpE,GAAAiqB,EAAQ,KAAK,QAAS,CAChB,MAAA7kC,EAAO6kC,EAAQ,KAAK,KAEjBniC,EAAAzC,GAAQD,CAAI,CAAC,EAElB,CAACA,EAAK,QAAUA,EAAK,OAAO,SAAW,GACvC,QAAQ,IAAI,8CAA8C,EAC1D4E,EAAS,cAAc,IAEvB,QAAQ,IAAI,yCAAyC,EACrDA,EAAS,YAAY,GAEzB,MAAA,KACG,CACH,QAAQ,IAAI,gCAAgC,EACtC9B,EAAA,CACF,MAAO,eACP,YAAa,sCACb,QAAS,aAAA,CACZ,EACD8B,EAAS,GAAG,EACZ,MACJ,CACJ,CAEA,QAAQ,IAAI,yCAAyC,EACrDA,EAAS,QAAQ,QAEZgB,EAAO,CACJ,QAAA,MAAM,+BAAgCA,CAAK,EAC7C9C,EAAA,CACF,MAAO,QACP,YAAa,uDACb,QAAS,aAAA,CACZ,EACD8B,EAAS,QAAQ,CACrB,CAAA,MAIL,CAACA,EAAU3E,GAAS6C,EAAO2C,CAAO,CAAC,EAGnC,IACX,ECtIM62B,GAAuB,CAACrtB,EAAestB,IAGvCttB,EAAQstB,EAAgB,8BACxBttB,EAAQstB,EAAgB,0BACxB,KAAK,IAAIttB,EAAQstB,CAAO,EAAI,KAAgB,iCAK5CuI,GAAuC,CAAC,CAC5C,QAAA9S,EAAU,CAAC,EACX,KAAAjR,EAAO,CAAC,EACR,aAAA+H,CACF,IAAM,CACF,KAAM,CAACkI,EAAYC,CAAa,EAAI/wB,WAAwB,IAAI,EAC1D,CAACw8B,EAAeC,CAAgB,EAAIz8B,WAAyB,KAAK,EAClE,CAAC88B,EAAcC,CAAe,EAAI/8B,EAAA,SAAmB,CAAE,CAAA,EACvD,CAACmwB,EAAaC,CAAc,EAAIpwB,WAAS,CAAC,EAC1C,CAACk9B,EAAYC,CAAa,EAAIn9B,EAAA,SAAgB,CAAE,CAAA,EAChD,CAAC6kC,EAAaC,CAAc,EAAI9kC,WAAmB8xB,CAAO,EAC1D,CAACiT,EAAeC,CAAgB,EAAIhlC,WAAwB,IAAI,EAGhEo9B,EAAe,GACf3M,EAAc,EACdwU,EAAiBrc,EAAe,IAAM,IAEtC0U,EAAWrzB,SAAyB,IAAI,EACxCszB,EAAetzB,SAAuB,IAAI,EAC1Ci7B,EAAYj7B,SAAiB,CAAA,CAAE,EAE/B0zB,EAAoB,CAAC,mBAAoB,gBAAiB,gBAAiB,UAAU,EAE3Fv9B,EAAAA,UAAU,IAAM,CACd0kC,EAAehT,CAAO,CAAA,EACrB,CAACA,CAAO,CAAC,EAEN,MAAAqT,EAAkB,CAAC9/B,EAAoB+uB,IAAmB,CAC9D4Q,EAAiB5Q,CAAM,EACvB/uB,EAAE,aAAa,cAAgB,MAAA,EAG3B+/B,EAAkB//B,GAAuB,CAC7CA,EAAE,eAAe,EACjBA,EAAE,aAAa,WAAa,MAAA,EAGxBggC,EAAa,CAAChgC,EAAoBigC,IAAyB,CAE3D,GADJjgC,EAAE,eAAe,EACb,CAAC0/B,GAAiBA,IAAkBO,EAAc,OAEhD,MAAAC,EAAW,CAAC,GAAGV,CAAW,EAC1BW,EAAaD,EAAS,QAAQR,CAAa,EAC3CU,GAAYF,EAAS,QAAQD,CAAY,EAEtCC,EAAA,OAAOC,EAAY,CAAC,EACpBD,EAAA,OAAOE,GAAW,EAAGV,CAAa,EAE3CD,EAAeS,CAAQ,EACvBP,EAAiB,IAAI,CAAA,EAGjBpH,EAAmB7uB,GAEjB,OAAOA,GAAU,SAAiBA,EAGjCA,GAGE,WAAWA,EAAM,QAAQ,IAAK,EAAE,EAAE,MAAM,GAAK,EAG1D3O,EAAAA,UAAU,IAAM,CACd,GAAIm9B,EAAa,QAAS,CAClB,MAAAmI,EAAiBnI,EAAa,QAAQ,YACtCoI,EAAe7T,EAAQ,OAEzB,IAAA8T,EACJ,GAAIhd,EAAc,CACV,MAAAid,EAAa,KAAK,IAAIZ,EAAgB,KAAK,MAAMS,EAAiBC,CAAY,CAAC,EACrEC,EAAA9T,EAAQ,IAAI,IAAM+T,CAAU,CAAA,MAE5CD,EAAgB9T,EAAQ,IAAI,CAACtiB,EAAG/L,KAC9BA,KAAU,EAAI,IAAM,GAAA,EAIxBs5B,EAAgB6I,CAAa,EAC7BV,EAAU,QAAUU,CACtB,CACC,EAAA,CAAC9T,EAAQ,OAAQlJ,CAAY,CAAC,EAM3B,MAAAqV,EAAgBxsB,EAAAA,QAAQ,IAAM,CAClC,MAAMysB,EAAmC,CAAA,EACvB,OAAAP,EAAA,QAASxX,GAAQ,CACjC,MAAMgY,EAAYtd,EAAK,OAAexV,IAAAA,GAAK8a,CAAG,IAAM,QAAa,CAAC,MAAMyX,EAAgBvyB,GAAK8a,CAAG,GAAK,GAAG,CAAC,CAAC,EACpGkW,EAAU8B,EAAU,OAAS,EAC/BA,EAAU,OAAO,CAACjU,GAAK7e,KAAS6e,GAAM0T,EAAgBvyB,GAAK8a,CAAG,GAAK,GAAG,EAAG,CAAC,EAAIgY,EAAU,OACxF,EAEJD,EAAS/X,CAAG,EAAIA,IAAQ,WAAa,KAAK,MAAMkW,CAAO,EAAI,WAAWA,EAAQ,QAAQ,CAAC,CAAC,CAAA,CACzF,EACM6B,CAAA,EACN,CAACrd,CAAI,CAAC,EAIHye,EAAa7tB,EAAAA,QAAQ,IACzBoP,EAAK,IAAKxV,IAAU,CAClB,GAAGA,EACH,SAAU,QAAOA,GAAA,YAAAA,EAAM,WAAY,CAAC,EACpC,mBAAoBuyB,GAAgBvyB,GAAA,YAAAA,EAAO,sBAAuB,GAAG,EACrE,gBAAiBuyB,GAAgBvyB,GAAA,YAAAA,EAAO,mBAAoB,GAAG,EAC/D,gBAAiBuyB,GAAgBvyB,GAAA,YAAAA,EAAO,mBAAoB,GAAG,CAAA,EAC/D,EAAG,CAACwV,CAAI,CAAC,EAELuS,EAAa3hB,EAAAA,QAAQ,IAClBqf,EAEE,CAAC,GAAGwO,CAAU,EAAE,KAAK,CAAC7pB,EAAGlK,IAAM,CAC9B,MAAA8nB,EAAS5d,EAAEqb,CAAU,EACrBwC,EAAS/nB,EAAEulB,CAAU,EAE3B,GAAIA,IAAe,OAAQ,CACnB,MAAAgV,EAAmBC,IAAoB,CAC3C,KAAM,CAACC,GAAK1b,EAAO2b,CAAI,EAAIF,GAAQ,MAAM,GAAG,EACrC,OAAA,IAAI,KAAK,GAAGE,CAAI,IAAI3b,CAAK,IAAI0b,EAAG,EAAE,CAAA,EAGrCE,EAAQJ,EAAgBzS,CAAM,EAC9B8S,GAAQL,EAAgBxS,CAAM,EAEpC,OAAOkJ,IAAkB,MACrB0J,EAAM,QAAY,EAAAC,GAAM,QAAQ,EAChCA,GAAM,QAAA,EAAYD,EAAM,QAAQ,CACtC,CAGA,MAAM3G,GAAO,OAAOlM,GAAW,SAC3BA,EACA,YAAYA,GAAU,KAAK,SAAA,EAAW,QAAQ,IAAK,EAAE,EAAE,MAAM,EAC3DmM,GAAO,OAAOlM,GAAW,SAC3BA,EACA,YAAYA,GAAU,KAAK,SAAA,EAAW,QAAQ,IAAK,EAAE,EAAE,MAAM,EAEjE,OAAIiM,GAAOC,GAAahD,IAAkB,MAAQ,GAAK,EACnD+C,GAAOC,GAAahD,IAAkB,MAAQ,EAAI,GAC/C,CAAA,CACR,EA/BuB8C,EAgCvB,CAACA,EAAYxO,EAAY0L,CAAa,CAAC,EAExCiD,EAAmBrL,GAChB,CACL,MAAA,EAEA,SAASA,CAAM,EAGbpB,EAAcoB,GAAmB,CAChCqL,EAAgBrL,CAAM,IAEvBtD,IAAesD,EACAqI,EAAAD,IAAkB,MAAQ,OAAS,KAAK,GAEzDzL,EAAcqD,CAAM,EACpBqI,EAAiB,KAAK,GACxB,EAGFr8B,EAAAA,UAAU,IAAM,CACVwoB,GACFuU,EAAc/J,EAAW,MAAM,EAAGgK,CAAY,CAAC,CAEhD,EAAA,CAACxU,EAAcwK,EAAYgK,CAAY,CAAC,EAE3C,MAAMwC,EAAe,IAAM,CACzB,GAAIhX,GAAgBsU,EAAW,OAAS9J,EAAW,OAAQ,CACzD,MAAMyM,EAAYzM,EAAW,MAC3B8J,EAAW,OACXA,EAAW,OAASE,CAAA,EAEtBD,KAAsB,CAAC,GAAG5yB,EAAM,GAAGs1B,CAAS,CAAC,CAC/C,CAAA,EAGIC,EAAgBnc,GAAkD,CACtE,MAAMoc,EAASpc,EAAM,cACjBoc,EAAO,aAAeA,EAAO,WAAaA,EAAO,aAAe,KACrDH,GACf,EAGII,EAAcvuB,EAAAA,QAAQ,IACtBmX,EACKsU,EAEF9J,EAAW,OAAOjD,EAAc,GAAKM,EAAaN,EAAcM,CAAW,EACjF,CAAC7H,EAAcsU,EAAY9J,EAAYjD,EAAaM,CAAW,CAAC,EAE7DwP,EAAY,KAAK,KAAK7M,EAAW,OAAS3C,CAAW,EAErDyP,EAAYC,GAAiB,CAC3B,MAAAC,EAAa,KAAK,IAAI,EAAG,KAAK,IAAID,EAAMF,CAAS,CAAC,EACxD7P,EAAegQ,CAAU,CAAA,EAGrBC,EAAc,CAClB,cAAe,mBACf,UAAa,gBACb,UAAa,eAAA,EAET+F,GAAe,CAAChS,EAAgBkM,IAAqB,OACnD,MAAAG,EAAkB9C,EAAkB,SAASvJ,CAAM,EAGvD,OAAA7zB,EAAA,IAAC,KAAA,CAEC,UAAW;AAAA;AAAA;AAAA,YAGPk/B,EAAgBrL,CAAM,EAAI,iBAAmB,EAAE;AAAA,YAC/CkM,IAAa,GAAK,CAAC1X,EAAe,iCAAmC,EAAE;AAAA,YACvEmc,IAAkB3Q,EAAS,aAAe,EAAE;AAAA;AAAA,UAGhD,MAAO,CACL,MAAOkM,IAAa,EAAI,QAAU,GAAGxD,EAAawD,CAAQ,CAAC,IAC7D,EACA,UAAS,GACT,YAAcj7B,IAAM8/B,EAAgB9/B,GAAG+uB,CAAM,EAC7C,WAAYgR,EACZ,OAAS//B,IAAMggC,EAAWhgC,GAAG+uB,CAAM,EAEnC,SAAAvuB,EAAA,KAAC,OAAI,QAAS,IAAMmtB,EAAWoB,CAAM,EAAG,UAAU,6BAChD,SAAA,CAACvuB,EAAAA,KAAA,MAAA,CAAK,UAAU,8CACd,SAAA,CAACtF,EAAAA,IAAA8lC,GAAA,CAAa,UAAU,mCAAoC,CAAA,EAC5D9lC,EAAAA,IAAC,QAAO,SAAO6zB,CAAA,CAAA,EACdqL,EAAgBrL,CAAM,GACrB7zB,EAAA,IAAC,QAAK,UAAU,OACb,aAAe6zB,EACdoI,IAAkB,MACfj8B,MAAA8zB,GAAA,CAAQ,UAAU,uBAAwB,CAAA,QAE1CC,GAAU,CAAA,UAAU,wBAAwB,EAG/C,EAEJ,CAAA,CAAA,EAEJ,EACCmM,GAAmBxC,EAAc7J,CAAM,IAAM,QAC3CvuB,OAAA,OAAA,CAAK,UAAU,wBAAwB,SAAA,CAAA,QAChCuuB,IAAW,WACb,KAAK,MAAM6J,EAAc7J,CAAM,CAAC,GAChCxoB,EAAAqyB,EAAc7J,CAAM,IAApB,YAAAxoB,EAAuB,QAAQ,GAClCwoB,IAAW,WAAa,IAAM,EAAA,EACjC,CAAA,EAEJ,CAAA,EA3CKA,CAAA,CA4CP,EAIJ,OAEIvuB,EAAA,KAAAwG,WAAA,CAAA,SAAA,CAAA9L,EAAA,IAAC,MAAA,CACC,IAAKg9B,EACL,UAAU,6CACV,MAAO,CACL,MAAO,OACP,UAAW3U,EAAe,sBAAwB,sBAClD,UAAWA,EAAe,SAAW,MACvC,EACA,SAAUA,EAAekX,EAAe,OAExC,SAAAj6B,EAAA,KAAC,QAAA,CACC,IAAKy3B,EACL,UAAU,iEACV,MAAO,CACL,YAAa,QACb,MAAO1U,EAAe,OAAS,OAC/B,eAAgB,WAChB,cAAe,CACjB,EAEA,SAAA,CAAAroB,MAAC,QAAM,CAAA,UAAU,cACf,SAAAA,EAAA,IAAC,MACE,SAAYskC,EAAA,IAAI,CAACzQ,EAAQ3wB,IAAU2iC,GAAahS,EAAQ3wB,CAAK,CAAC,CACjE,CAAA,EACF,EACAlD,EAAAA,IAAC,SAAM,UAAU,oCACd,WAAY,IAAI,CAAC8K,EAAM6pB,IACtB30B,EAAA,IAAC,KAAA,CAEC,UAAW,GACT20B,EAAW,IAAM,EAAI,aAAe,UACtC,oDAEC,SAAY2P,EAAA,IAAI,CAACzQ,EAAQkM,IAAa,CAC/B,MAAAM,GAAYv1B,EAAK+oB,CAAM,EACvByM,GAAqBlD,EAAkB,SAASvJ,CAAM,EACtD0M,EAAiB1M,KAAUiM,EAEjC,IAAIpL,EAAa,gBACjB,GAAI4L,GACF5L,EAAamH,GAAqBwE,GAAqB3C,EAAc7J,CAAM,CAAC,UACnE0M,EAAgB,CACnB,MAAAC,GAAaV,EAAYjM,CAAkC,EAC3D4M,GAAY31B,EAAK01B,EAAU,EACjC9L,EAAamH,GAAqB4E,GAAW/C,EAAc8C,EAAU,CAAC,CACxE,CAGE,OAAAxgC,EAAA,IAAC,KAAA,CAEC,UAAW,oDAAoD00B,CAAU,IACvEqL,IAAa,GAAK,CAAC1X,EACf,gCACA,EACN,GACA,MAAO,CACL,MAAO0X,IAAa,EAAI,QAAU,GAAGxD,EAAawD,CAAQ,CAAC,IAC7D,EAEA,SAAC//B,EAAA,IAAA,MAAA,CAAI,UAAU,yCACZ,WAAO,SAAS,MAAM,EACnB,GAAIqgC,GAAqB,QAAQ,CAAC,CAAC,IACnCA,GACN,CAAA,EAdK,GAAG1L,CAAQ,IAAId,CAAM,EAAA,CAe5B,CAEH,CAAA,EAtCIc,CAwCR,CAAA,EACH,CAAA,CAAA,CACF,CAAA,CACF,EAEC,CAACtM,GACC/iB,EAAAA,KAAA,MAAA,CAAI,UAAU,oEACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gCAAgC,SAAA,CAAA,YACpCsqB,EAAc,GAAKM,EAAe,EAAE,OAAK,KAAK,IAAIN,EAAcM,EAAa2C,EAAW,MAAM,EAAE,OAAKA,EAAW,OAAO,UAAA,EAClI,EACAvtB,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAtF,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,UAAU,6BACV,QAAS,IAAM2+B,EAAS,CAAC,EACzB,SAAU/P,IAAgB,EAE1B,SAAA5vB,EAAAA,IAAC0gC,GAAa,CAAA,UAAU,SAAU,CAAA,CAAA,CACpC,EACA1gC,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,UAAU,cACV,QAAS,IAAM2+B,EAAS/P,EAAc,CAAC,EACvC,SAAUA,IAAgB,EAE1B,SAAA5vB,EAAAA,IAACiL,GAAY,CAAA,UAAU,SAAU,CAAA,CAAA,CACnC,EACA3F,EAAAA,KAAC,MAAI,CAAA,UAAU,uDAAuD,SAAA,CAAA,QAC9DsqB,EAAY,OAAK8P,CAAA,EACzB,EACA1/B,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,UAAU,cACV,QAAS,IAAM2+B,EAAS/P,EAAc,CAAC,EACvC,SAAUA,IAAgB8P,EAE1B,SAAA1/B,EAAAA,IAACkL,GAAa,CAAA,UAAU,SAAU,CAAA,CAAA,CACpC,EACAlL,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,UAAU,6BACV,QAAS,IAAM2+B,EAASD,CAAS,EACjC,SAAU9P,IAAgB8P,EAE1B,SAAA1/B,EAAAA,IAAC2gC,GAAc,CAAA,UAAU,SAAU,CAAA,CAAA,CACrC,CAAA,EACF,CAAA,EACF,CACJ,CAAA,CAAA,CAEJ,EAEAoF,GAAer5B,GAAM,KAAK23B,EAAc,EC5YlC2B,GAAQC,GAERC,GAAeC,GAIfC,GAAcC,GAEdC,GAAe7lC,EAGnB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAACumC,GAAA,CACC,UAAWnmC,GACT,0JACAM,CACF,EACC,GAAGE,EACJ,IAAAC,CAAA,CACF,CACD,EACDylC,GAAa,YAAcC,GAAuB,YAElD,MAAMC,GAAgBzlC,GACpB,mMACA,CACE,SAAU,CACR,KAAM,CACJ,IAAK,oGACL,OACE,6GACF,KAAM,gIACN,MACE,kIACJ,CACF,EACA,gBAAiB,CACf,KAAM,OACR,CACF,CACF,EAMM0lC,GAAehmC,EAAAA,WAGnB,CAAC,CAAE,KAAAimC,EAAO,QAAS,UAAAhmC,EAAW,SAAApB,EAAU,GAAGsB,CAAS,EAAAC,WACnDulC,GACC,CAAA,SAAA,CAAApmC,EAAA,IAACsmC,GAAa,EAAA,EACdhhC,EAAA,KAACqhC,GAAA,CACC,IAAA9lC,EACA,UAAWT,GAAGomC,GAAc,CAAE,KAAAE,CAAM,CAAA,EAAGhmC,CAAS,EAC/C,GAAGE,EAEJ,SAAA,CAAA0E,EAAAA,KAACshC,GAAA,CAAqB,UAAU,2OAC9B,SAAA,CAAC5mC,EAAAA,IAAAwG,GAAA,CAAW,UAAU,SAAU,CAAA,EAC/BxG,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAK,QAAA,CAAA,EACjC,EACCV,CAAA,CAAA,CACH,CAAA,CAAA,CACF,CACD,EACDmnC,GAAa,YAAcE,GAAuB,YAElD,MAAME,GAAc,CAAC,CACnB,UAAAnmC,EACA,GAAGE,CACL,IACEZ,EAAA,IAAC,MAAA,CACC,UAAWI,GACT,mDACAM,CACF,EACC,GAAGE,CAAA,CACN,EAEFimC,GAAY,YAAc,cAgB1B,MAAMC,GAAarmC,EAGjB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAAC+mC,GAAA,CACC,IAAAlmC,EACA,UAAWT,GAAG,wCAAyCM,CAAS,EAC/D,GAAGE,CAAA,CACN,CACD,EACDkmC,GAAW,YAAcC,GAAqB,YAE9C,MAAMC,GAAmBvmC,EAGvB,WAAA,CAAC,CAAE,UAAAC,EAAW,GAAGE,CAAM,EAAGC,IAC1Bb,EAAA,IAACinC,GAAA,CACC,IAAApmC,EACA,UAAWT,GAAG,gCAAiCM,CAAS,EACvD,GAAGE,CAAA,CACN,CACD,EACDomC,GAAiB,YAAcC,GAA2B,YC3G1D,MAAMC,GAA8D,CAAC,CACnE,eAAAC,EACA,YAAA7C,EACA,cAAA8C,EAAgB,CAAC,EACjB,mBAAAC,EACA,cAAAC,EACA,eAAAC,CACF,IAAM,CACJ,KAAM,CAACloB,EAAYC,CAAa,EAAI7f,WAAS,EAAE,EACzC,CAAC+kC,EAAeC,CAAgB,EAAIhlC,WAAwB,IAAI,EAChE,CAAC+nC,EAAkBC,CAAmB,EAAIhoC,WAAwB,IAAI,EAEtEioC,EAAkBpD,EAAY,UAClCzQ,EAAO,YAAA,EAAc,SAASxU,EAAW,aAAa,CAAA,EAGlDulB,EAAmB/Q,GAAmB,CAC1C4Q,EAAiB5Q,CAAM,CAAA,EAGnBgR,EAAiB,CAAC//B,EAAoB+uB,IAAmB,CAC7D/uB,EAAE,eAAe,EACb+uB,IAAW2Q,GACbiD,EAAoB5T,CAAM,CAC5B,EAGIiR,EAAcC,GAAyB,CACvC,GAAA,CAACP,GAAiBA,IAAkBO,EAAc,OAEhD,MAAAC,EAAW,CAAC,GAAGV,CAAW,EAC1BW,EAAaD,EAAS,QAAQR,CAAa,EAC3CU,EAAYF,EAAS,QAAQD,CAAY,EAEtCC,EAAA,OAAOC,EAAY,CAAC,EACpBD,EAAA,OAAOE,EAAW,EAAGV,CAAa,EAE3C8C,EAActC,CAAQ,EACtBP,EAAiB,IAAI,EACrBgD,EAAoB,IAAI,CAAA,EAGpBE,EAA0B9T,GAAmB,CACjD,MAAM+T,EAAoBT,EAAe,SAAStT,CAAM,EACpDsT,EAAe,OAAchF,GAAAA,IAAQtO,CAAM,EAC3C,CAAC,GAAGsT,EAAgBtT,CAAM,EAC9BwT,EAAmBO,CAAiB,CAAA,EAGhCC,EAAsBhU,GAAmB,CACzC,GAAA,CAAC0T,GAAkB1T,IAAW,WAAY,OAE9C,MAAMiU,EAAmBV,EAAc,SAASvT,CAAM,EAClDuT,EAAc,OAAcjF,GAAAA,IAAQtO,CAAM,EAC1C,CAAC,GAAGuT,EAAevT,CAAM,EAC7B0T,EAAeO,CAAgB,CAAA,EAGjC,cACG9B,GACC,CAAA,SAAA,CAAChmC,EAAA,IAAAkmC,GAAA,CAAa,QAAO,GACnB,SAAC5gC,EAAAA,KAAAtE,EAAA,CAAO,QAAQ,UAAU,KAAK,KAAK,UAAU,OAC5C,SAAA,CAAChB,EAAAA,IAAA+nC,GAAA,CAAU,UAAU,cAAe,CAAA,EAAE,gBAAA,CAAA,CAExC,CACF,CAAA,EACAziC,EAAAA,KAACmhC,GAAa,CAAA,UAAU,yBACtB,SAAA,CAAAnhC,OAACuhC,GACC,CAAA,SAAA,CAAA7mC,EAAAA,IAAC8mC,IAAW,SAAiB,mBAAA,CAAA,EAC7B9mC,EAAAA,IAACgnC,IAAiB,SAElB,4EAAA,CAAA,CAAA,EACF,EAEA1hC,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACtF,EAAAA,IAAAkhB,GAAA,CAAO,UAAU,wBAAyB,CAAA,EAC3ClhB,EAAA,IAACQ,GAAA,CACC,YAAY,oBACZ,MAAO6e,EACP,SAAWva,GAAMwa,EAAcxa,EAAE,OAAO,KAAK,EAC7C,UAAU,KAAA,CACZ,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,4CACZ,SAAA4iC,EAAgB,IACf7T,GAAAvuB,EAAA,KAAC,MAAA,CAEC,UAAS,GACT,YAAa,IAAMs/B,EAAgB/Q,CAAM,EACzC,WAAa/uB,GAAM+/B,EAAe//B,EAAG+uB,CAAM,EAC3C,OAAQ,IAAMiR,EAAWjR,CAAM,EAC/B,UAAW;AAAA,oBACP2T,IAAqB3T,EAAS,eAAiB,EAAE,GAErD,SAAA,CAAC7zB,EAAAA,IAAA8lC,GAAA,CAAa,UAAU,wBAAyB,CAAA,EACjD9lC,EAAA,IAACiQ,GAAA,CACC,GAAI,OAAO4jB,CAAM,GACjB,QAASsT,EAAe,SAAStT,CAAM,EACvC,gBAAiB,IAAM8T,EAAuB9T,CAAM,CAAA,CACtD,EACA7zB,EAAA,IAAC,QAAA,CACC,QAAS,OAAO6zB,CAAM,GACtB,UAAU,yDAET,SAAAA,CAAA,CACH,EACC0T,GACCvnC,EAAA,IAACgB,EAAA,CACC,QAAQ,QACR,KAAK,KACL,UAAW,QAAQ6yB,IAAW,WAAa,gCAAkC,EAAE,GAC/E,QAAS,IAAMgU,EAAmBhU,CAAM,EACxC,SAAUA,IAAW,WAEpB,SAAcuT,EAAA,SAASvT,CAAM,GAAKA,IAAW,WAC5C7zB,MAACgoC,GAAI,CAAA,UAAU,uBAAwB,CAAA,EAEtChoC,EAAAA,IAAAioC,GAAA,CAAO,UAAU,UAAU,CAAA,CAEhC,CAAA,CAAA,EAjCGpU,CAoCR,CAAA,EACH,CAAA,EACF,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,EC9GMqU,GAAwD,CAAC,CAAE,UAAW3G,KAAoB,CAC9F,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDgmC,EAAc5jC,EAAapC,GAAqBA,EAAM,KAAK,WAAW,EACtEimC,EAAY7jC,EAAapC,GAAqBA,EAAM,KAAK,SAAS,EAElE,CAACi9B,EAAcqC,CAAe,EAAIhiC,EAAA,SAA4B,CAAE,CAAA,EAChE,CAAC6gB,EAAMoX,CAAO,EAAIj4B,EAAA,SAA4B,CAAE,CAAA,EAChD,CAACsP,EAAW0K,CAAY,EAAIha,WAAS,EAAK,EAC1C,CAAE,QAAA4K,GAAY2P,KAEdvL,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAEhB7I,EAAcH,EAAAA,QAAQ,KAAO,CACjC,KAAMi3B,EACN,GAAIC,CACF,GAAA,CAACD,EAAaC,CAAS,CAAC,EAEtB/tB,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAO,IAAI,KAAKvD,EAAK,IAAI,EAAG,YAAY,EAAI,GACrE6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAO,IAAI,KAAKvD,EAAK,EAAE,EAAG,YAAY,EAAI,GAC/D45B,EAAmBh3B,GAAA,MAAAA,EAAa,KAAOW,EAAO,IAAI,KAAKX,EAAY,IAAI,EAAG,YAAY,EAAI,GAC1Fi3B,EAAiBj3B,GAAA,MAAAA,EAAa,GAAKW,EAAO,IAAI,KAAKX,EAAY,EAAE,EAAG,YAAY,EAAI,GAEpF,CAACqwB,EAAiBC,CAAkB,EAAIliC,EAAA,SAAmB,CAAE,CAAA,EAC7D,CAAC63B,EAASC,CAAU,EAAI93B,EAAA,SAAuB,CAAE,CAAA,EACjD,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAS,EAAK,EAChDF,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxDF,EAAWuC,KACX+U,EAAgBD,KAItBzZ,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,EAAet/B,CAAQ,CAAC,EAE5B,MAAMwmB,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAGzBga,EAAev4B,EAAAA,YAAY,SAAY,WAC3C2P,EAAa,EAAI,EACb,GAAA,CACF,MAAM8uB,EAAa,CAAA,EAmBf,GAhBAluB,GAAaC,GACfiuB,EAAW,KAAK,CACd,UAAAluB,EACA,QAAAC,CAAA,CACD,EAIC+tB,GAAoBC,GACtBC,EAAW,KAAK,CACd,UAAWF,EACX,QAASC,CAAA,CACV,EAICC,EAAW,OAAS,EAAG,CAUzB,MAAMC,IATyB,MAAMjvB,EAAc,KACjD,4BAA4BlP,CAAO,GACnC,CACE,WAAAk+B,EACA,OAAQhpC,GAAA,YAAAA,EAAM,EAChB,EACA,CAAE,gBAAiB,EAAK,CAAA,GAGmB,KAAK,QAAU,CAAA,EAGxD,GAAAipC,GAAc,OAAS,EAAG,CAEtB,MAAAC,EAAqBD,GAAc,CAAC,EAAE,KAExCC,GAEF/Q,EAAQ8Q,EAAa,EACrB/G,EAAgB+G,EAAa,IAG7B9Q,IAAQrsB,EAAAm9B,GAAc,CAAC,IAAf,YAAAn9B,EAAkB,OAAQ,CAAE,CAAA,EACpCo2B,IAAgBj0B,EAAAg7B,GAAc,CAAC,IAAf,YAAAh7B,EAAkB,OAAQ,CAAE,CAAA,GAI9C,MAAMk7B,EAAiBD,EAAqBD,KAAiB9sB,EAAA8sB,GAAc,CAAC,IAAf,YAAA9sB,EAAkB,OAAQ,GACnF,GAAAgtB,EAAe,OAAS,EAAG,CACvB,MAAAC,GAAYD,EAAe,CAAC,EAC5B1G,GAAa,OAAO,KAAK2G,EAAS,EAEpCjH,EAAgB,SAAW,EAC7BC,EAAmBK,EAAU,EAE7BL,EAAoBc,IAClBA,GAAa,OAAQN,GAAQH,GAAW,SAASG,CAAG,CAAC,CAAA,CAG3D,CACF,CACF,QAEOh9B,EAAO,CACN,QAAA,MAAM,0CAA2CA,CAAK,CAAA,QAC9D,CACAsU,EAAa,EAAK,CACpB,CAAA,EACC,CAACY,EAAWC,EAAS+tB,EAAkBC,EAAgBj+B,EAAS9K,GAAA,YAAAA,EAAM,EAAE,CAAC,EAG5EM,EAAAA,UAAU,IAAM,CACDwiC,IACb,MAAMvnB,EAAa,YAAYunB,EAAc,GAAK,GAAK,GAAI,EACpD,MAAA,IAAM,cAAcvnB,CAAU,CAAA,EACpC,CAACunB,CAAY,CAAC,EAEjB,MAAMnqB,EAAsB,IAAM,CACnBmqB,GAAA,EAGT,CAAC8E,EAAgByB,CAAiB,EAAInpC,WAAmBiiC,CAAe,EACxE,CAAC4C,EAAaC,CAAc,EAAI9kC,WAAmBiiC,CAAe,EAElEmH,EAA0BtX,GAAsB,CACpDqX,EAAkBrX,CAAO,CAAA,EAGrBuX,EAAqB9D,GAAuB,CAChDT,EAAeS,CAAQ,EACvB4D,EAAkB5D,CAAQ,CAAA,EAG5BnlC,EAAAA,UAAU,IAAM,CACd+oC,EAAkBlH,CAAe,EACjC6C,EAAe7C,CAAe,CAAA,EAC7B,CAACA,CAAe,CAAC,EAEd,MAAAiB,EAAe74B,cAAawtB,GAA0B,CACtD,IAAAzhB,EAAS,CAAC,GAAGyK,CAAI,EAErBgX,EAAQ,QAAkBsL,GAAA,CACf/sB,EAAAA,EAAO,OAAe/K,GAAA,CACvB,MAAA0D,GAAQ1D,EAAK83B,EAAO,MAA+B,EACrD,GAAA,CAAC,IAAK,IAAK,GAAG,EAAE,SAASA,EAAO,QAAQ,EAAG,CACvC,MAAAC,GAAW,WAAWr0B,EAAK,EAC3B2yB,EAAc,WAAWyB,EAAO,KAAK,EAC3C,OAAQA,EAAO,SAAU,CACvB,IAAK,IAAK,OAAOC,GAAW1B,EAC5B,IAAK,IAAK,OAAO0B,GAAW1B,EAC5B,IAAK,IAAK,OAAO0B,KAAa1B,EAC9B,QAAgB,MAAA,EAClB,CACF,CACO,MAAA,EAAA,CACR,CAAA,CACF,EAEDM,EAAgB5rB,CAAM,CAAA,EACrB,CAACyK,CAAI,CAAC,EAEHwiB,EAAuB5xB,EAAAA,QAAQ,IAAMkuB,EAAc,CAACA,CAAY,CAAC,EAEjE2D,EAAiB,CAAC,cAAe,YAAa,WAAY,YAAa,gBAAiB,mBAAoB,eAAe,EAE3HC,GAAgB9/B,GAAkB,CACtCq0B,EAAWD,EAAQ,OAAO,CAACroB,EAAGilB,IAAMA,IAAMhxB,CAAK,CAAC,CAAA,EAGlD,OAAG6L,EACM/O,MAACsY,IAAO,UAAAvJ,CAAsB,CAAA,EAIpC/O,EAAA,IAAA8N,GAAA,CAAK,UAAW,QAAQua,EAAe,yBAA2B,EAAE,GACnE,SAACroB,MAAAkO,GAAA,CACC,SAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAA0B,6BAAA,QAC7D0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACZ,SAAA,CAAA+iB,SAAiBxX,GAAoB,EAAA,QACrC7P,EAAO,CAAA,QAASkX,EAAqB,SAAUnJ,EAAW,KAAK,OAAO,QAAQ,UAC7E,SAAA/O,EAAAA,IAACoY,IAAU,UAAW,WAAWrJ,EAAY,eAAiB,EAAE,EAAI,CAAA,EACtE,EACA/O,EAAA,IAACknC,GAAA,CACC,eAAAC,EACA,YAAA7C,EACA,mBAAoBuE,EACpB,cAAeC,CAAA,CACjB,EACA9oC,EAAA,IAAC6gC,GAAA,CACC,QAASkC,EACT,gBAAiBJ,EACjB,QAAArL,EACA,WAAAC,CAAA,CACF,QACCv2B,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACF,EAEC6M,EAAQ,OAAS,GAChBt3B,EAAA,IAAC,OAAI,UAAU,uBACZ,SAAQs3B,EAAA,IAAI,CAACsL,EAAQ1/B,IACnBoC,EAAA,KAAA,MAAA,CAAgB,UAAU,yKACzB,SAAA,CAACtF,EAAAA,IAAA,OAAA,CAAM,SAAG,GAAA4iC,EAAO,MAAM,IAAIA,EAAO,QAAQ,IAAIA,EAAO,KAAK,EAAG,CAAA,EAC5D5iC,EAAA,IAAA,SAAA,CAAO,QAAS,IAAMgjC,GAAa9/B,CAAK,EAAG,UAAU,yGAAyG,aAAW,gBACxK,SAAAlD,MAACgd,GAAE,CAAA,UAAU,SAAU,CAAA,EACzB,CAAA,GAJQ9Z,CAKV,CACD,EACH,EAGDlD,MAAA,MAAA,CAAI,UAAU,6BACZ,WACEA,EAAA,IAAAszB,GAAA,CAAA,CAAc,EAEftzB,MAACqkC,IAAe,QAASC,EAAa,KAAMxB,EAAsB,aAAAza,CAA4B,CAAA,EAElG,CAAA,EACF,EACF,CACF,CAAA,CAEJ,EC/QA,SAAS0gB,IAAiB,CACxB,MAAMxpC,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACtD6C,EAAiC,gCACjCI,EAAoB,SAAY,CAC9B,GAAA,CAEI,MAAAL,EAAW,MAAME,GAAM,IAAI,GAAGD,CAAO,sCAAuC,CAAE,gBAAiB,EAAM,CAAA,EACrG,CAAE,QAAAK,CAAQ,EAAIN,EAAS,KAE7B,OAAO,SAAS,KAAOM,QAChBF,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,CACvD,CAAA,eAGH,MAAI,CAAA,UAAU,gEACb,SAACG,EAAA,KAAA,MAAA,CAAI,UAAU,qDAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACtF,EAAAA,IAAA,OAAI,UAAU,kFACb,SAACA,MAAAwF,GAAK,CAAA,UAAU,uBAAuB,EACzC,QACC,KAAA,CAAG,UAAU,wCAAwC,SAEtD,sBAAA,QACC,IAAA,CAAE,UAAU,gBAAgB,SAE7B,uEAAA,CAAA,EACF,QAGC,MAAI,CAAA,UAAU,iCACb,SAACF,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACtF,EAAAA,IAAAid,GAAA,CAAY,UAAU,gCAAgC,SACtD,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,wBAAwB,SAAuB,0BAAA,EAC3Djd,EAAA,IAAA,IAAA,CAAE,UAAU,4BAA6B,0BAAM,MAAM,CAAA,EACxD,CAAA,CAAA,CACF,CAAA,CACF,EAGCsF,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,OAAC,IAAA,CAAE,UAAU,wBAAwB,SAErC,sFAAA,EAEAA,EAAA,KAAC,SAAA,CACC,UAAU,kJACV,QAASF,EACV,SAAA,CAAA,mCAEEpF,EAAAA,IAAAqkB,GAAW,CAAA,UAAU,yDAAyD,CAAA,CAAA,CACjF,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CC5BA,SAAwB2kB,GAAc,CACpC,SAAA/pB,EACA,KAAApc,EACA,aAAAomC,EACA,QAAA5+B,EACA,UAAA6+B,CACF,EAAuB,OACrB,KAAM,CAAC7pB,EAAYC,CAAa,EAAI7f,WAAS,EAAE,EACzC,CAAC8f,EAAmBC,CAAoB,EAAI/f,EAAA,SAA6B,CAAE,CAAA,EAC3E,CAACggB,EAAyBC,CAA0B,EAAIjgB,EAAA,SAAmC,CAAE,CAAA,EAC7F,CAACkgB,EAAqBC,CAAsB,EAAIngB,EAAA,SAA+B,CAAE,CAAA,EACjF,CAACogB,EAAiBC,CAAkB,EAAIrgB,WAAS,EAAK,EACtD,CAACgd,EAASC,CAAU,EAAIjd,WAAS,EAAK,EACtC,CAACuiB,EAAmBC,CAAoB,EAAIxiB,EAAA,SAAmB,CAAE,CAAA,EAEjEuF,EAAiC,gCACjCzF,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxDgY,EAAS5a,GAAA,YAAAA,EAAM,GACrB,QAAQ,IAAI4a,CAAM,EAElBta,EAAAA,UAAU,IAAM,CAmBVgD,GAAQwH,IAlBmB,SAAY,SACrC,GAAA,CAIF,MAAMmB,GAHW,MAAMvG,GAAM,IAAI,GAAGD,CAAO,eAAeqF,CAAO,GAAI,CACnE,gBAAiB,EAAA,CAClB,GACsB,KAEjB8+B,EAAyB,CAAA,GAC3B99B,EAAAG,EAAM,eAAN,MAAAH,EAAoB,UAAqB,KAAK,GAAGG,EAAM,YAAY,EACnEA,EAAM,iBAA8B29B,EAAA,KAAK39B,EAAM,eAAe,GAC9DgC,EAAAhC,EAAM,aAAN,MAAAgC,EAAkB,cAAyB,KAAKhC,EAAM,WAAW,UAAU,EAE/EyW,EAAqBknB,CAAY,QAC1BhkC,EAAO,CACN,QAAA,MAAM,qCAAsCA,CAAK,CAC3D,CAAA,IAKF,EACC,CAACkF,EAASxH,CAAI,CAAC,EAElBhD,EAAAA,UAAU,IAAM,EACQ,SAAY,OAChC,GAAKgD,EAEL,CAAA6Z,EAAW,EAAI,EACX,GAAA,CACF,IAAI0sB,EAAW,GACXC,EAAsB,KAElB,OAAApqB,EAAS,YAAe,EAAA,CAC9B,IAAK,aACQmqB,EAAA,6BACMC,EAAA7pB,EACjB,MACF,IAAK,mBACQ4pB,EAAA,6BACMC,EAAA3pB,EACjB,MACF,IAAK,WACQ0pB,EAAA,4BACMC,EAAAzpB,EACjB,KACJ,CAGA,GAFA,QAAQ,IAAI,gBAAgB5a,CAAO,GAAGokC,CAAQ,iBAAiBjvB,CAAM,EAAE,EAEnE,CAACivB,EACG,MAAA,IAAI,MAAM,kBAAkB,EAE9B,MAAArkC,EAAW,MAAME,GAAM,KAC3B,GAAGD,CAAO,GAAGokC,CAAQ,GACrB,CAAE,OAAAjvB,CAAO,EACT,CAAE,gBAAiB,EAAK,CAAA,EAGtBpV,EAAS,SAAW,MACtB+a,EAAmB,EAAK,EACpBb,EAAS,YAAY,IAAM,aACdoqB,GAAAh+B,EAAAtG,EAAS,OAAT,YAAAsG,EAAe,eAAe,OAAQgQ,GAA8B,CAACA,EAAQ,OAAO,EAC1F4D,EAAS,YAAY,IAAM,mBACpCoqB,EAAetkC,EAAS,KAAK,gBAAkB,CAAE,CAAA,EACxCka,EAAS,YAAY,IAAM,YACpCoqB,EAAetkC,EAAS,KAAK,YAAc,CAAE,CAAA,SAG1CI,EAAO,CACd6a,EAAY7a,EAAqB2a,CAAkB,CAAA,QACnD,CACApD,EAAW,EAAK,CAClB,EAAA,IAID,EAAA,CAACuC,EAAU9E,EAAQtX,CAAI,CAAC,EAErB,MAAAmd,EAAc,CAAC7a,EAAgB2a,IAAiD,CACpF,MAAMK,EAAahb,EAEnB,GAAIgb,EAAW,SAAU,CACvB,KAAM,CAAE,OAAAE,EAAQ,KAAAC,GAASH,EAAW,SAC9BK,EAAOL,EAAW,KACpBE,IAAW,KAEJA,IAAW,IADpBP,EAAmB,EAAI,EAGdO,IAAW,KAAOG,IAAS,iBACpC,MAAM,uDAAuD,EAC7DV,EAAmB,EAAI,IAEf,QAAA,MAAM,0BAA2BO,CAAM,EACvC,QAAA,MAAM,iBAAkBC,CAAI,EACtC,MACSH,EAAW,QACZ,QAAA,MAAM,wBAAyBA,EAAW,OAAO,EAEjD,QAAA,MAAM,oBAAqBA,EAAW,OAAO,CACvD,EAGImpB,EAAyB,MAAOxoB,EAAmBO,IAAwB,CAC3E,GAAA,CACF,IAAIkoB,EAAa,CAAA,EAET,OAAAtqB,EAAS,YAAe,EAAA,CAC9B,IAAK,WACHsqB,EAAa,CAAE,aAAc,CAACzoB,CAAS,CAAE,EACzC,MACF,IAAK,aACUyoB,EAAA,CAAE,gBAAiBzoB,GAChC,MACF,IAAK,mBACHyoB,EAAa,CAAE,WAAY,CAAE,WAAYzoB,CAAY,CAAA,EACrD,KACJ,EAEiB,MAAM7b,GAAM,MAC3B,GAAGD,CAAO,sBAAsBqF,CAAO,GACvCk/B,EACA,CAAE,gBAAiB,EAAK,CAAA,GAGb,SAAW,MACVL,GAAA,MAAAA,EAAAjqB,EAAUoC,EAAaP,GACnCmoB,EAAa,EAAK,SAEb9jC,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,CAC9C,CAAA,EAGI0b,EAAgB,MAAOxF,GAA4E,CACnG,IAAAyF,EACAC,EAEJ,GAAI,aAAc1F,EAChByF,EAAYzF,EAAQ,SACpB0F,EAAc,GAAG1F,EAAQ,IAAI,KAAKyF,CAAS,YAClC,eAAgBzF,EACzByF,EAAYzF,EAAQ,WACpB0F,EAAc,GAAG1F,EAAQ,YAAY,KAAKyF,CAAS,YAC1C,OAAQzF,EACjByF,EAAYzF,EAAQ,GACN0F,EAAA,GAAG1F,EAAQ,MAAM,OAE/B,QAGI,MAAAiuB,EAAuBxoB,EAAWC,CAAW,CAAA,EAG/C3b,EAAoB,SAAY,CAChC,GAAA,CACI,MAAAL,EAAW,MAAME,GAAM,IAAI,GAAGD,CAAO,sCAAuC,CAAE,gBAAiB,EAAM,CAAA,EACrG,CAAE,QAAAK,CAAQ,EAAIN,EAAS,KAC7B,OAAO,SAAS,KAAOM,QAChBF,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,CACvD,CAAA,EAGI8b,EAAgB,SAAY,CAC5B,GAAA,CACI,MAAAlc,EAAW,MAAME,GAAM,IAAI,GAAGD,CAAO,qBAAsB,CAAE,gBAAiB,EAAM,CAAA,EACtFD,EAAS,KAAK,UACT,OAAA,SAAS,KAAOA,EAAS,KAAK,eAEhCI,EAAO,CACN,QAAA,MAAM,mCAAoCA,CAAK,CACzD,CAAA,EAGIyb,EAAmB,IAAM,CAC7B,IAAIqD,EAAkB,CAAA,EAEd,OAAAhF,EAAS,YAAe,EAAA,CAC9B,IAAK,aACQgF,EAAA1E,EACX,MACF,IAAK,mBACQ0E,EAAAxE,EACX,MACF,IAAK,WACQwE,EAAAtE,EACX,KACJ,CAEO,OAAAsE,EAAS,OAAQ5I,IACF,aAAcA,EAAUA,EAAQ,KAChD,iBAAkBA,EAAUA,EAAQ,aACpCA,EAAQ,QACO,YAAY,EAAE,SAASgE,EAAW,aAAa,CACnE,CAAA,eAIAzB,GAAO,CAAA,KAAA/a,EAAY,aAAAomC,EAClB,SAAC3jC,EAAA,KAAA8Y,GAAA,CAAc,UAAU,mBACvB,SAAA,OAACG,GAAA,CACC,SAACjZ,EAAAA,KAAAkZ,GAAY,CAAA,SAAA,CAAA,WAASS,EAAS,UAAA,CAAA,CAAQ,CAAA,CACzC,QAEC,MAAI,CAAA,UAAU,YACZ,SAAAxC,EACEzc,EAAA,IAAA,MAAA,CAAI,UAAU,2BAA2B,SAAU,YAAA,CAAA,EAClD6f,EACFva,EAAA,KAACtE,EAAA,CACC,KAAK,KACL,QAASie,EAAS,YAAY,IAAM,WAAagC,EAAgB7b,EACjE,UAAU,wFAET,SAAA,CAAS6Z,EAAA,YAAY,IAAM,cAExB3Z,EAAAA,KAAAwG,EAAAA,SAAA,CAAA,SAAA,OAAC/C,GAAW,CAAA,OAAO,OAAO,MAAM,OAAO,EAAE,oCAAA,EAE3C,EAEDkW,EAAS,YAAY,IAAM,oBAExB3Z,EAAAA,KAAAwG,EAAAA,SAAA,CAAA,SAAA,OAACpD,GAAQ,CAAA,OAAO,OAAO,MAAM,OAAO,EAAE,6BAAA,EAExC,EAEDuW,EAAS,YAAY,IAAM,YAExB3Z,EAAAA,KAAAwG,EAAAA,SAAA,CAAA,SAAA,OAAChD,GAAa,CAAA,OAAO,OAAO,MAAM,OAAO,EAAE,kCAAA,EAE7C,CAAA,CAAA,CAAA,EAKFxD,EAAA,KAAAwG,WAAA,CAAA,SAAA,CAACxG,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACtF,EAAAA,IAAAkhB,GAAA,CAAO,UAAU,mEAAmE,EACrFlhB,EAAA,IAACQ,GAAA,CACC,KAAK,OACL,YAAY,qBACZ,UAAU,QACV,MAAO6e,EACP,SAAWva,GAAMwa,EAAcxa,EAAE,OAAO,KAAK,CAAA,CAC/C,CAAA,EACF,EACA9E,MAAC,OAAI,UAAU,6BACZ,cAAiB,kBAAG,IAAKqb,GAAY,CAC9B,MAAA8F,EAAclC,EAAS,YAAA,IAAkB,aACzCmC,EAAanC,EAAS,YAAA,IAAkB,WAExC6B,EAAYK,EACb9F,EAA6B,SAC9B+F,EACG/F,EAA+B,GAC/BA,EAAmC,WAEpCgG,EAAcF,EACf9F,EAA6B,KAC9B+F,EACG/F,EAA+B,OAC/BA,EAAmC,aAEpCiG,EAAeH,EAClBnhB,EAAA,IAAA+I,GAAA,CAAW,OAAO,OAAO,MAAM,MAAO,CAAA,EACrCqY,EACDphB,EAAAA,IAAA8I,IAAa,OAAO,OAAO,MAAM,MAAO,CAAA,QAExCJ,GAAQ,CAAA,OAAO,OAAO,MAAM,MAAO,CAAA,EAGhC4a,EAActB,EAAkB,SAASlB,CAAS,EAGtD,OAAAxb,EAAA,KAAC,MAAA,CAEC,UAAU,iEAEV,SAAA,CAAAtF,MAAC,OACC,CAAA,gBAAC,MAAI,CAAA,UAAU,mCACZ,SAAA,CAAAshB,EACAF,EACG,GAAGC,CAAW,GACd,GAAGA,CAAW,KAAKP,CAAS,GAAA,CAAA,CAClC,CAAA,CACF,EACAxb,EAAA,KAACtE,EAAA,CACC,KAAK,KACL,QAAS,IAAM6f,EAAcxF,CAAO,EACpC,SAAUiI,EACV,UAAWA,EAAc,cAAgB,cAExC,SAAA,CAAeA,GAACtjB,EAAAA,IAAAwhB,GAAM,CAAA,UAAU,eAAe,EAC/C8B,EAAc,YAAc,SAAA,CAAA,CAC/B,CAAA,CAAA,EAnBKxC,CAAA,CAsBV,GACH,CAAA,CAAA,CACF,CAAA,CAEJ,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CChWA,MAAM0oB,GAAkB,CACtB,mBAAoB,CAClB,MAAO,mBACP,YAAa,0CACb,KAAMxpC,EAAAA,IAACsnB,GAAS,CAAA,UAAU,wCAAyC,CAAA,EACnE,SAAU,CACR,CACE,KAAMtnB,EAAAA,IAACqnB,GAAU,CAAA,UAAU,sBAAuB,CAAA,EAClD,MAAO,sBACP,YAAa,sCACf,EACA,CACE,KAAMrnB,EAAAA,IAAC0K,GAAU,CAAA,UAAU,sBAAuB,CAAA,EAClD,MAAO,sBACP,YAAa,kCACf,EACA,CACE,KAAM1K,EAAAA,IAACm2B,GAAW,CAAA,UAAU,sBAAuB,CAAA,EACnD,MAAO,kBACP,YAAa,4BACf,CACF,EACA,WAAY,kBACZ,UAAW,2BACb,EACA,aAAc,CACZ,MAAO,aACP,YAAa,2CACb,KAAMn2B,EAAAA,IAACypC,GAAc,CAAA,UAAU,uCAAwC,CAAA,EACvE,SAAU,CACR,CACE,KAAMzpC,EAAAA,IAACqnB,GAAU,CAAA,UAAU,sBAAuB,CAAA,EAClD,MAAO,oBACP,YAAa,qCACf,EACA,CACE,KAAMrnB,EAAAA,IAAC0K,GAAU,CAAA,UAAU,sBAAuB,CAAA,EAClD,MAAO,uBACP,YAAa,2BACf,EACA,CACE,KAAM1K,EAAAA,IAACm2B,GAAW,CAAA,UAAU,sBAAuB,CAAA,EACnD,MAAO,sBACP,YAAa,oCACf,CACF,EACA,WAAY,qBACZ,UAAW,oBACb,EACA,SAAU,CACR,MAAO,eACP,YAAa,sCACb,KAAMn2B,EAAAA,IAAC0pC,GAAS,CAAA,UAAU,wCAAyC,CAAA,EACnE,SAAU,CACR,CACE,KAAM1pC,EAAAA,IAACqnB,GAAU,CAAA,UAAU,sBAAuB,CAAA,EAClD,MAAO,oBACP,YAAa,iCACf,EACA,CACE,KAAMrnB,EAAAA,IAAC0K,GAAU,CAAA,UAAU,sBAAuB,CAAA,EAClD,MAAO,iBACP,YAAa,4BACf,EACA,CACE,KAAM1K,EAAAA,IAACm2B,GAAW,CAAA,UAAU,sBAAuB,CAAA,EACnD,MAAO,gBACP,YAAa,4BACf,CACF,EACA,WAAY,uBACZ,UAAW,+BACb,CACF,EAUMwT,GAAkD,CAAC,CACvD,SAAA1qB,EAAW,mBACX,QAAA5U,EACA,UAAA6+B,CACF,IAAM,CACJ,KAAM,CAAC1rB,EAAaC,CAAc,EAAIhe,WAAS,EAAK,EAC9C8gB,EAASipB,GAAgBvqB,CAAQ,EAEjC4B,EAAgB,IAAM,CAC1BpD,EAAe,EAAI,CAAA,EAGrB,OAEInY,EAAA,KAAAwG,WAAA,CAAA,SAAA,CAAA9L,EAAAA,IAAC,OAAI,UAAU,qGACb,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,qCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAtF,EAAA,IAAC,MAAI,CAAA,UAAU,sBACZ,SAAAugB,EAAO,KACV,EACAjb,EAAAA,KAAC,KAAG,CAAA,UAAU,oCAAoC,SAAA,CAAA,WAASib,EAAO,KAAA,EAAM,EACvEvgB,EAAA,IAAA,IAAA,CAAE,UAAU,gCACV,WAAO,YACV,CAAA,EACF,QAGC8N,GAAK,CAAA,UAAU,kCACd,SAACxI,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,sBAAsB,SAAA,CAAA,yBACVib,EAAO,MAAM,+EAAA,EACtC,EAGCvgB,EAAA,IAAA,MAAA,CAAI,UAAU,iCACZ,SAAOugB,EAAA,SAAS,IAAI,CAACqpB,EAAS1mC,IAC5BoC,OAAA,MAAA,CAAgB,UAAU,uDACxB,SAAA,CAAQskC,EAAA,KACR5pC,EAAA,IAAA,KAAA,CAAG,UAAU,gBAAiB,WAAQ,MAAM,EAC5CA,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAiC,WAAQ,YAAY,CAAA,GAH1DkD,CAIV,CACD,EACH,EAGAlD,EAAAA,IAAC,MAAI,CAAA,UAAU,sBACb,SAAAsF,EAAA,KAACtE,EAAA,CACC,KAAK,KACL,UAAU,QACV,QAAS6f,EAER,SAAA,CAAON,EAAA,WACRvgB,EAAAA,IAACqkB,GAAW,CAAA,UAAU,6DAA8D,CAAA,CAAA,CAAA,CAAA,EAExF,CAAA,CAAA,CACF,CACF,CAAA,EAGA/e,EAAAA,KAAC,IAAE,CAAA,UAAU,4CACV,SAAA,CAAOib,EAAA,UAAW,UAClB,IAAE,CAAA,KAAK,IAAI,UAAU,+BAA+B,SAErD,sBAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,EAEAvgB,EAAA,IAACgpC,GAAA,CACC,SAAUzoB,EAAO,MACjB,KAAM/C,EACN,aAAcC,EACd,QAAApT,EACA,UAAA6+B,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,ECpIMW,GAAmD,CAAC,CAAE,UAAWtI,KAAoB,CACzF,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChB,CAACklB,EAAcqC,CAAe,EAAIhiC,EAAA,SAA0B,CAAE,CAAA,EAC9D,CAAC6gB,EAAMoX,CAAO,EAAIj4B,EAAA,SAA0B,CAAE,CAAA,EAC9C,CAACsP,EAAW0K,CAAY,EAAIha,WAAS,EAAK,EAC1C,CAAE,QAAA4K,GAAY2P,KAGdK,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACrD,CAACizB,EAAiBC,CAAkB,EAAIliC,EAAA,SAAmB,CAAE,CAAA,EAC7D,CAAC63B,EAASC,CAAU,EAAI93B,EAAA,SAAuB,CAAE,CAAA,EACjD,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAS,EAAK,EAChDF,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxDF,EAAWuC,KACX+U,EAAgBD,KAGtBzZ,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAM9Y,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAGzB,CAAC8e,EAAgByB,CAAiB,EAAInpC,WAAmBiiC,CAAe,EACxE,CAAC4C,EAAaC,CAAc,EAAI9kC,WAAmBiiC,CAAe,EAElEmH,EAA0BtX,GAAsB,CACpDqX,EAAkBrX,CAAO,CAAA,EAGrBuX,EAAqB9D,GAAuB,CAChDT,EAAeS,CAAQ,EACvB4D,EAAkB5D,CAAQ,CAAA,EAG5BnlC,EAAAA,UAAU,IAAM,CACd+oC,EAAkBlH,CAAe,EACjC6C,EAAe7C,CAAe,CAAA,EAC7B,CAACA,CAAe,CAAC,EAEd,MAAAW,EAAev4B,EAAAA,YAAY,SAAY,CAC3C2P,EAAa,EAAI,EACb,GAAA,CAYF,MAAM8oB,GAVyB,MAAMhpB,EAAc,KACjD,+BAA+BlP,CAAO,GACtC,CACE,UAAAgQ,EACA,QAAAC,EACA,OAAQ/a,GAAA,YAAAA,EAAM,EAChB,EACA,CAAE,gBAAiB,EAAK,CAAA,GAGiB,KAAK,MAAQ,CAAA,EAIpD,GAHJm4B,EAAQ6K,CAAW,EACnBd,EAAgBc,CAAW,EAEvBA,EAAY,OAAS,EACnB,GAAAb,EAAgB,SAAW,EAAG,CAChC,MAAMM,EAAa,OAAO,KAAKO,EAAY,CAAC,CAAC,EAC7CZ,EAAmBK,CAAU,CAAA,KACxB,CACL,MAAME,EAAa,OAAO,KAAKK,EAAY,CAAC,CAAC,EAC7CZ,EAAoBc,GAClBA,EAAa,OAAQN,IAAQD,EAAW,SAASC,EAAG,CAAC,CAAA,CAEzD,QAGKh9B,EAAO,CACN,QAAA,MAAM,wCAAyCA,CAAK,CAAA,QAE5D,CACAsU,EAAa,EAAK,CACpB,CACC,EAAA,CAACY,EAAWC,EAASjQ,CAAO,CAAC,EAEhCxK,EAAAA,UAAU,IAAM,CACDwiC,IACb,MAAMvnB,EAAa,YAAYunB,EAAc,GAAK,GAAK,GAAI,EACpD,MAAA,IAAM,cAAcvnB,CAAU,CAAA,EACpC,CAACunB,CAAY,CAAC,EAEjB,MAAMnqB,EAAsB,IAAM,CACnBmqB,GAAA,EAITM,EAAe74B,cAAawtB,GAA0B,CACtD,IAAAzhB,EAAS,CAAC,GAAGyK,CAAI,EAErBgX,EAAQ,QAAkBsL,GAAA,CACf/sB,EAAAA,EAAO,OAAe/K,GAAA,CACvB,MAAA0D,GAAQ1D,EAAK83B,EAAO,MAA6B,EACnD,GAAA,CAAC,IAAK,IAAK,GAAG,EAAE,SAASA,EAAO,QAAQ,EAAG,CACvC,MAAAC,EAAW,WAAWr0B,EAAK,EAC3B2yB,EAAc,WAAWyB,EAAO,KAAK,EAC3C,OAAQA,EAAO,SAAU,CACvB,IAAK,IAAK,OAAOC,EAAW1B,EAC5B,IAAK,IAAK,OAAO0B,EAAW1B,EAC5B,IAAK,IAAK,OAAO0B,IAAa1B,EAC9B,QAAgB,MAAA,EAClB,CACF,CACO,MAAA,EAAA,CACR,CAAA,CACF,EAEDM,EAAgB5rB,CAAM,CAAA,EACrB,CAACyK,CAAI,CAAC,EAEHwiB,EAAuB5xB,EAAAA,QAAQ,IAAMkuB,EAAc,CAACA,CAAY,CAAC,EAEjE2D,EAAiB,CAAC,cAAe,YAAa,WAAY,YAAa,gBAAiB,mBAAoB,eAAe,EAC3HC,EAAgB9/B,GAAkB,CACtCq0B,EAAWD,EAAQ,OAAO,CAACroB,EAAGilB,IAAMA,IAAMhxB,CAAK,CAAC,CAAA,EAElD,OAAG6L,EACM/O,MAACsY,IAAO,UAAAvJ,CAAsB,CAAA,EAGpC/O,EAAA,IAAA8N,GAAA,CAAK,UAAW,QAAQua,EAAe,yBAA2B,EAAE,GACrE,SAACroB,MAAAkO,GAAA,CACC,SAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAA6B,gCAAA,QAChE0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCAEd,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEACxB,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGH,QACH7P,EAAO,CAAA,QAASkX,EAAqB,SAAUnJ,EAAW,KAAK,OAAO,QAAQ,UAC7E,SAAA/O,EAAAA,IAACoY,IAAU,UAAW,WAAWrJ,EAAY,eAAiB,EAAE,EAAI,CAAA,EACtE,EACA/O,EAAA,IAACknC,GAAA,CACG,eAAAC,EACA,YAAA7C,EACA,mBAAoBuE,EACpB,cAAeC,CAAA,CACjB,EACF9oC,EAAA,IAAC6gC,GAAA,CACC,QAASkC,EACT,gBAAiBJ,EACjB,QAAArL,EACA,WAAAC,CAAA,CACF,QACEv2B,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACrD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EAEF,CAAA,EACF,EAEC6M,EAAQ,OAAS,GAChBt3B,EAAA,IAAC,OAAI,UAAU,uBACZ,SAAQs3B,EAAA,IAAI,CAACsL,EAAQ1/B,IACnBoC,EAAA,KAAA,MAAA,CAAgB,UAAU,yKACzB,SAAA,CAACtF,EAAAA,IAAA,OAAA,CAAM,SAAG,GAAA4iC,EAAO,MAAM,IAAIA,EAAO,QAAQ,IAAIA,EAAO,KAAK,EAAG,CAAA,EAC5D5iC,EAAA,IAAA,SAAA,CAAO,QAAS,IAAMgjC,EAAa9/B,CAAK,EAAG,UAAU,yGAAyG,aAAW,gBACxK,SAAAlD,MAACgd,GAAE,CAAA,UAAU,SAAU,CAAA,EACzB,CAAA,GAJQ9Z,CAKV,CACD,EACH,EAGDlD,MAAA,MAAA,CAAI,UAAU,6BACZ,WACEA,EAAA,IAAAszB,GAAA,CAAA,CAAc,EAEftzB,MAACqkC,IAAe,QAASC,EAAa,KAAMxB,EAAsB,aAAAza,CAA4B,CAAA,EAElG,CAAA,EACF,EACF,CACF,CAAA,CAEF,ECnOMyhB,GAA0B,CAAC,CAAE,MAAAv7B,EAAO,MAAAC,EAAO,SAAA1B,EAAU,QAAAV,KACzDpM,EAAA,IAAC,SAAA,CACC,UAAWI,GACT,4FACA0M,EACI,gCACA,4EACN,EACA,QAAS,IAAMV,EAAQoC,CAAK,EAC5B,gBAAe1B,EACf,KAAK,MAEJ,SAAAyB,CAAA,CACH,EAUWw7B,GAA+C,CAAC,CAC3D,KAAAva,EACA,UAAAE,EACA,YAAAsa,EACA,gBAAAC,EAAkB,CACpB,IAAM,CACJ,MAAMC,EAAc1a,EAAK,MAAM,EAAGya,CAAe,EAC3CE,EAAa3a,EAAK,MAAMya,CAAe,EAG7C,GADuBza,EAAK,UAAWyB,GAAQA,EAAI,QAAUvB,CAAS,GAChDua,GAAmBC,EAAY,OAAS,EAAG,CAC/D,MAAME,EAAkBD,EAAW,KAAMlZ,GAAQA,EAAI,QAAUvB,CAAS,EAExE,GAAI0a,EAAiB,CAEb,MAAAC,EAAgBF,EAAW,OAAQlZ,GAAQA,EAAI,QAAUmZ,EAAgB,KAAK,EAEtEC,EAAA,QAAQH,EAAY,CAAC,CAAC,EAEpC,MAAMI,EAAiB,CAAC,GAAGJ,EAAY,MAAM,CAAC,EAAGE,CAAe,EAG9D,OAAA9kC,EAAA,KAAC,MAAI,CAAA,UAAU,4EACb,SAAA,CAAAtF,MAAC,OAAI,UAAU,qDACZ,SAAesqC,EAAA,IAAKrZ,GACnBjxB,EAAA,IAAC8pC,GAAA,CAEC,MAAO7Y,EAAI,MACX,MAAOA,EAAI,MACX,SAAUA,EAAI,QAAUvB,EACxB,QAASsa,CAAA,EAJJ/Y,EAAI,KAMZ,CAAA,EACH,EAECoZ,EAAc,OAAS,GACtB/kC,EAAA,KAAC80B,GACC,CAAA,SAAA,CAACp6B,EAAA,IAAAs6B,GAAA,CAAoB,QAAO,GAC1B,SAACh1B,EAAAA,KAAAtE,EAAA,CAAO,QAAQ,QAAQ,KAAK,KAAK,UAAU,gBAC1C,SAAA,CAAChB,EAAAA,IAAAuqC,GAAA,CAAe,UAAU,cAAe,CAAA,EACxCvqC,EAAA,IAAA,OAAA,CAAK,UAAU,sBAAsB,SAAI,OAAA,CAAA,CAAA,CAC5C,CACF,CAAA,EACAA,EAAAA,IAAC66B,IAAoB,MAAM,MAAM,UAAU,OACxC,SAAAwP,EAAc,IAAKpZ,GAClBjxB,EAAA,IAACg7B,GAAA,CAEC,UAAW56B,GAAG,iBAAkB6wB,EAAI,QAAUvB,GAAa,0BAA0B,EACrF,QAAS,IAAMsa,EAAY/Y,EAAI,KAAK,EAEnC,SAAIA,EAAA,KAAA,EAJAA,EAAI,KAMZ,CAAA,EACH,CAAA,EACF,CAEJ,CAAA,CAAA,CAEJ,CACF,CAIE,OAAA3rB,EAAA,KAAC,MAAI,CAAA,UAAU,4EACb,SAAA,CAAAtF,MAAC,OAAI,UAAU,qDACZ,SAAYkqC,EAAA,IAAKjZ,GAChBjxB,EAAA,IAAC8pC,GAAA,CAEC,MAAO7Y,EAAI,MACX,MAAOA,EAAI,MACX,SAAUA,EAAI,QAAUvB,EACxB,QAASsa,CAAA,EAJJ/Y,EAAI,KAMZ,CAAA,EACH,EAECkZ,EAAW,OAAS,GACnB7kC,EAAA,KAAC80B,GACC,CAAA,SAAA,CAACp6B,EAAA,IAAAs6B,GAAA,CAAoB,QAAO,GAC1B,SAACh1B,EAAAA,KAAAtE,EAAA,CAAO,QAAQ,QAAQ,KAAK,KAAK,UAAU,gBAC1C,SAAA,CAAChB,EAAAA,IAAAuqC,GAAA,CAAe,UAAU,cAAe,CAAA,EACxCvqC,EAAA,IAAA,OAAA,CAAK,UAAU,sBAAsB,SAAI,OAAA,CAAA,CAAA,CAC5C,CACF,CAAA,EACAA,EAAAA,IAAC66B,IAAoB,MAAM,MAAM,UAAU,OACxC,SAAAsP,EAAW,IAAKlZ,GACfjxB,EAAA,IAACg7B,GAAA,CAEC,UAAW56B,GAAG,iBAAkB6wB,EAAI,QAAUvB,GAAa,0BAA0B,EACrF,QAAS,IAAMsa,EAAY/Y,EAAI,KAAK,EAEnC,SAAIA,EAAA,KAAA,EAJAA,EAAI,KAMZ,CAAA,EACH,CAAA,EACF,CAEJ,CAAA,CAAA,CAEJ,ECtIA,SAAwBuZ,IAAqB,CAEzC,aACK,MAAI,CAAA,UAAU,0FAEX,SAACllC,EAAA,KAAA,MAAA,CAAI,UAAU,6BAEX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yFACX,SAAA,CAACtF,EAAAA,IAAAypC,GAAA,CAAc,UAAU,wBAAyB,CAAA,EACjDzpC,EAAA,IAAA,OAAA,CAAK,UAAU,uCAAuC,SAAe,kBAAA,CAAA,EAC1E,EAEAsF,EAAAA,KAAC,KAAG,CAAA,UAAU,qDAAqD,SAAA,CAAA,cACnDtF,EAAA,IAAA,OAAA,CAAK,UAAU,iBAAiB,SAAO,UAAA,CAAA,EACvD,EAECA,EAAA,IAAA,IAAA,CAAE,UAAU,kCAAkC,SAE/C,mGAAA,CAAA,EACJ,EAGCA,MAAA,MAAA,CAAI,UAAU,4EACX,eAAC,MAAI,CAAA,UAAU,MACX,SAAAA,EAAA,IAAC,OAAI,UAAU,YAEX,SAACsF,OAAA,MAAA,CAAI,UAAU,qDACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA4U,GAAA,CAAa,UAAU,wBAAyB,CAAA,EAChD5U,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAAY,eAAA,CAAA,EAC3D,EAEAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,iDACX,SAAA,CAACtF,EAAAA,IAAAyqC,GAAA,CAAM,UAAU,SAAU,CAAA,EAC3BzqC,EAAAA,IAAC,QAAK,SAAwB,0BAAA,CAAA,CAAA,EAClC,CAAA,EACJ,QAEC6Q,GAAoB,EAAA,CAAA,EACzB,CAAA,CACJ,CACJ,CAAA,EACJ,CAAA,CACJ,CAAA,CACJ,CAAA,CAER,CClCA,MAAM65B,GAAwB,IAAM,CAG5B,KAAA,CAAE,QAAArgC,GAAY2P,KAEd2wB,EADSpmC,EAAapC,GAAqBA,EAAM,MAAM,MAAM,EACtC,KAAMqJ,GAAUA,EAAM,MAAQnB,CAAO,EAC5DugC,GAAgBD,GAAA,YAAAA,EAAe,aAAc,GAC7C,CAAE,WAAAxxB,GAAeE,KACjBY,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAEhBlJ,EAAY,CAChB,KAAMvC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,MAAA,EAE9B,CAACihB,EAAWC,CAAY,EAAIlwB,WAAS,OAAO,EAE5C+vB,EAAO,CACX,CAAE,MAAO,gBAAiB,MAAO,OAAQ,EACzC,CAAE,MAAO,mBAAoB,MAAO,UAAW,CAAA,EAI3CmB,EAAmBniB,GAAkB,CACzCmhB,EAAanhB,CAAK,CAAA,EAKlB,OAAAlJ,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAtF,EAAA,IAACkJ,GAAmB,EAAA,EACpBlJ,EAAA,IAAC,MAAI,CAAA,UAAU,gCACZ,SAAAmZ,QACE4vB,GAAe,CAAA,CAAA,EACb6B,EAQD,CAAC55B,EAAU,MAAQ,CAACA,EAAU,GAAMhR,MAACwqC,GAAmB,CAAA,CAAA,EAGxDllC,EAAA,KAAAwG,EAAA,SAAA,CAAA,SAAA,CAAA9L,MAAC6X,IAAO,MAAM,uBAAuB,KAAMgzB,GAAc,eAAgB,GAAM,EAC/E7qC,EAAAA,IAAC,MAAI,CAAA,UAAU,kCACb,SAAAA,EAAA,IAAC+pC,IAAW,KAAAva,EAAY,UAAAE,EAAsB,YAAaiB,CAAA,CAAiB,CAC9E,CAAA,EAIGrrB,EAAA,KAAA,UAAA,CAAQ,UAAU,OAChB,SAAA,CAAcoqB,IAAA,SACZ1vB,EAAAA,IAAA8qC,GAAA,CAAsB,UAAA95B,CAAsB,CAAA,EAE9C0e,IAAc,YACZ1vB,EAAAA,IAAA6pC,GAAA,CAAmB,UAAA74B,CAAsB,CAAA,CAAA,EAE9C,CAAA,CAAA,CAEJ,EAzBE1L,EAAAA,KAAAwG,EAAAA,SAAA,CAAA,SAAA,CAAA9L,EAAA,IAAC2pC,GAAA,CACC,SAAS,mBACT,QAASt/B,GAAW,GACpB,UAAW,CAAC4U,EAAUoC,EAAaP,IAAc,CAC/C,QAAQ,IAAI,0BAA0B7B,CAAQ,aAAaoC,CAAW,KAAKP,CAAS,GAAG,CACzF,CAAA,CAAG,EAAE,GAAC,CAAA,CAAA,CAsBd,CAAA,QACCvD,GAAc,EAAA,CACjB,CAAA,CAAA,CAEJ,EC9DA,SAAwBwtB,GAAgB,CACtC,KAAAzqB,EACA,cAAA0qB,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,KAAA+iB,EACA,WAAAC,EAAY,OAAAlzB,CACd,EAAyB,CACvB,KAAM,CAACyX,EAAaC,CAAc,EAAIpwB,WAAS,CAAC,EAC1C,CAACk9B,EAAYC,CAAa,EAAIn9B,EAAA,SAA4D,CAAE,CAAA,EAC5FywB,EAAckb,GAAc,EAC5BvO,EAAe,GAEfnU,EAAiB,IACjBL,EACEgjB,EACK,2BAEF,4BAEF,gBAGHC,EAASp6B,EAAAA,QAAQ,IAAM,CAC3B,GAAI,CAAC,MAAM,QAAQoP,CAAI,EACb,eAAA,MAAM,wBAAyBA,CAAI,EACpC,GAGH,MAAAirB,EAAgBC,GACL,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EACpF,OAAO,SAASA,CAAW,EAAI,CAAC,EAG1CC,MAAgB,IACjB,OAAAnrB,EAAA,QAAS2T,GAAQ,CACd,MAAAyX,EAAczX,EAAIiX,CAAc,EAClC,MAAM,QAAQQ,CAAW,GACfA,EAAA,QAAS3hB,GAAU,CAC7B,GAAIA,GAAA,MAAAA,EAAO,MAAO,CAChB,MAAM2b,EAAO3b,EAAM,MAAM,MAAM,EAAG,CAAC,EAC7B4hB,EAAW5hB,EAAM,MAAM,MAAM,CAAC,EACpC0hB,EAAU,IAAI,GAAGF,EAAaI,CAAQ,CAAC,IAAIjG,CAAI,EAAE,CACnD,CAAA,CACD,CACH,CACD,EACM,MAAM,KAAK+F,CAAS,EAAE,QAAQ,CAAA,EACpC,CAACnrB,EAAM4qB,CAAc,CAAC,EAEnBU,EAAU16B,EAAAA,QAAQ,IAAM,CAC5B,MAAMk6B,EAA0D,CAAA,EAC3D,OAAA9qB,EAAA,QAAQ,CAACrR,EAAG48B,IAAc,CACdV,EAAA,QAAQ,CAACl8B,EAAG68B,IAAgB,CACzCV,EAAK,KAAK,CAAE,UAAAS,EAAW,YAAAC,CAAa,CAAA,CAAA,CACrC,CAAA,CACF,EACMV,CAAA,EACN,CAAC9qB,EAAM6qB,CAAc,CAAC,EAEnB9L,EAAe,IAAM,CACzBzC,EAAemP,GAAa,CAAC,GAAGA,EAAU,GAAGH,EAAQ,MAAMG,EAAS,OAAQA,EAAS,OAASlP,CAAY,CAAC,CAAC,CAAA,EAG9Gh9B,EAAAA,UAAU,IAAM,CACVwoB,GACFuU,EAAcgP,EAAQ,MAAM,EAAG/O,CAAY,CAAC,CAC9C,EACC,CAACxU,EAAcujB,CAAO,CAAC,EAEpB,MAAArM,EAAgBnc,GAAkD,CACtE,KAAM,CAAE,UAAA4oB,EAAW,aAAAC,EAAc,aAAAC,CAAA,EAAiB9oB,EAAM,cACpD6oB,EAAeD,GAAaE,EAAe,KAChC7M,GACf,EAGII,EAAcvuB,EAAAA,QAAQ,IACtBmX,EACKsU,EAEFiP,EAAQ,OAAOhc,EAAc,GAAKM,EAAaN,EAAcM,CAAW,EAC9E,CAAC7H,EAAcujB,EAASjP,EAAY/M,EAAaM,CAAW,CAAC,EAE1Dic,EAAaj7B,EAAAA,QAAQ,IAAM,CAC/B,IAAIk7B,EAAgB,EAClBC,EAAgB,EAChBC,EAAe,EACbtiB,EAAa,EACfuiB,EAAoB,EACpBC,EAAa,EACXC,EAAY,EACdC,GAAwB,EACxBC,EAAY,EAET,OAAArsB,EAAA,QAAS2T,GAAQ,CAChB,OAAOA,EAAI,gBAAgB,GAAM,UAAY,OAAOA,EAAI,gBAAgB,GAAM,WAC/DmY,GAAA,OAAOnY,EAAI,gBAAgB,CAAC,EAC5BoY,GAAA,OAAOpY,EAAI,gBAAgB,CAAC,EAC7CqY,KAGE,OAAOrY,EAAI,aAAa,GAAM,UAAY,OAAOA,EAAI,qBAAqB,GAAM,WACpEjK,GAAA,OAAOiK,EAAI,aAAa,CAAC,EAClBsY,GAAA,OAAOtY,EAAI,qBAAqB,CAAC,EACtDuY,KAGE,OAAOvY,EAAI,YAAY,GAAM,UAAY,OAAOA,EAAI,oBAAoB,GAAM,WACnEwY,GAAA,OAAOxY,EAAI,YAAY,CAAC,EACZyY,IAAA,OAAOzY,EAAI,oBAAoB,CAAC,EACzD0Y,IACF,CACD,EAEM,CACL,YAAaL,EAAe,EAAIF,EAAgBE,EAAe,EAC/D,YAAaA,EAAe,EAAID,EAAgBC,EAAe,EAC/D,SAAUE,EAAa,EAAIxiB,EAAawiB,EAAa,EACrD,gBAAiBA,EAAa,EAAID,EAAoBC,EAAa,EACnE,QAASG,EAAY,EAAIF,EAAYE,EAAY,EACjD,oBAAqBA,EAAY,EAAID,GAAwBC,EAAY,CAAA,CAC3E,EACC,CAACrsB,CAAI,CAAC,EAETzgB,EAAAA,UAAU,IAAM,CACTwoB,GACHwH,EAAe,CAAC,CAClB,EACC,CAACxH,CAAY,CAAC,EAEjB,MAAMukB,EAAiB,CAAC,CACtB,SAAAC,EACA,SAAAC,EACA,MAAAC,EACA,aAAAC,EACA,KAAAC,EACA,iBAAAC,CAAA,IAQI,CACJ,MAAMC,EAAiBN,IAAa,QAAaA,GAAYV,EAAW,YAClEiB,GAAmBN,IAAa,QAAaA,GAAYX,EAAW,YACpEkB,EAAcN,IAAU,QAAaA,GAASZ,EAAW,SACzDmB,EAAaN,IAAiB,QAAaA,GAAgBb,EAAW,gBACtEoB,EAAaN,IAAS,QAAaA,GAAQd,EAAW,QACtDqB,EAAyBN,IAAqB,QAAaA,GAAoBf,EAAW,oBAGhG,OAAIgB,GAAkBC,GACb,CACL,GAAI3kC,GAAO,QAAQ,GACnB,KAAMA,GAAO,QAAQ,KACrB,UAAW,WACX,iBAAkB,KAClB,oBAAqB,IAAA,EAGrB4kC,GAAeC,EACV,CACL,GAAI7kC,GAAO,QAAQ,GACnB,KAAMA,GAAO,QAAQ,KACrB,UAAW,WACX,eAAgB,KAChB,cAAe,IAAA,EAGf8kC,GAAcC,EACT,CACL,GAAI/kC,GAAO,QAAQ,GACnB,KAAMA,GAAO,QAAQ,KACrB,UAAW,WACX,cAAe,KACf,eAAgB,IAAA,EAIhB0kC,GAAkB,CAACC,GACd,CACL,GAAI3kC,GAAO,QAAQ,GACnB,KAAMA,GAAO,QAAQ,KACrB,UAAW,aACX,iBAAkB,KAClB,oBAAqB,MAAA,EAGrB4kC,GAAe,CAACC,EACX,CACL,GAAI7kC,GAAO,QAAQ,GACnB,KAAMA,GAAO,QAAQ,KACrB,UAAW,aACX,eAAgB,KAChB,cAAe,MAAA,EAGf8kC,GAAc,CAACC,EACV,CACL,GAAI/kC,GAAO,QAAQ,GACnB,KAAMA,GAAO,QAAQ,KACrB,UAAW,aACX,cAAe,KACf,eAAgB,MAAA,EAIhB,CAAC0kC,GAAkBC,GACd,CACL,GAAI3kC,GAAO,QAAQ,GACnB,KAAMA,GAAO,QAAQ,KACrB,UAAW,eACX,iBAAkB,OAClB,oBAAqB,IAAA,EAGrB,CAAC4kC,GAAeC,EACX,CACL,GAAI7kC,GAAO,QAAQ,GACnB,KAAMA,GAAO,QAAQ,KACrB,UAAW,eACX,eAAgB,OAChB,cAAe,IAAA,EAGf,CAAC8kC,GAAcC,EACV,CACL,GAAI/kC,GAAO,QAAQ,GACnB,KAAMA,GAAO,QAAQ,KACrB,UAAW,eACX,cAAe,OACf,eAAgB,IAAA,EAIb,CACL,GAAIA,GAAO,OAAO,GAClB,KAAMA,GAAO,OAAO,KACpB,UAAW,WACX,iBAAkB,OAClB,oBAAqB,OACrB,eAAgB,OAChB,cAAe,OACf,cAAe,OACf,eAAgB,MAAA,CAClB,EAGIglC,EAAmBC,GAAsB,CAC7C,OAAQA,EAAW,CACjB,IAAK,KACI,OAAA1tC,MAAC8zB,GAAQ,CAAA,UAAU,UAAU,MAAO,CAAE,MAAOrrB,GAAO,QAAQ,IAAA,CAAQ,CAAA,EAC7E,IAAK,OACI,OAAAzI,MAAC+zB,GAAU,CAAA,UAAU,UAAU,MAAO,CAAE,MAAOtrB,GAAO,OAAO,IAAA,CAAQ,CAAA,EAC9E,QACS,OAAAzI,MAAC2tC,GAAM,CAAA,UAAU,UAAU,MAAO,CAAE,MAAOllC,GAAO,KAAK,KAAA,CAAS,CAAA,CAC3E,CAAA,EAGI+rB,EAAa,CAAChmB,EAAwB7N,IAA2D,CACjG,GAAA,OAAO6N,GAAU,SACnB,OAAQ7N,EAAM,CACZ,IAAK,QACH,OAAO,KAAK,MAAM6N,CAAK,EAAE,eAAe2J,CAAM,EAChD,IAAK,aACI,MAAA,GAAG,OAAO,WAAW3J,EAAM,eAAe2J,CAAM,CAAC,EAAE,QAAQ,CAAC,CAAC,IACtE,IAAK,WACH,OAAO,KAAK,MAAM3J,CAAK,EAAE,eAAe2J,CAAM,EAChD,QACS,OAAA,OAAO,WAAW3J,EAAM,eAAe2J,CAAM,CAAC,EAAE,QAAQ,CAAC,CACpE,CAEK,OAAA3J,CAAA,EAGHo/B,EAAkB,CAACrkB,EAAoCra,IAAmB,CAC9E,GAAI,CAACqa,EAED,OAAAvpB,EAAA,IAAC,KAAA,CACC,UAAU,6GACV,MAAO,CAAE,MAAOyI,GAAO,KAAK,KAAM,EAElC,SAAAzI,EAAA,IAAC,QAAK,MAAO,CAAE,MAAOyI,GAAO,KAAK,KAAM,EAAG,SAAC,GAAA,CAAA,CAAA,CAAA,EAK5C,MAAA+F,EAAQ+a,EAAUra,CAAM,EAC1B,IAAA2+B,EAAa,CAAE,GAAI,QAAS,KAAMplC,GAAO,KAAK,QAAS,UAAW,IAClEqlC,EAAqB,GAEzB,OACG5+B,IAAW,YAAcA,IAAW,eACrC,OAAOqa,EAAU,UAAgB,UACjC,OAAOA,EAAU,YAAY,GAAM,WAMtBskB,EAJOjB,EAAe,CACjC,SAAU,OAAOrjB,EAAU,QAAW,EACtC,SAAU,OAAOA,EAAU,YAAY,CAAC,CAAA,CACzC,IAOAra,IAAW,SAAWA,IAAW,kBAClC,OAAOqa,EAAU,OAAa,UAC9B,OAAOA,EAAU,eAAe,GAAM,WAMzBskB,EAJOjB,EAAe,CACjC,MAAO,OAAOrjB,EAAU,KAAQ,EAChC,aAAc,OAAOA,EAAU,eAAe,CAAC,CAAA,CAChD,IAKAra,IAAW,QAAUA,IAAW,sBACjC,OAAOqa,EAAU,MAAY,UAC7B,OAAOA,EAAU,mBAAmB,GAAM,WAM7BskB,EAJOjB,EAAe,CACjC,KAAM,OAAOrjB,EAAU,IAAO,EAC9B,iBAAkB,OAAOA,EAAU,mBAAmB,CAAC,CAAA,CACxD,GAKDjkB,EAAA,KAAC,KAAA,CACC,UAAU,oGACV,MAAO,CACL,gBAAiBuoC,EAAW,GAC5B,MAAOA,EAAW,KAClB,WAAY,oCACZ,WAAY,KACd,EAEA,SAAA,CAACvoC,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACZ,SAAA,CAAAwoC,QACA,OACE,CAAA,SAAAtZ,EACChmB,EACAU,IAAW,WACP,WACAA,EAAO,YAAc,EAAA,SAAS,MAAM,EAClC,aACAA,EAAO,cAAc,SAAS,OAAO,GAAKA,EAAO,YAAc,EAAA,SAAS,MAAM,EAC5E,QACA,SAAA,EAEZ,CAAA,EACF,EACCA,IAAW,cAAgBqa,EAAU,YAAiB,QACrDvpB,EAAA,IAAC,MAAA,CACC,UAAU,eACV,MAAO,CAAE,MAAOyI,GAAO,KAAK,SAAU,EACtC,uBAAc8gB,EAAU,UAAa,eAAepR,CAAM,GAAK,CAAC,EAAA,CAAG,EAEtEjJ,IAAW,QAAUqa,EAAU,SAAc,QAC5CvpB,EAAA,IAAC,MAAA,CACC,UAAU,eACV,MAAO,CAAE,MAAOyI,GAAO,KAAK,SAAU,EACtC,SAAW,WAAA8gB,EAAU,QAAa,CAAC,EAAA,CAAG,EAEzCra,IAAW,qBAAuBqa,EAAU,iBAAiB,IAAM,QAClEvpB,EAAA,IAAC,MAAA,CACC,UAAU,eACV,MAAO,CAAE,MAAOyI,GAAO,KAAK,SAAU,EACtC,wBAAe8gB,EAAU,iBAAiB,EAAE,eAAepR,CAAM,GAAK,CAAC,GAAA,CAAI,EAE9EjJ,IAAW,iBAAmBqa,EAAU,2BAA2B,IAAM,QACxEvpB,EAAA,IAAC,MAAA,CACC,UAAU,eACV,MAAO,CAAE,MAAOyI,GAAO,KAAK,SAAU,EACtC,iBAAQ8gB,EAAU,2BAA2B,EAAE,eAAepR,CAAM,GAAK,CAAC,EAAA,CAAG,CAAA,CAAA,CAAA,CAEnF,EAKE41B,EAAoB,CAAC9Z,EAAcJ,EAAgBma,EAAuBC,IAAwB,CAChG,MAAAz/B,EAAQylB,EAAIJ,CAAM,EAEpB,GAAA,OAAOrlB,GAAU,SAEjB,OAAAxO,EAAA,IAAC,KAAA,CACC,UAAU,iGACV,MAAO,CAAE,KAAM,GAAG,IAAYiuC,EAAc,GAAG,IAAK,EAEnD,SAAA,EAAA,CAAA,EAKH,IAAAJ,EAAa,CAAE,GAAI,QAAS,KAAMplC,GAAO,KAAK,QAAS,UAAW,IAClEqlC,EAAqB,GAGzB,GAAIE,GAAiBna,IACfA,EAAO,SAAS,UAAU,GAAKA,EAAO,SAAS,MAAM,GAAG,CACpD,MAAAgZ,EAAW5Y,EAAI,gBAAgB,EAC/B6Y,EAAW7Y,EAAI,gBAAgB,EAC/Bia,GAActB,EAAe,CAAE,SAAAC,EAAU,SAAAC,CAAU,CAAA,EAC5Ce,EAAAK,GAETF,EAAc,YAAY,IAAM,WAClCF,EAAqBI,GAAY,kBAAoB,GAC5CF,EAAc,YAAY,IAAM,eACzCF,EAAqBI,GAAY,qBAAuB,GAE5D,CAGF,GAAIF,GAAiBna,IACfA,EAAO,SAAS,OAAO,GAAKA,EAAO,SAAS,MAAM,GAAG,CACjD,MAAAkZ,EAAQ9Y,EAAI,aAAa,EACzB+Y,EAAe/Y,EAAI,qBAAqB,EACxCia,GAActB,EAAe,CAAE,MAAAG,EAAO,aAAAC,CAAc,CAAA,EAC7Ca,EAAAK,GAETF,EAAc,YAAY,IAAM,QAClCF,EAAqBI,GAAY,gBAAkB,GAC1CF,EAAc,YAAY,IAAM,kBACzCF,EAAqBI,GAAY,eAAiB,GAEtD,CAGF,GAAIF,GAAiBna,IACfA,EAAO,SAAS,MAAM,GAAKA,EAAO,SAAS,oBAAoB,GAAG,CAC9D,MAAAoZ,EAAOhZ,EAAI,YAAY,EACvBiZ,EAAmBjZ,EAAI,oBAAoB,EAC3Cia,GAActB,EAAe,CAAE,KAAAK,EAAM,iBAAAC,CAAkB,CAAA,EAChDW,EAAAK,GAETF,EAAc,YAAY,IAAM,OAClCF,EAAqBI,GAAY,eAAiB,GACzCF,EAAc,YAAY,IAAM,sBACzCF,EAAqBI,GAAY,gBAAkB,GAEvD,CAGI,MAAAhzB,GAAiB,OAAO+Y,EAAI,iBAAiB,GAAM,SAAWA,EAAI,iBAAiB,EAAE,eAAe9b,CAAM,EAAI,KAC9Gg2B,EAAiB,OAAOla,EAAI,mBAAmB,GAAM,SAAWA,EAAI,mBAAmB,EAAE,eAAe9b,CAAM,EAAI,KAClHi2B,EAAW,OAAOna,EAAI,WAAW,GAAM,SAAWA,EAAI,WAAW,EAAE,eAAe9b,CAAM,EAAI,KAGhG,OAAAnY,EAAA,IAAC,KAAA,CACC,UAAU,wFACV,MAAO,CACL,KAAM,GAAG,IAAYiuC,EAAc,GAAG,KACtC,gBAAiBJ,EAAW,GAC5B,MAAOA,EAAW,KAClB,WAAY,mCACd,EAEA,SAAcG,EAAA,YAAkB,IAAA,QAAUna,IAAW,aAClD7zB,EAAAA,IAAA,MAAA,CAAI,UAAU,gBACb,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,4BACZ,SAAA,CAAAwoC,GAAsBL,EAAgBK,CAAkB,EACxD9tC,EAAA,IAAA,OAAA,CAAM,SAAWw0B,EAAAhmB,EAAO,OAAO,EAAE,CACpC,CAAA,CAAA,CAAA,CACF,EACEw/B,EAAc,YAAY,IAAM,qBAAuBna,IAAW,qBACpEvuB,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4BACZ,SAAA,CAAAwoC,GAAsBL,EAAgBK,CAAkB,EACxD9tC,EAAA,IAAA,OAAA,CAAM,SAAWw0B,EAAAhmB,CAAK,CAAE,CAAA,CAAA,EAC3B,EACC2/B,GACE7oC,EAAAA,KAAA,OAAA,CAAK,UAAU,iBAAiB,MAAO,CAAE,MAAOmD,GAAO,KAAK,KAAA,EAAS,SAAA,CAAA,sBAChD0lC,CAAA,EACtB,CAAA,CAAA,CAEJ,EACEH,EAAc,YAAY,IAAM,YAAcna,EAAO,SAAS,UAAU,EAC1EvuB,EAAA,KAAC,MAAI,CAAA,UAAU,4BACZ,SAAA,CAAAwoC,GAAsBL,EAAgBK,CAAkB,EACxD9tC,EAAA,IAAA,OAAA,CAAM,SAAWw0B,EAAAhmB,EAAO,UAAU,EAAE,CAAA,CAAA,CACvC,EACEw/B,EAAc,YAAY,IAAM,cAAgBna,EAAO,SAAS,MAAM,EACxEvuB,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4BACZ,SAAA,CAAAwoC,GAAsBL,EAAgBK,CAAkB,EACxD9tC,EAAA,IAAA,OAAA,CAAM,SAAWw0B,EAAAhmB,EAAO,YAAY,EAAE,CAAA,EACzC,EACC0M,IACE5V,EAAAA,KAAA,OAAA,CAAK,UAAU,iBAAiB,MAAO,CAAE,MAAOmD,GAAO,KAAK,KAAA,EAAS,SAAA,CAAA,oBAClDyS,EAAA,EACpB,CAAA,CAAA,CAEJ,EACE8yB,EAAc,YAAY,IAAM,SAAWna,EAAO,SAAS,aAAa,EAC1EvuB,EAAA,KAAC,MAAI,CAAA,UAAU,4BACZ,SAAA,CAAAwoC,GAAsBL,EAAgBK,CAAkB,EACxD9tC,EAAA,IAAA,OAAA,CAAM,SAAWw0B,EAAAhmB,EAAO,OAAO,EAAE,CAAA,CAAA,CACpC,EACEw/B,EAAc,YAAY,IAAM,iBAAmBna,EAAO,SAAS,qBAAqB,EAC1FvuB,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4BACZ,SAAA,CAAAwoC,GAAsBL,EAAgBK,CAAkB,EACxD9tC,EAAA,IAAA,OAAA,CAAM,SAAWw0B,EAAAhmB,CAAK,CAAE,CAAA,CAAA,EAC3B,EACC4/B,GACE9oC,EAAAA,KAAA,OAAA,CAAK,UAAU,iBAAiB,MAAO,CAAE,MAAOmD,GAAO,KAAK,KAAA,EAAS,SAAA,CAAA,QAC9D2lC,CAAA,EACR,CAAA,CAAA,CAEJ,EAEA,EAAA,CAAA,CAEJ,EAIEC,EAAkB,CAACpa,EAAc6X,IAAwB,CACvD,MAAA58B,EAASi8B,EAAeW,CAAW,EAGrC,IAAA+B,EAAa,CAAE,GAAI,QAAS,KAAMplC,GAAO,KAAK,QAAS,UAAW,IAClEqlC,EAAqB,GAEzB,GAAI7C,EAAkB,CACd,MAAA4B,EAAW5Y,EAAI,gBAAgB,EAC/B6Y,EAAW7Y,EAAI,gBAAgB,EAC/B8Y,GAAQ9Y,EAAI,aAAa,EACzB+Y,EAAe/Y,EAAI,qBAAqB,EACxCgZ,EAAOhZ,EAAI,YAAY,EACvBiZ,EAAmBjZ,EAAI,oBAAoB,EAE7C,GAAA/kB,IAAW,YAAcA,IAAW,aAAc,CACpD,MAAMg/B,EAActB,EAAe,CAAE,SAAAC,EAAU,SAAAC,CAAU,CAAA,EAC5Ce,EAAAK,EAETh/B,IAAW,WACb4+B,EAAqBI,EAAY,kBAAoB,GAC5Ch/B,IAAW,eACpB4+B,EAAqBI,EAAY,qBAAuB,GAEjD,SAAAh/B,IAAW,SAAWA,IAAW,gBAAiB,CAC3D,MAAMg/B,EAActB,EAAe,CAAE,MAAAG,GAAO,aAAAC,CAAc,CAAA,EAC7Ca,EAAAK,EAETh/B,IAAW,QACb4+B,EAAqBI,EAAY,gBAAkB,GAC1Ch/B,IAAW,kBACpB4+B,EAAqBI,EAAY,eAAiB,GAE3C,SAAAh/B,IAAW,QAAUA,IAAW,oBAAqB,CAC9D,MAAMg/B,EAActB,EAAe,CAAE,KAAAK,EAAM,iBAAAC,CAAkB,CAAA,EAChDW,EAAAK,EAETh/B,IAAW,OACb4+B,EAAqBI,EAAY,eAAiB,GACzCh/B,IAAW,sBACpB4+B,EAAqBI,EAAY,gBAAkB,GAEvD,CACF,CAGE,OAAA5oC,EAAA,KAAC,KAA2C,CAAA,UAAU,6EACpD,SAAA,CAAAtF,EAAA,IAAC,KAAA,CACC,UAAU,uGACV,MAAO,CACL,gBAAiB6tC,EAAW,GAC5B,MAAOA,EAAW,KAClB,WAAY,oCACZ,cAAe,SACjB,EAEC,aAAgB,EACb,OAAO5Z,EAAI+W,CAAa,GAAM,UAAY,OAAO/W,EAAI+W,CAAa,GAAM,SACtExW,EAAWP,EAAI+W,CAAa,CAAC,EAC7B,GACF,IAAA,CACN,EACAhrC,EAAA,IAAC,KAAA,CACC,UAAU,iHACV,MAAO,CACL,gBAAiB6tC,EAAW,GAC5B,MAAOA,EAAW,KAClB,WAAY,mCACd,EAEA,SAAAvoC,EAAA,KAAC,MAAI,CAAA,UAAU,4BACZ,SAAA,CAAAwoC,GAAsBL,EAAgBK,CAAkB,EACzD9tC,EAAAA,IAAC,QAAM,SAAOkP,CAAA,CAAA,CAAA,EAChB,CAAA,CACF,EACC+7B,GAAA,YAAAA,EAAkB,IAAI,CAACpX,EAAQ3wB,IAAU6qC,EAAkB9Z,EAAKJ,EAAQ3kB,EAAQhM,CAAK,GACrFooC,EAAO,IAAKvhB,GAAU,CACf,MAAAukB,EAAkBC,IACP,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EACpF,QAAQA,EAAS,EAAI,EAE/B,CAACA,GAAW7I,CAAI,EAAI3b,EAAM,MAAM,GAAG,EACnC4hB,EAAW2C,EAAeC,EAAS,EACnCC,EAAc,GAAG9I,CAAI,GAAGiG,EAAS,SAAW,EAAA,SAAS,EAAG,GAAG,CAAC,GAE5DpiB,EAAa0K,EAAIiX,CAAc,EAAoB,KAAMliB,IAAMA,GAAE,QAAUwlB,CAAW,EACrF,OAAAZ,EAAgBrkB,EAAWra,CAAM,CAAA,CACzC,CAAA,CAAA,EAzCM,GAAG+kB,EAAI+W,CAAa,CAAC,IAAI97B,CAAM,EA0CxC,CAAA,EAIEu/B,EAAY7C,EAAQ,OACpBxY,EAAa,KAAK,KAAKqb,EAAYve,CAAW,EAC9CyP,EAAYC,GAAiB,CAC3B,MAAAC,EAAa,KAAK,IAAI,EAAG,KAAK,IAAID,EAAMxM,CAAU,CAAC,EACzDvD,EAAegQ,CAAU,CAAA,EAGrB6O,EAAqB,CAAC7a,EAAgB3wB,IAAkB,CAC5D,IAAIyrC,EAAiB,GACrB,OAAI9a,IAAW,iBACb8a,EAAiB,SAAS,KAAK,MAAMxC,EAAW,WAAW,EAAE,gBAAgB,IACpEtY,IAAW,iBACpB8a,EAAiB,SAASxC,EAAW,YAAY,QAAQ,CAAC,CAAC,KAClDtY,IAAW,cACpB8a,EAAiB,SAAS,KAAK,MAAMxC,EAAW,QAAQ,EAAE,gBAAgB,IACjEtY,IAAW,sBACpB8a,EAAiB,SAASxC,EAAW,gBAAgB,QAAQ,CAAC,CAAC,IACtDtY,IAAW,aACpB8a,EAAiB,SAAS,KAAK,MAAMxC,EAAW,OAAO,EAAE,gBAAgB,IAChEtY,IAAW,uBACpB8a,EAAiB,SAASxC,EAAW,oBAAoB,QAAQ,CAAC,CAAC,KAInEnsC,EAAA,IAAC,KAAA,CAEC,UAAU,iIACV,MAAO,CACL,KAAM,GAAG,IAAYkD,EAAQ,GAAG,KAChC,WAAY,+CACZ,MAAOuF,GAAO,KAAK,QACnB,cAAe,UACf,aAAc,aAAaA,GAAO,OAAO,IAAI,EAC/C,EAEA,SAAAnD,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAtF,EAAAA,IAAC,QAAM,SAAO6zB,CAAA,CAAA,EACb8a,GACC3uC,EAAAA,IAAC,OAAK,CAAA,UAAU,6BAA6B,MAAO,CAAE,MAAOyI,GAAO,KAAK,SAAU,EAChF,SACHkmC,CAAA,CAAA,CAAA,EAEJ,CAAA,EAjBK9a,CAAA,CAkBP,EAKF,OAAAvuB,EAAA,KAAC,MAAA,CACC,GAAG,mBACH,UAAU,6FACV,MAAO,CACL,UAAW,wEACb,EAEA,SAAA,CAAAtF,EAAA,IAAC,MAAA,CACC,UAAW,4BAA4B0oB,EAAA,CAAgB,kBACvD,SAAUL,EAAekX,EAAe,OAExC,SAAAj6B,EAAA,KAAC,QAAM,CAAA,UAAU,oBACf,SAAA,CAACtF,EAAA,IAAA,QAAA,CACC,gBAAC,KACC,CAAA,SAAA,CAAAA,EAAA,IAAC,KAAA,CACC,UAAU,wIACV,MAAO,CACL,WAAYyI,GAAO,WAAW,eAC9B,MAAOA,GAAO,KAAK,QACnB,cAAe,UACf,aAAc,aAAaA,GAAO,OAAO,IAAI,EAC/C,EAEC,SAAAuiC,CAAA,CACH,EACAhrC,EAAA,IAAC,KAAA,CACC,UAAU,8IACV,MAAO,CACL,WAAYyI,GAAO,WAAW,eAC9B,MAAOA,GAAO,KAAK,QACnB,cAAe,UACf,aAAc,aAAaA,GAAO,OAAO,IAAI,EAC/C,EACD,SAAA,QAAA,CAED,EACCwiC,GAAA,YAAAA,EAAkB,IAAI,CAACpX,EAAQ3wB,IAAUwrC,EAAmB7a,EAAQ3wB,CAAK,GACzEooC,EAAO,IAAKvhB,GACX/pB,EAAA,IAAC,KAAA,CAEC,UAAU,0IACV,MAAO,CACL,WAAY,+CACZ,MAAOyI,GAAO,KAAK,QACnB,cAAe,UACf,aAAc,aAAaA,GAAO,OAAO,IAAI,EAC/C,EAEC,SAAAshB,CAAA,EATIA,CAAA,CAWR,CAAA,CAAA,CACH,CACF,CAAA,EACC/pB,EAAAA,IAAA,QAAA,CAAM,UAAU,4BACd,SAAYy/B,EAAA,OAAS,EACpBA,EAAY,IAAI,CAAC,CAAE,UAAAoM,EAAW,YAAAC,MAC5B,QAAQ,IAAI,qCAAqCD,CAAS,iBAAiBC,CAAW,EAAE,EACpFD,EAAYvrB,EAAK,QAAUwrB,EAAcX,EAAe,OACnDkD,EAAgB/tB,EAAKurB,CAAS,EAAGC,CAAW,GAErD,QAAQ,KAAK,mCAAmCD,CAAS,iBAAiBC,CAAW,EAAE,EAChF,MACR,EAED9rC,EAAA,IAAC,KACC,CAAA,SAAAA,EAAA,IAAC,KAAA,CACC,QAAS,IAAKirC,GAAA,YAAAA,EAAkB,SAAU,GAAKK,EAAO,OACtD,UAAU,gCACX,SAAA,oBAAA,GAGH,CAEJ,CAAA,CAAA,EACF,CAAA,CACF,EAEC,CAACjjB,GACA/iB,EAAA,KAAC,MAAA,CACC,UAAU,0EACV,MAAO,CAAE,WAAY,4CAA6C,EAElE,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBAAsB,MAAO,CAAE,MAAOmD,GAAO,KAAK,SAAA,EAAa,SAAA,CAAA,YAClEmnB,EAAc,GAAKM,EAAc,EAAE,IAAE,KAAK,IAAIN,EAAcM,EAAaue,CAAS,EAAE,MAAI,IACjGA,EAAU,OAAA,EACb,EACAnpC,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAtF,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,UAAU,6BACV,MAAO,CACL,YAAayH,GAAO,OAAO,KAC3B,MAAOA,GAAO,QAAQ,KACtB,WAAY,QACZ,UAAW,6BACX,aAAc,MACd,WAAY,gBACd,EACA,QAAS,IAAMk3B,EAAS,CAAC,EACzB,SAAU/P,IAAgB,EAE1B,SAAA5vB,EAAAA,IAAC0gC,GAAa,CAAA,UAAU,SAAU,CAAA,CAAA,CACpC,EACA1gC,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,UAAU,cACV,MAAO,CACL,YAAayH,GAAO,OAAO,KAC3B,MAAOA,GAAO,QAAQ,KACtB,WAAY,QACZ,UAAW,6BACX,aAAc,MACd,WAAY,gBACd,EACA,QAAS,IAAMk3B,EAAS/P,EAAc,CAAC,EACvC,SAAUA,IAAgB,EAE1B,SAAA5vB,EAAAA,IAACiL,GAAY,CAAA,UAAU,SAAU,CAAA,CAAA,CACnC,EACA3F,EAAA,KAAC,MAAA,CACC,UAAU,4DACV,MAAO,CAAE,MAAOmD,GAAO,KAAK,OAAQ,EACrC,SAAA,CAAA,QACOmnB,EAAY,OAAKwD,CAAA,CAAA,CACzB,EACApzB,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,UAAU,cACV,MAAO,CACL,YAAayH,GAAO,OAAO,KAC3B,MAAOA,GAAO,QAAQ,KACtB,WAAY,QACZ,UAAW,6BACX,aAAc,MACd,WAAY,gBACd,EACA,QAAS,IAAMk3B,EAAS/P,EAAc,CAAC,EACvC,SAAUA,IAAgBwD,EAE1B,SAAApzB,EAAAA,IAACkL,GAAa,CAAA,UAAU,SAAU,CAAA,CAAA,CACpC,EACAlL,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,UAAU,6BACV,MAAO,CACL,YAAayH,GAAO,OAAO,KAC3B,MAAOA,GAAO,QAAQ,KACtB,WAAY,QACZ,UAAW,6BACX,aAAc,MACd,WAAY,gBACd,EACA,QAAS,IAAMk3B,EAASvM,CAAU,EAClC,SAAUxD,IAAgBwD,EAE1B,SAAApzB,EAAAA,IAAC2gC,GAAc,CAAA,UAAU,SAAU,CAAA,CAAA,CACrC,CAAA,EACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAIR,CCx0BA,MAAMx9B,GAAuC,CAAA,EAEvCyrC,GAAyBvrC,GAAY,CACzC,KAAM,oBAAA,aACNF,GACA,SAAU,CACR,UAAW,CACThB,EACAC,IAKG,CACH,KAAM,CAAE,YAAAyU,EAAa,OAAAgd,EAAQ,OAAA+O,CAAA,EAAWxgC,EAAO,QAG1CD,EAAM0U,CAAW,IACd1U,EAAA0U,CAAW,EAAI,IAInB,KAAK,UAAU1U,EAAM0U,CAAW,EAAEgd,CAAM,CAAC,IAAM,KAAK,UAAU+O,CAAM,IAChEzgC,EAAA0U,CAAW,EAAEgd,CAAM,EAAI+O,EAEjC,EAEA,aAAc,CAACzgC,EAAOC,IAAkC,CACtD,MAAMyU,EAAczU,EAAO,QAEvB,OAAO,KAAKD,EAAM0U,CAAW,GAAK,EAAE,EAAE,OAAS,IAC3C1U,EAAA0U,CAAW,EAAI,GAEzB,CACF,CACF,CAAC,EAEY,CAAE,UAAAg4B,GAAW,aAAAC,IAAiBF,GAAuB,QACnDG,GAAAH,GAAuB,QCxChCI,GAAqB,CACzB,iBACA,gBACA,aACA,oBACF,EAcA,SAAwBC,GAAkB,CACxC,YAAAp4B,EACA,iBAAAq4B,EAAmBF,EACrB,EAA2B,CACzB,MAAM/sC,EAAWuC,KAGX8yB,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,CAAA,EAGrC,CAACs4B,EAAgBC,CAAiB,EAAI3vC,EAA2B,SAAAyvC,EAAiB,CAAC,CAAC,EACpF,CAACG,EAAUC,CAAW,EAAI7vC,WAAiB,GAAG,EAC9C,CAAC+O,EAAO+gC,CAAQ,EAAI9vC,EAAAA,SAA6B,MAAS,EAC1D,CAAC+vC,EAAcC,CAAe,EAAIhwC,WAAkB,EAAK,EAEzDiwC,EAAkB,IAAM,CAC5B,GAAIlhC,IAAU,QAAa,MAAMA,CAAK,EAAG,CACvC,MAAM,4BAA4B,EAClC,MACF,CAKAvM,EAAS4sC,GAAU,CACjB,YAAAh4B,EACA,OAAQs4B,EACR,OANkB,CAAE,MAAA3gC,EAAO,SAAA6gC,EAO5B,CAAA,CAAC,EAEFI,EAAgB,EAAK,CAAA,EAGjBE,EAAqB,IAAM,CACtB1tC,EAAA6sC,GAAaj4B,CAAW,CAAC,EAChBu4B,EAAAF,EAAiB,CAAC,CAAC,EACrCI,EAAY,GAAG,EACfC,EAAS,MAAS,EAClBE,EAAgB,EAAK,CAAA,EAIjBze,EAAkB,OAAO,OAAOsG,CAAO,EAAE,KAAKsL,GAAUA,IAAW,IAAI,EAGvEgN,EAAgB,OAAO,QAAQtY,CAAO,EACzC,OAAO,CAAC,CAACroB,EAAG2zB,CAAM,IAAMA,IAAW,IAAI,EACvC,IAAI,CAAC,CAAC/O,EAAQ+O,CAAM,IACnB,GAAG/O,CAAM,KAAK+O,GAAA,YAAAA,EAAQ,QAAQ,IAAIA,GAAA,YAAAA,EAAQ,KAAK,EAAA,EAEhD,KAAK,IAAI,EAEZ,OACG5iC,EAAA,IAAAsH,GAAA,CACC,SAAChC,EAAAA,KAAAkC,GAAA,CAAQ,KAAMwpB,EACb,SAAA,CAAA1rB,EAAA,KAAC80B,GAAa,CAAA,KAAMoV,EAAc,aAAcC,EAC9C,SAAA,CAACzvC,EAAAA,IAAAs6B,GAAA,CAAoB,QAAO,GAC1B,SAAAt6B,EAAA,IAAC0H,IACC,SAAC1H,EAAA,IAAAgB,EAAA,CAAO,QAAQ,UAAU,KAAK,OAC7B,SAAChB,EAAA,IAAA4zB,GAAA,CAAO,UAAW,WAAW5C,EAAkB,gBAAkB,EAAE,EAAA,CAAI,CAC1E,CAAA,CAAA,CACF,CACF,CAAA,EACA1rB,EAAAA,KAACu1B,GAAoB,CAAA,UAAU,+BAC7B,SAAA,CAAAv1B,EAAA,KAAC6lB,GAAA,CACC,cAAgB3c,GAAU4gC,EAAkB5gC,CAAyB,EACrE,MAAO2gC,EAEP,SAAA,CAAAnvC,MAACurB,GACC,CAAA,SAAAvrB,EAAA,IAACqrB,GAAY,CAAA,YAAY,eAAgB,CAAA,EAC3C,EACCrrB,MAAAgsB,GAAA,CAAc,GAAG,kBACf,WAAiB,IAAI6H,GACnB7zB,EAAA,IAAAssB,GAAA,CAAwB,MAAOuH,EAC7B,SADcA,GAAAA,CAEjB,CACD,EACH,CAAA,CAAA,CACF,EAECvuB,EAAA,KAAA6lB,GAAA,CAAO,cAAemkB,EAAa,MAAOD,EACzC,SAAA,CAAArvC,MAACurB,GACC,CAAA,SAAAvrB,EAAA,IAACqrB,GAAY,CAAA,YAAY,iBAAkB,CAAA,EAC7C,EACA/lB,EAAAA,KAAC0mB,GAAe,CAAA,GAAG,qBACjB,SAAA,CAAChsB,EAAA,IAAAssB,GAAA,CAAW,MAAM,IAAK,SAAqB,qBAAA,EAC3CtsB,EAAA,IAAAssB,GAAA,CAAW,MAAM,KAAM,SAAkC,kCAAA,EACzDtsB,EAAA,IAAAssB,GAAA,CAAW,MAAM,IAAK,SAAkB,kBAAA,EACxCtsB,EAAA,IAAAssB,GAAA,CAAW,MAAM,KAAM,SAA+B,+BAAA,EACtDtsB,EAAA,IAAAssB,GAAA,CAAW,MAAM,KAAM,SAAkB,kBAAA,CAAA,EAC5C,CAAA,EACF,EAEAtsB,EAAA,IAACQ,GAAA,CACD,GAAG,cACD,KAAK,SACL,YAAY,cACZ,MAAOgO,IAAU,OAAY,GAAKA,EAClC,SAAW1J,GAAMyqC,EAAS,WAAWzqC,EAAE,OAAO,KAAK,CAAC,EACpD,UAAU,QAAA,CACZ,EAECQ,EAAA,KAAA,MAAA,CAAI,GAAG,mBAAmB,UAAU,yDACnC,SAAA,CAAAtF,MAACgB,EAAO,CAAA,QAAS0uC,EAAiB,UAAU,SAAS,SAErD,aAAA,EACA1vC,EAAAA,IAACgB,EAAO,CAAA,GAAG,eAAe,QAAQ,cAAc,UAAU,SAAS,QAAS2uC,EAAoB,SAEhG,OAAA,CAAA,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAEA3vC,EAAAA,IAAC4H,IACE,SACHgoC,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CC9GA,MAAMC,GAAoD,CAAC,CAAE,UAAWtO,KAAoB,CAC1F,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzD0Y,EAAS5T,EAAapC,GAAkBA,EAAM,OAAO,MAAM,EAE3D5C,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,KAAM6tC,EAAY,EACtE,CAAE,QAAA3lC,GAAY2P,KACdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAEzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBzC,EAAc,yBAGdygB,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAGm5B,EAAA,EAGxCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,aAAc,aACd,qBAAsB,wBAAA,EACtBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAENd,EAAY1sB,EAAAA,YAAY,SAAY,OACxC4S,EAAW,EAAI,EACX,GAAA,CACF,MAAM3X,EAAW,MAAMwU,EAAc,KAAK,2BAA2BlP,CAAO,GAAI,CAC9E,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EACA,GAAG21B,CAAA,CACJ,EAEcF,EAAA,CACb,WAAY,cACZ,OAAM1kC,EAAAtG,EAAS,OAAT,YAAAsG,EAAe,OAAQ,CAAC,CAAA,CAC/B,QACMlG,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC3C,CACAuX,EAAW,EAAK,CAClB,CAAA,EACC,CAACrS,EAASgQ,EAAWC,EAAS/a,GAAA,YAAAA,EAAM,GAAI0wC,CAAkB,CAAC,EAE9DpwC,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,GAAK,GAAK,GAAI,EACjD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,EAAet/B,CAAQ,CAAC,EAE5BpC,EAAAA,UAAU,IAAM,CACV,CAACwoB,GAAgBkZ,GACnBt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEH,EAAA,CAAClZ,EAAckZ,EAAet/B,CAAQ,CAAC,EAE1C,MAAMiW,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,cAChBC,EAAmB,CAAC,aAAc,oBAAoB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,OAAQ,mBAAmB,EAEnD,OAEK7lC,EAAA,KAAAwG,WAAA,CAAA,SAAA,CACD2Q,EAAAzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAQ,CAAA,GAEzBqzB,GAAA,YAAAA,EAAa,OAAQA,EAAY,KAAK,IAAI,CAACz0B,EAASpM,UACjD,MAAI,CAAA,UAAW,GAAGoZ,EAAe,gDAAkD,EAAE,GACtF,SAAAroB,EAAA,IAAC8N,GAA6B,CAAA,UAAU,OAEtC,SAAAxI,EAAAA,KAAC4I,GAEH,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,oDACV,SAAA,CAAAtF,MAAC,OAAK,CAAA,UAAU,OAAO,SAAAA,MAAC+I,IAAW,CAAA,EAAE,EACpC/I,EAAA,IAAA,OAAA,CAAK,UAAU,GAAI,WAAQ,YAAY,CAAA,EAC1C,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACd,SAAA,CAAA+iB,SACE,MAAI,CAAA,UAAU,gEACb,SAAAroB,MAAC6Q,IAAoB,CAAA,EACvB,QAED7P,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,EAAA,IAACivC,GAAA,CACC,YAAAp4B,EACA,iBAAkB,CAAC,aAAc,oBAAoB,CAAA,CACvD,QACC7V,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACA,EAEGpP,EAAQ,MACN/V,OAAA,IAAA,CAAE,UAAU,eAAe,SAAA,CAAA,UAAQ+V,EAAQ,KAAA,EAAM,EAChDA,EAAQ,YAAY,SAAW,EAChCrb,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAA8C,gDAAA,CAAA,EAE1EA,EAAA,IAAA,MAAA,CAAI,UAAU,6BACb,SAAAA,EAAA,IAAC+qC,GAAA,CACC,KAAM1vB,EAAQ,YACd,cAAA2vB,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CAAA,EAEJ,CAAA,CAAA,CAEJ,CA7CS,EAAAkD,EAAQ,SA8CnB,CACA,CAAA,CACD,GAGFy0B,GAAA,YAAAA,EAAa,OAAQA,EAAY,KAAK,SAAW,GAAK,CAACrzB,GACtDzc,EAAAA,IAAC8N,GACC,CAAA,SAAA9N,EAAAA,IAACkO,IACC,SAAClO,MAAA,IAAA,CAAE,UAAU,iCAAiC,SAAA,gCAA6B,EAC7E,CACF,CAAA,CAEJ,CAAA,CAAA,CAEJ,ECrKMowC,GAAuC,CAAC,CAAE,UAAW7O,KAAoB,CAC7E,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAEhB,CAAC41B,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzD0Y,EAAS5T,EAAapC,GAAkBA,EAAM,OAAO,MAAM,EAC3DF,EAAWuC,KAGXjF,EAAOgF,EAAapC,GAAmBA,EAAM,KAAK,KAAO6tC,EAAY,EACrE,CAAE,QAAA3lC,GAAY2P,KACdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAEzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBzC,EAAc,iBAEdygB,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAGzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,aAAc,aACd,qBAAsB,wBAAA,EACtBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAENd,EAAY1sB,EAAAA,YAAY,SAAY,CACxC4S,EAAW,EAAI,EACX,GAAA,CAMI,MAAA6lB,GAJW,MAAMhpB,EAAc,KAAK,oBAAoBlP,CAAO,GAAI,CACvE,OAAQ9K,GAAA,YAAAA,EAAM,GAAI,UAAA8a,EAAsB,QAAAC,EAAkB,GAAG21B,CAAA,EAC5D,CAAE,gBAAiB,EAAA,CAAM,GAEC,MAAQ,GAErCF,EAAexN,CAAW,QAEnBp9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE3C,CACAuX,EAAW,EAAK,CAClB,CAAA,EACC,CAACrS,EAASgQ,EAAWC,EAAQ21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAE7DM,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,GAAK,GAAK,GAAI,EACjD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEf32B,EAAAA,UAAU,IAAM,CACT0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,YAChBE,EAAiB,cACjBD,EAAmB,CAAC,aAAc,oBAAoB,EACtDE,EAAiB,CAAC,OAAO,mBAAmB,EAElD,OAEK7lC,EAAA,KAAAwG,WAAA,CAAA,SAAA,CACC2Q,EAAAzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAQ,CAAA,GAE3BqzB,GAAA,YAAAA,EAAa,OAAQA,EAAY,KAAK,IAAI,CAACz0B,EAASpM,UACjD,MAAI,CAAA,UAAW,GAAGoZ,EAAe,gDAAkD,EAAE,GACtF,SAAAroB,EAAA,IAAC8N,GAA6B,CAAA,UAAU,OAEtC,SAAAxI,EAAAA,KAAC4I,GAEH,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,oDACV,SAAA,CAAAtF,MAAC,OAAK,CAAA,UAAU,OAAO,SAAAA,MAAC+I,IAAW,CAAA,EAAE,EACpC/I,EAAA,IAAA,OAAA,CAAK,UAAU,GAAI,WAAQ,YAAY,CAAA,EAC1C,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACd,SAAA,CAAA+iB,SACE,MAAI,CAAA,UAAU,gEACb,SAAAroB,MAAC6Q,IAAoB,CAAA,EACvB,QAED7P,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,EAAA,IAACivC,GAAA,CACC,YAAAp4B,EACA,iBAAkB,CAAC,aAAc,oBAAoB,CAAA,CACvD,QACC7V,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACA,EAEGpP,EAAQ,MACN/V,OAAA,IAAA,CAAE,UAAU,eAAe,SAAA,CAAA,UAAQ+V,EAAQ,KAAA,EAAM,EAChDA,EAAQ,UAAU,SAAW,EAC9Brb,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAsC,wCAAA,CAAA,EAElEA,EAAA,IAAA,MAAA,CAAI,UAAU,6BACb,SAAAA,EAAA,IAAC+qC,GAAA,CACC,KAAM1vB,EAAQ,UACd,cAAA2vB,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CAAA,EAEJ,CAAA,CAAA,CAEJ,CA7CS,EAAAkD,EAAQ,SA8CnB,CACA,CAAA,CACD,GAGFy0B,GAAA,YAAAA,EAAa,OAAQA,EAAY,KAAK,SAAW,GAAK,CAACrzB,GACtDzc,EAAAA,IAAC8N,GACC,CAAA,SAAA9N,EAAAA,IAACkO,IACC,SAAClO,MAAA,IAAA,CAAE,UAAU,iCAAiC,SAAA,wBAAqB,EACrE,CACF,CAAA,CAEJ,CAAA,CAAA,CAEJ,ECxKMqwC,GAA0C,CAAC,CAAE,UAAW9O,KAAoB,CAChF,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChB,CAAC41B,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDwC,EAAWuC,KAGXjF,EAAOgF,EAAapC,GAAmBA,EAAM,KAAK,IAAI,EACtD,CAAE,QAAAkI,GAAY2P,KACdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAEzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBzC,EAAc,oBAEdygB,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAGzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,aAAc,aACd,qBAAsB,wBAAA,EACtBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAENd,EAAY1sB,EAAAA,YAAY,SAAY,CACxC4S,EAAW,EAAI,EACX,GAAA,CAMI,MAAA6lB,GAJW,MAAMhpB,EAAc,KAAK,uBAAuBlP,CAAO,GAAI,CAC1E,OAAQ9K,GAAA,YAAAA,EAAM,GAAI,UAAA8a,EAAsB,QAAAC,EAAkB,GAAG21B,CAAA,EAC5D,CAAE,gBAAiB,EAAA,CAAM,GAEC,MAAQ,GAErCF,EAAexN,CAAW,QAEnBp9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE3C,CACAuX,EAAW,EAAK,CAClB,CAAA,EACC,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAqB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAE/DM,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,GAAK,GAAK,GAAI,EACjD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAClB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,SAChBE,EAAiB,cACjBD,EAAmB,CAAC,aAAc,oBAAoB,EACtDE,EAAiB,CAAC,OAAO,mBAAmB,EAC5ChzB,EAAS5T,EAAapC,GAAkBA,EAAM,OAAO,MAAM,EAEjE,OAEGmD,EAAA,KAAAwG,WAAA,CAAA,SAAA,CACC2Q,EAAAzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAQ,CAAA,GAE3BqzB,GAAA,YAAAA,EAAa,OAAQA,EAAY,KAAK,IAAI,CAACz0B,EAASpM,UACjD,MAAI,CAAA,UAAW,GAAGoZ,EAAe,gDAAkD,EAAE,GACtF,SAAAroB,EAAA,IAAC8N,GAA6B,CAAA,UAAU,OAEtC,SAAAxI,EAAAA,KAAC4I,GAEH,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,oDACV,SAAA,CAAAtF,MAAC,OAAK,CAAA,UAAU,OAAO,SAAAA,MAAC+I,IAAW,CAAA,EAAE,EACpC/I,EAAA,IAAA,OAAA,CAAK,UAAU,GAAI,WAAQ,YAAY,CAAA,EAC1C,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACd,SAAA,CAAA+iB,SACE,MAAI,CAAA,UAAU,gEACb,SAAAroB,MAAC6Q,IAAoB,CAAA,EACvB,QAED7P,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,EAAA,IAACivC,GAAA,CACC,YAAAp4B,EACA,iBAAkB,CAAC,aAAc,oBAAoB,CAAA,CACvD,QACC7V,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACA,EAEGpP,EAAQ,MACN/V,OAAA,IAAA,CAAE,UAAU,eAAe,SAAA,CAAA,UAAQ+V,EAAQ,KAAA,EAAM,EAChDA,EAAQ,QAAQ,SAAW,EAC5Brb,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAyC,2CAAA,CAAA,EAErEA,EAAA,IAAA,MAAA,CAAI,UAAU,6BACb,SAAAA,EAAA,IAAC+qC,GAAA,CACC,KAAM1vB,EAAQ,QACd,cAAA2vB,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CAAA,EAEJ,CAAA,CAAA,CAEJ,CA7CS,EAAAkD,EAAQ,SA8CnB,CACA,CAAA,CACD,GAGFy0B,GAAA,YAAAA,EAAa,OAAQA,EAAY,KAAK,SAAW,GAAK,CAACrzB,GACtDzc,EAAAA,IAAC8N,GACC,CAAA,SAAA9N,EAAAA,IAACkO,IACC,SAAClO,MAAA,IAAA,CAAE,UAAU,iCAAiC,SAAA,2BAAwB,EACxE,CACF,CAAA,CAEJ,CAAA,CAAA,CAEF,ECvKMswC,GAA2C,CAAC,CAAE,UAAW/O,KAAoB,CACjF,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChB,CAAC41B,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDwC,EAAWuC,KAGXjF,EAAOgF,EAAapC,GAAmBA,EAAM,KAAK,IAAI,EACtD,CAAE,QAAAkI,GAAY2P,KACdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAEzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBzC,EAAc,qBAEdygB,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAGzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,aAAc,aACd,qBAAsB,wBAAA,EACtBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAENd,EAAY1sB,EAAAA,YAAY,SAAY,CACxC4S,EAAW,EAAI,EACX,GAAA,CAMI,MAAA6lB,GAJW,MAAMhpB,EAAc,KAAK,wBAAwBlP,CAAO,GAAI,CAC3E,OAAQ9K,GAAA,YAAAA,EAAM,GAAI,UAAA8a,EAAsB,QAAAC,EAAkB,GAAG21B,CAAA,EAC5D,CAAE,gBAAiB,EAAA,CAAM,GAEC,MAAQ,GAErCF,EAAexN,CAAW,QAEnBp9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE3C,CACAuX,EAAW,EAAK,CAClB,CAAA,EACC,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAqB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAE/DM,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,GAAK,GAAK,GAAI,EACjD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAClB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,UAChBE,EAAiB,cACjBD,EAAmB,CAAC,aAAc,oBAAoB,EACtDE,EAAiB,CAAC,OAAO,mBAAmB,EAC5ChzB,EAAS5T,EAAapC,GAAkBA,EAAM,OAAO,MAAM,EAEjE,OAEGmD,EAAA,KAAAwG,WAAA,CAAA,SAAA,CACC2Q,EAAAzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAQ,CAAA,GAE3BqzB,GAAA,YAAAA,EAAa,OAAQA,EAAY,KAAK,IAAI,CAACz0B,EAASpM,UACjD,MAAI,CAAA,UAAW,GAAGoZ,EAAe,gDAAkD,EAAE,GACtF,SAAAroB,EAAA,IAAC8N,GAA6B,CAAA,UAAU,OAEtC,SAAAxI,EAAAA,KAAC4I,GAEH,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,oDACV,SAAA,CAAAtF,MAAC,OAAK,CAAA,UAAU,OAAO,SAAAA,MAAC+I,IAAW,CAAA,EAAE,EACpC/I,EAAA,IAAA,OAAA,CAAK,UAAU,GAAI,WAAQ,YAAY,CAAA,EAC1C,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACd,SAAA,CAAA+iB,SACE,MAAI,CAAA,UAAU,gEACb,SAAAroB,MAAC6Q,IAAoB,CAAA,EACvB,QAED7P,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,EAAA,IAACivC,GAAA,CACC,YAAAp4B,EACA,iBAAkB,CAAC,aAAc,oBAAoB,CAAA,CACvD,QACC7V,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACA,EAEGpP,EAAQ,MACN/V,OAAA,IAAA,CAAE,UAAU,eAAe,SAAA,CAAA,UAAQ+V,EAAQ,KAAA,EAAM,EAChDA,EAAQ,SAAS,SAAW,EAC7Brb,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAA0C,4CAAA,CAAA,EAEtEA,EAAA,IAAA,MAAA,CAAI,UAAU,6BACb,SAAAA,EAAA,IAAC+qC,GAAA,CACC,KAAM1vB,EAAQ,SACd,cAAA2vB,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CAAA,EAEJ,CAAA,CAAA,CAEJ,CA7CS,EAAAkD,EAAQ,SA8CnB,CACA,CAAA,CACD,GAGFy0B,GAAA,YAAAA,EAAa,OAAQA,EAAY,KAAK,SAAW,GAAK,CAACrzB,GACtDzc,EAAAA,IAAC8N,GACC,CAAA,SAAA9N,EAAAA,IAACkO,IACC,SAAClO,MAAA,IAAA,CAAE,UAAU,iCAAiC,SAAA,4BAAyB,EACzE,CACF,CAAA,CAEJ,CAAA,CAAA,CAEF,ECtKMuwC,GAA2C,CAAC,CAAE,UAAWhP,KAAoB,CACjF,KAAM,CAAC9yB,EAAM6B,CAAO,EAAI7Q,WAAgC8hC,CAAa,EAC/D,CAACuO,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EAGzDF,EAAOgF,EAAapC,GAAmBA,EAAM,KAAK,IAAI,EACtD,CAAE,QAAAkI,GAAY2P,KACdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAEzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBkd,EAAY1sB,EAAAA,YAAY,SAAY,CACxC4S,EAAW,EAAI,EACX,GAAA,CAMI,MAAA6lB,GAJW,MAAMhpB,EAAc,KAAK,wBAAwBlP,CAAO,GAAI,CAC3E,OAAQ9K,GAAA,YAAAA,EAAM,GAAI,UAAA8a,EAAsB,QAAAC,CAAA,EACvC,CAAE,gBAAiB,EAAA,CAAM,GAEC,MAAQ,GAErCy1B,EAAexN,CAAW,QAEnBp9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE3C,CACAuX,EAAW,EAAK,CAClB,CACC,EAAA,CAACrS,EAASgQ,EAAWC,CAAQ,CAAC,EAEjCza,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,GAAK,GAAK,GAAI,EACjD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACdyQ,EAAQixB,CAAa,CAAA,EACpB,CAACA,CAAa,CAAC,EAElB,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,UAChBE,EAAiB,cACjBD,EAAmB,CAAC,aAAc,oBAAoB,EACtDE,EAAiB,CAAC,OAAO,mBAAmB,EAE5Ct0B,EAAc,qBACdsB,EAAS5T,EAAapC,GAAkBA,EAAM,OAAO,MAAM,EAEjE,OAEGmD,EAAA,KAAAwG,WAAA,CAAA,SAAA,CACA2Q,EAAAzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAQ,CAAA,GAE1BqzB,GAAA,YAAAA,EAAa,OAAQA,EAAY,KAAK,IAAI,CAACz0B,EAASpM,UACjD,MAAI,CAAA,UAAW,GAAGoZ,EAAe,gDAAkD,EAAE,GACtF,SAAAroB,EAAA,IAAC8N,GAA6B,CAAA,UAAU,OAEtC,SAAAxI,EAAAA,KAAC4I,GAEH,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,oDACV,SAAA,CAAAtF,MAAC,OAAK,CAAA,UAAU,OAAO,SAAAA,MAAC+I,IAAW,CAAA,EAAE,EACpC/I,EAAA,IAAA,OAAA,CAAK,UAAU,GAAI,WAAQ,YAAY,CAAA,EAC1C,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACd,SAAA,CAAA+iB,SACE,MAAI,CAAA,UAAU,gEACb,SAAAroB,MAAC6Q,IAAoB,CAAA,EACvB,QAED7P,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,EAAA,IAACivC,GAAA,CACC,YAAAp4B,EACA,iBAAkB,CAAC,aAAc,oBAAoB,CAAA,CACvD,QACC7V,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACA,EAEGpP,EAAQ,MACN/V,OAAA,IAAA,CAAE,UAAU,eAAe,SAAA,CAAA,UAAQ+V,EAAQ,KAAA,EAAM,EAChDA,EAAQ,SAAS,SAAW,EAC7Brb,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAA0C,4CAAA,CAAA,EAEtEA,EAAA,IAAA,MAAA,CAAI,UAAU,6BACb,SAAAA,EAAA,IAAC+qC,GAAA,CACC,KAAM1vB,EAAQ,SACd,cAAA2vB,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CAAA,EAEJ,CAAA,CAAA,CAEJ,CA7CS,EAAAkD,EAAQ,SA8CnB,CACA,CAAA,CACD,GAGFy0B,GAAA,YAAAA,EAAa,OAAQA,EAAY,KAAK,SAAW,GAAK,CAACrzB,GACtDzc,EAAAA,IAAC8N,GACC,CAAA,SAAA9N,EAAAA,IAACkO,IACC,SAAClO,MAAA,IAAA,CAAE,UAAU,iCAAiC,SAAA,4BAAyB,EACzE,CACF,CAAA,CAEJ,CAAA,CAAA,CAEF,ECpJMwwC,GAA+B,IAAM,CACzC,MAAMv2B,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChB,CAACwV,EAAWC,CAAY,EAAIlwB,WAAS,YAAY,EACjDu9B,EAAetzB,SAAuB,IAAI,EAC1CE,EAASrF,EAAapC,GAAqBA,EAAM,MAAM,MAAM,EAC7D,CAAE,QAAAkI,GAAY2P,KACd2wB,EAAgB/gC,EAAO,KAAM4B,GAAUA,EAAM,MAAQnB,CAAO,EAC5DomC,EAAqB,GAAA9F,GAAA,MAAAA,EAAe,kBAAmBA,GAAA,YAAAA,EAAe,gBAAgB,QAAS,GAG/F,CAAE,WAAAxxB,GAAeE,KAGjBmW,EAAO,CACX,CAAE,MAAO,cAAe,MAAO,YAAa,EAC5C,CAAE,MAAO,UAAW,MAAO,SAAU,EACrC,CAAE,MAAO,MAAO,MAAO,KAAM,EAC7B,CAAE,MAAO,SAAU,MAAO,QAAS,EACnC,CAAE,MAAO,UAAW,MAAO,SAAU,CAAA,EAIjCmB,EAAmBniB,GAAkB,CACzCmhB,EAAanhB,CAAK,CAAA,EAIlB,OAAAlJ,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAtF,EAAA,IAACkJ,GAAmB,EAAA,EACpBlJ,EAAA,IAAC,MAAI,CAAA,UAAU,gDACZ,SAAAmZ,QACE4vB,GAAe,CAAA,CAAA,EACb0H,EAaDnrC,EAAAA,KAAAwG,EAAA,SAAA,CAAA,SAAA,CAACxG,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAtF,MAAC6X,IAAO,eAAgB,GAAM,KAAM64B,GAAkB,MAAM,qBAAqB,EAEjF1wC,EAAAA,IAAC,MAAI,CAAA,UAAU,kCACb,SAAAA,EAAA,IAAC+pC,IAAW,KAAAva,EAAY,UAAAE,EAAsB,YAAaiB,CAAA,CAAiB,CAC9E,CAAA,CAAA,EACF,EAGA3wB,EAAAA,IAAC,OAAI,IAAKg9B,EAAc,UAAU,uBAChC,SAAA13B,EAAA,KAAC,MAAI,CAAA,UAAU,sBACZ,SAAA,CAAAoqB,IAAc,cACZ1vB,MAAA,MAAA,CAAI,GAAG,aACN,SAAAA,EAAAA,IAAC6vC,IAAW,UAAW,CACrB,KAAMphC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EAEAihB,IAAc,WACb1vB,MAAA,MAAA,CAAI,GAAG,UACN,SAAAA,EAAAA,IAACswC,IAAQ,UAAW,CAClB,KAAM7hC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EAEDihB,IAAc,OACZ1vB,MAAA,MAAA,CAAI,GAAG,MACN,SAAAA,EAAAA,IAACowC,IAAI,UAAW,CACd,KAAM3hC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EAEDihB,IAAc,UACZ1vB,MAAA,MAAA,CAAI,GAAG,SACN,SAAAA,EAAAA,IAACqwC,IAAO,UAAW,CACjB,KAAM5hC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EAGDihB,IAAc,WACZ1vB,MAAA,MAAA,CAAI,GAAG,UACN,SAAAA,EAAAA,IAACuwC,IAAQ,UAAW,CAClB,KAAM9hC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,CAAA,CACF,EAjEEzO,EAAA,IAAA8L,EAAA,SAAA,CAAA,SAAA9L,EAAA,IAAC2pC,GAAA,CACC,SAAS,aACT,QAASt/B,GAAW,GACpB,UAAW,CAAC4U,EAAUoC,EAAaP,IAAc,CAC/C,QAAQ,IAAI,0BAA0B7B,CAAQ,aAAaoC,CAAW,KAAKP,CAAS,GAAG,CACzF,CAAA,CACF,CAAA,CACF,CA4DJ,CAAA,QACCvD,GAAc,EAAA,CACjB,CAAA,CAAA,CAEJ,ECrHMozB,GAAwD,CAAC,CAC7D,KAAArwB,EACA,cAAA0qB,EACA,aAAA4F,CACF,IAAM,WACJ,KAAM,CAACC,EAAkBC,CAAmB,EAAIrxC,WAAwB,IAAI,EAEtE0sC,EAAaj7B,EAAAA,QAAQ,IAAM,CAC/B,MAAMpC,EAAkC,CACtC,CAAC8hC,EAAa,QAAQ,GAAG,EAAG,EAC5B,CAACA,EAAa,UAAU,GAAG,EAAG,CAAA,EAEhC,IAAIjvC,EAAQ,EAEZ,OAAA2e,EAAK,QAAe2T,GAAA,CAClB,MAAM8c,EAAgB9c,EAAI2c,EAAa,QAAQ,GAAG,EAC5CI,EAAkB/c,EAAI2c,EAAa,UAAU,GAAG,EAGpD,OAAOG,GAAkB,UACzB,OAAOC,GAAoB,WAE3BliC,EAAQ8hC,EAAa,QAAQ,GAAG,GAAK,OAAOG,CAAa,EACzDjiC,EAAQ8hC,EAAa,UAAU,GAAG,GAAK,OAAOI,CAAe,EAC7DrvC,IACF,CACD,EAEM,CACL,CAACivC,EAAa,QAAQ,GAAG,EAAG9hC,EAAQ8hC,EAAa,QAAQ,GAAG,EAAIjvC,EAChE,CAACivC,EAAa,UAAU,GAAG,EAAG9hC,EAAQ8hC,EAAa,UAAU,GAAG,EAAIjvC,CAAA,CACtE,EACC,CAAC2e,EAAMswB,CAAY,CAAC,EAEjBK,EAA6B//B,EAAAA,QAAQ,IAAM,CAC/C,MAAMggC,EAAwD,CAC5D,iBAAkB,CAAC,EACnB,CAAC,QAAQN,EAAa,QAAQ,IAAI,EAAE,EAAG,CAAC,EACxC,CAAC,QAAQA,EAAa,UAAU,IAAI,EAAE,EAAG,CAAC,EAC1C,gBAAmB,CAAC,CAAA,EAGtB,OAAAtwB,EAAK,QAAe2T,GAAA,CAClB,MAAM8c,EAAgB,OAAO9c,EAAI2c,EAAa,QAAQ,GAAG,CAAC,EACpDI,EAAkB,OAAO/c,EAAI2c,EAAa,UAAU,GAAG,CAAC,EACxDO,EAAe,OAAOld,EAAI+W,CAAa,CAAC,EAExCoG,EAAgBL,GAAiB5E,EAAWyE,EAAa,QAAQ,GAAG,EACpES,EAAkBL,GAAmB7E,EAAWyE,EAAa,UAAU,GAAG,EAE5EQ,GAAiBC,EACFH,EAAA,gBAAgB,EAAE,KAAKC,CAAY,EAC3CC,GAAiB,CAACC,EAC3BH,EAAiB,QAAQN,EAAa,QAAQ,IAAI,EAAE,EAAE,KAAKO,CAAY,EAC9D,CAACC,GAAiBC,EAC3BH,EAAiB,QAAQN,EAAa,UAAU,IAAI,EAAE,EAAE,KAAKO,CAAY,EAExDD,EAAA,gBAAmB,KAAKC,CAAY,CACvD,CACD,EAEM,CACL,CACE,KAAM,iBACN,MAAO,iBACP,QAAS,eACT,MAAOD,EAAiB,gBAAgB,EAAE,OAC1C,MAAOA,EAAiB,gBAAgB,EACxC,YAAa,yBAAyBN,EAAa,QAAQ,IAAI,MAAMzE,EAAWyE,EAAa,QAAQ,GAAG,EAAE,QAAQ,CAAC,CAAC,SAASA,EAAa,UAAU,IAAI,MAAMzE,EAAWyE,EAAa,UAAU,GAAG,EAAE,QAAQ,CAAC,CAAC,GACjN,EACA,CACE,KAAM,QAAQA,EAAa,QAAQ,IAAI,GACvC,MAAO,gBACP,QAAS,eACT,MAAOM,EAAiB,QAAQN,EAAa,QAAQ,IAAI,EAAE,EAAE,OAC7D,MAAOM,EAAiB,QAAQN,EAAa,QAAQ,IAAI,EAAE,EAC3D,YAAa,QAAQA,EAAa,QAAQ,IAAI,MAAMzE,EAAWyE,EAAa,QAAQ,GAAG,EAAE,QAAQ,CAAC,CAAC,uBAAuBA,EAAa,UAAU,IAAI,MAAMzE,EAAWyE,EAAa,UAAU,GAAG,EAAE,QAAQ,CAAC,CAAC,GAC9M,EACA,CACE,KAAM,QAAQA,EAAa,UAAU,IAAI,GACzC,MAAO,kBACP,QAAS,eACT,MAAOM,EAAiB,QAAQN,EAAa,UAAU,IAAI,EAAE,EAAE,OAC/D,MAAOM,EAAiB,QAAQN,EAAa,UAAU,IAAI,EAAE,EAC7D,YAAa,QAAQA,EAAa,UAAU,IAAI,MAAMzE,EAAWyE,EAAa,UAAU,GAAG,EAAE,QAAQ,CAAC,CAAC,uBAAuBA,EAAa,QAAQ,IAAI,MAAMzE,EAAWyE,EAAa,QAAQ,GAAG,EAAE,QAAQ,CAAC,CAAC,GAC9M,EACA,CACE,KAAM,kBACN,MAAO,eACP,QAAS,eACT,MAAOM,EAAiB,gBAAmB,OAC3C,MAAOA,EAAiB,gBACxB,YAAa,yBAAyBN,EAAa,QAAQ,IAAI,MAAMzE,EAAWyE,EAAa,QAAQ,GAAG,EAAE,QAAQ,CAAC,CAAC,SAASA,EAAa,UAAU,IAAI,MAAMzE,EAAWyE,EAAa,UAAU,GAAG,EAAE,QAAQ,CAAC,CAAC,GACjN,CAAA,GAED,CAACtwB,EAAM6rB,EAAYnB,EAAe4F,CAAY,CAAC,EAGhD,OAAA5wC,EAAAA,IAACsH,GACC,CAAA,SAAAtH,EAAAA,IAAC,MAAI,CAAA,GAAG,yBAAyB,UAAU,mBACzC,SAAAsF,EAAA,KAAC,MAAI,CAAA,UAAU,oDACb,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,yBACZ,SAAAixC,EAAW,IAAK3e,UACd9qB,GACC,CAAA,SAAA,CAACxH,EAAAA,IAAA0H,GAAA,CAAe,QAAO,GACrB,SAAA1H,EAAA,IAAC,MAAA,CACC,UAAW,sBAAsBsyB,EAAS,OAAO,oHACjD,QAAS,IAAMwe,EAAoBD,IAAqBve,EAAS,KAAO,KAAOA,EAAS,IAAI,EAE5F,eAAC,MAAI,CAAA,UAAU,oDACb,SAAAhtB,EAAA,KAAC,QAAK,UAAW,uBAAuBgtB,EAAS,KAAK,IAAIue,IAAqBve,EAAS,KAAO,YAAc,EAAE,GAC5G,SAAA,CAASA,EAAA,KAAK,KAAGA,EAAS,MAAM,GAAA,CAAA,CACnC,CACF,CAAA,CAAA,CAAA,EAEJ,EACCtyB,MAAA4H,GAAA,CAAe,UAAU,yDACxB,gBAAC,MAGC,CAAA,SAAA,CAACtC,EAAAA,KAAA,MAAA,CAAK,UAAU,+BACd,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAW,sBAAsBsyB,EAAS,OAAO,2DACpD,SAACtyB,MAAA,MAAA,CAAI,UAAW,sBAAsBsyB,EAAS,MAAM,QAAQ,QAAS,KAAK,CAAC,EAAI,CAAA,EAClF,EACCtyB,EAAA,IAAA,IAAA,CAAE,UAAU,iCACV,WAAS,KACZ,CAAA,EACF,EAGCA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAyB,WAAS,YAAY,CAAA,CAAA,CAC7D,CACF,CAAA,CA7BY,CAAA,EAAAsyB,EAAS,IA8BvB,CACD,EACH,EACCue,GACCvrC,EAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAA,KAAA,KAAA,CAAG,UAAW,uDAAsD+F,EAAA4lC,EAAW,KAAUK,GAAAA,EAAE,OAAST,CAAgB,IAAhD,YAAAxlC,EAAmD,KAAK,GAC1H,SAAA,CAAAwlC,EACA7wC,EAAA,IAAA,OAAA,CAAK,UAAW,uBAAsBwN,EAAAyjC,EAAW,KAAUK,GAAAA,EAAE,OAAST,CAAgB,IAAhD,YAAArjC,EAAmD,OAAO,0BAA2B,CAAA,EAC9H,EACAxN,EAAAA,IAAC,MAAG,UAAU,iEACX,cAAW,KAAKsxC,GAAKA,EAAE,OAAST,CAAgB,kBAAG,MAAM,IAAI,CAAC/lC,EAAM5H,IAClElD,EAAA,IAAA,KAAA,CAAe,UAAU,kCACvB,SAAA8K,CAAA,EADM5H,CAET,EAEJ,CAAA,CAAA,EACF,CAAA,EAEJ,EACF,CACF,CAAA,CAEJ,ECvKaquC,GAAwB,CACnC,CACE,MAAO,kBACP,QAAS,CACP,2MACF,CACF,EACA,CACE,MAAO,4BACP,QAAS,CACP,uFACA,CACE,8EACA,mFACA,wGACF,CACF,CACF,EACA,CACE,MAAO,0CACP,QAAS,CACP,CACE,iDACA,6DACA,sCACA,4DACF,CACF,CACF,EACA,CACE,MAAO,+BACP,QAAS,CACP,6FACA,CACE,0FACA,2CACA,oBACF,CACF,CACF,EACA,CACE,MAAO,+BACP,QAAS,CACP,qBACA,CACE,+DACA,mCACA,kEACF,CACF,CACF,EACA,CACE,MAAO,mBACP,QAAS,CACP,0GACF,CACF,EACA,CACE,MAAO,2BACP,QAAS,CACP,yBACA,CACE,gEACA,yDACA,wDACA,2CACF,CACF,CACF,EACA,CACE,MAAO,sEACP,QAAS,CACP,mGACA,wJACF,CACF,EACA,CACE,MAAO,0BACP,QAAS,CACP,wEACA,CACE,qDACA,iCACA,qDACF,CACF,CACF,EACA,CACE,MAAO,qCACP,QAAS,CACP,mIACF,CACF,EACA,CACE,MAAO,iBACP,QAAS,CACP,4CACA,yBACF,CACF,CACF,EAEaC,GAAgB,CACzB,sBAAuB,CACrB,QAAS,CACP,IAAK,iBACL,KAAM,UACR,EACA,UAAW,CACT,IAAK,iBACL,KAAM,YACR,CACF,EACA,aAAc,CACZ,QAAS,CACP,IAAK,cACL,KAAM,OACR,EACA,UAAW,CACT,IAAK,sBACL,KAAM,eACR,CACF,CACF,EC7GIC,GAAuB,CAAC,CAC5B,KAAAvwC,EAAO,OACP,QAAAD,EAAU,UACV,SAAAywC,EAAW,UACX,UAAAhxC,EAAY,EACd,IAAiC,CAC/B,MAAMuB,EAAWuC,KACX2T,EAAS5T,EAAapC,GAAqBA,EAAM,OAAO,MAAM,EAEpE,cACGsN,GACC,CAAA,SAAA,CAACzP,EAAAA,IAAA2P,GAAA,CAAe,QAAO,GACrB,SAAA3P,EAAA,IAACgB,EAAA,CACC,QAAAC,EACA,KAAAC,EACA,UAAAR,EAEA,SAAAV,EAAAA,IAACqY,GAAS,CAAA,UAAWq5B,CAAU,CAAA,CAAA,CAAA,EAEnC,QACC7hC,GAAe,CAAA,UAAU,OACxB,SAACvK,EAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAyB,4BAAA,EAC7DsF,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,qDACf,SAAA,CAAAtF,EAAA,IAAC,QAAA,CACC,KAAK,QACL,KAAK,SACL,MAAM,QACN,QAASmY,IAAW,QACpB,SAAU,IAAMlW,EAAS0V,GAAU,OAAO,CAAC,EAC3C,UAAU,YAAA,CACZ,EACA3X,EAAAA,IAAC,QAAK,SAAM,QAAA,CAAA,CAAA,EACd,EACAsF,EAAAA,KAAC,QAAM,CAAA,UAAU,qDACf,SAAA,CAAAtF,EAAA,IAAC,QAAA,CACC,KAAK,QACL,KAAK,SACL,MAAM,QACN,QAASmY,IAAW,QACpB,SAAU,IAAMlW,EAAS0V,GAAU,OAAO,CAAC,EAC3C,UAAU,YAAA,CACZ,EACA3X,EAAAA,IAAC,QAAK,SAAa,eAAA,CAAA,CAAA,EACrB,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,ECXM2xC,GAAqD,CAAC,CAAE,UAAWpQ,KAAoB,CACzF,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChB,CAAC41B,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAACmyC,EAAmBC,CAAoB,EAAIpyC,WAAS,EAAE,EACvDwC,EAAWuC,KAGXjF,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxD,CAAE,QAAAkI,GAAY2P,KACdyO,EAAoB3H,GAAqB,CACtB+wB,EAAAD,IAAsB9wB,EAAY,GAAKA,CAAS,CAAA,EAEnEzG,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBkd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GAJW,MAAMhpB,EAAc,KAAK,6BAA6BlP,CAAO,GAAI,CAC9E,OAAQ9K,GAAA,YAAAA,EAAM,GAAI,UAAA8a,EAAsB,QAAAC,CAAA,EACzC,CAAE,gBAAiB,EAAA,CAAM,GAEC,MAAQ,GAErCy1B,EAAexN,CAAW,QAErBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE7C,CACEuX,EAAW,EAAK,CACpB,CACD,EAAA,CAACrS,EAASgQ,EAAWC,CAAQ,CAAC,EAEjCza,EAAAA,UAAU,IAAM,CACF22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACtC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACR0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACT+xC,GACCrQ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAACqQ,EAAmBrQ,CAAa,CAAC,EAEvC,MAAMrpB,EAAsB,IAAM,CACpBse,GAAA,EAGRsb,EAAsBhC,GAAA,YAAAA,EAAa,oBAGnC9E,EAAgB,oBAChBE,EAAiB,cACjBD,EAAmB,CAAC,cAAe,qBAAqB,EACxDE,EAAiB,CAAC,QAAS,eAAe,EAC1ChzB,EAAS5T,EAAapC,GAAoBA,EAAM,OAAO,MAAM,EAGnE,OAAGsa,EACQzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAQ,CAAA,SAGjC,MAEG,CAAA,SAAA,CAAAzc,EAAAA,IAAC,OAAI,UAAU,mFACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAAAtF,EAAA,IAAC8I,GAAa,EAAA,QACb,MACG,CAAA,SAAA9I,EAAA,IAAC,MAAG,UAAU,uCAAuC,sCAA0B,CACnF,CAAA,CAAA,CAAA,CACJ,CAEJ,CAAA,EAEIsF,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACT,SAAA,CAAuBwsC,GAAAA,EAAoB,OAAS,GACjDxsC,EAAA,KAACwI,GAAA,CAED,UAAW,GAAG8jC,IAAsB,kBAAoB,yDAA2D,YAAY,GAE/H,SAAA,CAAA5xC,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBAAsB,SAErC,kBAAA,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACV,SAAA,CAAqBssC,GAAA5xC,EAAA,IAAC,MAAI,CAAA,UAAU,gEACjC,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,EACtBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiB,iBAAiB,EACjD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAmpB,IAAsB,kBACnB5xC,EAAAA,IAACwqB,GAAS,CAAA,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACf,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACU,KAAMmB,GAAuB,CAAC,EAC9B,cAAA9G,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACHxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM,MAAM,QAAQ+G,CAAmB,EAAIA,EAAsB,CAACA,CAAmB,EACrF,cAAA9G,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsB,kBACpC,OAAAz5B,CAAA,CACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,CACJ,EAEA23B,GAAA,YAAAA,EAAa,KAAK,IAAI,CAACz0B,EAASnY,IAC7BoC,EAAA,KAACwI,GAAA,CAEG,UAAW,GAAG8jC,IAAsBv2B,EAAQ,aAAe,yDAA2D,YAAY,GAElI,SAAA,CAAArb,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBACV,WAAQ,aACb,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACd,SAAA,CAAqBssC,GAAA5xC,EAAA,IAAC,MAAI,CAAA,UAAU,gEAC7B,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,EACtBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiBpN,EAAQ,YAAY,EACpD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAu2B,IAAsBv2B,EAAQ,aAC1Brb,EAAA,IAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACf,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACO,KAAMt1B,EAAQ,cAAgB,CAAC,EAC/B,cAAA2vB,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACAxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM1vB,EAAQ,aACd,cAAA2vB,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsBv2B,EAAQ,aAC7C,OAAAlD,CAAA,CACH,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,EA3DKjV,CAAA,EA6DZ,EACL,CACR,CAAA,CAAA,CAER,ECvOM6uC,GAAqD,CAAC,CAAE,UAAWxQ,KAAoB,CACzF,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAoBA,EAAM,KAAK,EAAE,EACvDsM,EAAOyC,EAAAA,QAAQ,KAAO,CACxB,KAAM+I,EACN,GAAIC,CACJ,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAACmyC,EAAmBC,CAAoB,EAAIpyC,WAAS,EAAE,EAGvDF,EAAOgF,EAAapC,GAAoBA,EAAM,KAAK,IAAI,EACvD,CAAE,QAAAkI,GAAY2P,KACdyO,EAAoB3H,GAAsB,CACvB+wB,EAAAD,IAAsB9wB,EAAY,GAAKA,CAAS,CAAA,EAEnEzG,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBkd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GAJW,MAAMhpB,EAAc,KAAK,8BAA8BlP,CAAO,GAAI,CAC/E,OAAQ9K,GAAA,YAAAA,EAAM,GAAI,UAAA8a,EAAsB,QAAAC,CAAA,EACzC,CAAE,gBAAiB,EAAA,CAAM,GAEC,MAAQ,GAErCy1B,EAAexN,CAAW,QAErBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE7C,CACEuX,EAAW,EAAK,CACpB,CACD,EAAA,CAACrS,EAASgQ,EAAWC,CAAQ,CAAC,EAEjCza,EAAAA,UAAU,IAAM,CACF22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACtC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACR0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACT+xC,GACCrQ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAACqQ,EAAmBrQ,CAAa,CAAC,EAEvC,MAAMrpB,EAAsB,IAAM,CACpBse,GAAA,EAGRwb,EAAuBlC,GAAA,YAAAA,EAAa,qBAGpC9E,EAAgB,aAChBE,EAAiB,cACjBD,EAAmB,CAAC,cAAe,qBAAqB,EACxDE,EAAiB,CAAC,QAAS,eAAe,EAC1ChzB,EAAS5T,EAAapC,GAAoBA,EAAM,OAAO,MAAM,EAGnE,OAAGsa,EACQzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAQ,CAAA,SAGjC,MAEG,CAAA,SAAA,CAAAzc,EAAAA,IAAC,OAAI,UAAU,mFACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAAAtF,EAAA,IAAC8I,GAAa,EAAA,QACb,MACG,CAAA,SAAA9I,EAAA,IAAC,MAAG,UAAU,uCAAuC,+BAAmB,CAC5E,CAAA,CAAA,CAAA,CACJ,CAEJ,CAAA,EAEIsF,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACT,SAAA,CAAwB0sC,GAAAA,EAAqB,OAAS,GACnD1sC,EAAA,KAACwI,GAAA,CACD,UAAW,GAAG8jC,IAAsB,kBAAoB,yDAA2D,YAAY,GAE/H,SAAA,CAAA5xC,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBAAsB,SAErC,kBAAA,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACV,SAAA,CAAqBssC,GAAA5xC,EAAA,IAAC,MAAI,CAAA,UAAU,gEACjC,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,EACtBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiB,iBAAiB,EACjD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAmpB,IAAsB,kBACnB5xC,EAAAA,IAACwqB,GAAS,CAAA,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACf,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACU,KAAMqB,GAAwB,CAAC,EAC/B,cAAAhH,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACHxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM,MAAM,QAAQiH,CAAoB,EAAIA,EAAuB,CAACA,CAAoB,EACxF,cAAAhH,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsB,kBACpC,OAAAz5B,CAAA,CACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,CACJ,EAEA23B,GAAA,YAAAA,EAAa,KAAK,IAAI,CAACz0B,EAASnY,IAC7BoC,EAAA,KAACwI,GAAA,CAEG,UAAW,GAAG8jC,IAAsBv2B,EAAQ,aAAe,yDAA2D,YAAY,GAElI,SAAA,CAAArb,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBACV,WAAQ,aACb,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACV,SAAA,CAAqBssC,GAAA5xC,EAAA,IAAC,MAAI,CAAA,UAAU,gEACjC,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,EACtBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiBpN,EAAQ,YAAY,EACpD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAu2B,IAAsBv2B,EAAQ,aAC1Brb,EAAA,IAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACf,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACO,KAAMt1B,EAAQ,eAAiB,CAAC,EAChC,cAAA2vB,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACAxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM1vB,EAAQ,cACd,cAAA2vB,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsBv2B,EAAQ,aAC5C,OAAAlD,CAAA,CACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,EA3DKjV,CAAA,EA6DZ,EACL,CACR,CAAA,CAAA,CAER,ECtOM+uC,GAAqD,CAAC,CAAE,UAAW1Q,KAAoB,CACzF,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CACxB,KAAM+I,EACN,GAAIC,CACJ,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChB,CAAC41B,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAACmyC,EAAmBC,CAAoB,EAAIpyC,WAAS,EAAE,EAEvDwC,EAAWuC,KACXjF,EAAQgF,EAAapC,GAAoBA,EAAM,KAAK,IAAI,EACxD,CAAE,QAAAkI,GAAY2P,KACdyO,EAAoB3H,GAAqB,CACtB+wB,EAAAD,IAAsB9wB,EAAY,GAAKA,CAAS,CAAA,EAEnEzG,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACrD0J,EAAS5T,EAAapC,GAAoBA,EAAM,OAAO,MAAM,EAE7DoX,EAAgBD,KAEhBkd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GAJW,MAAMhpB,EAAc,KAAK,6BAA6BlP,CAAO,GAAI,CAC9E,OAAQ9K,GAAA,YAAAA,EAAM,GAAI,UAAA8a,EAAsB,QAAAC,CAAA,EACzC,CAAE,gBAAiB,EAAA,CAAM,GAEC,MAAQ,GAErCy1B,EAAexN,CAAW,QAErBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE7C,CACEuX,EAAW,EAAK,CACpB,CACD,EAAA,CAACrS,EAASgQ,EAAWC,CAAQ,CAAC,EAEjCza,EAAAA,UAAU,IAAM,CACF22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACtC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACR0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACT+xC,GACCrQ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAACqQ,EAAmBrQ,CAAa,CAAC,EAEvC,MAAMrpB,EAAsB,IAAM,CACpBse,GAAA,EAGR0b,EAAsBpC,GAAA,YAAAA,EAAa,oBAGnC9E,EAAgB,YAChBE,EAAiB,cACjBD,EAAmB,CAAC,cAAe,qBAAqB,EACxDE,EAAiB,CAAC,QAAS,eAAe,EAGhD,OAAG1uB,EACQzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAQ,CAAA,SAIjC,MAEG,CAAA,SAAA,CAAAzc,EAAAA,IAAC,OAAI,UAAU,mFACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAAAtF,EAAA,IAAC8I,GAAa,EAAA,QACb,MACG,CAAA,SAAA9I,EAAA,IAAC,MAAG,UAAU,uCAAuC,6BAAiB,CAC1E,CAAA,CAAA,CAAA,CACJ,CAEJ,CAAA,EAEIsF,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACR,SAAA,CAAuB4sC,GAAAA,EAAoB,OAAS,GAClD5sC,EAAA,KAACwI,GAAA,CACD,UAAW,GAAG8jC,IAAsB,kBAAoB,yDAA2D,YAAY,GAE/H,SAAA,CAAA5xC,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBAAsB,SAErC,kBAAA,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACV,SAAA,CAAqBssC,GAAA5xC,EAAA,IAAC,MAAI,CAAA,UAAU,gEACjC,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,EACtBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiB,iBAAiB,EACjD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAmpB,IAAsB,kBACnB5xC,EAAAA,IAACwqB,GAAS,CAAA,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACf,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACU,KAAMuB,GAAuB,CAAC,EAC9B,cAAAlH,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACHxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM,MAAM,QAAQmH,CAAmB,EAAIA,EAAsB,CAACA,CAAmB,EACrF,cAAAlH,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsB,kBACpC,OAAAz5B,CAAA,CACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,CACJ,EAEA23B,GAAA,YAAAA,EAAa,KAAK,IAAI,CAACz0B,EAASnY,IAC7BoC,EAAA,KAACwI,GAAA,CAEG,UAAW,GAAG8jC,IAAsBv2B,EAAQ,aAAe,yDAA2D,YAAY,GAElI,SAAA,CAAArb,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBACV,WAAQ,aACb,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACd,SAAA,CAAqBssC,GAAA5xC,EAAA,IAAC,MAAI,CAAA,UAAU,gEAC7B,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,EACtBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiBpN,EAAQ,YAAY,EACpD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAu2B,IAAsBv2B,EAAQ,aAC1Brb,EAAA,IAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACV,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACE,KAAMt1B,EAAQ,aACd,cAAA2vB,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACAxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM1vB,EAAQ,aACd,cAAA2vB,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsBv2B,EAAQ,aAC5C,OAAAlD,CAAA,CACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,EA3DKjV,CAAA,EA6DZ,EACL,CACR,CAAA,CAAA,CAER,ECtOMivC,GAAoD,CAAC,CAAE,UAAW5Q,KAAoB,CACxF,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAACmyC,EAAmBC,CAAoB,EAAIpyC,WAAS,EAAE,EAGvDF,EAAOgF,EAAapC,GAAsBA,EAAM,KAAK,IAAI,EACzD,CAAE,QAAAkI,GAAY2P,KACdyO,EAAoB3H,GAAqB,CACtB+wB,EAAAD,IAAsB9wB,EAAY,GAAKA,CAAS,CAAA,EAEnEzG,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBkd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GAJW,MAAMhpB,EAAc,KAAK,4BAA4BlP,CAAO,GAAI,CAC7E,OAAQ9K,GAAA,YAAAA,EAAM,GAAI,UAAA8a,EAAsB,QAAAC,CAAA,EACzC,CAAE,gBAAiB,EAAA,CAAM,GAEC,MAAQ,GAErCy1B,EAAexN,CAAW,QAErBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE7C,CACEuX,EAAW,EAAK,CACpB,CACD,EAAA,CAACrS,EAASgQ,EAAWC,CAAQ,CAAC,EAEjCza,EAAAA,UAAU,IAAM,CACF22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACtC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACR0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACT+xC,GACCrQ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAACqQ,EAAmBrQ,CAAa,CAAC,EAEvC,MAAM6Q,EAAqBtC,GAAA,YAAAA,EAAa,mBAElC53B,EAAsB,IAAM,CACpBse,GAAA,EAIRwU,EAAgB,UAChBE,EAAiB,cACjBD,EAAmB,CAAC,cAAe,qBAAqB,EACxDE,EAAiB,CAAC,QAAS,eAAe,EAC1ChzB,EAAS5T,EAAapC,GAAoBA,EAAM,OAAO,MAAM,EAGnE,OAAGsa,EACQzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAQ,CAAA,SAGjC,MAEG,CAAA,SAAA,CAAAzc,EAAAA,IAAC,OAAI,UAAU,mFACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAAAtF,EAAA,IAAC8I,GAAa,EAAA,QACb,MACG,CAAA,SAAA9I,EAAA,IAAC,MAAG,UAAU,uCAAuC,4BAAgB,CACzE,CAAA,CAAA,CAAA,CACJ,CAEJ,CAAA,EAEIsF,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACT,SAAA,CAAsB8sC,GAAAA,EAAmB,OAAS,GAC/C9sC,EAAA,KAACwI,GAAA,CAED,UAAW,GAAG8jC,IAAsB,kBAAoB,yDAA2D,YAAY,GAE/H,SAAA,CAAA5xC,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBAAsB,SAErC,kBAAA,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACV,SAAA,CAAqBssC,GAAA5xC,EAAA,IAAC,MAAI,CAAA,UAAU,gEACjC,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,EACtBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiB,iBAAiB,EACjD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAmpB,IAAsB,kBACnB5xC,EAAAA,IAACwqB,GAAS,CAAA,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACf,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACU,KAAMyB,GAAqB,CAAC,EAC5B,cAAApH,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACHxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM,MAAM,QAAQqH,CAAkB,EAAIA,EAAqB,CAACA,CAAkB,EAClF,cAAApH,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsB,kBACpC,OAAAz5B,CAAA,CACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,CACJ,EAEA23B,GAAA,YAAAA,EAAa,KAAK,IAAI,CAACz0B,EAASnY,IAC7BoC,EAAA,KAACwI,GAAA,CAEG,UAAW,GAAG8jC,IAAsBv2B,EAAQ,aAAe,yDAA2D,YAAY,GAElI,SAAA,CAAArb,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBACV,WAAQ,aACb,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACd,SAAA,CAAqBssC,GAAA5xC,EAAA,IAAC,MAAI,CAAA,UAAU,gEAC7B,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,EACtBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiBpN,EAAQ,YAAY,EACpD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAu2B,IAAsBv2B,EAAQ,aAC1Brb,EAAA,IAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACV,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACE,KAAMt1B,EAAQ,aAAc,CAAC,EAC7B,cAAA2vB,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACAxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM1vB,EAAQ,YACd,cAAA2vB,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsBv2B,EAAQ,aAC5C,OAAAlD,CAAA,CACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,EA3DKjV,CAAA,EA6DZ,EACL,CACR,CAAA,CAAA,CAER,ECvOMmvC,GAAmD,CAAC,CAAE,UAAW9Q,KAAoB,CACvF,MAAM+Q,EAAW/tC,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CACxB,KAAMohC,EACN,GAAIp4B,CACJ,GAAA,CAACo4B,EAAUp4B,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAACmyC,EAAmBC,CAAoB,EAAIpyC,WAAS,EAAE,EACvDF,EAAQgF,EAAapC,GAAoBA,EAAM,KAAK,IAAI,EACxD,CAAE,QAAAkI,GAAY2P,KACdyO,EAAoB3H,GAAqB,CACtB+wB,EAAAD,IAAsB9wB,EAAY,GAAKA,CAAS,CAAA,EAEnEzG,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBkd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GAJW,MAAMhpB,EAAc,KAAK,2BAA2BlP,CAAO,GAAI,CAC5E,OAAQ9K,GAAA,YAAAA,EAAM,GAAI,UAAA8a,EAAsB,QAAAC,CAAA,EACzC,CAAE,gBAAiB,EAAA,CAAM,GAEC,MAAQ,GAErCy1B,EAAexN,CAAW,QAErBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE7C,CACEuX,EAAW,EAAK,CACpB,CACD,EAAA,CAACrS,EAASgQ,EAAWC,CAAQ,CAAC,EAEjCza,EAAAA,UAAU,IAAM,CACF22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACtC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACR0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACT+xC,GACCrQ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAACqQ,EAAmBrQ,CAAa,CAAC,EAEvC,MAAMrpB,EAAsB,IAAM,CACpBse,GAAA,EAGR+b,EAAoBzC,GAAA,YAAAA,EAAa,kBAGjC9E,EAAgB,SAChBE,EAAiB,cACjBD,EAAmB,CAAC,cAAe,qBAAqB,EACxDE,EAAiB,CAAC,QAAS,eAAe,EAC1ChzB,EAAS5T,EAAapC,GAAkBA,EAAM,OAAO,MAAM,EAGjE,OAAGsa,EACQzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAQ,CAAA,SAIjC,MAEG,CAAA,SAAA,CAAAzc,EAAAA,IAAC,OAAI,UAAU,mFACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAAAtF,EAAA,IAAC8I,GAAa,EAAA,QACb,MACG,CAAA,SAAA9I,EAAA,IAAC,MAAG,UAAU,uCAAuC,2BAAe,CACxE,CAAA,CAAA,CAAA,CACJ,CAEJ,CAAA,EAEIsF,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACT,SAAA,CAAqBitC,GAAAA,EAAkB,OAAS,GAC7CjtC,EAAA,KAACwI,GAAA,CAED,UAAW,GAAG8jC,IAAsB,kBAAoB,yDAA2D,YAAY,GAE/H,SAAA,CAAA5xC,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBAAsB,SAErC,kBAAA,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACV,SAAA,CAAqBssC,GAAA5xC,EAAA,IAAC,MAAI,CAAA,UAAU,gEACjC,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,EACtBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiB,iBAAiB,EACjD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAmpB,IAAsB,kBACnB5xC,EAAAA,IAACwqB,GAAS,CAAA,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACf,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACU,KAAM4B,GAAqB,CAAC,EAC5B,cAAAvH,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACHxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM,MAAM,QAAQwH,CAAiB,EAAIA,EAAoB,CAACA,CAAiB,EAC/E,cAAAvH,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsB,kBACpC,OAAAz5B,CAAA,CACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,CACJ,EAEA23B,GAAA,YAAAA,EAAa,KAAK,IAAI,CAACz0B,EAASnY,IAC7BoC,EAAA,KAACwI,GAAA,CAEG,UAAW,GAAG8jC,IAAsBv2B,EAAQ,aAAe,yDAA2D,YAAY,GAElI,SAAA,CAAArb,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBACV,WAAQ,aACb,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACd,SAAA,CAAAssC,SAAsB,MAAI,CAAA,UAAU,gEAC7B,SAAA5xC,MAAC6Q,IAAoB,CAAA,EACzB,QACC4gC,GAAqB,EAAA,EACtBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiBpN,EAAQ,YAAY,EACpD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAu2B,IAAsBv2B,EAAQ,aAC1Brb,EAAA,IAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACV,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACE,KAAMt1B,EAAQ,YAAc,CAAC,EAC7B,cAAA2vB,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACAxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM1vB,EAAQ,WACd,cAAA2vB,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsBv2B,EAAQ,aAC5C,OAAAlD,CAAA,CACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,EAzDKjV,CAAA,EA2DZ,EACL,CACR,CAAA,CAAA,CAER,ECpOMsvC,GAAkD,CAAC,CAAE,UAAWjR,KAAoB,CACtF,MAAM+Q,EAAW/tC,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CACxB,KAAMohC,EACN,GAAIp4B,CACJ,GAAA,CAACo4B,EAAUp4B,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAACmyC,EAAmBC,CAAoB,EAAIpyC,WAAS,EAAE,EAGvDF,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxD,CAAE,QAAAkI,GAAY2P,KACdyO,EAAoB3H,GAAsB,CACvB+wB,EAAAD,IAAsB9wB,EAAY,GAAKA,CAAS,CAAA,EAEnEzG,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBkd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GAJW,MAAMhpB,EAAc,KAAK,2BAA2BlP,CAAO,GAAI,CAC5E,OAAQ9K,GAAA,YAAAA,EAAM,GAAI,UAAA8a,EAAsB,QAAAC,CAAA,EACzC,CAAE,gBAAiB,EAAA,CAAM,GAEC,MAAQ,GAErCy1B,EAAexN,CAAW,QAErBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE7C,CACEuX,EAAW,EAAK,CACpB,CACD,EAAA,CAACrS,EAASgQ,EAAWC,CAAQ,CAAC,EAEjCza,EAAAA,UAAU,IAAM,CACF22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACtC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACR0hC,GACAt/B,EAASqO,GAAQ,CACb,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MAC3D,CAAA,CAAC,CACN,EACD,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACP+xC,GACGrQ,GACAt/B,EAASqO,GAAQ,CACb,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MAC3D,CAAA,CAAC,CAEV,EACD,CAACqQ,EAAmBrQ,CAAa,CAAC,EAErC,MAAMrpB,EAAsB,IAAM,CACpBse,GAAA,EAGRic,EAAoB3C,GAAA,YAAAA,EAAa,kBAEjC9E,EAAgB,SAChBE,EAAiB,cACjBD,EAAmB,CAAC,cAAe,qBAAqB,EACxDE,EAAiB,CAAC,QAAS,eAAe,EAC1ChzB,EAAS5T,EAAapC,GAAqBA,EAAM,OAAO,MAAM,EAGpE,OAAGsa,EACQzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAQ,CAAA,SAIjC,MAEG,CAAA,SAAA,CAAAzc,EAAAA,IAAC,OAAI,UAAU,mFACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAAAtF,EAAA,IAAC8I,GAAa,EAAA,QACb,MACG,CAAA,SAAA9I,EAAA,IAAC,MAAG,UAAU,uCAAuC,2BAAe,CACxE,CAAA,CAAA,CAAA,CACJ,CAEJ,CAAA,EAGIsF,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACT,SAAA,CAAqBmtC,GAAAA,EAAkB,OAAS,GAC9CntC,EAAA,KAACwI,GAAA,CAEG,UAAW,GAAG8jC,IAAsB,kBAAoB,yDAA2D,YAAY,GAE/H,SAAA,CAAA5xC,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBAAsB,SAErC,kBAAA,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACV,SAAA,CAAqBssC,GAAA5xC,EAAA,IAAC,MAAI,CAAA,UAAU,gEACjC,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,EACtBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiB,iBAAiB,EACjD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAmpB,IAAsB,kBACnB5xC,EAAAA,IAACwqB,GAAS,CAAA,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACX,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACG,KAAM8B,GAAqB,CAAC,EAC5B,cAAAzH,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACAxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM,MAAM,QAAQ0H,CAAiB,EAAIA,EAAoB,CAACA,CAAiB,EAC/E,cAAAzH,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsB,kBACpC,OAAAz5B,CAAA,CACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,CACJ,EAEH23B,GAAA,YAAAA,EAAa,KAAK,IAAI,CAACz0B,EAASnY,IAC7BoC,EAAA,KAACwI,GAAA,CAEG,UAAW,GAAG8jC,IAAsBv2B,EAAQ,aAAe,yDAA2D,YAAY,GAElI,SAAA,CAAArb,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBACV,WAAQ,aACb,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACV,SAAA,CAAqBssC,GAAA5xC,EAAA,IAAC,MAAI,CAAA,UAAU,gEACjC,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACF4gC,GAAqB,EAAA,EACnBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiBpN,EAAQ,YAAY,EACpD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAu2B,IAAsBv2B,EAAQ,aAC1Brb,EAAA,IAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACX,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACG,KAAMt1B,EAAQ,YAAc,CAAC,EAC7B,cAAA2vB,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACAxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM1vB,EAAQ,WACd,cAAA2vB,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsBv2B,EAAQ,aAC5C,WAAY,GACZ,OAAAlD,CAAA,CACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,EA5DKjV,CAAA,EA8DZ,EACL,CACR,CAAA,CAAA,CAER,ECzOMwvC,GAA+C,CAAC,CAAE,UAAWnR,KAAoB,CACnF,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CACxB,KAAM+I,EACN,GAAIC,CACJ,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChB,CAAC41B,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAACmyC,EAAmBC,CAAoB,EAAIpyC,WAAS,EAAE,EACvDwC,EAAWuC,KACX2T,EAAS5T,EAAapC,GAAoBA,EAAM,OAAO,MAAM,EAE7D5C,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxD,CAAE,QAAAkI,GAAY2P,KACdyO,EAAoB3H,GAAsB,CACvB+wB,EAAAD,IAAsB9wB,EAAY,GAAKA,CAAS,CAAA,EAEnEzG,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBkd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GAJW,MAAMhpB,EAAc,KAAK,wBAAwBlP,CAAO,GAAI,CACzE,OAAQ9K,GAAA,YAAAA,EAAM,GAAI,UAAA8a,EAAsB,QAAAC,CAAA,EACzC,CAAE,gBAAiB,EAAA,CAAM,GAEC,MAAQ,GAErCy1B,EAAexN,CAAW,QAErBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE7C,CACEuX,EAAW,EAAK,CACpB,CACD,EAAA,CAACrS,EAASgQ,EAAWC,CAAQ,CAAC,EAEjCza,EAAAA,UAAU,IAAM,CACF22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACtC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACR0hC,GACAt/B,EAASqO,GAAQ,CACb,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MAC3D,CAAA,CAAC,CACN,EACD,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACP+xC,GACGrQ,GACAt/B,EAASqO,GAAQ,CACb,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MAC3D,CAAA,CAAC,CAEV,EACD,CAACqQ,EAAmBrQ,CAAa,CAAC,EAGrC,MAAMyJ,EAAgB,MAChBE,EAAiB,cACjBD,EAAmB,CAAC,cAAe,qBAAqB,EACxDE,EAAiB,CAAC,QAAS,eAAe,EAE1CjzB,EAAsB,IAAM,CACpBse,GAAA,EAERmc,EAAiB7C,GAAA,YAAAA,EAAa,eAEpC,OAAGrzB,EACQzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAQ,CAAA,SAIjC,MAEG,CAAA,SAAA,CAAAzc,EAAAA,IAAC,OAAI,UAAU,mFACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAAAtF,EAAA,IAAC8I,GAAa,EAAA,QACb,MACG,CAAA,SAAA9I,EAAA,IAAC,MAAG,UAAU,uCAAuC,wBAAY,CACrE,CAAA,CAAA,CAAA,CACJ,CAEJ,CAAA,EAEIsF,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACT,SAAA,CAAkBqtC,GAAAA,EAAe,OAAS,GACxCrtC,EAAA,KAACwI,GAAA,CAEG,UAAW,GAAG8jC,IAAsB,kBAAoB,yDAA2D,YAAY,GAE/H,SAAA,CAAA5xC,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBAAsB,SAErC,kBAAA,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACV,SAAA,CAAqBssC,GAAA5xC,EAAA,IAAC,MAAI,CAAA,UAAU,gEACjC,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,EACtBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiB,iBAAiB,EACjD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAmpB,IAAsB,kBACnB5xC,EAAAA,IAACwqB,GAAS,CAAA,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACX,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACG,KAAMgC,GAAkB,CAAC,EACzB,cAAA3H,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACAxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM,MAAM,QAAQ4H,CAAc,EAAIA,EAAiB,CAACA,CAAc,EACtE,cAAA3H,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsB,kBACpC,OAAAz5B,CAAA,CACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,CACJ,EAEH23B,GAAA,YAAAA,EAAa,KAAK,IAAI,CAACz0B,EAASnY,IAC7BoC,EAAA,KAACwI,GAAA,CAEG,UAAW,GAAG8jC,IAAsBv2B,EAAQ,aAAe,yDAA2D,YAAY,GAElI,SAAA,CAAArb,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,sBACV,WAAQ,aACb,CAAA,EACJ,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACV,SAAA,CAAqBssC,GAAA5xC,EAAA,IAAC,MAAI,CAAA,UAAU,gEACjC,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,EACtBzxC,EAAA,IAACgB,EAAA,CACG,QAASkX,EACT,SAAUuE,EACV,KAAK,KACL,QAAQ,UACR,UAAU,iBAEV,eAACrE,GAAU,CAAA,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CAAA,CACtE,EACAzc,EAAA,IAACgB,EAAA,CACG,QAAS,IAAMynB,EAAiBpN,EAAQ,YAAY,EACpD,KAAK,KACL,QAAQ,UACR,UAAU,iBAET,SAAAu2B,IAAsBv2B,EAAQ,aAC1Brb,EAAA,IAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,EAE9BxqB,EAAAA,IAACyqB,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAEtC,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,QACCvc,GAAY,CAAA,UAAU,MACnB,SAAC5I,EAAA,KAAA,MAAA,CAAI,UAAU,6CACX,SAAA,CAAAtF,EAAA,IAAC2wC,GAAA,CACG,KAAMt1B,EAAQ,SAAW,CAAC,EAC1B,cAAA2vB,EACA,aAAcwG,GAAc,cAAgB,CAAC,CAAA,CACjD,EACAxxC,EAAA,IAAC+qC,GAAA,CACG,KAAM,MAAM,QAAQ1vB,EAAQ,OAAO,EAAIA,EAAQ,QAAU,CAACA,EAAQ,OAAO,EACzE,cAAA2vB,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAcyG,IAAsBv2B,EAAQ,aAC5C,OAAAlD,CAAA,CACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAAA,EA3DKjV,CAAA,EA6DZ,EACL,CACR,CAAA,CAAA,CAER,ECtQM0vC,GAAyB,IAAM,CACjC,MAAM34B,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CACxB,KAAM+I,EACN,GAAIC,CACJ,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChB,CAACwV,EAAWC,CAAY,EAAIlwB,WAAS,KAAK,EAE1CuR,EAAY,CACd,KAAMvC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,MAAA,EAGhC+gB,EAAO,CACT,CAAE,MAAO,MAAO,MAAO,KAAM,EAC7B,CAAE,MAAO,SAAU,MAAO,QAAS,EACnC,CAAE,MAAO,UAAW,MAAO,SAAU,EACrC,CAAE,MAAO,WAAY,MAAO,UAAW,EACvC,CAAE,MAAO,YAAa,MAAO,WAAY,EACzC,CAAE,MAAO,oBAAqB,MAAO,kBAAmB,EACxD,CAAE,MAAO,oBAAqB,MAAO,kBAAmB,CAAA,EAItDmB,EAAmBniB,GAAkB,CACvCmhB,EAAanhB,CAAK,CAAA,EAIlB,OAAAlJ,EAAA,KAAC,MAAI,CAAA,UAAU,4BACX,SAAA,CAAAtF,EAAA,IAACkJ,GAAmB,EAAA,EACpB5D,EAAAA,KAAC,MAAI,CAAA,UAAU,gDACT,SAAA,CAAC,CAAAmJ,EAAK,MAAQ,CAACA,EAAK,GAAOzO,EAAAA,IAAAwqC,GAAA,CAAmB,CAAA,EAGhDllC,EAAAA,KAAAwG,EAAA,SAAA,CAAA,SAAA,CAACxG,EAAAA,KAAA,MAAA,CAAI,UAAU,YACX,SAAA,CAAAtF,MAAC6X,IAAO,MAAM,eAAe,KAAMlN,GAAQ,eAAgB,GAAM,EAGjE3K,EAAAA,IAAC,MAAI,CAAA,UAAU,kCACX,SAAAA,EAAA,IAAC+pC,IAAW,KAAAva,EAAY,UAAAE,EAAsB,YAAaiB,CAAA,CAAiB,CAChF,CAAA,CAAA,EACJ,QAGC,MAAI,CAAA,UAAU,uBACX,SAACrrB,EAAA,KAAA,MAAA,CAAI,UAAU,sBACV,SAAA,CAAcoqB,IAAA,0BACV,MAAI,CAAA,GAAG,mBACJ,SAAC1vB,EAAA,IAAA2xC,GAAA,CAAiB,UAAA3gC,EAAsB,CAC5C,CAAA,EAEH0e,IAAc,aACV1vB,EAAAA,IAAA,MAAA,CAAI,GAAG,YACJ,SAAAA,EAAA,IAAC+xC,GAAkB,CAAA,UAAA/gC,CAAA,CAAsB,CAC7C,CAAA,EAEH0e,IAAc,YACV1vB,EAAAA,IAAA,MAAA,CAAI,GAAG,WACJ,SAAAA,EAAA,IAACiyC,GAAiB,CAAA,UAAAjhC,CAAA,CAAsB,CAC5C,CAAA,EAEH0e,IAAc,WACV1vB,EAAAA,IAAA,MAAA,CAAI,GAAG,UACJ,SAAAA,EAAA,IAACmyC,GAAgB,CAAA,UAAAnhC,CAAA,CAAsB,CAC3C,CAAA,EAEH0e,IAAc,oBACV1vB,EAAAA,IAAA,MAAA,CAAI,GAAG,mBACJ,SAAAA,EAAA,IAACqyC,GAAe,CAAA,UAAArhC,CAAA,CAAsB,CAC1C,CAAA,EAEH0e,IAAc,UACV1vB,EAAAA,IAAA,MAAA,CAAI,GAAG,SACJ,SAAAA,EAAA,IAACwyC,GAAe,CAAA,UAAAxhC,CAAA,CAAsB,CAC1C,CAAA,EAEH0e,IAAc,OACV1vB,EAAAA,IAAA,MAAA,CAAI,GAAG,MACJ,SAAAA,EAAA,IAAC0yC,GAAY,CAAA,UAAA1hC,CAAA,CAAsB,CACvC,CAAA,CAAA,CAAA,CAER,CACJ,CAAA,CAAA,EACA,QACCuM,GAAc,EAAA,CAAA,EACnB,CAEJ,CAAA,CAAA,CAGR,EC1FMs1B,GAAsB,CAC1B,OAAQ,CAAC,EACT,kBAAmB,CAAC,EACpB,eAAgB,KAChB,eAAgB,CAAC,EACjB,gBAAiB,EACnB,EAGMC,GAAyB,CAAC3wC,EAA4B2e,IAAsB,CAC3E3e,EAAM,WACTA,EAAM,SAAW,IAEdA,EAAM,SAAS2e,CAAS,IAC3B3e,EAAM,SAAS2e,CAAS,EAAI,CAAE,GAAG+xB,EAAoB,EAEzD,EAEME,GAAsB1vC,GAAY,CACtC,KAAM,iBACN,aAAc,CAAE,SAAU,EAAG,EAC7B,SAAU,CACR,YAAa,CAAClB,EAAOC,IAAmG,CACtH,KAAM,CAAE,UAAA0e,EAAW,KAAAhE,EAAM,UAAAk2B,EAAW,MAAAC,GAAU7wC,EAAO,QACrD0wC,GAAuB3wC,EAAO2e,CAAS,EAEvC,MAAMoyB,EAA0B,CAC9B,GAAI,KAAK,IAAI,EAAE,SAAS,EACxB,KAAAp2B,EACA,UAAAk2B,EACA,MAAAC,CAAA,EAEF9wC,EAAM,SAAS2e,CAAS,EAAE,OAAO,KAAKoyB,CAAQ,EAC9C/wC,EAAM,SAAS2e,CAAS,EAAE,kBAAoB,CAAA,EACxC3e,EAAA,SAAS2e,CAAS,EAAE,gBAAkB,EAC9C,EACA,YAAa,CAAC3e,EAAOC,IAAkE,CACrF,KAAM,CAAE,UAAA0e,EAAW,QAAAqyB,GAAY/wC,EAAO,QACtC0wC,GAAuB3wC,EAAO2e,CAAS,EACvC3e,EAAM,SAAS2e,CAAS,EAAE,OAAS3e,EAAM,SAAS2e,CAAS,EAAE,OAAO,OAAgBsyB,GAAAA,EAAM,KAAOD,CAAO,EACpGhxC,EAAM,SAAS2e,CAAS,EAAE,iBAAmBqyB,IACzChxC,EAAA,SAAS2e,CAAS,EAAE,eAAiB,KAE/C,EACA,mBAAoB,CAAC3e,EAAOC,IAAwF,CAClH,KAAM,CAAE,UAAA0e,EAAW,QAAAqyB,EAAS,aAAAE,CAAA,EAAiBjxC,EAAO,QACpD0wC,GAAuB3wC,EAAO2e,CAAS,EACjC,MAAAsyB,EAAQjxC,EAAM,SAAS2e,CAAS,EAAE,OAAO,KAAKwyB,GAAKA,EAAE,KAAOH,CAAO,EACrEC,GAAS,CAACA,EAAM,UAAU,SAASC,CAAY,GAC3CD,EAAA,UAAU,KAAKC,CAAY,CAErC,EACA,wBAAyB,CAAClxC,EAAOC,IAAwF,CACvH,KAAM,CAAE,UAAA0e,EAAW,QAAAqyB,EAAS,aAAAE,CAAA,EAAiBjxC,EAAO,QACpD0wC,GAAuB3wC,EAAO2e,CAAS,EACjC,MAAAsyB,EAAQjxC,EAAM,SAAS2e,CAAS,EAAE,OAAO,KAAKwyB,GAAKA,EAAE,KAAOH,CAAO,EACrEC,IACFA,EAAM,UAAYA,EAAM,UAAU,OAAO9B,GAAKA,IAAM+B,CAAY,EAEpE,EACA,qBAAsB,CAAClxC,EAAOC,IAAsE,CAClG,KAAM,CAAE,UAAA0e,EAAW,UAAAkyB,GAAc5wC,EAAO,QACxC0wC,GAAuB3wC,EAAO2e,CAAS,EACjC3e,EAAA,SAAS2e,CAAS,EAAE,kBAAoBkyB,CAChD,EACA,mBAAoB,CAAC7wC,EAAOC,IAAyE,CACnG,KAAM,CAAE,UAAA0e,EAAW,QAAAqyB,GAAY/wC,EAAO,QACtC0wC,GAAuB3wC,EAAO2e,CAAS,EACjC3e,EAAA,SAAS2e,CAAS,EAAE,eAAiBqyB,CAC7C,EACA,qBAAsB,CAAChxC,EAAOC,IAAkE,CAC9F,KAAM,CAAE,UAAA0e,EAAW,QAAAqyB,GAAY/wC,EAAO,QACtC0wC,GAAuB3wC,EAAO2e,CAAS,EACvC,MAAMyyB,EAAiBpxC,EAAM,SAAS2e,CAAS,EAAE,eAC7CyyB,EAAe,SAASJ,CAAO,EAC3BhxC,EAAA,SAAS2e,CAAS,EAAE,eAAiByyB,EAAe,OAAO7wC,GAAMA,IAAOywC,CAAO,EAErFhxC,EAAM,SAAS2e,CAAS,EAAE,eAAe,KAAKqyB,CAAO,CAEzD,EACA,mBAAoB,CAAChxC,EAAOC,IAAsE,CAChG,KAAM,CAAE,UAAA0e,EAAW,WAAA0yB,GAAepxC,EAAO,QACzC0wC,GAAuB3wC,EAAO2e,CAAS,EACjC3e,EAAA,SAAS2e,CAAS,EAAE,gBAAkB0yB,EACvCA,IACHrxC,EAAM,SAAS2e,CAAS,EAAE,kBAAoB,CAAA,EAElD,CACF,CACF,CAAC,EAac2yB,GAAAV,GAAoB,QClH7B5vC,GAAoC,CACxC,OAAQ,CAAC,EACT,cAAe,EACjB,EAEMuwC,GAAsBrwC,GAAY,CACtC,KAAM,iBACN,aAAAF,GACA,SAAU,CACR,mBAAoB,CAClBhB,EACAC,IACG,CACH,KAAM,CAAE,UAAA0e,EAAW,WAAA6yB,EAAY,MAAAplC,CAAA,EAAUnM,EAAO,QAG3CD,EAAM,OAAO2e,CAAS,IACnB3e,EAAA,OAAO2e,CAAS,EAAI,IAIvB3e,EAAM,OAAO2e,CAAS,EAAE6yB,CAAU,IACrCxxC,EAAM,OAAO2e,CAAS,EAAE6yB,CAAU,EAAI,CAAA,GAInCxxC,EAAM,OAAO2e,CAAS,EAAE6yB,CAAU,EAAE,SAASplC,CAAK,GACrDpM,EAAM,OAAO2e,CAAS,EAAE6yB,CAAU,EAAE,KAAKplC,CAAK,CAElD,EAEA,wBAAyB,CACvBpM,EACAC,IACG,CACH,KAAM,CAAE,UAAA0e,EAAW,WAAA6yB,EAAY,MAAAplC,CAAA,EAAUnM,EAAO,QAE5CD,EAAM,OAAO2e,CAAS,GAAK3e,EAAM,OAAO2e,CAAS,EAAE6yB,CAAU,IAC/DxxC,EAAM,OAAO2e,CAAS,EAAE6yB,CAAU,EAAIxxC,EAAM,OAAO2e,CAAS,EAAE6yB,CAAU,EACrE,OAAOC,GAAKA,IAAMrlC,CAAK,EAE9B,EAEA,kBAAmB,CAACpM,EAAOC,IAAmC,CAC5DD,EAAM,cAAgBC,EAAO,OAC/B,EAGA,mBAAoB,CAACD,EAAOC,IAAkC,CAC5D,MAAM0e,EAAY1e,EAAO,QACrBD,EAAM,OAAO2e,CAAS,IAClB3e,EAAA,OAAO2e,CAAS,EAAI,GAE9B,EACA,YAAa,CAAC3e,EAAOC,IAAgE,CACnF,KAAM,CAAE,UAAA0e,EAAW,MAAAvS,GAAUnM,EAAO,QAEhCD,EAAM,OAAO2e,CAAS,IACjB,OAAA,KAAK3e,EAAM,OAAO2e,CAAS,CAAC,EAAE,QAAS6yB,GAAe,CACrDxxC,EAAA,OAAO2e,CAAS,EAAE6yB,CAAU,EAAIxxC,EAAM,OAAO2e,CAAS,EAAE6yB,CAAU,EAAE,OACvEC,GAAMA,IAAMrlC,CAAA,EAIXpM,EAAM,OAAO2e,CAAS,EAAE6yB,CAAU,EAAE,SAAW,GACjD,OAAOxxC,EAAM,OAAO2e,CAAS,EAAE6yB,CAAU,CAC3C,CACD,EAGG,OAAO,KAAKxxC,EAAM,OAAO2e,CAAS,CAAC,EAAE,SAAW,GAC3C,OAAA3e,EAAM,OAAO2e,CAAS,EAGnC,EAIA,WAAY,CACV3e,EACAC,IAKG,CACH,KAAM,CAAE,UAAA0e,EAAW,iBAAA+yB,EAAkB,iBAAAC,CAAA,EAAqB1xC,EAAO,QAE7DD,EAAM,OAAO2e,CAAS,GACtB3e,EAAM,OAAO2e,CAAS,EAAE+yB,CAAgB,IAErC1xC,EAAM,OAAO2e,CAAS,EAAEgzB,CAAgB,IAC3C3xC,EAAM,OAAO2e,CAAS,EAAEgzB,CAAgB,EAAI,CAAA,GAI9C3xC,EAAM,OAAO2e,CAAS,EAAE+yB,CAAgB,EAAE,QAAiBtlC,GAAA,CACpDpM,EAAM,OAAO2e,CAAS,EAAEgzB,CAAgB,EAAE,SAASvlC,CAAK,GAC3DpM,EAAM,OAAO2e,CAAS,EAAEgzB,CAAgB,EAAE,KAAKvlC,CAAK,CACtD,CACD,EAEL,CACF,CACF,CAAC,EAEY,CACX,mBAAAwlC,GACA,wBAAAC,GACA,kBAAAC,GACA,mBAAAC,GACA,WAAAC,GAAW,YAAAC,EACb,EAAIV,GAAoB,QAETW,GAAAX,GAAoB,QChH7BY,GAAcC,GAAgB,CAClC,kBAAmBxF,GACnB,MAAO1nC,GACP,KAAM9D,GACN,KAAMiN,GACN,eAAgBijC,GAChB,eAAgBY,GAChB,UAAW39B,GACX,OAAQkB,EACV,CAAC,EAGK48B,GAAgB,CACpB,IAAK,OAAA,QACLC,GACA,UAAW,CAAC,oBAAqB,QAAS,OAAQ,OAAS,iBAAkB,iBAAkB,YAAY,QAAQ,CACrH,EAGMC,GAAmBC,GAAeH,GAAeF,EAAW,EAGrDM,GAAQC,GAAe,CAClC,QAASH,GACT,WAAaI,GACXA,EAAqB,CACnB,kBAAmB,CAEjB,eAAgB,CAAC,kBAAmB,oBAAqB,kBAAkB,CAC7E,CAAA,CACD,CACL,CAAC,EAEYC,GAAYC,GAAaJ,EAAK,ECzCrCK,GAAgBl0C,GACpB,uKACA,CACE,SAAU,CACR,QAAS,CACP,QACE,mFACF,UACE,kFACF,YACE,+FACF,QAAS,iBACX,CACF,EACA,gBAAiB,CACf,QAAS,SACX,CACF,CACF,EAMA,SAASm0C,GAAM,CAAE,UAAAx0C,EAAW,QAAAO,EAAS,GAAGL,GAAqB,CAC3D,OACGZ,EAAA,IAAA,MAAA,CAAI,UAAWI,GAAG60C,GAAc,CAAE,QAAAh0C,CAAQ,CAAC,EAAGP,CAAS,EAAI,GAAGE,CAAO,CAAA,CAE1E,CC9BA,MAAMu0C,GAAe,CACjB,CACI,GAAI,OACJ,MAAO,YACP,MAAO,OACP,YAAa,6CACb,SAAU,CACN,4BACA,sBACA,qBACA,gBACA,eACJ,EACA,WAAY,aAChB,EACA,CACI,GAAI,UACJ,MAAO,eACP,MAAO,MACP,OAAQ,SACR,YAAa,+BACb,SAAU,CACN,0BACA,sBACA,oBACA,mBACA,wBACJ,EACA,UAAW,GACX,WAAY,eAChB,EACA,CACI,GAAI,SACJ,MAAO,cACP,MAAO,MACP,OAAQ,SACR,YAAa,gCACb,SAAU,CACN,6BACA,sBACA,sBACA,sBACA,oBACJ,EACA,WAAY,eAChB,CACJ,EAEA,SAASC,IAAU,CACf,aACK,MAAI,CAAA,UAAU,4BACV,SAAaD,GAAA,IAAKE,GACf/vC,EAAA,KAAC,MAAA,CAEG,UAAW,mHAAmH+vC,EAAK,UAAY,6BAA+B,kBAC1K,GAGJ,SAAA,CAAA/vC,EAAA,KAAC,MAAA,CACG,UAAW,kCAAkC+vC,EAAK,KAAO,OACnD,yCACAA,EAAK,KAAO,UACR,2CACA,wCACN,GAEH,SAAA,CAAAA,EAAK,WACF/vC,OAAC,MAAI,CAAA,UAAU,8FACX,SAAA,CAACtF,EAAAA,IAAAs1C,GAAA,CAAK,UAAU,0CAA2C,CAAA,EAAE,UAAA,EACjE,EAIHt1C,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAoC,WAAK,MAAM,EAE7DsF,EAAAA,KAAC,MAAI,CAAA,UAAU,2BACX,SAAA,CAAAtF,EAAA,IAAC,OAAA,CACG,UAAW,sBAAsBq1C,EAAK,KAAO,OAAS,gBAAkBA,EAAK,KAAO,UAAY,kBAAoB,eAChH,GAEH,SAAKA,EAAA,KAAA,CACV,EACCA,EAAK,QAAUr1C,EAAA,IAAC,QAAK,UAAU,sBAAuB,WAAK,OAAO,CAAA,EACvE,EAECA,EAAA,IAAA,IAAA,CAAE,UAAU,0CAA2C,WAAK,YAAY,CAAA,CAAA,CAC7E,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,0BAA2B,CAAA,EAG1CsF,EAAAA,KAAC,MAAI,CAAA,UAAU,eACX,SAAA,CAAAtF,EAAA,IAAC,KAAG,CAAA,UAAU,YACT,SAAAq1C,EAAK,SAAS,IAAI,CAACE,EAASryC,IACzBoC,OAAC,KAAe,CAAA,UAAU,mBACtB,SAAA,CAAAtF,EAAA,IAAC,MAAA,CACG,UAAW,2CAA2Cq1C,EAAK,KAAO,OAC5D,4BACAA,EAAK,KAAO,UACR,gCACA,2BACN,GAEJ,SAAAr1C,EAAAA,IAACwhB,GAAM,CAAA,UAAU,SAAU,CAAA,CAAA,CAC/B,EACCxhB,EAAA,IAAA,OAAA,CAAK,UAAU,8BAA+B,SAAQu1C,EAAA,CAAA,GAXlDryC,CAYT,CACH,EACL,QAGC,MAAI,CAAA,UAAU,OACX,SAAClD,MAAAonB,GAAA,CAAK,GAAG,kDACT,SAAApnB,EAAA,IAAC,SAAA,CACG,UAAW,uEAAuEq1C,EAAK,KAAO,OACxF,2CACAA,EAAK,KAAO,UACR,+CACA,0CACN,GAEH,SAAKA,EAAA,UAAA,GAEV,CACJ,CAAA,CAAA,EACJ,CAAA,CAAA,EAzEKA,EAAK,EA2EjB,CAAA,CACL,CAAA,CAER,CClHA,SAASG,IAAc,CACnB,KAAM,CAAC9lB,EAAWC,CAAY,EAAIlwB,WAAS,QAAQ,EAC7CF,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxDszC,EAAal2C,GAAA,YAAAA,EAAM,OACnBqK,EAASrF,EAAapC,GAAqBA,EAAM,MAAM,MAAM,EAE7DuzC,EAAiBD,GAAA,YAAAA,EAAY,IAAKprC,GAAY,CAChD,MAAMmB,EAAQ5B,EAAO,KAAMoB,GAAMA,EAAE,MAAQX,CAAO,EAC3C,OAAAmB,EAAQA,EAAM,KAAO,eAAA,GAG1BmqC,EAAkB,SAAY,CAC5B,GAAA,CACF,MAAM5wC,EAAW,MAAME,GAAM,IAAI,GAAGD,EAAO,gBAAgB,EACrD,CAAE,QAAAK,CAAQ,EAAIN,EAAS,KAE7B,OAAO,SAAS,KAAOM,QAChBF,EAAO,CACN,QAAA,MAAM,+BAAgCA,CAAK,CACrD,CAAA,EAGEhB,EAAWC,KAGb,OAAAkB,EAAA,KAAC,MAAI,CAAA,UAAU,gBAAgB,SAAA,CAAA,UAC1B4D,GAAmB,EAAA,EACnBlJ,MAAA,MAAA,CAAI,UAAU,gCACX,eAAC,MAAI,CAAA,UAAU,2BACX,SAAAA,EAAA,IAAC,OAAI,UAAU,8BACX,SAACsF,OAAA,MAAA,CAAI,UAAU,gCAEX,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,gCACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,yBACX,SAAA,CAACtF,EAAA,IAAA,MAAA,CAAI,UAAU,uEACX,SAACA,EAAAA,IAAA,OAAA,CAAK,UAAU,oCAAqC,SAAMT,GAAA,YAAAA,EAAA,SAAS,EAAG,CAAA,EAC3E,EACA+F,EAAAA,KAAC,MAAI,CAAA,UAAU,SACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAAAtF,EAAA,IAAC,KAAG,CAAA,UAAU,wCAAyC,SAAAT,GAAA,YAAAA,EAAM,SAAS,GACrEA,GAAA,YAAAA,EAAM,UACF+F,OAAA4vC,GAAA,CAAM,UAAU,mDACb,SAAA,CAACl1C,EAAAA,IAAA41C,GAAA,CAAO,UAAU,cAAe,CAAA,EAAE,eAAA,EAEvC,CAAA,EAER,QACC,MAAI,CAAA,UAAU,8BACX,SAACtwC,EAAA,KAAA,MAAA,CAAI,UAAU,yCACX,SAAA,CAACtF,EAAAA,IAAAwF,GAAA,CAAK,UAAU,SAAU,CAAA,EAC1BxF,EAAAA,IAAC,OAAM,CAAA,SAAAT,GAAA,YAAAA,EAAM,KAAM,CAAA,CAAA,CAAA,CACvB,CACJ,CAAA,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,EAGCS,EAAA,IAAA,MAAA,CAAI,UAAU,4BACX,eAAC,MAAI,CAAA,UAAU,YACV,SAAA,CAAC,SAAU,UAAU,SAAU,EAAE,IAAKixB,GACnC3rB,EAAA,KAAC,SAAA,CAEG,QAAS,IAAMqqB,EAAasB,EAAI,aAAa,EAC7C,UAAW,4DAA4DvB,IAAcuB,EAAI,cACnF,gBACA,qCACF,GAEH,SAAA,CAAAA,EACAvB,IAAcuB,EAAI,eACdjxB,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,CAAA,CAAA,EATnEixB,CAAA,CAYZ,EACL,CACJ,CAAA,EAGCvB,EAAU,YAAY,IAAM,UACzB1vB,EAAAA,IAAC,MAAI,CAAA,UAAU,MACX,SAAAsF,EAAA,KAAC,MAAI,CAAA,UAAU,uDACX,SAAA,CAACA,EAAAA,KAAAtE,EAAA,CAAO,QAAS,IAAKmD,EAAS,cAAc,EAAG,QAAQ,UAAU,UAAU,iBACxE,SAAA,CAACnE,EAAAA,IAAA61C,GAAA,CAAK,UAAU,cAAe,CAAA,EAAE,eAAA,EAErC,EACCH,GAAA,YAAAA,EAAgB,IAAKlqC,GAClBlG,EAAA,KAAC,MAAA,CAEG,UAAU,oFAEV,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,uEACX,eAACkkB,GAAU,CAAA,UAAU,wBAAwB,CACjD,CAAA,SACC,MACG,CAAA,SAAA,CAAClkB,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA8B,SAAMwL,EAAA,EACjDxL,EAAA,IAAA,OAAA,CAAK,UAAU,yBAAyB,SAAS,YAAA,CAAA,EACtD,CAAA,EACJ,EACCA,EAAA,IAAAgB,EAAA,CAAO,QAAQ,QAAQ,KAAK,OAAO,UAAU,iBAC1C,SAAChB,EAAA,IAAAqY,GAAA,CAAS,UAAU,SAAU,CAAA,EAClC,CAAA,EACJ,EACA/S,EAAAA,KAAC,MAAI,CAAA,UAAU,YACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4CACX,SAAA,CAACtF,EAAA,IAAA,OAAA,CAAK,UAAU,iBAAiB,SAAkB,qBAAA,EAClDA,EAAA,IAAAk1C,GAAA,CAAM,UAAU,4BAA4B,SAAM,SAAA,CAAA,EACvD,EACA5vC,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACX,SAAA,CAAAtF,EAAAA,IAACgB,GAAO,QAAQ,UAAU,KAAK,KAAK,UAAU,iBAAiB,SAE/D,QAAA,CAAA,EACAhB,EAAA,IAACgB,EAAA,CACG,QAAQ,QACR,KAAK,OACL,UAAU,kCAEV,SAAAhB,EAAAA,IAACgvB,GAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAChC,CAAA,EACJ,CAAA,EACJ,CAAA,CAAA,EAlCKxjB,CAAA,EAoCZ,CAAA,CACL,CAGJ,CAAA,EAEFkkB,EAAU,YAAY,IAAM,WAC1B1vB,EAAAA,IAAC,OAAI,UAAU,MACZ,SAACA,EAAAA,IAAAo1C,GAAA,CAAA,CAAQ,CACZ,CAAA,EAEH1lB,EAAU,YAAkB,IAAA,YAAanwB,GAAA,YAAAA,EAAM,UAC5CS,EAAA,IAAC,MAAI,CAAA,UAAU,8CACX,SAACsF,EAAAA,KAAAtE,EAAA,CAAO,QAAS20C,EAAiB,UAAU,gCACxC,SAAA,CAAC31C,EAAAA,IAAA4O,GAAA,CAAW,UAAU,cAAe,CAAA,EAAE,wBAAA,CAAA,CAE3C,CACJ,CAAA,CAAA,EAER,CAAA,CACJ,CACJ,CAAA,EACJ,CACJ,CAAA,CAAA,CAER,CC9JA,MAAMknC,GAAkD,CAAC,CAAE,SAAAx2C,KAAe,CACxE,MAAM2C,EAAWuC,KAEXuS,EADWvN,KACY,SAEvBusC,EAAmBxxC,EAAapC,GAAqBA,EAAM,UAAU,gBAAgB,EACrF5C,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAExD6U,EAAmBzS,EAAapC,GAAqBA,EAAM,UAAU,gBAAgB,EACrF6zC,EAAgBzxC,EAAapC,GAAqBA,EAAM,UAAU,aAAa,EAC/E8zC,EAAiB1xC,EAAapC,GAAqBA,EAAM,UAAU,cAAc,EAGjF+zC,EAAyBxpC,GAAM,OAAO,EAAK,EAGjD7M,OAAAA,EAAAA,UAAU,IAAM,CACV,GAAAN,GAAQ,CAAC22C,EAAuB,QAAS,CAErC,MAAAC,EAAe52C,EAAK,aAAe,EAEzC,QAAQ,IAAI,qBAAsB,CAChC,WAAYA,EAAK,WACjB,aAAA42C,CAAA,CACD,EAEQl0C,EAAAgU,GAAkBkgC,CAAY,CAAC,CAC1C,CAAA,EACC,CAAC52C,EAAM0C,CAAQ,CAAC,EAEnBpC,EAAAA,UAAU,IAAM,CAEd,QAAQ,IAAI,0BAA2B,CACrC,OAAQo2C,EACR,YAAaD,EAAc,OAC3B,MAAOA,CAAA,CACR,CAAA,EACA,CAACC,EAAgBD,CAAa,CAAC,EAGlCn2C,EAAAA,UAAU,IAAM,CAEVq2C,EAAuB,SAAWD,IAAmB,MAAQ,CAACj/B,IAChE,QAAQ,IAAI,8DAA8D,EAC1E/U,EAASsU,IAAwB,EAElC,EAAA,CAAC0/B,EAAgBj/B,EAAkB/U,CAAQ,CAAC,EAG/CpC,EAAAA,UAAU,IAAM,CAEd,GAAIq2C,EAAuB,QACzB,OAIF,MAAME,EAAuBL,GACFx2C,GACA,CAACyX,GACDg/B,EAAc,SAAW,EAUpD,GARA,QAAQ,IAAI,uBAAwB,CAClC,iBAAAD,EACA,QAAS,CAAC,CAACx2C,EACX,iBAAAyX,EACA,YAAag/B,EAAc,OAC3B,qBAAAI,CAAA,CACD,EAEGA,EAAsB,CAElB,MAAAC,EAAQ,WAAW,IAAM,CAEvB,MAAAn/B,EAAe3B,GAAuBwB,CAAW,EAOnD,GALJ,QAAQ,IAAI,gCAAiC,CAC3C,KAAMA,EACN,aAAAG,CAAA,CACD,EAEGA,EAAa,OAAS,EAAG,CAE3B,MAAMC,EAAcD,EAAa,IAAIjC,GAAYA,EAAS,EAAE,EAEpD,QAAA,IAAI,sBAAuBkC,CAAW,EACrClV,EAAAiU,GAAeiB,CAAW,CAAC,EAGpC++B,EAAuB,QAAU,EAAA,MAEjC,QAAQ,IAAI,sCAAsC,GAEnD,IAAI,EAEA,MAAA,IAAM,aAAaG,CAAK,CACjC,CAAA,EACC,CAACN,EAAkBx2C,EAAMwX,EAAaC,EAAkBg/B,EAAe/zC,CAAQ,CAAC,oBAEzE,SAAA3C,CAAS,CAAA,CACrB,ECtGMg3C,GAA2B,IAAM,CACrC,MAAMr0C,EAAWuC,KACX+xC,EAAoB7sC,SAAsB,IAAI,EAE9CusC,EAAiB1xC,EAAapC,GAAqBA,EAAM,UAAU,cAAc,EACjF6U,EAAmBzS,EAAapC,GAAqBA,EAAM,UAAU,gBAAgB,EACrFq0C,EAAqBjyC,EAAapC,GAAqBA,EAAM,UAAU,kBAAkB,EACzF6zC,EAAgBzxC,EAAapC,GAAqBA,EAAM,UAAU,aAAa,EAGrFtC,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAIo2C,GAAkBj/B,EAAkB,CAC9B,QAAA,IAAI,sBAAsBi/B,CAAc,aAAaD,EAAc,KAAK,IAAI,CAAC,GAAG,EAElF,MAAAt0B,EAAQvM,GAAiB8gC,CAAc,EAEzCv0B,GAASA,EAAM,OAAS,GAEtB60B,EAAkB,UACpBA,EAAkB,QAAQ,UAC1BA,EAAkB,QAAU,MAI9B,WAAW,IAAM,CAEf,IAAIE,EAAmB,GASvB,GARA/0B,EAAM,QAAgByC,GAAA,CACJ,SAAS,cAAcA,EAAK,OAAO,IAEjD,QAAQ,KAAK,WAAWA,EAAK,OAAO,2BAA2B8xB,CAAc,EAAE,EAC5DQ,EAAA,GACrB,CACD,EAEG,CAACA,EAAkB,CACb,QAAA,KAAK,iCAAiCR,CAAc,8CAA8C,EAC1Gh0C,EAASmU,IAAc,EACvB,MACF,CAGA,MAAMsgC,EAAiBC,GAAS,CAC9B,aAAc,GACd,aAAc,GACd,QAAS,GACT,WAAY,GACZ,aAAc,GACd,MAAAj1B,EACA,mBAAqBk1B,GAAY,CAC/B,MAAMC,EAAmBn1B,EAAM,aAAkByC,EAAK,WAAYyyB,GAAA,YAAAA,EAAS,GAAE,EAC7E30C,EAASoU,GAAgBwgC,GAAoB,EAAIA,EAAmB,CAAC,CAAC,CACxE,EAEA,YAAa,IAAM,CAEjBN,EAAkB,QAAU,KAGtB,MAAAO,EAAmBxhC,GAAoB2gC,CAAc,EAEvDa,EAAiB,OAAS,IAC5B,QAAQ,IAAI,+BAA+BA,EAAiB,KAAK,IAAI,CAAC,EAAE,EAE/D70C,EAAAiU,GAAe4gC,CAAgB,CAAC,GAI3C,QAAQ,IAAI,yBAAyB,EACrC70C,EAASmU,IAAc,CACzB,CAAA,CACD,EAGGogC,EAAqB,GAAKA,EAAqB90B,EAAM,OAExCg1B,EAAA,UAAUh1B,EAAM80B,CAAkB,CAAC,EAElDE,EAAe,MAAM,EAIvBH,EAAkB,QAAUG,GAE3B,GAAG,IAEE,QAAA,MAAM,kCAAkCT,CAAc,EAAE,EAChEh0C,EAASmU,IAAc,EAE3B,CAGA,MAAO,IAAM,CACPmgC,EAAkB,UACpBA,EAAkB,QAAQ,UAC1BA,EAAkB,QAAU,KAC9B,CAED,EAAA,CAACN,EAAgBj/B,EAAkB/U,CAAQ,CAAC,EAGxC,IACT,EC3GA,SAAS80C,IAAM,CAEX,OAAA/2C,EAAAA,IAAC,UAAQ,CAAA,UAAU,uDACjB,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,yBACb,SAAAsF,EAAA,KAAC,MAAI,CAAA,UAAU,kEACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,kDAAkD,SAEhE,wCAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,2BAA2B,SAExC,mFAAA,CAAA,EACF,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAAAtF,EAAA,IAAConB,GAAK,CAAA,GAAG,SACT,SAAApnB,EAAAA,IAACgB,EAAO,CAAA,KAAK,KAAK,QAAQ,YAAY,UAAU,yCAAyC,SAAA,kBAEzF,CAAA,EACA,EACAhB,EAAAA,IAACgB,GAAO,KAAK,KAAK,QAAQ,UAAU,UAAU,2CAA2C,SAEzF,iBAAA,CAAA,CAAA,EACF,EACAsE,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,CAAA,iBACpB,UACd8hB,GAAK,CAAA,GAAG,IAAI,UAAU,0CAA0C,SAEjE,2BAAA,CAAA,EACF,CAAA,EACF,EACF,CACF,CAAA,CAEJ,CCjCA,MAAM4vB,GAAU,CAAC,CACb,MAAAjwC,EACA,YAAAC,EACA,KAAAmG,EACA,MAAAjK,CACJ,IAOQoC,EAAA,KAAC,MAAA,CACG,UAAWlF,GACP,mFACC8C,IAAU,GAAKA,IAAU,IAAM,sCAChCA,EAAQ,GAAK,qCACjB,EAEC,SAAA,CAAAA,EAAQ,GACLlD,EAAA,IAAC,MAAI,CAAA,UAAU,2LAA2L,EAE7MkD,GAAS,GACLlD,EAAA,IAAA,MAAA,CAAI,UAAU,2LAA2L,EAE7MA,EAAA,IAAA,MAAA,CAAI,UAAU,kEACV,SACLmN,EAAA,EACA7H,EAAAA,KAAC,MAAI,CAAA,UAAU,6CACX,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,wMAAyM,CAAA,EACvNA,EAAA,IAAA,OAAA,CAAK,UAAU,gHACX,SACL+G,EAAA,CAAA,EACJ,EACC/G,EAAA,IAAA,IAAA,CAAE,UAAU,8EACR,SACLgH,EAAA,CAAA,CAAA,CAAA,EAKNiwC,GAAmB,CACrB,CACI,MAAO,oBACP,YAAa,sEACb,KAAMj3C,EAAAA,IAACqnB,GAAU,CAAA,UAAU,sBAAuB,CAAA,CACtD,EACA,CACI,MAAO,6BACP,YAAa,6DACb,KAAMrnB,EAAAA,IAACyzB,GAAO,CAAA,UAAU,sBAAuB,CAAA,CACnD,EACA,CACI,MAAO,uBACP,YAAa,iEACb,KAAMzzB,EAAAA,IAAC0K,GAAU,CAAA,UAAU,sBAAuB,CAAA,CACtD,EACA,CACI,MAAO,uBACP,YAAa,0EACb,KAAM1K,EAAAA,IAACi2B,GAAM,CAAA,UAAU,sBAAuB,CAAA,CAClD,EACA,CACI,MAAO,0BACP,YAAa,6DACb,KAAMj2B,EAAAA,IAACwF,GAAK,CAAA,UAAU,sBAAuB,CAAA,CACjD,EACA,CACI,MAAO,oBACP,YAAa,iEACb,KAAMxF,EAAAA,IAACk3C,GAAO,CAAA,UAAU,sBAAuB,CAAA,CACnD,EACA,CACI,MAAO,sBACP,YAAa,yDACb,KAAMl3C,EAAAA,IAACyK,GAAc,CAAA,UAAU,sBAAuB,CAAA,CAC1D,EACA,CACI,MAAO,6BACP,YAAa,0DACb,KAAMzK,EAAAA,IAACk2B,GAAW,CAAA,UAAU,sBAAuB,CAAA,CACvD,CACJ,EAEA,SAASihB,IAAW,CAEZ,OAAAn3C,EAAA,IAAC,WAAQ,GAAG,WAAW,UAAU,kDAC7B,SAAAsF,EAAA,KAAC,MAAI,CAAA,UAAU,yBACX,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,uEACX,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,YACX,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,4EAA4E,SAE1F,oCAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,iDAAiD,SAE9D,sEAAA,CAAA,CAAA,CACJ,CAEJ,CAAA,QACC,MAAI,CAAA,UAAU,uFACV,SAAAi3C,GAAiB,IAAI,CAAC1B,EAASryC,IAC5BlD,MAACg3C,IAA6B,GAAGzB,EAAS,MAAAryC,GAA5BqyC,EAAQ,KAAkC,CAC3D,EACL,CAAA,CACJ,CAAA,CACJ,CAAA,CAER,CC1GA,SAAS6B,IAAS,CAEZ,OAAAp3C,EAAAA,IAAC,SAAO,CAAA,UAAU,0CAChB,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,uDACb,SAAAsF,EAAA,KAAC,MAAI,CAAA,UAAU,uCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gEACf,SAAA,CAAAtF,MAAC,OAAI,IAAKgI,GAAM,IAAI,eAAe,UAAU,UAAU,EACpDhI,EAAA,IAAA,OAAA,CAAK,UAAU,iBAAiB,SAAS,YAAA,CAAA,EAC5C,EAGCA,EAAA,IAAA,IAAA,CAAE,UAAU,8CAA8C,SAE3D,4DAAA,EAGAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,qCACb,SAAA,CAAAtF,EAAA,IAAConB,GAAA,CACC,GAAG,kBACH,UAAU,gDACX,SAAA,gBAAA,CAED,EACCpnB,EAAA,IAAA,OAAA,CAAK,UAAU,iBAAiB,SAAC,IAAA,EAClCA,EAAA,IAAConB,GAAA,CACC,GAAG,IACH,UAAU,gDACX,SAAA,kBAAA,CAED,CAAA,EACF,CAAA,EACF,EACF,CACF,CAAA,CAEJ,CCnCF,MAAMiwB,GAAqB,IAAM,CAC7B,MAAM/2B,EAAO,CAAA,EACP9N,MAAY,KAElB,IAAI8kC,EAAY,KAEhB,QAASpjB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACnB,MAAAzlB,EAAO,IAAI,KAAK+D,CAAK,EAC3B/D,EAAK,QAAQA,EAAK,QAAQ,GAAK,GAAKylB,EAAE,EAChC,MAAAuR,EAAMh3B,EAAK,UAGJ6oC,GAAA,KAAK,SAAW,KAAO,IAGpC,MAAMC,EAAe,KAAK,OAAO,EAAI,GAAM,KAAK,OAAO,EAAI,IAAQ,IAAO,KAAK,OAAA,EAAW,IAAO,KAE3F/oC,EAAQ,KAAK,MAAM8oC,EAAYC,CAAW,EAEhDj3B,EAAK,KAAK,CACN,KAAMmlB,EACN,MAAO,KAAK,IAAIj3B,EAAO,GAAI,CAAA,CAC9B,CACL,CAEO8R,OAAAA,CACX,EAGMA,GAAO+2B,GAAmB,EAEhC,SAASG,IAAc,CAEjB,OAAAlyC,EAAA,KAAC,MAAI,CAAA,UAAU,2DAEb,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,yHAA0H,CAAA,EAEzIA,EAAA,IAAC,MAAI,CAAA,UAAU,yCACb,SAAAA,EAAA,IAAC,MAAI,CAAA,UAAU,QAIb,SAAAsF,OAAC,MAAI,CAAA,UAAU,sCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,2CACf,SAAA,CAAAtF,EAAAA,IAAC,OAAI,UAAU,2BACf,SAACsF,EAAA,KAAA,MAAA,CAAI,UAAU,yHACb,SAAA,CAACtF,EAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,SAAC,IAAA,EAAO,sCAAA,CAAA,CAE9D,CACF,CAAA,EAEIA,EAAAA,IAAC,MAAG,UAAU,oFACZ,eAAC,OAAK,CAAA,UAAU,aAAa,SAAA,sCAAA,CAAoC,CACnE,CAAA,EAECA,EAAA,IAAA,IAAA,CAAE,UAAU,uDAAuD,SAEpE,wIAAA,EAEAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,qEACf,SAAA,CAACtF,EAAAA,IAAAonB,GAAA,CAAK,GAAG,SACP,SAAA9hB,EAAAA,KAACtE,GAAO,KAAK,KAAK,UAAU,yDAAyD,SAAA,CAAA,oBAClEhB,EAAAA,IAACqkB,GAAW,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CACxD,CACA,CAAA,EACArkB,EAAAA,IAACgB,GAAO,KAAK,KAAK,QAAQ,UAAU,UAAU,iEAAiE,SAE/G,WAAA,CAAA,CAAA,EACF,CAAA,EACF,EAGAsE,EAAAA,KAAC,MAAI,CAAA,UAAU,WACjB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gEAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,mCAAoC,CAAA,EACnDA,EAAAA,IAAC,MAAI,CAAA,UAAU,mCAAoC,CAAA,EACnDA,EAAAA,IAAC,MAAI,CAAA,UAAU,mCAAoC,CAAA,CAAA,EACrD,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,iEACb,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,qCAAsC,CAAA,EACpDA,EAAA,IAAA,OAAA,CAAK,UAAU,yBAAyB,SAAY,eAAA,CAAA,EACvD,CAAA,EACF,EAGAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,uCAAuC,SAAkB,qBAAA,EACvEA,EAAAA,IAACgB,GAAO,QAAQ,UAAU,KAAK,KAAK,UAAU,mBAAmB,SAEjE,QAAA,CAAA,CAAA,EACF,EAGAsE,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iCACb,SAAA,CAACtF,EAAA,IAAA,MAAA,CAAI,UAAU,yBAAyB,SAAO,UAAA,EAC9CA,EAAA,IAAA,MAAA,CAAI,UAAU,0BAA0B,SAAM,SAAA,EAC9CA,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAM,SAAA,CAAA,EACvD,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAACtF,EAAA,IAAA,MAAA,CAAI,UAAU,yBAAyB,SAAM,SAAA,EAC7CA,EAAA,IAAA,MAAA,CAAI,UAAU,0BAA0B,SAAK,QAAA,EAC7CA,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAK,QAAA,CAAA,EACtD,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAACtF,EAAA,IAAA,MAAA,CAAI,UAAU,yBAAyB,SAAS,YAAA,EAChDA,EAAA,IAAA,MAAA,CAAI,UAAU,0BAA0B,SAAI,OAAA,EAC5CA,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAK,QAAA,CAAA,EACtD,CAAA,EACF,EAGCA,EAAA,IAAA,MAAA,CAAI,UAAU,2CACb,SAACA,EAAAA,IAAAivB,GAAA,CAAoB,MAAM,OAAO,OAAO,OACvC,SAAC3pB,EAAA,KAAAmyC,GAAA,CAAU,KAAAn3B,GACT,SAAA,CAAAtgB,EAAA,IAAC,OACC,CAAA,SAAAsF,EAAA,KAAC,iBAAe,CAAA,GAAG,aAAa,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IACtD,SAAA,CAAAtF,MAAC,QAAK,OAAO,KAAK,UAAU,UAAU,YAAa,GAAK,QACvD,OAAK,CAAA,OAAO,MAAM,UAAU,UAAU,YAAa,EAAG,CAAA,CAAA,CACzD,CACF,CAAA,EACAA,EAAA,IAACmvB,GAAA,CACC,QAAQ,OACR,SAAU,GACV,SAAU,GACV,KAAM,CAAE,KAAM,UAAW,SAAU,EAAG,EACtC,SAAS,kBAAA,CACX,EACAnvB,EAAA,IAACovB,GAAA,CACC,SAAU,GACV,SAAU,GACV,KAAM,CAAE,KAAM,UAAW,SAAU,EAAG,EACtC,cAAgB5gB,GAAU,IAAIA,EAAQ,GAAI,GAAA,CAC5C,EACAxO,EAAA,IAAC03C,GAAA,CACC,KAAK,WACL,QAAQ,QACR,OAAO,UACP,YAAa,EACb,KAAK,kBAAA,CACP,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAAA,EACF,CAAA,EACF,QAGC,MAAI,CAAA,UAAU,8BACb,SAACpyC,EAAA,KAAA,MAAA,CAAI,UAAU,uEACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAAA,IAAA,MAAA,CAAI,UAAU,mCAAoC,CAAA,EAClDA,EAAA,IAAA,OAAA,CAAK,UAAU,qCAAqC,SAAc,iBAAA,CAAA,EACrE,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,8BAA8B,SAAuB,0BAAA,CAAA,CAAA,CACpE,CACF,CAAA,CAAA,EACF,CAAA,CACF,CAAA,CACI,CAAA,EACF,CACF,CAAA,CAAA,CAEN,CClKF,SAAS23C,IAAS,CAChB,MAAMp4C,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxDF,EAAWuC,KACXL,EAAWC,KAEX6F,EAAe,SAAY,CAC3B,GAAA,EACiB,MAAMhF,GAAM,KAAK,GAAGD,EAAO,mBAAoB,CAAA,EAAI,CAAE,gBAAiB,EAAM,CAAA,GAChF,SAAW,MACpB/C,EAASqB,IAAW,EACpBrB,EAASmF,IAAY,EACrBjD,EAAS,GAAG,SAEXgB,EAAO,CACJ,QAAA,MAAM,qBAAsBA,CAAK,CAC7C,CAAA,EAEF,aACG,SAAO,CAAA,UAAU,+GAChB,SAACG,EAAA,KAAA,MAAA,CAAI,UAAU,yDACb,SAAA,CAAAtF,EAAAA,IAAConB,IAAK,GAAG,IACP,SAAC9hB,EAAA,KAAA,MAAA,CAAI,UAAU,4CACb,SAAA,CAAAtF,MAAC,OAAI,IAAKgI,GAAM,IAAI,eAAe,UAAU,UAAU,EACvDhI,EAAAA,IAAC,QAAK,SAAS,WAAA,CAAA,CAAA,CAAA,CACjB,CACF,CAAA,EACAsF,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAtF,MAAConB,GAAK,CAAA,GAAG,YAAY,UAAU,yCAAyC,SAExE,WAAA,QACCA,GAAK,CAAA,GAAG,gBAAgB,UAAU,yCAAyC,SAE5E,eAAA,QACCA,GAAK,CAAA,GAAG,aAAa,UAAU,yCAAyC,SAEzE,YAAA,CAAA,EACF,EACApnB,EAAAA,IAAC,OAAI,UAAU,0BACZ,WACEsF,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAtF,MAAConB,GAAK,CAAA,GAAG,aAAa,UAAU,yCAAyC,SAEzE,YAAA,QACCpmB,EAAO,CAAA,QAAQ,UAAU,QAASiJ,EAAc,SAAO,UAAA,CAAA,CAAA,CAC1D,EAGE3E,EAAAA,KAAAwG,EAAA,SAAA,CAAA,SAAA,CAAA9L,MAAConB,GAAK,CAAA,GAAG,SAAS,UAAU,yCAAyC,SAErE,SAAA,QACCA,GAAK,CAAA,GAAG,SACT,SAACpnB,MAAAgB,EAAA,CAAO,uBAAW,CACnB,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CC/DA,SAAS42C,IAAc,CAEnB,OAAAtyC,EAAA,KAAC,MAAI,CAAA,UAAU,yCAChB,SAAA,CAAAtF,EAAA,IAAC23C,GAAO,EAAA,EACRryC,EAAAA,KAAC,OAAK,CAAA,UAAU,SACf,SAAA,CAAAtF,EAAA,IAACw3C,GAAY,EAAA,QACZL,GAAS,EAAA,QACTJ,GAAI,EAAA,CAAA,EACN,QACCK,GAAO,EAAA,CACR,CAAA,CAAA,CAEH,CCdA,SAASS,IAAgB,CAErB,OAAAvyC,EAAA,KAAC,MAAI,CAAA,UAAU,wEACb,SAAA,CAAAtF,EAAA,IAAC23C,GAAO,EAAA,QACP,MAAI,CAAA,UAAU,6BACb,SAACryC,EAAA,KAAA,MAAA,CAAI,UAAU,qCACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,yDAAyD,SAAc,iBAAA,EAEpFuxC,GAAsB,IAAKuG,GACzBxyC,EAAAA,KAAA,UAAA,CAA4B,UAAU,sCACrC,SAAA,CAAAtF,EAAA,IAAC,KAAG,CAAA,UAAU,4CAA6C,SAAA83C,EAAQ,MAAM,EACxEA,EAAQ,QAAQ,IAAKC,GAAA,OACpB,cAAOA,GAAS,SACd/3C,EAAAA,IAAC,IAAgD,CAAA,UAAU,qBAAsB,SAAA+3C,CAAA,EAAzE,GAAGD,EAAQ,KAAK,IAAIC,EAAK,MAAM,EAAG,EAAE,CAAC,EAAyC,EAEtF/3C,EAAA,IAAC,KAA0D,CAAA,UAAU,+BAClE,SAAA+3C,EAAK,IAAKjtC,GACT9K,EAAAA,IAAC,KAAuD,CAAA,SAAA8K,CAAA,EAA/C,GAAGgtC,EAAQ,KAAK,SAAShtC,EAAK,MAAM,EAAG,EAAE,CAAC,EAAU,CAC9D,CAAA,EAHM,GAAGgtC,EAAQ,KAAK,UAASzsC,EAAA0sC,EAAK,CAAC,IAAN,YAAA1sC,EAAS,MAAM,EAAG,GAAG,EAIvD,EAEH,CAAA,GAZWysC,EAAQ,KAatB,CACD,CAAA,CAAA,CACH,CACF,CAAA,QACCV,GAAO,EAAA,CACV,CAAA,CAAA,CAEJ,CCUA,MAAMY,GAA6B,CACjC,MAAO,CAAE,YAAa,QAAS,QAAS,CAAE,IAAK,SAAW,EAC1D,KAAM,CAAE,YAAa,QAAS,QAAS,CAAE,IAAK,SAAW,EACzD,OAAQ,CAAE,YAAa,QAAS,QAAS,CAAE,IAAK,SAAW,EAC3D,IAAK,CAAE,YAAa,QAAS,QAAS,CAAE,IAAK,SAAW,EACxD,OAAQ,CAAE,YAAa,QAAS,QAAS,CAAE,IAAK,SAAW,CAC7D,EAEaC,GAAuB33B,GAAqC,CACvE,IAAI8rB,EAAgB,EAChBC,EAAgB,EAChB1qC,EAAQ,EAEZ,OAAA2e,EAAK,QAAe2T,GAAA,CACd,OAAOA,EAAI,gBAAgB,GAAM,UAAY,OAAOA,EAAI,gBAAgB,GAAM,WAC/DmY,GAAA,OAAOnY,EAAI,gBAAgB,CAAC,EAC5BoY,GAAA,OAAOpY,EAAI,gBAAgB,CAAC,EAC7CtyB,IACF,CACD,EAEM,CACL,YAAayqC,EAAgBzqC,EAC7B,YAAa0qC,EAAgB1qC,CAAA,CAEjC,EAEMu2C,GAAe,CACnBhpC,EACA29B,EACAC,EACAX,EACAgM,IACG,CAEA,IAAAjpC,IAAW,YAAcA,IAAW,eACrC,OAAO29B,GAAa,UACpB,OAAOC,GAAa,SACpB,CACM,MAAAK,EAAiBN,GAAYV,EAAW,YACxCiB,EAAmBN,GAAYX,EAAW,YAE5C,OAAAgB,GAAkBC,EAAyB+K,EAAO,MAClDhL,GAAkB,CAACC,EAAyB+K,EAAO,KACnD,CAAChL,GAAkBC,EAAyB+K,EAAO,OAChDA,EAAO,GAChB,CAEF,EAEMC,GAAmB,CACvBC,EACA/3B,EACAgrB,EACAL,EACAC,EACAC,EACAgN,EACAhM,IACG,CACH,MAAM33B,EAAQ8jC,GAAAA,MAAW,aAAaD,EAAU,MAAM,GAAK,IAAI,EAGtD,QAAAE,EAAI/jC,EAAM,EAAE,EAAG+jC,GAAK/jC,EAAM,EAAE,EAAG+jC,IAAK,CACrC,MAAAC,EAAaF,GAAW,MAAA,YAAY,CAAE,EAAG,EAAG,EAAGC,CAAA,CAAG,EACnDF,EAAUG,CAAU,MAAaA,CAAU,EAAI,CAAE,EAAG,KAC/CH,EAAAG,CAAU,EAAE,EAAI,CACxB,KAAML,EAAO,OACb,KAAM,CAAE,KAAM,GAAM,MAAO,CAAE,IAAK,SAAW,EAC7C,UAAW,CAAE,WAAY,MAAO,CAAA,CAEpC,CAGK73B,EAAA,QAAQ,CAAC2T,EAAK4X,IAAc,CAChBV,EAAA,QAAQ,CAACj8B,EAAQ48B,IAAgB,CAC9C,MAAM2M,EAAY5M,EAAYV,EAAe,OAASW,EAAc,EAG9D4M,EAAW,EACXC,EAASrN,EAAO,OAASL,EAAiB,OAAS,EAEzD,QAAS9I,EAAMuW,EAAUvW,GAAOwW,EAAQxW,IAAO,CACvC,MAAAyW,EAAUN,GAAK,MAAM,YAAY,CACrC,EAAGG,EAAY,EACf,EAAGtW,CAAA,CACJ,EAEIkW,EAAUO,CAAO,MAAaA,CAAO,EAAI,CAAE,EAAG,KAEnD,IAAIC,EAAiB,CACnB,KAAM,CAAE,MAAO,CAAE,IAAK,SAAW,EACjC,UAAW,CAAE,WAAY,OAAQ,EACjC,OAAQ3pC,IAAW,aAAe,QAAU,OAAA,EAG1C29B,EACAC,EAEA,GAAA3K,EAAMuW,EAAWzN,EAAiB,OACpC4B,EAAW5Y,EAAI,gBAAgB,EAC/B6Y,EAAW7Y,EAAI,gBAAgB,MAC1B,CACC,MAAA6kB,EAAa3W,GAAOuW,EAAWzN,EAAiB,QAChD8N,EAAWzN,EAAOwN,CAAU,EAC5BpN,EAAezX,EAAIiX,CAAc,EAAoB,KACpDliB,GAAA,GAAGA,EAAE,MAAM,MAAM,EAAG,CAAC,CAAC,IAAIA,EAAE,MAAM,MAAM,CAAC,CAAC,KAAO+vB,CAAA,EAGpDrN,IACFmB,EAAWnB,EAAY,SACvBoB,EAAWpB,EAAY,YAAY,EAEvC,CAEA,MAAMsN,EAAYd,GAAahpC,EAAQ29B,EAAUC,EAAUX,EAAYgM,CAAM,EACzEa,IACFH,EAAU,KAAOG,GAGTX,EAAAO,CAAO,EAAE,EAAIC,CACzB,CAAA,CACD,CAAA,CACF,CACH,EAEMI,GAA8C,CAAC,CACnD,KAAA34B,EACA,SAAA44B,EACA,cAAAlO,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,gBAAAgO,EAAkB,GAClB,SAAA9sC,EAAW,EACb,IAAM,CACJ,MAAM+sC,EAAiB,IAAM,CACrB,MAAAC,EAAWf,SAAW,WACtBgB,EAAkD,CAAA,EAClDnN,EAAa8L,GAAoB33B,CAAI,EAGrCgrB,EAAS,MAAM,KAAK,IAAI,IAC5BhrB,EAAK,QAAQ2T,GACVA,EAAIiX,CAAc,EAAoB,IACrCliB,GAAA,GAAGA,EAAE,MAAM,MAAM,EAAG,CAAC,CAAC,IAAIA,EAAE,MAAM,MAAM,CAAC,CAAC,EAC5C,CACF,CAAA,CACD,EAAE,OAAO,UAGJuwB,EAAY,CAChBvO,EACA,SACA,GAAGC,EACH,GAAGK,CAAA,EAELgO,EAAU,KAAKC,CAAS,EAGxBj5B,EAAK,QAAe2T,GAAA,CAClBkX,EAAe,QAAkBj8B,GAAA,CAC/B,MAAMyiB,EAAyC,CAAA,EAEvCA,EAAA,KAAKziB,IAAWi8B,EAAe,CAAC,EAAKlX,EAAI+W,CAAa,EAAwB,EAAE,EACxFrZ,EAAQ,KAAKziB,CAAM,EAEnB+7B,EAAiB,QAAkBpX,GAAA,CAC3B,MAAArlB,EAAQylB,EAAIJ,CAAM,EAChBlC,EAAA,KAAK,OAAOnjB,GAAU,SAAW,OAAOA,EAAM,QAAQ,CAAC,CAAC,EAAI,IAAI,CAAA,CACzE,EAED88B,EAAO,QAAiBvhB,GAAA,CAChB,MAAAR,EAAa0K,EAAIiX,CAAc,EAAoB,KAClDliB,GAAA,GAAGA,EAAE,MAAM,MAAM,EAAG,CAAC,CAAC,IAAIA,EAAE,MAAM,MAAM,CAAC,CAAC,KAAOe,CAAA,EAElDvb,EAAQ+a,EAAYA,EAAUra,CAAM,EAAI,KACtCyiB,EAAA,KAAK,OAAOnjB,GAAU,SAAW,OAAOA,EAAM,QAAQ,CAAC,CAAC,EAAI,IAAI,CAAA,CACzE,EAED8qC,EAAU,KAAK3nB,CAAO,CAAA,CACvB,CAAA,CACF,EAED,MAAM0mB,EAAYC,GAAAA,MAAW,aAAagB,CAAS,EAGnDlB,GACEC,EACA/3B,EACAgrB,EACAL,EACAC,EACAC,EACA6M,GACA7L,CAAA,EAIF,MAAMqN,EAAY,CAChB,CAAE,IAAK,EAAG,EACV,CAAE,IAAK,EAAG,EACV,GAAGvO,EAAiB,IAAI,KAAO,CAAE,IAAK,EAAK,EAAA,EAC3C,GAAGK,EAAO,IAAI,KAAO,CAAE,IAAK,EAAK,EAAA,CAAA,EAEnC+M,EAAU,OAAO,EAAImB,EAErBlB,GAAAA,MAAW,kBAAkBe,EAAUhB,EAAW,iBAAiB,EACnEoB,GAAAA,UAAeJ,EAAU,GAAGH,CAAQ,OAAO,CAAA,EAI3C,OAAAl5C,EAAA,IAACgB,EAAA,CACD,GAAG,kBACD,QAASo4C,EACT,KAAK,OACL,QAAQ,UACR,UAAWD,EACX,SAAA9sC,EAEA,SAAArM,EAAAA,IAAC05C,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAGpC,ECvOMC,GAAwD,CAAC,CAAE,UAAWpY,KAAoB,CAC9F,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,oBAEdtX,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxDgW,EAAS5T,EAAapC,GAAqBA,EAAM,OAAO,MAAM,EAE9D,CAAE,QAAAkI,GAAY2P,KACdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAEzB9O,EAAgBD,KAEhBe,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD6oB,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAGzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAERd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GALW,MAAMhpB,EAAc,KAAK,6CAA6ClP,CAAO,GAAI,CAC9F,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EAAU,GAAG21B,CAAA,CAChB,GAC4B,MAAQ,GACrCF,EAAexN,CAAW,QACrBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC7C,CACEuX,EAAW,EAAK,CACpB,CAAA,EACD,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAG5DM,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,SAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAI1uB,EACKzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAInCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,GAC9D,SAAA/iB,EAAA,KAAC4I,GACC,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAuB,0BAAA,QAC1D0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACd,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEACxB,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGH,QACC4gC,GAAqB,EAAA,QACzBzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAA0B,EAC7C7W,EAAA,IAACi5C,GAAA,CACC,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACZ,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACF,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BACX,gBAAC,MACC,CAAA,SAAA,CAAAA,EAAA,IAAC2wC,GAAA,CACC,MAAMb,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,aAAcwG,GAAc,uBAAyB,CAAC,CAAA,CACxD,EACAxxC,EAAA,IAAC+qC,GAAA,CACC,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACF,CAAA,CAAA,CACF,CACJ,CAAA,CAAA,CAEF,CAAA,CACF,CAAA,CAEJ,EC7JMyhC,GAAoD,CAAC,CAAE,UAAWrY,KAAoB,CAC1F,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,oBAEdtX,EAAOgF,EAAapC,GAAmBA,EAAM,KAAK,IAAI,EACtDgW,EAAS5T,EAAapC,GAAmBA,EAAM,OAAO,MAAM,EAC5D,CAAE,QAAAkI,GAAY2P,KAEdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAGzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBge,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAGzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAERd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GALW,MAAMhpB,EAAc,KAAK,yCAAyClP,CAAO,GAAI,CAC1F,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EAAU,GAAG21B,CAAA,CAChB,GAC4B,MAAQ,GACrCF,EAAexN,CAAW,QACrBp9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE3C,CACAuX,EAAW,EAAK,CAClB,CAAA,EACD,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAE5DM,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,SAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAI1uB,EACKzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAGnCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,GAC9D,SAAA/iB,EAAA,KAAC4I,GACC,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAuB,0BAAA,QAC1D0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACd,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEACxB,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGH,QACC4gC,GAAsB,EAAA,QAC1BzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAA0B,EAC7C7W,EAAA,IAACi5C,GAAA,CACC,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACZ,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACF,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BAEX,gBAAC,MACC,CAAA,SAAA,CAAAA,EAAA,IAAC2wC,GAAA,CACC,MAAMb,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,aAAcwG,GAAc,uBAAyB,CAAC,CAAA,CACxD,EACAxxC,EAAA,IAAC+qC,GAAA,CACC,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACF,CAAA,CAAA,CACF,CACJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EC7JM0hC,GAAiD,CAAC,CAAE,UAAWtY,KAAoB,CACvF,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAEhB,CAAC41B,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDwC,EAAWuC,KACXqS,EAAc,iBAEdygB,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAGm5B,EAAA,EAExC73B,EAAS5T,EAAapC,GAAkBA,EAAM,OAAO,MAAM,EAC3D5C,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,KAAM6tC,EAAY,EACtE,CAAE,QAAA3lC,GAAY2P,KACdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAEzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhB22B,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAENd,EAAY1sB,EAAAA,YAAY,SAAY,CACxC4S,EAAW,EAAI,EACX,GAAA,CASI,MAAA6lB,GAPW,MAAMhpB,EAAc,KAAK,sCAAsClP,CAAO,GAAI,CACzF,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EACA,GAAG21B,CAAA,EACF,CAAE,gBAAiB,EAAA,CAAM,GAEC,MAAQ,GAErCF,EAAexN,CAAW,QAEnBp9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE3C,CACAuX,EAAW,EAAK,CAClB,CAAA,EACC,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAE9DM,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,MAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAG1uB,EACMzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAInCzc,EAAAA,IAAC8N,GAAK,CAAA,GAAG,aAAa,UAAW,GAAGua,EAAe,yBAA2B,EAAE,GAC9E,SAAA/iB,EAAAA,KAAC4I,GAEC,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAoB,uBAAA,QACvD0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACd,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEACxB,SAAAA,EAAA,IAAC6Q,GAAA,CACC,YAAa,CACX,KAAM,IAAI,KAAK,IAAI,KAAK,EAAE,cAAmB,IAAA,KAAA,EAAO,SAAA,EAAY,CAAC,EACjE,OAAQ,IACV,CAAA,CAAA,EAEJ,QACC4gC,GAAqB,EAAA,EAC1BzxC,EAAAA,IAACgB,GAAO,GAAG,UAAU,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UACxF,SAAAzc,EAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,GAAI,CACpE,CAAA,QACC,MAAI,CAAA,GAAG,UACR,SAACzc,EAAA,IAAAivC,GAAA,CAAkB,YAAAp4B,CAA0B,CAAA,EAC7C,EAEA7W,EAAA,IAACi5C,GAAA,CACC,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACZ,EACAzc,EAAAA,IAACgB,GAAO,GAAG,gBAAgB,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACvE,WAAgBzoB,EAAAA,IAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,UAAU,CACnF,CAAA,CAAA,EACF,CAAA,EACF,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BACX,gBAAC,MACC,CAAA,SAAA,CAAAA,EAAA,IAAC2wC,GAAA,CACC,MAAMb,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,aAAcwG,GAAc,uBAAyB,CAAC,CAAA,CACxD,EACAxxC,EAAA,IAAC+qC,GAAA,CACC,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACF,CAAA,CAAA,CACF,CACJ,CAAA,CAAA,CAEF,CAAA,CACF,CAAA,CAEJ,ECzKM2hC,GAAsD,CAAC,CAAE,UAAWvY,KAAoB,CAC5F,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,sBAEdtX,EAAOgF,EAAapC,GAAoBA,EAAM,KAAK,IAAI,EACvDgW,EAAS5T,EAAapC,GAAmBA,EAAM,OAAO,MAAM,EAC5D,CAAE,QAAAkI,GAAY2P,KAEdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAGzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBge,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAGzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAERd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAOM,MAAA6lB,GALW,MAAMhpB,EAAc,KAAK,2CAA2ClP,CAAO,GAAI,CAC5F,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EAAU,GAAG21B,CAAA,CAChB,GAC4B,MAAQ,GACrCF,EAAexN,CAAW,QACrBp9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAE3C,CACAuX,EAAW,EAAK,CAClB,CAAA,EACD,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAG5DM,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,WAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAI1uB,EACKzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAInCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,GAC9D,SAAA/iB,EAAA,KAAC4I,GACC,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAyB,4BAAA,QAC5D0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACd,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEACxB,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGH,QACC4gC,GAAsB,EAAA,QAC1BzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAAyB,EAC5C7W,EAAA,IAACi5C,GAAA,CACC,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACZ,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACF,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BAEX,gBAAC,MACC,CAAA,SAAA,CAAAA,EAAA,IAAC2wC,GAAA,CACC,MAAMb,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,aAAcwG,GAAc,uBAAyB,CAAC,CAAA,CACxD,EACAxxC,EAAA,IAAC+qC,GAAA,CACC,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACF,CAAA,CAAA,CACF,CACJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EChKM4hC,GAA6D,CAAC,CAAE,UAAWxY,KAAoB,CACjG,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,6BAEdtX,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAK,EACzDgW,EAAS5T,EAAapC,GAAmBA,EAAM,OAAO,MAAM,EAC5D,CAAE,QAAAkI,GAAY2P,KACdyO,EAAmB,IAAM,CAC3BH,EAAgB,CAACD,CAAY,CAAA,EAG3BhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBge,EAAU/yB,EAAapC,GACzBA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAGzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAGRd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GALW,MAAMhpB,EAAc,KAAK,kDAAkDlP,CAAO,GAAI,CACnG,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EAAU,GAAG21B,CAAA,CAChB,GAC4B,MAAQ,GAErCF,EAAexN,CAAW,QAErBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC7C,CACEuX,EAAW,EAAK,CACpB,CAAA,EACD,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAE9DM,EAAAA,UAAU,IAAM,CACF22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACtC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACR0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAElC,MAAMrpB,EAAsB,IAAM,CACpBse,GAAA,EAIRwU,EAAgB,mBAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAI1uB,EACOzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAInCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,iBAC5D,SAAA/iB,EAAA,KAAC4I,GACG,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAiC,oCAAA,QACpE0I,GAAQ,EAAA,CAAA,EACb,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACV,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEAC5B,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,QACrBzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UACzE,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACtE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAA0B,EAC7C7W,EAAA,IAACi5C,GAAA,CACG,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACd,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UAClD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACrF,CAAA,EACJ,CAAA,EACJ,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BACP,gBAAC,MACG,CAAA,SAAA,CAAAA,EAAA,IAAC2wC,GAAA,CACG,MAAMb,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,aAAcwG,GAAc,uBAAyB,CAAC,CAAA,CAC1D,EACAxxC,EAAA,IAAC+qC,GAAA,CACG,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACJ,CAAA,CAAA,CACJ,CACR,CAAA,CAAA,CACJ,CAAA,CACJ,CAAA,CAER,EC5JM6hC,GAAqD,CAAC,CAAE,UAAWzY,KAAoB,CACzF,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAEhBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,qBACdsB,EAAS5T,EAAapC,GAAoBA,EAAM,OAAO,MAAM,EAC7D5C,EAAOgF,EAAapC,GAAoBA,EAAM,KAAK,IAAI,EACvD,CAAE,QAAAkI,GAAY2P,KAEdyO,EAAmB,IAAM,CAC3BH,EAAgB,CAACD,CAAY,CAAA,EAG3B,CAAE,eAAA4xB,EAAgB,eAAAC,CAAA,EAAmB31C,EAAapC,GACpDA,EAAM,kBAAkB0U,CAAW,GAAK,CAAE,eAAgB,KAAM,eAAgB,IAAK,CAAA,EAGnFwD,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACrD8K,EAAgBD,KAEhBge,EAAU/yB,EAAapC,GACzBA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAGm5B,EAAA,EAExCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAERd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GALW,MAAMhpB,EAAc,KAAK,0CAA0ClP,CAAO,GAAI,CAC3F,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EAAS,eAAA2/B,EAAgB,eAAAC,CAAA,CAC5B,GAC4B,MAAQ,GACrCnK,EAAexN,CAAW,QACrBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC7C,CACEuX,EAAW,EAAK,CACpB,CAAA,EACD,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAE9DM,EAAAA,UAAU,IAAM,CACF22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACtC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACR0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAElC,MAAMrpB,EAAsB,IAAM,CACpBse,GAAA,EAIRwU,EAAgB,UAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAG1uB,EACQzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAInCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,GAC5D,SAAA/iB,EAAA,KAAC4I,GAEG,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAwB,2BAAA,QAC3D0I,GAAQ,EAAA,CAAA,EACb,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACV,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEAC5B,SAAAA,EAAA,IAAC6Q,GAAA,CACG,YAAa,CACT,KAAM,IAAI,KAAK,IAAI,KAAK,EAAE,cAAmB,IAAA,KAAA,EAAO,SAAA,EAAY,CAAC,EACjE,OAAQ,IACZ,CAAA,CAAA,EAER,QACC4gC,GAAoB,EAAA,QACpBzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UACzE,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACtE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAA0B,EAC7C7W,EAAA,IAACi5C,GAAA,CACG,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACd,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UAClD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACrF,CAAA,EACJ,CAAA,EACJ,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BAEP,gBAAC,MACG,CAAA,SAAA,CAACA,EAAAA,IAAA2wC,GAAA,CAAmB,MAAMb,GAAA,YAAAA,EAAa,OAAQ,GAAI,cAAA9E,EAA8B,aAAcwG,GAAc,uBAAyB,CAAI,CAAA,CAAA,EAC1IxxC,EAAA,IAAC+qC,GAAA,CACG,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACJ,CAAA,CAAA,CACJ,CACR,CAAA,CAAA,CACJ,CAAA,CACJ,CAAA,CAER,EC/JMgiC,GAAoD,CAAC,CAAE,UAAW5Y,KAAoB,CACxF,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,oBACdsB,EAAS5T,EAAapC,GAAoBA,EAAM,OAAO,MAAM,EAC7D5C,EAAOgF,EAAapC,GAAoBA,EAAM,KAAK,IAAK,EACxD,CAAE,QAAAkI,GAAY2P,KACdyO,EAAmB,IAAM,CAC3BH,EAAgB,CAACD,CAAY,CAAA,EAE3BhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACrD8K,EAAgBD,KAEhBge,EAAU/yB,EAAapC,GACzBA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAGzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAERd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GALW,MAAMhpB,EAAc,KAAK,yCAAyClP,CAAO,GAAI,CAC1F,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EAAS,GAAG21B,CAAA,CACf,GAC4B,MAAQ,GACrCF,EAAexN,CAAW,QACrBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC7C,CACEuX,EAAW,EAAK,CACpB,CAAA,EACD,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAG9DM,EAAAA,UAAU,IAAM,CACF22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACtC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACR0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAElC,MAAMrpB,EAAsB,IAAM,CACpBse,GAAA,EAIRwU,EAAgB,SAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAG1uB,EACQzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAInCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,GAC5D,SAAA/iB,EAAA,KAAC4I,GAEG,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAuB,0BAAA,QAC1D0I,GAAQ,EAAA,CAAA,EACb,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACV,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEAC5B,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,QACrBzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UACzE,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACtE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAA0B,EAC7C7W,EAAA,IAACi5C,GAAA,CACG,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACd,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UAClD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACrF,CAAA,EACJ,CAAA,EACJ,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BACP,gBAAC,MACG,CAAA,SAAA,CAACA,EAAAA,IAAA2wC,GAAA,CAAmB,MAAMb,GAAA,YAAAA,EAAa,OAAQ,GAAI,cAAA9E,EAA8B,aAAcwG,GAAc,uBAAyB,CAAI,CAAA,CAAA,EAC1IxxC,EAAA,IAAC+qC,GAAA,CACG,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACJ,CAAA,CAAA,CACJ,CACR,CAAA,CAAA,CACJ,CAAA,CACJ,CAAA,CAER,ECxJMiiC,GAAuD,CAAC,CAAE,UAAW7Y,KAAoB,CAC3F,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,uBACdsB,EAAS5T,EAAapC,GAAqBA,EAAM,OAAO,MAAM,EAC9D5C,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,KAAO6tC,EAAY,EACvE,CAAE,QAAA3lC,GAAY2P,KACdyO,EAAmB,IAAM,CAC3BH,EAAgB,CAACD,CAAY,CAAA,EAG3BhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBge,EAAU/yB,EAAapC,GACzBA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAGzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAERd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GAJW,MAAMhpB,EAAc,KAAK,4CAA4ClP,CAAO,GAAI,CAC7F,OAAQ9K,GAAA,YAAAA,EAAM,GAAI,UAAA8a,EAAsB,QAAAC,EAAkB,GAAG21B,CAAA,EAC9D,CAAE,gBAAiB,EAAA,CAAM,GAEC,MAAQ,GAErCF,EAAexN,CAAW,QAErBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC7C,CACEuX,EAAW,EAAK,CACpB,CAAA,EACD,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAG9DM,EAAAA,UAAU,IAAM,CACF22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACtC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACR0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAElC,MAAMrpB,EAAsB,IAAM,CACpBse,GAAA,EAIRwU,EAAgB,aAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAG1uB,EACQzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAGnCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,iBAC5D,SAAA/iB,EAAA,KAAC4I,GACG,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAA2B,8BAAA,QAC9D0I,GAAQ,EAAA,CAAA,EACb,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACV,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEAC5B,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,QACrBzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UACzE,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACtE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAA0B,EAC7C7W,EAAA,IAACi5C,GAAA,CACG,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACd,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UAClD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACrF,CAAA,EACJ,CAAA,EACJ,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BACP,gBAAC,MACG,CAAA,SAAA,CAAAA,EAAA,IAAC2wC,GAAA,CACG,MAAMb,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,aAAcwG,GAAc,uBAAyB,CAAC,CAAA,CAC1D,EACAxxC,EAAA,IAAC+qC,GAAA,CACG,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACJ,CAAA,CAAA,CACJ,CACR,CAAA,CAAA,CACJ,CAAA,CACJ,CAAA,CAER,EC5JMkiC,GAAsD,CAAC,CAAE,UAAW9Y,KAAoB,CAC1F,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EACdjY,EAAWuC,KACb,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,sBAEdtX,EAAQgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACzDgW,EAAS5T,EAAapC,GAAqBA,EAAM,OAAO,MAAM,EAC9D,CAAE,QAAAkI,GAAY2P,KACdyO,EAAmB,IAAM,CAC3BH,EAAgB,CAACD,CAAY,CAAA,EAG3BhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBge,EAAU/yB,EAAapC,GACzBA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAGzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAERd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GALW,MAAMhpB,EAAc,KAAK,2CAA2ClP,CAAO,GAAI,CAC5F,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EAAU,GAAG21B,CAAA,CAChB,GAC4B,MAAQ,GAErCF,EAAexN,CAAW,QAErBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC7C,CACEuX,EAAW,EAAK,CACpB,CAAA,EACD,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAG9DM,EAAAA,UAAU,IAAM,CACF22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACtC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACR0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAElC,MAAMrpB,EAAsB,IAAM,CACpBse,GAAA,EAIRwU,EAAgB,YAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAI1uB,EACOzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAInCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,iBAC5D,SAAA/iB,EAAA,KAAC4I,GACG,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACX,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAA0B,6BAAA,QAC7D0I,GAAQ,EAAA,CAAA,EACb,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACV,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEAC5B,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGL,QACC4gC,GAAqB,EAAA,QACrBzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UACzE,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACtE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAA0B,EAC7C7W,EAAA,IAACi5C,GAAA,CACG,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACd,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UAClD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACrF,CAAA,EACJ,CAAA,EACJ,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BACP,gBAAC,MACG,CAAA,SAAA,CAAAA,EAAA,IAAC2wC,GAAA,CACG,MAAMb,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,aAAcwG,GAAc,uBAAyB,CAAC,CAAA,CAC1D,EACAxxC,EAAA,IAAC+qC,GAAA,CACG,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACJ,CAAA,CAAA,CACJ,CACR,CAAA,CAAA,CACJ,CAAA,CACJ,CAAA,CAER,EC9JMmiC,GAAyD,CAAC,CAAE,UAAW/Y,KAAoB,CAC/F,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,yBAEdsB,EAAS5T,EAAapC,GAAqBA,EAAM,OAAO,MAAM,EAC9D5C,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,KAAM6tC,EAAY,EACtE,CAAE,QAAA3lC,GAAY2P,KACdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAGzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBge,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAGm5B,EAAA,EAGxCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAGNd,EAAY1sB,EAAAA,YAAY,SAAY,CACxC4S,EAAW,EAAI,EACX,GAAA,CAMI,MAAA6lB,GALW,MAAMhpB,EAAc,KAAK,uCAAuClP,CAAO,GAAI,CAC1F,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EAAS,GAAG21B,CAAA,CACb,GAC4B,MAAQ,GACrCF,EAAexN,CAAW,QACnBp9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC3C,CACAuX,EAAW,EAAK,CAClB,CAAA,EACC,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAG9DM,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEN,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,eAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAI1uB,EACKzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAInCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,iBAC9D,SAAA/iB,EAAA,KAAC4I,GACC,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAA6B,gCAAA,QAChE0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACZ,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEAC9B,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGH,QACC4gC,GAAsB,EAAA,QACtBzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAA0B,EAC7C7W,EAAA,IAACi5C,GAAA,CACC,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACZ,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACF,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BAEX,gBAAC,MACC,CAAA,SAAA,CAAAA,EAAA,IAAC2wC,GAAA,CACC,MAAMb,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,aAAcwG,GAAc,uBAAyB,CAAC,CAAA,CACxD,EACAxxC,EAAA,IAAC+qC,GAAA,CACC,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACF,CAAA,CAAA,CACF,CACJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EC7JMoiC,GAAoD,CAAC,CAAE,UAAWhZ,KAAoB,CAC1F,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,oBACdsB,EAAS5T,EAAapC,GAAqBA,EAAM,OAAO,MAAM,EAC9D5C,EAAOgF,EAAapC,GAAoBA,EAAM,KAAK,IAAI,EACvD,CAAE,QAAAkI,GAAY2P,KAEdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAGzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACrD8K,EAAgBD,KAEhBge,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAGzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAERd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GALW,MAAMhpB,EAAc,KAAK,yCAAyClP,CAAO,GAAI,CAC1F,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EAAU,GAAG21B,CAAA,CAChB,GAC4B,MAAQ,GACrCF,EAAexN,CAAW,QACrBp9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC3C,CACAuX,EAAW,EAAK,CAClB,CAAA,EACD,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAG5DM,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAG,GAAK,GAAK,GAAI,EACpD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,SAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAI1uB,EACKzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAInCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,GAC9D,SAAA/iB,EAAA,KAAC4I,GACC,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAuB,0BAAA,QAC1D0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACd,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEACxB,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAGH,QACC4gC,GAAqB,EAAA,QACzBzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAA0B,EAC7C7W,EAAA,IAACi5C,GAAA,CACC,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACZ,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACF,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BAEX,gBAAC,MACC,CAAA,SAAA,CAACA,EAAAA,IAAA2wC,GAAA,CAAmB,MAAMb,GAAA,YAAAA,EAAa,OAAQ,GAAI,cAAA9E,EAA8B,aAAcwG,GAAc,uBAAyB,CAAG,CAAA,CAAA,EACzIxxC,EAAA,IAAC+qC,GAAA,CACC,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACF,CAAA,CAAA,CACF,CACJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,ECzJMqiC,GAAsD,CAAC,CAAE,UAAWjZ,KAAoB,CAC5F,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,kBAEdtX,EAAQgF,EAAapC,GAAmBA,EAAM,KAAK,IAAI,EACvDgW,EAAS5T,EAAapC,GAAkBA,EAAM,OAAO,MAAM,EAC3D,CAAE,QAAAkI,GAAY2P,KACdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAGzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACrD8K,EAAgBD,KAEhBge,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAGzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAERd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GALW,MAAMhpB,EAAc,KAAK,uCAAuClP,CAAO,GAAI,CACxF,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EAAU,GAAG21B,CAAA,CAChB,GAC4B,MAAQ,GACrCF,EAAexN,CAAW,QACrBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC7C,CACEuX,EAAW,EAAK,CACpB,CAAA,EACD,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAI5DM,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,OAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAG1uB,EACMzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAInCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,iBAC9D,SAAA/iB,EAAA,KAAC4I,GACC,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,wEACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAqB,wBAAA,QACxD0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACd,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEACxB,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAEH,QACC4gC,GAAqB,EAAA,QACzBzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAA0B,EAC5C7W,EAAA,IAACi5C,GAAA,CACA,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACZ,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACF,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BACX,gBAAC,MACC,CAAA,SAAA,CAAAA,EAAA,IAAC2wC,GAAA,CACC,MAAMb,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,aAAcwG,GAAc,uBAAyB,CAAC,CAAA,CACxD,EACAxxC,EAAA,IAAC+qC,GAAA,CACC,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACF,CAAA,CAAA,CACF,CACJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EC3JMsiC,GAAqD,CAAC,CAAE,UAAWlZ,KAAoB,CAC3F,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,qBACdsB,EAAS5T,EAAapC,GAAmBA,EAAM,OAAO,MAAM,EAC5D5C,EAAOgF,EAAapC,GAAoBA,EAAM,KAAK,KAAO6tC,EAAY,EACtE,CAAE,QAAA3lC,GAAY2P,KACdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAEzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GAErD8K,EAAgBD,KAEhBge,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAEzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAERd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAMM,MAAA6lB,GALW,MAAMhpB,EAAc,KAAK,0CAA0ClP,CAAO,GAAI,CAC3F,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EAAU,GAAG21B,CAAA,CAChB,GAC4B,MAAQ,GACrCF,EAAexN,CAAW,QACrBp9B,EAAO,CACJ,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC7C,CACEuX,EAAW,EAAK,CACpB,CAAA,EACD,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAG5DM,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAGNwU,EAAgB,UAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAG1uB,EACMzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAInCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,GAC9D,SAAA/iB,EAAA,KAAC4I,GAEC,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAwB,2BAAA,QAC3D0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACd,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEACxB,SAAAA,EAAA,IAAC6Q,GAAA,CAAA,CAAA,EAEH,QACC4gC,GAAqB,EAAA,QACzBzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAA0B,EAC7C7W,EAAA,IAACi5C,GAAA,CACC,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACZ,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACF,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BACX,gBAAC,MACC,CAAA,SAAA,CAAAA,EAAA,IAAC2wC,GAAA,CACC,MAAMb,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,aAAcwG,GAAc,uBAAyB,CAAC,CAAA,CACxD,EACAxxC,EAAA,IAAC+qC,GAAA,CACC,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACF,CAAA,CAAA,CACF,CACJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,ECtJMuiC,GAAsD,CAAC,CAAE,UAAWnZ,KAAoB,CAC5F,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAEhBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,sBACdsB,EAAS5T,EAAapC,GAAqBA,EAAM,OAAO,MAAM,EAC9D5C,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxD,CAAE,QAAAkI,GAAY2P,KACdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAEzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACrD8K,EAAgBD,KAEhBge,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAGm5B,EAAA,EAGxCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAENd,EAAY1sB,EAAAA,YAAY,SAAY,CACxC4S,EAAW,EAAI,EACX,GAAA,CAMI,MAAA6lB,GALW,MAAMhpB,EAAc,KAAK,2CAA2ClP,CAAO,GAAI,CAC9F,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EAAS,GAAG21B,CAAA,CACb,GAC4B,MAAQ,GACrCF,EAAexN,CAAW,QACnBp9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC3C,CACAuX,EAAW,EAAK,CAClB,CAAA,EACC,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAG9DM,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEN,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,WAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAG1uB,EACMzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAInCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,GAC9D,SAAA/iB,EAAA,KAAC4I,GAEC,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAyB,4BAAA,QAC5D0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACZ,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEAC9B,SAAAA,EAAA,IAAC6Q,GAAA,CACC,YAAa,CACX,KAAM,IAAI,KAAK,IAAI,KAAK,EAAE,cAAmB,IAAA,KAAA,EAAO,SAAA,EAAY,CAAC,EACjE,OAAQ,IACV,CAAA,CAAA,EAEJ,QACC4gC,GAAqB,EAAA,QACrBzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAA0B,EAC7C7W,EAAA,IAACi5C,GAAA,CACC,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACZ,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACF,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BACX,gBAAC,MACC,CAAA,SAAA,CAACA,EAAAA,IAAA2wC,GAAA,CAAmB,MAAMb,GAAA,YAAAA,EAAa,OAAQ,GAAI,cAAA9E,EAA8B,aAAcwG,GAAc,uBAAyB,CAAI,CAAA,CAAA,EAC1IxxC,EAAA,IAAC+qC,GAAA,CACC,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACF,CAAA,CAAA,CACF,CACJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EC5JMwiC,GAAqD,CAAC,CAAE,UAAWpZ,KAAoB,CAC3F,MAAMtnB,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAEhBjY,EAAWuC,KACX,CAACsrC,EAAaC,CAAc,EAAItwC,WAA6B,IAAI,EACjE,CAACgd,EAASC,CAAU,EAAIjd,WAAkB,EAAI,EAC9C,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAkB,EAAK,EACzDoX,EAAc,qBACdsB,EAAS5T,EAAapC,GAAoBA,EAAM,OAAO,MAAM,EAC7D5C,EAAOgF,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EACxD,CAAE,QAAAkI,GAAY2P,KACdyO,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAEzBhO,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACrD8K,EAAgBD,KAEhBge,EAAU/yB,EAAapC,GAC3BA,EAAM,kBAAkB0U,CAAW,GAAK,CAAC,EAAIm5B,EAAA,EAGzCC,EAAqB/+B,EAAAA,QAAQ,IAC1B,OAAO,QAAQomB,CAAO,EAAE,OAA4B,CAAC4Y,EAAK,CAACrc,EAAQ+O,CAAM,IAAM,CACpF,GAAIA,EAAQ,CACV,MAAMuN,EAAgB,CACpB,iBAAkB,iBAClB,gBAAiB,gBAAA,EACjBtc,CAAM,GAAKA,EAEbqc,EAAIC,CAAa,EAAIvN,CACvB,CACO,OAAAsN,CACT,EAAG,CAAE,CAAA,EACJ,CAAC5Y,CAAO,CAAC,EAERd,EAAY1sB,EAAAA,YAAY,SAAY,CACtC4S,EAAW,EAAI,EACX,GAAA,CAOM,MAAA6lB,GALW,MAAMhpB,EAAc,KAAK,0CAA0ClP,CAAO,GAAI,CAC3F,OAAQ9K,GAAA,YAAAA,EAAM,GACd,UAAA8a,EACA,QAAAC,EAAU,GAAG21B,CAAA,CAChB,GAC4B,MAAQ,GACrCF,EAAexN,CAAW,QACrBp9B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,QAC3C,CACAuX,EAAW,EAAK,CAClB,CAAA,EACD,CAACrS,EAASgQ,EAAWC,EAAS21B,EAAoB1wC,GAAA,YAAAA,EAAM,EAAE,CAAC,EAG5DM,EAAAA,UAAU,IAAM,CACJ22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACV0hC,GACFt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CACJ,EACC,CAACA,CAAa,CAAC,EAElB1hC,EAAAA,UAAU,IAAM,CACTwoB,GACCkZ,GACJt/B,EAASqO,GAAQ,CACf,KAAMixB,EAAc,KAAOA,EAAc,KAAK,YAAgB,EAAA,OAC9D,GAAIA,EAAc,GAAKA,EAAc,GAAG,YAAgB,EAAA,MACzD,CAAA,CAAC,CAEJ,EACC,CAAClZ,EAAckZ,CAAa,CAAC,EAEhC,MAAMrpB,EAAsB,IAAM,CACtBse,GAAA,EAINwU,EAAgB,UAChBC,EAAmB,CAAC,iBAAkB,gBAAgB,EACtDC,EAAiB,cACjBC,EAAiB,CAAC,WAAY,YAAY,EAEhD,OAAI1uB,EACKzc,EAAA,IAACsY,GAAO,CAAA,UAAWmE,CAAS,CAAA,EAGnCzc,EAAA,IAAC8N,IAAK,UAAW,GAAGua,EAAe,yBAA2B,EAAE,GAC9D,SAAA/iB,EAAA,KAAC4I,GAEC,CAAA,SAAA,CAAC5I,EAAAA,KAAA,MAAA,CAAI,UAAU,8EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACtF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAwB,2BAAA,QAC3D0I,GAAQ,EAAA,CAAA,EACX,EACApD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACd,SAAA,CAAgB+iB,GAAAroB,EAAA,IAAC,MAAI,CAAA,UAAU,gEACxB,SAAAA,EAAA,IAAC6Q,GAAA,CACC,YAAa,CACX,KAAM,IAAI,KAAK,IAAI,KAAK,EAAE,cAAmB,IAAA,KAAA,EAAO,SAAA,EAAY,CAAC,EACjE,OAAQ,IACV,CAAA,CAAA,EAEJ,QACC4gC,GAAqB,EAAA,QACzBzwC,EAAO,CAAA,QAASkX,EAAqB,SAAUuE,EAAS,KAAK,OAAO,QAAQ,UAC3E,SAAAzc,EAAAA,IAACoY,IAAU,UAAW,WAAWqE,EAAU,eAAiB,EAAE,EAAI,CAAA,EACpE,EACAzc,MAACivC,IAAkB,YAAAp4B,EAA0B,EAC3C7W,EAAA,IAACi5C,GAAA,CACD,MAAMnJ,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,SAAU,GAAG9E,CAAa,qBAC1B,cAAAA,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,SAAU1uB,CAAA,CACZ,QACCzb,EAAO,CAAA,QAASynB,EAAkB,KAAK,OAAO,QAAQ,UACpD,SAAAJ,EAAgBroB,MAAAwqB,GAAA,CAAS,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,EACnF,CAAA,EACF,CAAA,EACF,EAECzqB,MAAA,MAAA,CAAI,UAAU,6BACX,gBAAC,MACC,CAAA,SAAA,CAACA,EAAAA,IAAA2wC,GAAA,CAAmB,MAAMb,GAAA,YAAAA,EAAa,OAAQ,GAAI,cAAA9E,EAA8B,aAAcwG,GAAc,uBAAyB,CAAI,CAAA,CAAA,EAC1IxxC,EAAA,IAAC+qC,GAAA,CACC,MAAM+E,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAC5B,cAAA9E,EACA,iBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAA9iB,EACA,OAAAlQ,CAAA,CACF,CAAA,CAAA,CACF,CACJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EC/JMyiC,GAA2B,IAAM,CACrC,MAAM3gC,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAChB,CAAE,QAAA7P,GAAY2P,KAEd2wB,EADSpmC,EAAapC,GAAqBA,EAAM,MAAM,MAAM,EACtC,KAAMqJ,GAAUA,EAAM,MAAQnB,CAAO,EAC5DugC,GAAgBD,GAAA,YAAAA,EAAe,aAAc,GAC7C,CAAE,WAAAxxB,GAAeE,KAEjB,CAACqW,EAAWC,CAAY,EAAIlwB,WAAS,KAAK,EAG1C+vB,EAAO,CACX,CAAE,MAAO,MAAO,MAAO,KAAM,EAC7B,CAAE,MAAO,SAAU,MAAO,QAAS,EACnC,CAAE,MAAO,WAAY,MAAO,UAAW,EACvC,CAAE,MAAO,SAAU,MAAO,QAAS,EACnC,CAAE,MAAO,mBAAoB,MAAO,iBAAkB,EACtD,CAAE,MAAO,UAAW,MAAO,SAAU,EACrC,CAAE,MAAO,SAAU,MAAO,QAAS,EACnC,CAAE,MAAO,UAAW,MAAO,SAAU,EACrC,CAAE,MAAO,WAAY,MAAO,UAAW,EACvC,CAAE,MAAO,UAAW,MAAO,SAAU,EACrC,CAAE,MAAO,OAAQ,MAAO,MAAO,EAC/B,CAAE,MAAO,SAAU,MAAO,QAAS,EACnC,CAAE,MAAO,eAAgB,MAAO,aAAc,EAC9C,CAAE,MAAO,YAAa,MAAO,UAAW,EACxC,CAAE,MAAO,aAAc,MAAO,WAAY,CAAA,EAKtCmB,EAAmBniB,GAAkB,CACzCmhB,EAAanhB,CAAK,CAAA,EAGpB,OAAI2K,QACM4vB,GAAe,CAAA,CAAA,EAIpB6B,EAWHtlC,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAtF,EAAA,IAACkJ,GAAmB,EAAA,EAEhBlJ,EAAA,IAAA,MAAA,CAAI,UAAU,gDACb,SAAC,CAAAyO,EAAK,MAAQ,CAACA,EAAK,GACpBzO,EAAA,IAAAwqC,GAAA,CAAA,CAAmB,EAIlBllC,OAAAwG,EAAAA,SAAA,CAAA,SAAA,CAACxG,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAtF,EAAA,IAAC6X,GAAA,CACC,MAAM,kBACN,KAAMgjC,GACN,eAAgB,EAAA,CAClB,EAEC76C,EAAA,IAAA,MAAA,CAAI,GAAG,aAAa,UAAU,yCAC7B,SAACA,EAAA,IAAA+pC,GAAA,CAAW,KAAAva,EAAY,UAAAE,EAAsB,YAAaiB,CAAiB,CAAA,EAC9E,CAAA,EACF,EAEArrB,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACZ,SAAA,CAAAoqB,IAAc,OAAU1vB,MAAA,MAAA,CAAI,GAAG,wBAC9B,SAAAA,EAAAA,IAAC65C,IAAc,UAAW,CACxB,KAAMprC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EACCihB,IAAc,UAAa1vB,MAAA,MAAA,CAAI,GAAG,SACjC,SAAAA,EAAAA,IAAC45C,IAAiB,UAAW,CAC3B,KAAMnrC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EAECihB,IAAc,YAAe1vB,MAAA,MAAA,CAAI,GAAG,WACnC,SAAAA,EAAAA,IAAC85C,IAAmB,UAAW,CAC7B,KAAMrrC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EAECihB,IAAc,UAAa1vB,MAAA,MAAA,CAAI,GAAG,SACjC,SAAAA,EAAAA,IAAC25C,IAAqB,UAAW,CAC/B,KAAMlrC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EACCihB,IAAc,mBAAsB1vB,MAAA,MAAA,CAAI,GAAG,kBAC1C,SAAAA,EAAAA,IAAC+5C,IAA0B,UAAW,CACpC,KAAMtrC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EACCihB,IAAc,WAAc1vB,MAAA,MAAA,CAAI,GAAG,UAClC,SAAAA,EAAAA,IAACg6C,IAAkB,UAAW,CAC5B,KAAMvrC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EAECihB,IAAc,UAAa1vB,MAAA,MAAA,CAAI,GAAG,SACjC,SAAAA,EAAAA,IAACm6C,IAAiB,UAAW,CAC3B,KAAM1rC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EAECihB,IAAc,WAAc1vB,MAAA,MAAA,CAAI,GAAG,UAClC,SAAAA,EAAAA,IAAC26C,IAAkB,UAAW,CAC5B,KAAMlsC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EAECihB,IAAc,YAAe1vB,MAAA,MAAA,CAAI,GAAG,WACnC,SAAAA,EAAAA,IAAC06C,IAAmB,UAAW,CAC7B,KAAMjsC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EACCihB,IAAc,WAAc1vB,MAAA,MAAA,CAAI,GAAG,UAClC,SAAAA,EAAAA,IAACy6C,IAAkB,UAAW,CAC5B,KAAMhsC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EACCihB,IAAc,QAAW1vB,MAAA,MAAA,CAAI,GAAG,OAC/B,SAAAA,EAAAA,IAACw6C,IAAmB,UAAW,CAC7B,KAAM/rC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EAECihB,IAAc,UAAa1vB,MAAA,MAAA,CAAI,GAAG,SACjC,SAAAA,EAAAA,IAACu6C,IAAiB,UAAW,CAC3B,KAAM9rC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EACCihB,IAAc,eAAkB1vB,MAAA,MAAA,CAAI,GAAG,cACtC,SAAAA,EAAAA,IAACs6C,IAAsB,UAAW,CAChC,KAAM7rC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EACCihB,IAAc,YAAe1vB,MAAA,MAAA,CAAI,GAAG,WACnC,SAAAA,EAAAA,IAACq6C,IAAmB,UAAW,CAC7B,KAAM5rC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,EAECihB,IAAc,aAAgB1vB,MAAA,MAAA,CAAI,GAAG,YACpC,SAAAA,EAAAA,IAACo6C,IAAoB,UAAW,CAC9B,KAAM3rC,EAAK,KAAO,IAAI,KAAKA,EAAK,IAAI,EAAI,OACxC,GAAIA,EAAK,GAAK,IAAI,KAAKA,EAAK,EAAE,EAAI,QACjC,CACL,CAAA,CAAA,EACF,QACC8O,GAAc,EAAA,CAAA,EACjB,CAAA,CAAA,CACF,CAEJ,CAAA,CAEA,CAAA,CAAA,EAzIKvd,EAAA,IAAC2pC,GAAA,CACN,SAAS,mBACT,QAASt/B,GAAW,GACpB,UAAW,CAAC4U,EAAUoC,EAAaP,IAAc,CAC/C,QAAQ,IAAI,0BAA0B7B,CAAQ,aAAaoC,CAAW,KAAKP,CAAS,GAAG,CACzF,CAAA,CAAA,CAsIN,ECpLMg6B,GAAe,CACnB,iEACA,qEACA,yEACA,6EACA,6EACA,qEACA,6EACA,4EACF,EAGMC,GAAuB,OAwBvBC,GAAsD,CAAC,CAAE,KAAA16B,EAAM,OAAA1X,EAAQ,KAAAjI,KAAW,CACtF,MAAMsB,EAAWuC,KACX,CAACy2C,EAAiBC,CAAkB,EAAIz7C,WAAwB,IAAI,EACpE,CAAC07C,EAAkBC,CAAmB,EAAI37C,WAAwB,IAAI,EACtE,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAS,EAAK,EAChD,CAAC+kC,EAAeC,CAAgB,EAAIhlC,WAAwB,IAAI,EAChE,CAAC47C,EAAgBC,CAAiB,EAAI77C,WAAwB,IAAI,EAClE,CAAC87C,EAAcC,CAAe,EAAI/7C,WAAwB,IAAI,EAC9D,CAACg8C,EAAgBC,CAAiB,EAAIj8C,WAAS,EAAE,EACjD,CAACk8C,EAAYC,CAAa,EAAIn8C,WAAS,EAAK,EAE5C,CAAC0nC,EAAgByB,CAAiB,EAAInpC,EAAA,SAAmB,CAAE,CAAA,EAC3D,CAAC6kC,EAAaC,CAAc,EAAI9kC,EAAA,SAAmB,CAAE,CAAA,EACrD,CAAC2nC,EAAeyU,CAAgB,EAAIp8C,WAAmB,CAAC,WAAY,QAAQ,CAAC,EAE7E,CAACq8C,EAAmBC,CAAoB,EAAIt8C,WAAS,EAAI,EACzD,CAACu8C,EAAkBC,CAAmB,EAAIx8C,EAAA,SAA4B,CAAE,CAAA,EACxE,CAACy8C,EAAoBC,CAAqB,EAAI18C,EAAA,SAAqB,CAAE,CAAA,EACrE,CAAC28C,EAAcC,CAAe,EAAI58C,WAAsC,KAAK,EAE7Es9B,EAAWrzB,SAAuB,IAAI,EACtC4yC,EAAa5yC,SAAuD,CAAA,CAAE,EACtE6yC,EAAmB7yC,SAAyB,IAAI,EAEhD,CAAE,OAAA8yC,CAAO,EAAIj4C,EAAapC,GAAqBA,EAAM,cAAc,EAEnEs6C,EAAgBvrC,EAAAA,QAAQ,IACrBoP,EAAK,WAAak8B,EAAOl8B,EAAK,UAAU,GAAK,GAAK,GACxD,CAACk8B,EAAQl8B,EAAK,UAAU,CAAC,EAEtBo8B,GAAoB,CAAC,OAAQ,OAAQ,OAAQ,WAAW,EAGxDC,EAAkBzrC,EAAAA,QAAQ,IAAM,CAC9B,MAAA0rC,MAAmB,IACzB,cAAO,OAAOH,CAAa,EAAE,QAASI,IAAe,CACvCA,IAAA,MAAAA,GAAA,QAAStuC,GAAU,CAC7BquC,EAAa,IAAIruC,CAAK,CAAA,EACvB,CACF,EACM,MAAM,KAAKquC,CAAY,CAAA,EAC7B,CAACH,CAAa,CAAC,EAEZK,EAAe5rC,EAAAA,QAAQ,IACpByrC,EAAgB,OAAS,EAC/B,CAACA,CAAe,CAAC,EAGdI,EAA2B/J,GAC3BoJ,IAAiB,MAAcpJ,EAC5BA,EAAU,OAAmBlZ,IAAA,CAElC,MAAMrF,EAAcqF,GAAS,QAAUA,GAAS,QAAU,GACpDzZ,GAAS,OAAOoU,CAAW,EAAE,YAAY,EAE/C,OAAO2nB,IAAiB,SAAW/7B,KAAW,SAAWA,KAAW,QAAA,CACrE,EAIG28B,EAAoB9rC,EAAAA,QAAQ,IACzB6rC,EAAwBz8B,EAAK,SAAS,EAC5C,CAACA,EAAK,UAAW87B,CAAY,CAAC,EAGjCv8C,EAAAA,UAAU,IAAM,CACV,GAAAygB,EAAK,UAAU,OAAS,EAAG,CAG7B,MAAM28B,GAFU,OAAO,KAAK38B,EAAK,UAAU,CAAC,CAAC,EAEd,OAAQ6hB,IAAQA,KAAQ,QAAQ,EACzD+a,EAAwB,CAAC,GAAGD,GAAgB,QAAQ,EAC1DrU,EAAkBsU,CAAqB,EAIvC,MAAMC,GAAiB,CAAC,WAAY,SAAU,GAD1B,CAAC,GAAGF,EAAc,EAAE,OAAQ9a,IAAQA,KAAQ,YAAcA,KAAQ,cAAc,EACtC,cAAc,EAC5EoC,EAAe4Y,EAAc,CAC/B,CAAA,EACC,CAAC78B,EAAK,SAAS,CAAC,EAInBzgB,EAAAA,UAAU,IAAM,CACd,GAAIi8C,GAAqBgB,EAAc,CAErC,MAAMM,EAA0C,CAAA,EAGhCT,EAAA,QAASpuC,IAAU,CACxB6uC,EAAA7uC,EAAK,EAAI,EAAC,CACpB,EAGD,MAAM8uC,GAAwB,CAAA,EAEZL,EAAA,QAASljB,IAAa,CACtC,MAAMwjB,GAAiBb,EAAc3iB,GAAS,QAAQ,GAAK,CAAA,EAEvDwjB,GAAe,OAAS,EAEXA,GAAA,QAAS/uC,IAAU,CACvB6uC,EAAA7uC,EAAK,EAAE,KAAKurB,EAAQ,CAAA,CAC9B,EAGDujB,GAAU,KAAKvjB,EAAQ,CACzB,CACD,EAGK,MAAAyjB,EAAU,OAAO,QAAQH,CAAQ,EACpC,OAAO,CAAC,EAAGpK,EAAS,IAAMA,GAAU,OAAS,CAAC,EAC9C,IAAI,CAAC,CAACzkC,GAAOykC,EAAS,KAAO,CAC5B,MAAAzkC,GACA,UAAAykC,GACA,WAAY,EACZ,EAAA,EAEJiJ,EAAoBsB,CAAO,EAC3BpB,EAAsBkB,EAAS,CAAA,MAE/BpB,EAAoB,CAAE,CAAA,EACtBE,EAAsBa,CAAiB,CACzC,EACC,CAACA,EAAmBP,EAAeX,EAAmBgB,EAAcH,CAAe,CAAC,EAEjF,MAAAa,GAAgB9wC,GAAM,QAAQ,IAAM,CAClC,MAAA+wC,MAAU,IAChB,IAAIC,GAAa,EAED,OAAAf,EAAA,QAASpuC,GAAU,CACjCkvC,EAAI,IAAIlvC,EAAOusC,GAAa4C,GAAa5C,GAAa,MAAM,CAAC,EAC7D4C,IAAA,CACD,EAEMD,CAAA,EACN,CAACd,CAAe,CAAC,EAGdgB,GAAmB1P,GAAgC,CACvD,IAAIn3B,GAAW,EAGT,MAAA8mC,EAAwBtZ,EAAY,OAAQnC,IAAQgF,EAAe,SAAShF,EAAG,CAAC,EAEtF,QAASjO,GAAI,EAAGA,GAAI+Z,EAAa/Z,KAAK,CAC9B,MAAAL,GAAS+pB,EAAsB1pB,EAAC,EAClC,GAAAkT,EAAc,SAASvT,EAAM,EAAG,CAC5B,MAAAgqB,GAAgBvB,EAAW,QAAQzoB,EAAM,EAC3CgqB,KACF/mC,IAAY+mC,GAAc,YAE9B,CACF,CAEO,OAAA/mC,EAAA,EAGHgnC,EAAiB,CAACnK,EAAoBplC,KAAkB,CACxDA,IACFtM,EACE8xC,GAAmB,CACjB,UAAWzzB,EAAK,WAChB,WAAAqzB,EACA,MAAAplC,EAAA,CACD,CAAA,CAEL,EAIIwvC,EAAoB,CAACpK,EAAoBplC,KAAkB,CAC/DtM,EACE+xC,GAAwB,CACtB,UAAW1zB,EAAK,WAChB,WAAAqzB,EACA,MAAAplC,EAAA,CACD,CAAA,CACH,EAGIyvC,GAAwBrK,GAAuB,CAC/C8H,IACFqC,EAAenK,EAAY8H,CAAc,EACzCC,EAAkB,EAAE,EACpBF,EAAgB,IAAI,EACtB,EAIIyC,GAAkBpqB,GAClBA,IAAW,WACN,CAAE,MAAO,OAAQ,SAAU,OAAQ,EAExCA,IAAW,SACN,CAAE,MAAO,OAAQ,SAAU,OAAQ,EAIrC,CACL,MAAOknB,GACP,SAAUA,EAAA,EAKRnW,GAAmB+O,GAAuB,CAC9CuH,EAAmBvH,CAAU,CAAA,EAGzB9O,EAAiB,CAAC//B,EAAoB6uC,KAAuB,CACjE7uC,EAAE,eAAe,EACb6uC,KAAesH,GACjBG,EAAoBzH,EAAU,CAChC,EAGI7O,EAAcgP,GAA6B,CAC3C,CAACmH,GAAmBA,IAAoBnH,IAI5CoH,EAAmB,IAAI,EACvBE,EAAoB,IAAI,EAGxB,QAAQ,IAAI,WAAWH,CAAe,mBAAmBnH,CAAgB,EAAE,EAAA,EAGvEoK,GAAgB,IAAM,CAC1BhD,EAAmB,IAAI,EACvBE,EAAoB,IAAI,CAAA,EAIpB+C,GAAyBC,GAAuB,CACpD3Z,EAAiB2Z,CAAU,CAAA,EAGvBC,GAAuB,CAACv5C,EAAoBs5C,KAAuB,CACvEt5C,EAAE,eAAe,EACbs5C,KAAe5Z,GACjB8W,EAAkB8C,EAAU,CAC9B,EAGIE,GAAoBC,GAA6B,CACjD,GAAA,CAAC/Z,GAAiBA,IAAkB+Z,EAAkB,OAGpD,MAAAC,GAAela,EAAY,QAAQE,CAAa,EAChDia,EAAcna,EAAY,QAAQia,CAAgB,EAEpD,GAAAC,KAAiB,IAAMC,IAAgB,GAAI,CACvC,MAAAC,GAAiB,CAAC,GAAGpa,CAAW,EACvBoa,GAAA,OAAOF,GAAc,CAAC,EACtBE,GAAA,OAAOD,EAAa,EAAGja,CAAa,EACnDD,EAAema,EAAc,CAC/B,CAEAja,EAAiB,IAAI,EACrB6W,EAAkB,IAAI,CAAA,EAGlBqD,GAAsB,IAAM,CAChCla,EAAiB,IAAI,EACrB6W,EAAkB,IAAI,CAAA,EAIlB7yB,GAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAIzBu2B,GAAwBC,GAAuB,CAC7C,MAAAC,GAAgB,CAAC,GAAG9C,CAAgB,EAC1C8C,GAAcD,CAAU,EAAE,WAAa,CAACC,GAAcD,CAAU,EAAE,WAClE5C,EAAoB6C,EAAa,CAAA,EAI7BC,GAAyB/L,GAA0B,CACvD,MAAMgM,GAA8C,CAAA,EAG9CC,EAAiB3a,EAAY,OAChCnC,IAAQgF,EAAe,SAAShF,EAAG,GAAKA,KAAQ,YAAcA,KAAQ,QAAA,EAInE+c,GAA6F,CACjG,kBAAmB,CAACjwC,GAAG+jC,KAAc,CACnC,MAAMmM,GAAkBnM,GAAU,OAAO,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,YAAY,GAAK,CAAC,EAAG,CAAC,EAClG5e,GAAiB83B,GAAU,OAAO,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,WAAgB,CAAC,EAAG,CAAC,EAClG,OAAAqlB,KAAoB,EAAU,EAEVjkC,GAAiBikC,GAAmB,GAE9D,EACA,oBAAqB,CAAClwC,GAAG+jC,KAAc,CACrC,MAAMoM,GAAapM,GAAU,OAAO,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,OAAY,CAAC,EAAG,CAAC,EAIvF,OAHYkZ,GAAU,OAAO,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,cAAc,GAAK,CAAC,EAAG,CAAC,GAEjEslB,GAAa,IAEnD,EACA,4BAA6B,CAACnwC,GAAG+jC,KAAc,CAC7C,MAAMqM,GAAmBrM,GAAU,OAAO,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,cAAc,GAAK,CAAC,EAAG,CAAC,EACrGwlB,GAAiBtM,GAAU,OAAO,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,WAAgB,CAAC,EAAG,CAAC,EAClG,OAAAulB,KAAqB,EAAU,EAEZC,GAAiBD,GAAoB,GAE9D,EACA,yBAA0B,CAACpwC,GAAG+jC,KAAc,CAC1C,MAAMuM,GAAoBvM,GAAU,OAClC,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,mBAAmB,GAAK,CAAC,EAClE,CAAA,EAEIslB,GAAapM,GAAU,OAAO,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,OAAY,CAAC,EAAG,CAAC,EAC1F,OAAAylB,KAAsB,EAAU,EAETH,GAAaG,EAE1C,EACA,yBAA0B,CAACtwC,GAAG+jC,KAAc,CAC1C,MAAMwM,GAAiBxM,GAAU,OAAO,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,mBAAmB,GAAK,CAAC,EAAG,CAAC,EACxG2lB,GAAyBzM,GAAU,OACvC,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,wBAAwB,GAAK,CAAC,EACvE,CAAA,EAEI4lB,GAAuB1M,GAAU,OACrC,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,mBAAmB,GAAK,CAAC,EAClE,CAAA,EAEIqlB,GAAkBnM,GAAU,OAAO,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,YAAY,GAAK,CAAC,EAAG,CAAC,EACpG,OAAAqlB,KAAoB,EAAU,GAG9BK,GAAiBC,GAAyBC,IAAwBP,GAAmB,GAE3F,EACA,SAAU,CAAClwC,GAAG+jC,KAAc,CAC1B,MAAM2M,GAAmB3M,GAAU,OACjC,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,oBAAoB,GAAK,CAAC,EACnE,CAAA,EAEI8lB,GAAmB5M,GAAU,OAAO,CAACrpB,GAAKmQ,KAAanQ,GAAM,OAAOmQ,GAAS,aAAkB,CAAC,EAAG,CAAC,EACtG,OAAA8lB,KAAqB,EAAU,EAEjBD,GAAmBC,GAAoB,GAE3D,EACA,QAAS,CAACC,GAAQ5wC,KAAM4wC,GAAO,OAAO,CAACl2B,GAAKm2B,KAAQn2B,GAAMm2B,GAAK,CAAC,CAAA,EAInD,OAAAb,EAAA,QAASprB,IAAW,CACjC,MAAMgsB,GAAS7M,EAAU,IAAKlZ,IAAa,OAAOA,GAASjG,EAAM,GAAK,CAAC,CAAC,EAAE,OAAQrlB,IAAU,CAAC,MAAMA,EAAK,CAAC,EAEnGuxC,GAAkBb,GAAmBrrB,EAAM,GAAKqrB,GAAmB,QACzEF,GAAQnrB,EAAM,EAAIksB,GAAgBF,GAAQ7M,CAAS,EAAE,QAAQ,CAAC,CAAA,CAC/D,EAEMgM,EAAA,EAGHt2B,GAAiB,IACjBL,EACK,4BAEFzf,EAGHo3C,GAAuBlmB,GAAuB,CAClD,MAAMwjB,GAAiBb,EAAc3iB,EAAS,QAAQ,GAAK,CAAA,EAE3D,cACGM,GACC,CAAA,SAAA,CAACp6B,EAAA,IAAAs6B,GAAA,CAAoB,QAAO,GAC1B,SAACh1B,EAAAA,KAAAtE,EAAA,CAAO,QAAQ,UAAU,KAAK,KAAK,UAAU,6BAC5C,SAAA,CAACsE,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACtF,EAAAA,IAAA0zB,GAAA,CAAI,UAAU,qCAAsC,CAAA,QACpD,OAAK,CAAA,UAAU,WACb,SAAA4pB,GAAe,OAAS,EACrB,GAAGA,GAAe,MAAM,SAASA,GAAe,OAAS,EAAI,IAAM,EAAE,GACrE,YACN,CAAA,EACF,EACAt9C,EAAAA,IAACuL,GAAY,CAAA,UAAU,wBAAyB,CAAA,CAAA,CAAA,CAClD,CACF,CAAA,EACAvL,EAAAA,IAAC66B,IAAoB,MAAM,QAAQ,UAAU,OAC3C,SAAAv1B,EAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACtF,EAAA,IAAA,MAAA,CAAI,UAAU,0CAA0C,SAAiB,oBAAA,EACzE08C,GAAkB,IAAKnuC,GAAU,CAC1B,MAAAjC,GAAagxC,GAAe,SAAS/uC,CAAK,EAE9C,OAAAvO,EAAA,IAACg7B,GAAA,CAEC,UAAU,yCACV,QAAS,IAAM,CACT1uB,GACgByxC,EAAAjkB,EAAS,aAAcvrB,CAAK,EAE/BuvC,EAAAhkB,EAAS,aAAcvrB,CAAK,CAE/C,EAEA,SAAAvO,EAAA,IAACk1C,GAAA,CACC,UAAW,oGAEV,SAAA3mC,CAAA,CACH,CAAA,EAdKA,CAAA,CAeP,CAEH,EAEAouC,EAAgB,OAAS,GAEtBr3C,EAAA,KAAAwG,EAAA,SAAA,CAAA,SAAA,CAAA9L,EAAA,IAAC27B,GAAsB,EAAA,EACtB37B,EAAA,IAAA,MAAA,CAAI,UAAU,0CAA0C,SAAa,gBAAA,EACrE28C,EACE,OAAQpuC,GAAU,CAACmuC,GAAkB,SAASnuC,CAAK,CAAC,EACpD,IAAKA,GAAU,CACR,MAAAjC,GAAagxC,GAAe,SAAS/uC,CAAK,EAE9C,OAAAvO,EAAA,IAACg7B,GAAA,CAEC,UAAU,yCACV,QAAS,IAAM,CACT1uB,GACgByxC,EAAAjkB,EAAS,aAAcvrB,CAAK,EAE/BuvC,EAAAhkB,EAAS,aAAcvrB,CAAK,CAE/C,EAEA,SAAAvO,EAAAA,IAACk1C,IAAM,UAAW,GAAGsI,GAAc,IAAIjvC,CAAK,CAAC,uBAAyB,SAAMA,CAAA,CAAA,CAAA,EAVvEA,CAAA,CAWP,CAEH,CAAA,EACL,QAGDotB,GAAsB,EAAA,EAEtB4f,IAAiBzhB,EAAS,SACxBx0B,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAtF,EAAA,IAACQ,GAAA,CACC,IAAK+7C,EACL,MAAOd,EACP,SAAW32C,GAAM42C,EAAkB52C,EAAE,OAAO,KAAK,EACjD,YAAY,iBACZ,UAAU,cACV,UAAS,GACT,UAAYA,GAAM,CACZA,EAAE,MAAQ,QACZk5C,GAAqBlkB,EAAS,YAAY,EACjCh1B,EAAE,MAAQ,WACnB02C,EAAgB,IAAI,EACpBE,EAAkB,EAAE,EAExB,CAAA,CACF,QACC16C,EAAO,CAAA,KAAK,KAAK,UAAU,WAAW,QAAS,IAAMg9C,GAAqBlkB,EAAS,YAAY,EAC9F,SAAA95B,MAACwhB,GAAM,CAAA,UAAU,aAAc,CAAA,EACjC,CAAA,CAAA,CACF,EAEAlc,EAAA,KAAC01B,GAAA,CACC,UAAU,yCACV,QAAUl2B,GAAM,CACdA,EAAE,eAAe,EACjB02C,EAAgB1hB,EAAS,YAAY,EACrC4hB,EAAkB,EAAE,EACpB,WAAW,IAAM,SACfrwC,GAAAkxC,EAAiB,UAAjB,MAAAlxC,GAA0B,SACzB,CAAC,CACN,EAEA,SAAA,CAACrL,EAAAA,IAAA61C,GAAA,CAAK,UAAU,4BAA6B,CAAA,EAC5C71C,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAgB,mBAAA,CAAA,CAAA,CAC5C,CAAA,CAAA,CAEJ,CACF,CAAA,CACF,CAAA,CAAA,CAAA,EAMF,OAAAA,EAAAA,IAACsH,IACC,SAAChC,EAAA,KAAAwI,GAAA,CAAK,UAAW,mBAAmBua,EAAe,qBAAuB,EAAE,8BAC1E,SAAA,CAAC/iB,EAAAA,KAAA,MAAA,CAAI,UAAU,yFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAtF,EAAA,IAAC8I,GAAa,CAAA,OAAQ,OAAQ,MAAO,OAAQ,EAC7CxD,EAAAA,KAAC,MAAI,CAAA,UAAU,yCAAyC,SAAA,CAAA,+BAChC,OAAK,CAAA,SAAA,CAAA,IAAEgb,EAAK,aAAa,GAAA,EAAC,CAAA,EAClD,CAAA,EACF,EACAhb,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAA,OAAC80B,GACC,CAAA,SAAA,CAACp6B,EAAAA,IAAAs6B,GAAA,CAAoB,QAAO,GAC1B,SAAAh1B,EAAA,KAACtE,EAAA,CACC,QAAQ,UACR,KAAK,KACL,UAAW,qBAAqBo7C,IAAiB,MAAQ,2CAA6C,EAAE,GAExG,SAAA,CAAAp8C,EAAAA,IAAC4zB,IAAO,UAAW,WAAWwoB,IAAiB,MAAQ,gBAAkB,gBAAgB,GAAI,EAC5FA,IAAiB,MAAQ,aACxBA,IAAiB,SAAW,SAAW,QAAA,CAAA,CAAA,EAE7C,EACC92C,EAAA,KAAAu1B,GAAA,CAAoB,MAAM,MAAM,UAAU,OACzC,SAAA,CAAA76B,EAAA,IAACg7B,GAAA,CACC,QAAS,IAAMqhB,EAAgB,KAAK,EACpC,UAAWD,IAAiB,MAAQ,aAAe,GACpD,SAAA,YAAA,CAED,EACAp8C,EAAA,IAACg7B,GAAA,CACC,QAAS,IAAMqhB,EAAgB,QAAQ,EACvC,UAAWD,IAAiB,SAAW,aAAe,GACvD,SAAA,QAAA,CAED,EACAp8C,EAAA,IAACg7B,GAAA,CACC,QAAS,IAAMqhB,EAAgB,QAAQ,EACvC,UAAWD,IAAiB,SAAW,aAAe,GACvD,SAAA,QAAA,CAED,CAAA,EACF,CAAA,EACF,SACC50C,GACC,CAAA,SAAA,CAACxH,EAAAA,IAAA0H,GAAA,CAAe,QAAO,GACrB,SAAA1H,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,QAAS,IAAM46C,EAAc,CAACD,CAAU,EACxC,KAAK,KACL,UAAW,qBAAqBA,EAAa,2CAA6C,EAAE,GAC5F,SAAU,CAACG,EAEX,eAACmE,GAAK,CAAA,UAAW,WAAWtE,EAAa,gBAAkB,gBAAgB,GAAI,CAAA,CAAA,EAEnF,EACC37C,EAAA,IAAA4H,GAAA,CAAgB,SAAa+zC,EAAA,iBAAmB,cAAc,CAAA,EACjE,SACCn0C,GACC,CAAA,SAAA,CAACxH,EAAAA,IAAA0H,GAAA,CAAe,QAAO,GACrB,SAAA1H,EAAA,IAACgB,EAAA,CACC,QAAQ,UACR,QAAS,IAAM+6C,EAAqB,CAACD,CAAiB,EACtD,KAAK,KACL,UAAU,oBAET,SACCA,EAAA97C,EAAA,IAAA8L,WAAA,CACE,SAAC9L,EAAAA,IAAAkgD,GAAA,CAAW,UAAU,uBAAwB,CAAA,CAChD,CAAA,EAGElgD,EAAA,IAAA8L,WAAA,CAAA,SAAA9L,EAAAA,IAACkgD,GAAW,CAAA,UAAU,wBAAyB,CAAA,EACjD,CAAA,CAAA,EAGN,EACClgD,EAAA,IAAA4H,GAAA,CAAgB,SAAoBk0C,EAAA,mBAAqB,kBAAkB,CAAA,EAC9E,SAECt0C,GACC,CAAA,SAAA,CAAAxH,MAAC0H,GAAe,CAAA,QAAO,GACrB,SAAA1H,MAAC,MACC,CAAA,SAAAA,EAAA,IAACknC,GAAA,CACC,eAAAC,EACA,YAAA7C,EACA,cAAA8C,EACA,mBAAoBwB,EACpB,cAAerE,EACf,eAAgBsX,CAAA,GAEpB,CACF,CAAA,EACA77C,EAAAA,IAAC4H,IAAe,SAAc,gBAAA,CAAA,CAAA,EAChC,SAECJ,GACC,CAAA,SAAA,CAACxH,EAAA,IAAA0H,GAAA,CAAe,QAAO,GACrB,SAAC1H,EAAAA,IAAAgB,EAAA,CAAO,QAAQ,UAAU,KAAK,KAAK,QAASynB,GAAkB,UAAU,cACtE,SAAeJ,EAAAroB,EAAA,IAACwqB,GAAS,CAAA,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CACnF,CACF,CAAA,EACCzqB,EAAA,IAAA4H,GAAA,CAAgB,SAAeygB,EAAA,kBAAoB,mBAAmB,CAAA,EACzE,CAAA,EAGF,CAAA,EACF,EAEAroB,EAAAA,IAAC,MAAI,CAAA,UAAU,MACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAK+8B,EACL,UAAW,iBAAiBrU,GAAA,CAAgB,yDAE5C,SAAApjB,EAAA,KAAC,QAAM,CAAA,UAAU,0CACf,SAAA,CAACtF,EAAAA,IAAA,QAAA,CAAM,UAAU,gCACf,SAACA,EAAAA,IAAA,KAAA,CACE,WACE,OAAQ6zB,GAAWsT,EAAe,SAAStT,CAAM,CAAC,EAClD,OAAQA,GAAW,CAACioB,GAAqBjoB,IAAW,cAAc,EAClE,IAAI,CAACA,EAAQ3wB,KAAU,CAChB,MAAAi9C,EAAW/Y,EAAc,SAASvT,CAAM,EACxCusB,GAAUD,EAAW,GAAGxC,GAAgBz6C,EAAK,CAAC,KAAO,OACrDm9C,GAAcpC,GAAepqB,CAAM,EAGvC,OAAA7zB,EAAA,IAAC,KAAA,CAEC,IAAMsgD,IAAQhE,EAAW,QAAQzoB,CAAM,EAAIysB,GAC3C,UAAW,8DAA8DH,EAAW,0BAA4B,EAC9G,IAAI9E,IAAmBxnB,EAAS,aAAe,EAAE,GACnD,MAAO,CACL,KAAMusB,GACN,GAAGC,EACL,EACA,UAAS,GACT,YAAa,IAAMlC,GAAsBtqB,CAAM,EAC/C,WAAa/uB,IAAMu5C,GAAqBv5C,GAAG+uB,CAAM,EACjD,OAAQ,IAAMyqB,GAAiBzqB,CAAM,EACrC,UAAW8qB,GAEX,SAAAr5C,EAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAtF,EAAAA,IAAC,QAAM,SAAO6zB,CAAA,CAAA,EACd7zB,EAAAA,IAACugD,GAAkB,CAAA,UAAU,oCAAqC,CAAA,CAAA,EACpE,CAAA,EAjBK1sB,CAAA,CAkBP,CAEH,EACL,CACF,CAAA,SACC,QAEE,CAAA,SAAA,CACCioB,GAAAE,EAAiB,IAAI,CAAC5I,EAAOoN,KAC1Bl7C,EAAAA,KAAAoH,GAAM,SAAN,CAEC,SAAA,CAAC1M,EAAAA,IAAA,KAAA,CAAG,UAAU,+FACX,SAAAskC,EACE,OAAQzQ,GAAWsT,EAAe,SAAStT,CAAM,CAAC,EAClD,OAAQA,GAAW,CAACioB,GAAqBjoB,IAAW,cAAc,EAClE,IAAI,CAACA,EAAQ3wB,KAAU,CAChB,MAAAi9C,GAAW/Y,EAAc,SAASvT,CAAM,EACxCusB,GAAUD,GAAW,GAAGxC,GAAgBz6C,EAAK,CAAC,KAAO,OACrDm9C,GAAcpC,GAAepqB,CAAM,EACnCmrB,GAAUD,GAAsB3L,EAAM,SAAS,EAErD,OAAIvf,IAAW,WAEX7zB,EAAA,IAAC,KAAA,CAEC,UAAW,uEACX,MAAO,CACL,KAAMogD,GACN,GAAGC,EACL,EAEA,SAAA/6C,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAtF,EAAA,IAAC,SAAA,CACC,QAAS,IAAM4+C,GAAqB4B,EAAU,EAC9C,UAAU,kFAET,SAAApN,EAAM,WACLpzC,EAAAA,IAACuL,GAAY,CAAA,UAAU,wBAAyB,CAAA,EAEhDvL,EAAAA,IAACkL,GAAa,CAAA,UAAU,wBAAyB,CAAA,CAAA,CAErD,EACA5F,EAAAA,KAAC,OAAK,CAAA,UAAU,6BAA6B,SAAA,CAAA,UACnC8tC,EAAM,UAAU,OAAO,YAAA,EACjC,CAAA,EACF,CAAA,EArBKvf,CAAA,EA0BPA,IAAW,SAEX7zB,EAAA,IAAC,KAAA,CAEC,UAAW,gBAAgBmgD,GACrB,0DACA,6CACJ,GACF,MAAO,CACL,KAAMC,GACN,GAAGC,EACL,EAEA,SAAA/6C,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAtF,EAAA,IAACk1C,GAAA,CACC,UAAW,GAAGsI,GAAc,IAAIpK,EAAM,KAAK,CAAC,+EAE3C,SAAMA,EAAA,KAAA,CACT,EACCuI,GACC37C,EAAA,IAACgB,EAAA,CACC,QAAQ,QACR,KAAK,KACL,UAAU,2CACV,QAAS,IAAM,CAEPoyC,EAAA,UAAU,QAAStZ,IAAa,CAClBikB,EAAAjkB,GAAS,aAAcsZ,EAAM,KAAK,CAAA,CACrD,CACH,EAEA,SAAApzC,EAAAA,IAACgd,GAAE,CAAA,UAAU,0BAA2B,CAAA,CAAA,CAC1C,CAAA,EAEJ,CAAA,EA/BK6W,CAAA,EAqCT7zB,EAAA,IAAC,KAAA,CAEC,UAAW,gBAAgBmgD,GACrB,0DACA,6CACJ,iBACF,MAAO,CACL,KAAMC,GACN,GAAGC,EACL,EAEA,SAACrgD,EAAA,IAAA,MAAA,CAAK,SAAQg/C,GAAAnrB,CAAM,EAAE,CAAA,EAVjBA,CAAA,CAaV,CAAA,EACL,EAGCuf,EAAM,YACLA,EAAM,UAAU,IAAI,CAACtZ,EAAU52B,KAC7BlD,EAAA,IAAC,KAAA,CAEC,UAAW,yDAAyDm7C,IAAqBrhB,EAAS,aAAe,aAAe,EAC9H,GACF,UAAS,GACT,YAAa,IAAM8K,GAAgB9K,EAAS,YAAY,EACxD,WAAah1B,IAAM+/B,EAAe//B,GAAGg1B,EAAS,YAAY,EAC1D,OAAQ,IAAMgL,EAAWhL,EAAS,YAAY,EAC9C,UAAWokB,GAEV,SAAA5Z,EACE,OAAQzQ,IAAWsT,EAAe,SAAStT,EAAM,CAAC,EAClD,OAAQA,IAAW,CAACioB,GAAqBjoB,KAAW,cAAc,EAClE,IAAI,CAACA,GAAQ3wB,KAAU,CAChB,MAAAi9C,GAAW/Y,EAAc,SAASvT,EAAM,EACxCusB,GAAUD,GAAW,GAAGxC,GAAgBz6C,EAAK,CAAC,KAAO,OACrDm9C,GAAcpC,GAAepqB,EAAM,EAEzC,OAAIA,KAAW,WAEX7zB,EAAA,IAAC,KAAA,CAEC,UAAW,oCACX,MAAO,CACL,KAAMogD,GACN,YAAa,OACb,GAAGC,EACL,EAEA,SAAA/6C,EAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAAAtF,EAAA,IAAC,OAAK,CAAA,UAAU,cAAe,SAAA85B,EAAS,SAAS,EAChDn5B,IAAS,mBAAqBm5B,EAAS,mBACrC,OAAK,CAAA,UAAU,0EACb,SAAAA,EAAS,WACZ,CAAA,CAAA,EAGJ,CAAA,EAhBKjG,EAAA,EAqBPA,KAAW,SAEX7zB,EAAA,IAAC,KAAA,CAEC,UAAW,gBAAgBmgD,GAAW,uBAAyB,EAAE,GACjE,MAAO,CACL,KAAMC,GACN,GAAGC,EACL,EAEC,SAAc1E,GAAAG,EACZx2C,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAtF,EAAA,IAACk1C,GAAA,CACC,UAAW,GAAGsI,GAAc,IAAIpK,EAAM,KAAK,CAAC,gEAE3C,SAAMA,EAAA,KAAA,CACT,EACApzC,EAAA,IAACgB,EAAA,CACC,QAAQ,QACR,KAAK,KACL,UAAU,2CACV,QAAS,IAAM+8C,EAAkBjkB,EAAS,aAAcsZ,EAAM,KAAK,EAEnE,SAAApzC,EAAAA,IAACgd,GAAE,CAAA,UAAU,0BAA2B,CAAA,CAAA,CAC1C,SACCod,GACC,CAAA,SAAA,CAAAp6B,EAAA,IAACs6B,GAAoB,CAAA,QAAO,GAC1B,SAAAt6B,EAAAA,IAACgB,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,UAAU,MAAM,SAAA,QAEpD,CAAA,EACF,EACAhB,EAAAA,IAAC66B,IAAoB,MAAM,QAAQ,UAAU,OAC3C,SAAAv1B,EAAA,KAAC,MAAI,CAAA,UAAU,MACZ,SAAA,CACEq3C,EAAA,OAAQpuC,IAAUA,KAAU6kC,EAAM,KAAK,EACvC,IAAK7kC,IACJvO,EAAA,IAACg7B,GAAA,CAEC,UAAU,yCACV,QAAS,IAAM,CACK+iB,EAAAjkB,EAAS,aAAcsZ,EAAM,KAAK,EACrC0K,EAAAhkB,EAAS,aAAcvrB,EAAK,CAC7C,EAEA,SAAAvO,EAAA,IAACk1C,GAAA,CACC,UAAW,GAAGsI,GAAc,IAAIjvC,EAAK,CAAC,uBAErC,SAAAA,EAAA,CACH,CAAA,EAXKA,EAAA,CAaR,QACFotB,GAAsB,EAAA,EACvBr2B,EAAA,KAAC01B,GAAA,CACC,UAAU,yCACV,QAAUl2B,IAAM,CACdA,GAAE,eAAe,EACjB02C,EAAgB1hB,EAAS,YAAY,EACrC4hB,EAAkB,EAAE,EACpB,WAAW,IAAM,SACfrwC,GAAAkxC,EAAiB,UAAjB,MAAAlxC,GAA0B,SACzB,CAAC,CACN,EAEA,SAAA,CAACrL,EAAAA,IAAA61C,GAAA,CAAK,UAAU,4BAA6B,CAAA,EAC5C71C,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAgB,mBAAA,CAAA,CAAA,CAC5C,EACCu7C,IAAiBzhB,EAAS,UACxBx0B,EAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAtF,EAAA,IAACQ,GAAA,CACC,IAAK+7C,EACL,MAAOd,EACP,SAAW32C,IAAM42C,EAAkB52C,GAAE,OAAO,KAAK,EACjD,YAAY,iBACZ,UAAU,cACV,UAAS,GACT,UAAYA,IAAM,CACZA,GAAE,MAAQ,SACZk5C,GAAqBlkB,EAAS,YAAY,EACxBikB,EAAAjkB,EAAS,aAAcsZ,EAAM,KAAK,GAC3CtuC,GAAE,MAAQ,WACnB02C,EAAgB,IAAI,EACpBE,EAAkB,EAAE,EAExB,CAAA,CACF,EACA17C,EAAA,IAACgB,EAAA,CACC,KAAK,KACL,UAAU,WACV,QAAS,IAAM,CACbg9C,GAAqBlkB,EAAS,YAAY,EACxBikB,EAAAjkB,EAAS,aAAcsZ,EAAM,KAAK,CACtD,EAEA,SAAApzC,EAAAA,IAACwhB,GAAM,CAAA,UAAU,aAAc,CAAA,CAAA,CACjC,CAAA,EACF,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,EACF,CAAA,EACF,EAEAw+B,GAAoBlmB,CAAQ,CAAA,EAnGzBjG,EAAA,EA0GT7zB,EAAA,IAAC,KAAA,CAEC,UAAW,gBAAgBmgD,GAAW,uBAAyB,EAAE,GACjE,MAAO,CACL,KAAMC,GACN,GAAGC,EACL,EAEA,SAACrgD,EAAA,IAAA,MAAA,CAAK,SAAS85B,EAAAjG,EAAM,EAAE,CAAA,EAPlBA,EAAA,CAQP,CAEH,CAAA,EAjKE,SAASuf,EAAM,KAAK,aAAatZ,EAAS,QAAQ,IAAI52B,EAAK,EAAA,CAmKnE,CAAA,CAAA,EAzQgB,SAASkwC,EAAM,KAAK,EA0QzC,CACD,EAGF0I,GAAqBI,EAAmB,OAAS,GAC/Cl8C,EAAA,IAAA,KAAA,CAAG,UAAU,4FACX,SACEskC,EAAA,OAAQzQ,GAAWsT,EAAe,SAAStT,CAAM,CAAC,EAClD,OAAQA,GAAW,CAACioB,GAAqBjoB,IAAW,cAAc,EAClE,IAAI,CAACA,EAAQ3wB,KAAU,CAChB,MAAAi9C,EAAW/Y,EAAc,SAASvT,CAAM,EACxCusB,GAAUD,EAAW,GAAGxC,GAAgBz6C,EAAK,CAAC,KAAO,OACrDm9C,GAAcpC,GAAepqB,CAAM,EAEzC,GAAIA,IAAW,WAEX,OAAA7zB,EAAA,IAAC,KAAA,CAEC,UAAW,qEACX,MAAO,CACL,KAAMogD,GACN,GAAGC,EACL,EAEA,SAAA/6C,EAAA,KAAC,MAAI,CAAA,UAAU,+CACb,SAAA,CAACtF,EAAAA,IAAA4zB,GAAA,CAAO,UAAU,6BAA8B,CAAA,EAAE,cACtCsoB,EAAmB,OAAO,YAAA,EACxC,CAAA,EAVKroB,CAAA,EAeX,GAAIA,IAAW,SAEX,OAAA7zB,EAAA,IAAC,KAAA,CAEC,UAAW,gBAAgBmgD,EAAW,0DAA4D,EAAE,GACpG,MAAO,CACL,KAAMC,GACN,GAAGC,EACL,EACD,SAAA,GAAA,EANMxsB,CAAA,EAaL,MAAAmrB,GAAUD,GAAsB7C,CAAkB,EAGtD,OAAAl8C,EAAA,IAAC,KAAA,CAEC,UAAW,gBAAgBmgD,EACrB,wDACA,2CACJ,iBACF,MAAO,CACL,KAAMC,GACN,GAAGC,EACL,EAEA,SAACrgD,EAAA,IAAA,MAAA,CAAK,SAAQg/C,GAAAnrB,CAAM,EAAE,CAAA,EAVjBA,CAAA,CAaV,CAAA,EACL,GAIAioB,EAAoBI,EAAqBc,GAAmB,IAAI,CAACljB,EAAU52B,KAC3ElD,EAAA,IAAC,KAAA,CAEC,UAAW,yDAAyDm7C,IAAqBrhB,EAAS,aAAe,aAAe,EAC9H,GACF,UAAS,GACT,YAAa,IAAM8K,GAAgB9K,EAAS,YAAY,EACxD,WAAah1B,GAAM+/B,EAAe//B,EAAGg1B,EAAS,YAAY,EAC1D,OAAQ,IAAMgL,EAAWhL,EAAS,YAAY,EAC9C,UAAWokB,GAEV,SAAA5Z,EACE,OAAQzQ,GAAWsT,EAAe,SAAStT,CAAM,CAAC,EAClD,OAAQA,GAAW,CAACioB,GAAqBjoB,IAAW,cAAc,EAClE,IAAI,CAACA,EAAQ3wB,KAAU,CAChB,MAAAi9C,GAAW/Y,EAAc,SAASvT,CAAM,EACxCusB,GAAUD,GAAW,GAAGxC,GAAgBz6C,EAAK,CAAC,KAAO,OACrDm9C,GAAcpC,GAAepqB,CAAM,EACzC,OAAIA,IAAW,WAEX7zB,EAAA,IAAC,KAAA,CAEC,UAAW,oCACX,MAAO,CACL,KAAMogD,GACN,GAAGC,EACL,EAEA,SAAA/6C,EAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAAAtF,EAAA,IAAC,OAAK,CAAA,UAAU,cAAe,SAAA85B,EAAS,SAAS,EAChDn5B,IAAS,mBAAqBm5B,EAAS,mBACrC,OAAK,CAAA,UAAU,0EACb,SAAAA,EAAS,WACZ,CAAA,CAAA,EAGJ,CAAA,EAfKjG,CAAA,EAoBPA,IAAW,SAEX7zB,EAAA,IAAC,KAAA,CAEC,UAAW,gBAAgBmgD,GAAW,uBAAyB,EAAE,GACjE,MAAO,CACL,KAAMC,GACN,GAAGC,EACL,EAEC,YAAoBvmB,CAAQ,CAAA,EAPxBjG,CAAA,EAaT7zB,EAAA,IAAC,KAAA,CAEC,UAAW,gBAAgBmgD,GAAW,uBAAyB,EAAE,GACjE,MAAO,CACL,KAAMC,GACN,GAAGC,EACL,EAEA,SAACrgD,EAAA,IAAA,MAAA,CAAK,SAAS85B,EAAAjG,CAAM,EAAE,CAAA,EAPlBA,CAAA,CAQP,CAEH,CAAA,EAlEE,GAAGioB,EAAoB,YAAc,KAAK,IAAIhiB,EAAS,QAAQ,IAAI52B,EAAK,EAAA,CAoEhF,CAAA,EACH,CAAA,EACF,CAAA,CAAA,EAEJ,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EC3lCA,SAASu9C,IAAe,CAEpB,KAAM,CAAC1xC,EAAW0K,CAAY,EAAIha,WAAS,EAAK,EAC1C,CAACihD,EAAcC,CAAe,EAAIlhD,EAAwB,SAAA,EAC1Dwa,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CACxB,KAAM+I,EACN,GAAIC,CACJ,GAAA,CAACD,EAAUC,CAAM,CAAC,EAEhBX,EAAgBD,KAChB,CAAE,QAAAjP,GAAY2P,KAEd7V,EAAWC,KAEXoyB,EAAY1sB,EAAAA,YAAY,SAAY,OACtC2P,EAAa,EAAI,EACb,GAAA,CACA,MAAMY,EAAY5L,GAAA,MAAAA,EAAM,KAAOuD,EAAOvD,EAAK,KAAM,YAAY,EAAI,GAC3D6L,EAAU7L,GAAA,MAAAA,EAAM,GAAKuD,EAAOvD,EAAK,GAAI,YAAY,EAAI,GACvD,GAAA,CAMA,MAAM6R,GALW,MAAM/G,EAAc,KACjC,sBAAsBlP,CAAO,GAC7B,CAAE,UAAAgQ,EAAW,QAAAC,CAAS,EACtB,CAAE,gBAAiB,EAAK,CAAA,GAEN,KAEtBqmC,EAAgBrgC,CAAI,QACfnb,EAAO,CACJ,QAAA,MAAM,mCAAoCA,CAAK,CAC3D,QACKA,EAAO,CACJ,QAAA,MAAM,0BAA2BA,CAAK,EAC1CF,GAAM,aAAaE,CAAK,KAAKkG,EAAAlG,EAAM,WAAN,YAAAkG,EAAgB,UAAW,MACxD,MAAM,gDAAgD,EACtDlH,EAAS,GAAG,EAChB,QACF,CACEsV,EAAa,EAAK,CACtB,CACD,EAAA,CAACtV,EAAUsK,EAAMpE,CAAO,CAAC,EAI5BxK,EAAAA,UAAU,IAAM,CACF22B,GAAA,EACX,CAACA,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACF22B,IACV,MAAM1b,EAAa,YAAY0b,EAAW,EAAI,GAAK,GAAK,GAAI,EACrD,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACtC,CAAC0b,CAAS,CAAC,EAEd32B,EAAAA,UAAU,IAAM,CACJ,QAAA,IAAI,gBAAiB6gD,CAAY,CAC7C,EAAG,CAAE,CAAA,EAEL,MAAME,EAAiBF,GAAA,YAAAA,EAAc,eAC/BG,EAAcH,GAAA,YAAAA,EAAc,YAElC,IAAI93C,EAAS,GACb,OAAI83C,GAAA,MAAAA,EAAc,iBAAkBA,GAAA,YAAAA,EAAc,eAAe,QAAS,EAC7D93C,EAAA,4BAEAA,EAAA,4BAITtD,EAAA,KAAC,MAAI,CAAA,UAAU,4BACX,SAAA,CAAAtF,EAAA,IAACkJ,GAAmB,EAAA,EACpB5D,EAAAA,KAAC,MAAI,CAAA,UAAU,gDACT,SAAA,CAAA,CAACmJ,EAAK,MAAQ,CAACA,EAAK,GAAMzO,EAAA,IAACwqC,GAAmB,EAAA,EAASz7B,EAAa/O,EAAA,IAACsY,GAAO,CAAA,UAAAvJ,CAAA,CAAqB,EAE/FzJ,OAAAwG,EAAAA,SAAA,CAAA,SAAA,CAAC9L,EAAA,IAAA,MAAA,CAAI,UAAU,YACf,SAACA,EAAAA,IAAA6X,GAAA,CAAO,MAAM,uBAAuB,KAAMlN,GAAQ,eAAgB,EAAM,CAAA,EAC7E,QACC,OAAK,CAAA,UAAU,mCAChB,SAACrF,EAAA,KAAA,MAAA,CAAI,UAAU,yBACT,SAAA,CAAkBs7C,GAAAA,EAAe,OAAS,GACxC5gD,EAAA,IAACg7C,GAAA,CACG,KAAM,CACF,aAAc,kBACd,WAAY,kBACZ,UAAW4F,EAAe,IAAiB9mB,IAAA,CACvC,GAAGA,EACH,SAAUA,EAAS,YAAA,EACrB,CACN,EACA,OAAAlxB,EACA,KAAK,iBAAA,CACT,EAEFi4C,GAAeA,EAAY,IACzBxlC,GAAArb,EAAA,IAACg7C,GAAA,CAEG,KAAM,CACF,aAAc3/B,EAAQ,aACtB,WAAYA,EAAQ,WACpB,UAAWA,EAAQ,UAAU,IAAiBye,IAAA,CAC1C,GAAGA,EACH,SAAUA,EAAS,YAAA,EACrB,CACN,EACA,OAAAlxB,CAAA,EATKyS,EAAQ,UAAA,CAWpB,CAAA,CAAA,CACL,CACA,CAAA,CAAA,EAGA,QAEXkC,GAAc,EAAA,CAAA,EACP,CACJ,CAAA,CAAA,CAER,CC3HA,MAAMw9B,GAAuB,QA2BvB+F,GAA8C,CAAC,CAAE,KAAAxgC,EAAM,OAAA1X,EAAS,WAAY,YAAAyY,EAAa,aAAA0/B,EAAe,MAAY,OACxH,KAAM,CAACC,EAAiBC,CAAkB,EAAIxhD,WAAwB,IAAI,EACpE,CAACyhD,EAAkBC,CAAmB,EAAI1hD,WAAwB,IAAI,EACtE,CAAC4oB,EAAcC,CAAe,EAAI7oB,WAAS,EAAK,EAChD,CAAC+kC,EAAeC,CAAgB,EAAIhlC,WAAwB,IAAI,EAChE,CAAC47C,EAAgBC,CAAiB,EAAI77C,WAAwB,IAAI,EAElE,CAAC0nC,EAAgByB,CAAiB,EAAInpC,EAAA,SAC1CshD,EACI,CAAC,WAAY,QAAS,UAAW,OAAQ,UAAU,EACnD,CAAC,WAAY,QAAS,UAAW,MAAM,CAAA,EAEvC,CAACzc,EAAaC,CAAc,EAAI9kC,EAAA,SACpCshD,EACI,CAAC,WAAY,QAAS,UAAW,OAAQ,UAAU,EACnD,CAAC,WAAY,QAAS,UAAW,MAAM,CAAA,EAEvC,CAAC3Z,EAAeyU,CAAgB,EAAIp8C,EAAAA,SAAmB,CAAC,UAAU,CAAC,EAEnEs9B,EAAWrzB,SAAuB,IAAI,EACtC4yC,EAAa5yC,SAAuD,CAAA,CAAE,EAGtE03C,EAAe//B,IACjBhW,EAAAiV,EAAK,iBAAiBe,CAAW,IAAjC,YAAAhW,EAAoC,kBAAmB,CAAC,EACxDiV,EAAK,gBAAkB,CAAA,EAGrBS,EAAcM,GAAe,eAG7Bs8B,EAAmB1P,GAAgC,CACvD,IAAIn3B,EAAW,EAGT,MAAA8mC,EAAwBtZ,EAAY,OAAQnC,IAAQgF,EAAe,SAAShF,EAAG,CAAC,EAEtF,QAASjO,GAAI,EAAGA,GAAI+Z,EAAa/Z,KAAK,CAC9B,MAAAL,GAAS+pB,EAAsB1pB,EAAC,EAClC,GAAAkT,EAAc,SAASvT,EAAM,EAAG,CAC5B,MAAAgqB,EAAgBvB,EAAW,QAAQzoB,EAAM,EAC3CgqB,IACF/mC,GAAY+mC,EAAc,YAE9B,CACF,CAEO,OAAA/mC,CAAA,EAIHmnC,EAAkBpqB,GAClBA,IAAW,WACN,CAAE,MAAO,OAAQ,SAAU,OAAQ,EAExCA,IAAW,WACN,CAAE,MAAO,OAAQ,SAAU,OAAQ,EAErC,CACL,MAAOknB,GACP,SAAUA,EAAA,EAKRnW,EAAmByc,GAAuB,CAC9CJ,EAAmBI,CAAU,CAAA,EAGzBxc,EAAiB,CAAC//B,EAAoBu8C,IAAuB,CACjEv8C,EAAE,eAAe,EACbu8C,IAAeL,GACjBG,EAAoBE,CAAU,CAChC,EAGIvc,EAAcwc,GAA6B,CAC3C,CAACN,GAAmBA,IAAoBM,IAI5CL,EAAmB,IAAI,EACvBE,EAAoB,IAAI,EAGxB,QAAQ,IAAI,WAAWH,CAAe,mBAAmBM,CAAgB,EAAE,EAAA,EAGvEpD,EAAgB,IAAM,CAC1B+C,EAAmB,IAAI,EACvBE,EAAoB,IAAI,CAAA,EAIpBhD,EAAyBC,GAAuB,CACpD3Z,EAAiB2Z,CAAU,CAAA,EAGvBC,EAAuB,CAACv5C,EAAoBs5C,IAAuB,CACvEt5C,EAAE,eAAe,EACbs5C,IAAe5Z,GACjB8W,EAAkB8C,CAAU,CAC9B,EAGIE,EAAoBC,GAA6B,CACjD,GAAA,CAAC/Z,GAAiBA,IAAkB+Z,EAAkB,OAGpD,MAAAC,EAAela,EAAY,QAAQE,CAAa,EAChDia,EAAcna,EAAY,QAAQia,CAAgB,EAEpD,GAAAC,IAAiB,IAAMC,IAAgB,GAAI,CACvC,MAAAC,GAAiB,CAAC,GAAGpa,CAAW,EACvBoa,GAAA,OAAOF,EAAc,CAAC,EACtBE,GAAA,OAAOD,EAAa,EAAGja,CAAa,EACnDD,EAAema,EAAc,CAC/B,CAEAja,EAAiB,IAAI,EACrB6W,EAAkB,IAAI,CAAA,EAGlBqD,EAAsB,IAAM,CAChCla,EAAiB,IAAI,EACrB6W,EAAkB,IAAI,CAAA,EAIlB7yB,EAAmB,IAAM,CAC7BH,EAAgB,CAACD,CAAY,CAAA,EAGzBK,EAAiB,IACjBL,EACK,eAEFzf,EAIHqgB,EAAkBza,GACf,IAAI,KAAK,aAAa,QAAS,CACpC,MAAO,WACP,SAAU,MACV,sBAAuB,CAAA,CACxB,EAAE,OAAOA,CAAK,EAIX+yC,EAAc/yC,GACXA,EAAM,QAAQ,CAAC,EAAI,IAItBgzC,EAAkBv9B,GAClB,CAACA,GAAYA,EAAS,SAAW,EAAU,IAC3CA,EAAS,QAAU,EAAUA,EAAS,KAAK,IAAI,EAC5C,GAAGA,EAAS,CAAC,CAAC,KAAKA,EAAS,CAAC,CAAC,KAAKA,EAAS,OAAS,CAAC,QAIzDw9B,GAAoB,CAACC,EAAwB7tB,IAAmB,CACpE,OAAOA,EAAQ,CACb,IAAK,WACH,OAAO6tB,EAAS,SAClB,IAAK,QACI,OAAAz4B,EAAey4B,EAAS,KAAK,EACtC,IAAK,UACI,OAAAz4B,EAAey4B,EAAS,OAAO,EACxC,IAAK,OACI,OAAAH,EAAWG,EAAS,IAAI,EACjC,IAAK,WACI,OAAAF,EAAeE,EAAS,QAAQ,EACzC,QACS,OAAAA,EAAS7tB,CAA4B,GAAK,GACrD,CAAA,EAGF,MAAI,CAACutB,GAAgBA,EAAa,SAAW,EAEzCphD,EAAAA,IAAC8N,IAAK,UAAU,MACd,eAAC,MAAI,CAAA,UAAU,6BAA6B,SAAA,4BAA0B,CAAA,CACxE,CAAA,EAKF9N,EAAAA,IAACsH,IACC,SAAChC,EAAA,KAAAwI,GAAA,CAAK,UAAW,mBAAmBua,EAAe,qBAAuB,EAAE,8BAC1E,SAAA,CAAC/iB,EAAAA,KAAA,MAAA,CAAI,UAAU,yFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAtF,EAAA,IAAC8I,GAAa,CAAA,OAAQ,OAAQ,MAAO,OAAQ,EAC7CxD,EAAAA,KAAC,MAAI,CAAA,UAAU,yCAAyC,SAAA,CAAA,+BAAsB,OAAK,CAAA,SAAA,CAAA,IAAEyb,EAAY,GAAA,EAAC,CAAA,EAAO,CAAA,EAC3G,EACAzb,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAA,OAACkC,GACC,CAAA,SAAA,CAACxH,EAAA,IAAA0H,GAAA,CAAe,QAAO,GACrB,SAAC1H,EAAAA,IAAAgB,EAAA,CAAO,QAAQ,UAAU,KAAK,KAAK,QAASynB,EAAkB,UAAU,cACtE,SAAeJ,EAAAroB,EAAA,IAACwqB,GAAS,CAAA,UAAU,SAAU,CAAA,QAAMC,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CACnF,CACF,CAAA,EACCzqB,EAAA,IAAA4H,GAAA,CAAgB,SAAeygB,EAAA,kBAAoB,mBAAmB,CAAA,EACzE,SAEC7gB,GACC,CAAA,SAAA,CAAAxH,MAAC0H,GAAe,CAAA,QAAO,GACrB,SAAA1H,MAAC,MACC,CAAA,SAAAA,EAAA,IAACknC,GAAA,CACC,eAAAC,EACA,YAAA7C,EACA,cAAA8C,EACA,mBAAoBwB,EACpB,cAAerE,EACf,eAAgBsX,CAAA,GAEpB,CACF,CAAA,EACA77C,EAAAA,IAAC4H,IAAe,SAAc,gBAAA,CAAA,CAAA,EAChC,CAAA,EACF,CAAA,EACF,EAEA5H,EAAAA,IAAC,MAAI,CAAA,UAAU,MACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAK+8B,EACL,UAAW,iBAAiBrU,EAAA,CAAgB,yDAE5C,SAAApjB,EAAA,KAAC,QAAM,CAAA,UAAU,0CACf,SAAA,CAAAtF,MAAC,SAAM,UAAU,gCACf,SAACA,EAAA,IAAA,KAAA,CACE,WACE,OAAQ6zB,GAAWsT,EAAe,SAAStT,CAAM,CAAC,EAClD,IAAI,CAACA,EAAQ3wB,IAAU,CAChB,MAAAi9C,EAAW/Y,EAAc,SAASvT,CAAM,EACxCusB,GAAUD,EAAW,GAAGxC,EAAgBz6C,CAAK,CAAC,KAAO,OACrDm9C,GAAcpC,EAAepqB,CAAM,EAGvC,OAAA7zB,EAAA,IAAC,KAAA,CAEC,IAAMsgD,GAAQhE,EAAW,QAAQzoB,CAAM,EAAIysB,EAC3C,UAAW,8DACTH,EAAW,0BAA4B,EACzC,IAAI9E,IAAmBxnB,EAAS,aAAe,EAAE,GACjD,MAAO,CACL,KAAMusB,GACN,GAAGC,EACL,EACA,UAAS,GACT,YAAa,IAAMlC,EAAsBtqB,CAAM,EAC/C,WAAa/uB,GAAMu5C,EAAqBv5C,EAAG+uB,CAAM,EACjD,OAAQ,IAAMyqB,EAAiBzqB,CAAM,EACrC,UAAW8qB,EAEX,SAAAr5C,EAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAtF,EAAAA,IAAC,QAAM,SAAO6zB,CAAA,CAAA,EACd7zB,EAAAA,IAACugD,GAAkB,CAAA,UAAU,oCAAqC,CAAA,CAAA,EACpE,CAAA,EAlBK1sB,CAAA,CAmBP,CAEH,EACL,CACF,CAAA,EACC7zB,EAAA,IAAA,QAAA,CACE,SAAaohD,EAAA,IAAKM,GACjB1hD,EAAA,IAAC,KAAA,CAEC,UAAW,gDACPkhD,IAAqBQ,EAAS,WAAa,aAAe,EAC5D,GACF,UAAS,GACT,YAAa,IAAM9c,EAAgB8c,EAAS,UAAU,EACtD,WAAa58C,GAAM+/B,EAAe//B,EAAG48C,EAAS,UAAU,EACxD,OAAQ,IAAM5c,EAAW4c,EAAS,UAAU,EAC5C,UAAWxD,EAEV,SACE5Z,EAAA,OAAQzQ,GAAWsT,EAAe,SAAStT,CAAM,CAAC,EAClD,IAAI,CAACA,EAAQkM,IAAa,CACnB,MAAAogB,GAAW/Y,EAAc,SAASvT,CAAM,EACxCusB,GAAUD,GAAW,GAAGxC,EAAgB5d,CAAQ,CAAC,KAAO,OACxDsgB,EAAcpC,EAAepqB,CAAM,EAGvC,OAAA7zB,EAAA,IAAC,KAAA,CAEC,UAAW,wCACTmgD,GAAW,yBAA2B,EACxC,GACA,MAAO,CACL,KAAMC,GACN,GAAGC,CACL,EAEC,SAAAoB,GAAkBC,EAAU7tB,CAAM,CAAA,EAT9B,GAAG6tB,EAAS,UAAU,IAAI7tB,CAAM,EAAA,CAUvC,CAEH,CAAA,EA/BE6tB,EAAS,UAiCjB,CAAA,EACH,CAAA,EACF,CAAA,CAAA,EAEJ,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,ECtTA,SAASC,IAAe,OACtB,KAAM,CAAC5yC,EAAW0K,CAAY,EAAIha,WAAS,EAAK,EAC1C,CAACmiD,EAAcC,CAAe,EAAIpiD,WAAkC,IAAI,EACxE,CAAC0F,EAAOijB,CAAQ,EAAI3oB,WAAwB,IAAI,EAEhDwa,EAAW1V,EAAapC,GAAqBA,EAAM,KAAK,IAAI,EAC5D+X,EAAS3V,EAAapC,GAAqBA,EAAM,KAAK,EAAE,EACxDsM,EAAOyC,EAAAA,QAAQ,KAAO,CAC1B,KAAM+I,EACN,GAAIC,CACF,GAAA,CAACD,EAAUC,CAAM,CAAC,EAEhBX,EAAgBD,KAChB,CAAE,QAAAjP,GAAY2P,KACd7V,EAAWC,KAEXoyB,EAAY1sB,EAAAA,YAAY,SAAY,WACxC,GAAI,GAAC2E,EAAK,MAAQ,CAACA,EAAK,IAExB,CAAAgL,EAAa,EAAI,EACjB2O,EAAS,IAAI,EAET,GAAA,CACF,MAAM/N,EAAYrI,EAAOvD,EAAK,KAAM,YAAY,EAC1C6L,EAAUtI,EAAOvD,EAAK,GAAI,YAAY,EAEtC1J,EAAW,MAAMwU,EAAc,KACnC,sBAAsBlP,CAAO,GAC7B,CAAE,UAAAgQ,EAAW,QAAAC,CAAQ,EACrB,CAAE,gBAAiB,EAAK,CAAA,EAGlB,QAAA,IAAI,gBAAiBvV,EAAS,IAAI,EAEtCA,EAAS,MAAQA,EAAS,KAAK,KACjB88C,EAAA98C,EAAS,KAAK,IAAI,GAE1B,QAAA,MAAM,0BAA2BA,EAAS,IAAI,EACtDqjB,EAAS,0CAA0C,SAE9CjjB,EAAO,CACN,QAAA,MAAM,gCAAiCA,CAAK,EAChDF,GAAM,aAAaE,CAAK,IACtBA,EAAAA,EAAM,WAANA,YAAAA,EAAgB,UAAW,KAC7B,MAAM,gDAAgD,EACtDhB,EAAS,GAAG,GAEZikB,EAAS,gBAAcjjB,GAAAA,EAAAA,EAAM,WAANA,YAAAA,EAAgB,OAAhBA,YAAAA,EAAsB,UAAWA,EAAM,OAAO,EAAE,EAGzEijB,EAAS,8BAA8B,CACzC,QACA,CACA3O,EAAa,EAAK,CACpB,EACC,EAAA,CAACtV,EAAUsK,EAAMpE,CAAO,CAAC,EAE5BxK,EAAAA,UAAU,IAAM,CACV4O,EAAK,MAAQA,EAAK,IACV+nB,GACZ,EACC,CAACA,EAAW/nB,CAAI,CAAC,EAEpB5O,EAAAA,UAAU,IAAM,CAER,MAAAib,EAAa,YAAY,IAAM,CAC/BrM,EAAK,MAAQA,EAAK,IACV+nB,GAEX,EAAA,KAAkB,EAEd,MAAA,IAAM,cAAc1b,CAAU,CAAA,EACpC,CAAC0b,EAAW/nB,CAAI,CAAC,EAGd,MAAAwV,EAAW/S,EAAAA,QAAQ,IAAM,CACzB,GAAA,EAAC0wC,GAAA,MAAAA,EAAc,kBACT,eAAA,IAAI,6CAA8CA,CAAY,EAC/D,GAGT,MAAME,EAAc,OAAO,KAAKF,EAAa,gBAAgB,EACrD,eAAA,IAAI,kBAAmBE,CAAW,EAEnCA,EAAY,OAAkBzmC,GAAA,SACnC,MAAM0mC,IAAev0C,GAAAnC,EAAAu2C,EAAa,iBAAiBvmC,CAAO,IAArC,YAAAhQ,EAAwC,kBAAxC,YAAAmC,EAAyD,QAAS,EACvF,eAAQ,IAAI,WAAW6N,CAAO,mBAAmB0mC,CAAY,EAAE,EACxDA,CAAA,CACR,CAAA,EACA,CAACH,CAAY,CAAC,EAGXI,EAAc9wC,EAAAA,QAAQ,IAAM,CAEhC,MAAM+wC,EAAa,4BAQf,MALA,EAACL,GAAA,MAAAA,EAAc,mBAEE,OAAO,KAAKA,EAAa,gBAAgB,EAAE,QAG5C,EAAUK,EAGvB,2BAAA,EACN,CAACL,CAAY,CAAC,EAGXM,GAAiBN,GAAA,YAAAA,EAAc,iBAAkBA,EAAa,eAAe,OAAS,EAC5F,QAAQ,IAAI,oBAAqBM,GAAgB72C,EAAAu2C,GAAA,YAAAA,EAAc,iBAAd,YAAAv2C,EAA8B,MAAM,EAE/E,MAAA82C,EAAiBl+B,EAAS,OAAS,EACzC,QAAQ,IAAI,oBAAqBk+B,EAAgBl+B,EAAS,MAAM,EAEhE,MAAMm+B,EAAaF,GAAkBC,EAC7B,eAAA,IAAI,gBAAiBC,CAAU,EAIrC98C,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAtF,EAAA,IAACkJ,GAAmB,EAAA,EACpB5D,EAAAA,KAAC,MAAI,CAAA,UAAU,gDACX,SAAA,CAAA,CAACmJ,EAAK,MAAQ,CAACA,EAAK,GACpBzO,EAAA,IAACwqC,GAAmB,EAAA,EACfz7B,EAAa/O,EAAA,IAACsY,GAAO,CAAA,UAAAvJ,CAAA,CAAqB,EAE7CzJ,OAAAwG,EAAAA,SAAA,CAAA,SAAA,CAAC9L,EAAAA,IAAA,MAAA,CAAI,UAAU,YACb,SAAAA,EAAA,IAAC6X,GAAA,CACC,MAAM,yBACN,KAAMlN,GACN,eAAgB,EAAA,CAAA,EAEpB,EACA3K,EAAAA,IAAC,QAAK,UAAU,mCACb,WACEsF,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACtF,EAAA,IAAA,IAAA,CAAE,UAAU,eAAgB,SAAMmF,EAAA,EACnCnF,EAAA,IAAC,SAAA,CACC,QAASw2B,EACT,UAAU,kEACX,SAAA,OAAA,CAED,CAAA,CACF,CAAA,EACEorB,EACDt8C,EAAA,KAAA,MAAA,CAAI,UAAU,yBAEZ,SAAA,CACC48C,GAAAliD,EAAA,IAAC8gD,GAAA,CACC,KAAMc,EACN,OAAQI,EACR,aAAc,EAAA,CAChB,EAIDG,GAAkBl+B,EAAS,IAAK5C,GAC/BrhB,EAAA,IAAC8gD,GAAA,CAEC,KAAM,CACJ,iBAAkB,CAChB,CAACz/B,CAAW,EAAGugC,EAAa,iBAAiBvgC,CAAW,CAC1D,EACA,eAAgBugC,EAAa,iBAAiBvgC,CAAW,EAAE,eAC7D,EACA,OAAQ2gC,EACR,YAAA3gC,EACA,aAAc,EAAA,EATTA,CAAA,CAWR,EAGA,CAAC+gC,GACApiD,EAAAA,IAAC,MAAI,CAAA,UAAU,oBACb,SAAAA,EAAA,IAAC,IAAE,CAAA,UAAU,gBAAgB,SAAA,mEAAiE,CAAA,EAChG,CAAA,CAEJ,CAAA,EAECA,EAAAA,IAAA,MAAA,CAAI,UAAU,oBACb,SAACA,EAAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAiE,mEAAA,CAAA,CAChG,CAAA,EAEJ,CAAA,EACF,QAEDud,GAAc,EAAA,CAAA,EACjB,CACF,CAAA,CAAA,CAEJ,CCvMA,SAAS8kC,IAAM,CACb,aACGC,GAAS,CAAA,MAAA1N,GACR,SAAC50C,EAAAA,IAAAuiD,GAAA,CAAY,QAAS,KAAM,UAAAxN,GAC1B,SAAC/0C,EAAAA,IAAAX,GAAA,CACC,eAACunB,GACC,CAAA,SAAA5mB,EAAA,IAACkZ,IAEC,SAAClZ,EAAAA,IAAAwiD,GAAA,CACD,gBAAC1M,GACC,CAAA,SAAA,CAAA91C,EAAA,IAACs2C,GAAe,EAAA,QACfzvC,GAAQ,EAAA,SACR47C,GACC,CAAA,SAAA,CAAAziD,MAAC0iD,IAAM,KAAK,IAAI,QAAS1iD,MAAC43C,IAAY,CAAA,EAAI,QACzC8K,GAAM,CAAA,KAAK,SAAS,QAAS1iD,MAACwD,IAAS,CAAA,EAAI,QAC3Ck/C,GAAM,CAAA,KAAK,aAAa,QAAS1iD,MAAC0mB,IAAiB,CAAA,EAAI,QACvDg8B,GAAM,CAAA,KAAK,sBAAsB,QAAS1iD,MAAC2d,IAAmB,CAAA,EAAI,QAClE+kC,GAAM,CAAA,KAAK,8BAA8B,QAAS1iD,MAAC0qC,IAAY,CAAA,EAAI,QACnEgY,GAAM,CAAA,KAAK,+BAA+B,QAAS1iD,MAACioB,IAAiB,CAAA,EAAI,QACzEy6B,GAAM,CAAA,KAAK,uBAAuB,QAAS1iD,MAACsvB,IAAqB,CAAA,EAAI,QACrEozB,GAAM,CAAA,KAAK,8BAA8B,QAAS1iD,MAAC0jC,IAAiB,CAAA,EAAI,QACxEgf,GAAM,CAAA,KAAK,yBAAyB,QAAS1iD,MAAC4yC,IAAa,CAAA,EAAI,QAC/D8P,GAAM,CAAA,KAAK,2BAA2B,QAAS1iD,MAACwwC,IAAmB,CAAA,EAAI,QACvEkS,GAAM,CAAA,KAAK,+BAA+B,QAAS1iD,MAAC46C,IAAe,CAAA,EAAI,QACvE8H,GAAM,CAAA,KAAK,YAAY,QAAS1iD,MAAC2jC,IAAe,CAAA,EAAI,QACpD+e,GAAM,CAAA,KAAM,WAAW,QAAW1iD,MAACw1C,IAAY,CAAA,EAAI,QACnDkN,GAAM,CAAA,KAAM,eAAe,QAAW1iD,MAACskB,IAAoB,CAAA,EAAI,QAC/Do+B,GAAM,CAAA,KAAM,kBAAkB,QAAS1iD,MAAC63C,IAAc,CAAA,EAAI,QAC1D6K,GAAM,CAAA,KAAO,2BAA2B,QAAS1iD,MAACygD,IAAa,CAAA,EAAI,QACnEiC,GAAM,CAAA,KAAO,0BAA0B,QAAS1iD,MAAC2hD,IAAa,CAAA,EAAI,CAAA,EACrE,CAAA,CACA,CAAA,CACF,CAAA,EAEF,CACF,CAAA,CAAA,CACF,EACA,CACA,CAAA,CAER,CC/DAgB,GAAW,SAAS,eAAe,MAAM,CAAE,EAAE,OAC1C3iD,EAAA,IAAA4iD,EAAA,WAAA,CACC,SAAC5iD,EAAA,IAAAqiD,GAAA,CAAI,CAAA,EACP,CACF"}